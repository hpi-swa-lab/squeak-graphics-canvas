Class {
	#name : #GLSC20,
	#superclass : #GLSC2API,
	#category : #'OpenGL-API-GLSC2',
	#commentStamp : ''
}

{
	#category : #accessing,
	#timestamp : 'stlu 11/2/2020 16:11'
}
GLSC20 class >> majorVersion [

	^ 2
]

{
	#category : #accessing,
	#timestamp : 'stlu 11/2/2020 16:12'
}
GLSC20 class >> minorVersion [

	^ 0
]

{
	#category : #accessing,
	#timestamp : 'stlu 11/2/2020 16:11'
}
GLSC20 class >> versionNumber [

	^ 20
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ACTIVE_TEXTURE [

	<generated>
	^ GL_ACTIVE_TEXTURE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ALIASED_LINE_WIDTH_RANGE [

	<generated>
	^ GL_ALIASED_LINE_WIDTH_RANGE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ALIASED_POINT_SIZE_RANGE [

	<generated>
	^ GL_ALIASED_POINT_SIZE_RANGE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ALPHA_BITS [

	<generated>
	^ GL_ALPHA_BITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ALWAYS [

	<generated>
	^ GL_ALWAYS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ARRAY_BUFFER [

	<generated>
	^ GL_ARRAY_BUFFER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ARRAY_BUFFER_BINDING [

	<generated>
	^ GL_ARRAY_BUFFER_BINDING
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BACK [

	<generated>
	^ GL_BACK
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND [

	<generated>
	^ GL_BLEND
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND_COLOR [

	<generated>
	^ GL_BLEND_COLOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND_DST_ALPHA [

	<generated>
	^ GL_BLEND_DST_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND_DST_RGB [

	<generated>
	^ GL_BLEND_DST_RGB
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND_EQUATION [

	<generated>
	^ GL_BLEND_EQUATION
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND_EQUATION_ALPHA [

	<generated>
	^ GL_BLEND_EQUATION_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND_EQUATION_RGB [

	<generated>
	^ GL_BLEND_EQUATION_RGB
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND_SRC_ALPHA [

	<generated>
	^ GL_BLEND_SRC_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLEND_SRC_RGB [

	<generated>
	^ GL_BLEND_SRC_RGB
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BLUE_BITS [

	<generated>
	^ GL_BLUE_BITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BUFFER_SIZE [

	<generated>
	^ GL_BUFFER_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BUFFER_USAGE [

	<generated>
	^ GL_BUFFER_USAGE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> BYTE [

	<generated>
	^ GL_BYTE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CCW [

	<generated>
	^ GL_CCW
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CLAMP_TO_EDGE [

	<generated>
	^ GL_CLAMP_TO_EDGE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> COLOR_ATTACHMENT0 [

	<generated>
	^ GL_COLOR_ATTACHMENT0
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> COLOR_BUFFER_BIT [

	<generated>
	^ GL_COLOR_BUFFER_BIT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> COLOR_CLEAR_VALUE [

	<generated>
	^ GL_COLOR_CLEAR_VALUE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> COLOR_WRITEMASK [

	<generated>
	^ GL_COLOR_WRITEMASK
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> COMPRESSED_TEXTURE_FORMATS [

	<generated>
	^ GL_COMPRESSED_TEXTURE_FORMATS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CONSTANT_ALPHA [

	<generated>
	^ GL_CONSTANT_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CONSTANT_COLOR [

	<generated>
	^ GL_CONSTANT_COLOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CONTEXT_LOST [

	<generated>
	^ GL_CONTEXT_LOST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CONTEXT_ROBUST_ACCESS [

	<generated>
	^ GL_CONTEXT_ROBUST_ACCESS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CULL_FACE [

	<generated>
	^ GL_CULL_FACE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CULL_FACE_MODE [

	<generated>
	^ GL_CULL_FACE_MODE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CURRENT_PROGRAM [

	<generated>
	^ GL_CURRENT_PROGRAM
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CURRENT_VERTEX_ATTRIB [

	<generated>
	^ GL_CURRENT_VERTEX_ATTRIB
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> CW [

	<generated>
	^ GL_CW
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DECR [

	<generated>
	^ GL_DECR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DECR_WRAP [

	<generated>
	^ GL_DECR_WRAP
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_ATTACHMENT [

	<generated>
	^ GL_DEPTH_ATTACHMENT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_BITS [

	<generated>
	^ GL_DEPTH_BITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_BUFFER_BIT [

	<generated>
	^ GL_DEPTH_BUFFER_BIT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_CLEAR_VALUE [

	<generated>
	^ GL_DEPTH_CLEAR_VALUE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_COMPONENT16 [

	<generated>
	^ GL_DEPTH_COMPONENT16
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_FUNC [

	<generated>
	^ GL_DEPTH_FUNC
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_RANGE [

	<generated>
	^ GL_DEPTH_RANGE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_TEST [

	<generated>
	^ GL_DEPTH_TEST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DEPTH_WRITEMASK [

	<generated>
	^ GL_DEPTH_WRITEMASK
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DITHER [

	<generated>
	^ GL_DITHER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DONT_CARE [

	<generated>
	^ GL_DONT_CARE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DST_ALPHA [

	<generated>
	^ GL_DST_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DST_COLOR [

	<generated>
	^ GL_DST_COLOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> DYNAMIC_DRAW [

	<generated>
	^ GL_DYNAMIC_DRAW
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ELEMENT_ARRAY_BUFFER [

	<generated>
	^ GL_ELEMENT_ARRAY_BUFFER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ELEMENT_ARRAY_BUFFER_BINDING [

	<generated>
	^ GL_ELEMENT_ARRAY_BUFFER_BINDING
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> EQUAL [

	<generated>
	^ GL_EQUAL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> EXTENSIONS [

	<generated>
	^ GL_EXTENSIONS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FALSE [

	<generated>
	^ GL_FALSE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FASTEST [

	<generated>
	^ GL_FASTEST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FLOAT [

	<generated>
	^ GL_FLOAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER [

	<generated>
	^ GL_FRAMEBUFFER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_ATTACHMENT_OBJECT_NAME [

	<generated>
	^ GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE [

	<generated>
	^ GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL [

	<generated>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_BINDING [

	<generated>
	^ GL_FRAMEBUFFER_BINDING
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_COMPLETE [

	<generated>
	^ GL_FRAMEBUFFER_COMPLETE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_INCOMPLETE_ATTACHMENT [

	<generated>
	^ GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_INCOMPLETE_DIMENSIONS [

	<generated>
	^ GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT [

	<generated>
	^ GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_UNDEFINED [

	<generated>
	^ GL_FRAMEBUFFER_UNDEFINED
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRAMEBUFFER_UNSUPPORTED [

	<generated>
	^ GL_FRAMEBUFFER_UNSUPPORTED
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRONT [

	<generated>
	^ GL_FRONT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRONT_AND_BACK [

	<generated>
	^ GL_FRONT_AND_BACK
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FRONT_FACE [

	<generated>
	^ GL_FRONT_FACE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FUNC_ADD [

	<generated>
	^ GL_FUNC_ADD
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FUNC_REVERSE_SUBTRACT [

	<generated>
	^ GL_FUNC_REVERSE_SUBTRACT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> FUNC_SUBTRACT [

	<generated>
	^ GL_FUNC_SUBTRACT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> GENERATE_MIPMAP_HINT [

	<generated>
	^ GL_GENERATE_MIPMAP_HINT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> GEQUAL [

	<generated>
	^ GL_GEQUAL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> GREATER [

	<generated>
	^ GL_GREATER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> GREEN_BITS [

	<generated>
	^ GL_GREEN_BITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> GUILTY_CONTEXT_RESET [

	<generated>
	^ GL_GUILTY_CONTEXT_RESET
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> HIGH_FLOAT [

	<generated>
	^ GL_HIGH_FLOAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> HIGH_INT [

	<generated>
	^ GL_HIGH_INT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> IMPLEMENTATION_COLOR_READ_FORMAT [

	<generated>
	^ GL_IMPLEMENTATION_COLOR_READ_FORMAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> IMPLEMENTATION_COLOR_READ_TYPE [

	<generated>
	^ GL_IMPLEMENTATION_COLOR_READ_TYPE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INCR [

	<generated>
	^ GL_INCR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INCR_WRAP [

	<generated>
	^ GL_INCR_WRAP
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INNOCENT_CONTEXT_RESET [

	<generated>
	^ GL_INNOCENT_CONTEXT_RESET
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INT [

	<generated>
	^ GL_INT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INVALID_ENUM [

	<generated>
	^ GL_INVALID_ENUM
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INVALID_FRAMEBUFFER_OPERATION [

	<generated>
	^ GL_INVALID_FRAMEBUFFER_OPERATION
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INVALID_OPERATION [

	<generated>
	^ GL_INVALID_OPERATION
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INVALID_VALUE [

	<generated>
	^ GL_INVALID_VALUE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> INVERT [

	<generated>
	^ GL_INVERT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> KEEP [

	<generated>
	^ GL_KEEP
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LEQUAL [

	<generated>
	^ GL_LEQUAL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LESS [

	<generated>
	^ GL_LESS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LINEAR [

	<generated>
	^ GL_LINEAR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LINEAR_MIPMAP_LINEAR [

	<generated>
	^ GL_LINEAR_MIPMAP_LINEAR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LINEAR_MIPMAP_NEAREST [

	<generated>
	^ GL_LINEAR_MIPMAP_NEAREST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LINES [

	<generated>
	^ GL_LINES
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LINE_LOOP [

	<generated>
	^ GL_LINE_LOOP
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LINE_STRIP [

	<generated>
	^ GL_LINE_STRIP
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LINE_WIDTH [

	<generated>
	^ GL_LINE_WIDTH
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LINK_STATUS [

	<generated>
	^ GL_LINK_STATUS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LOSE_CONTEXT_ON_RESET [

	<generated>
	^ GL_LOSE_CONTEXT_ON_RESET
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LOW_FLOAT [

	<generated>
	^ GL_LOW_FLOAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> LOW_INT [

	<generated>
	^ GL_LOW_INT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_COMBINED_TEXTURE_IMAGE_UNITS [

	<generated>
	^ GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_FRAGMENT_UNIFORM_VECTORS [

	<generated>
	^ GL_MAX_FRAGMENT_UNIFORM_VECTORS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_RENDERBUFFER_SIZE [

	<generated>
	^ GL_MAX_RENDERBUFFER_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_TEXTURE_IMAGE_UNITS [

	<generated>
	^ GL_MAX_TEXTURE_IMAGE_UNITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_TEXTURE_SIZE [

	<generated>
	^ GL_MAX_TEXTURE_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_VARYING_VECTORS [

	<generated>
	^ GL_MAX_VARYING_VECTORS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_VERTEX_ATTRIBS [

	<generated>
	^ GL_MAX_VERTEX_ATTRIBS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_VERTEX_TEXTURE_IMAGE_UNITS [

	<generated>
	^ GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_VERTEX_UNIFORM_VECTORS [

	<generated>
	^ GL_MAX_VERTEX_UNIFORM_VECTORS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MAX_VIEWPORT_DIMS [

	<generated>
	^ GL_MAX_VIEWPORT_DIMS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MEDIUM_FLOAT [

	<generated>
	^ GL_MEDIUM_FLOAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MEDIUM_INT [

	<generated>
	^ GL_MEDIUM_INT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> MIRRORED_REPEAT [

	<generated>
	^ GL_MIRRORED_REPEAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NEAREST [

	<generated>
	^ GL_NEAREST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NEAREST_MIPMAP_LINEAR [

	<generated>
	^ GL_NEAREST_MIPMAP_LINEAR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NEAREST_MIPMAP_NEAREST [

	<generated>
	^ GL_NEAREST_MIPMAP_NEAREST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NEVER [

	<generated>
	^ GL_NEVER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NICEST [

	<generated>
	^ GL_NICEST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NONE [

	<generated>
	^ GL_NONE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NOTEQUAL [

	<generated>
	^ GL_NOTEQUAL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NO_ERROR [

	<generated>
	^ GL_NO_ERROR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NUM_COMPRESSED_TEXTURE_FORMATS [

	<generated>
	^ GL_NUM_COMPRESSED_TEXTURE_FORMATS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> NUM_PROGRAM_BINARY_FORMATS [

	<generated>
	^ GL_NUM_PROGRAM_BINARY_FORMATS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ONE [

	<generated>
	^ GL_ONE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ONE_MINUS_CONSTANT_ALPHA [

	<generated>
	^ GL_ONE_MINUS_CONSTANT_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ONE_MINUS_CONSTANT_COLOR [

	<generated>
	^ GL_ONE_MINUS_CONSTANT_COLOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ONE_MINUS_DST_ALPHA [

	<generated>
	^ GL_ONE_MINUS_DST_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ONE_MINUS_DST_COLOR [

	<generated>
	^ GL_ONE_MINUS_DST_COLOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ONE_MINUS_SRC_ALPHA [

	<generated>
	^ GL_ONE_MINUS_SRC_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ONE_MINUS_SRC_COLOR [

	<generated>
	^ GL_ONE_MINUS_SRC_COLOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> OUT_OF_MEMORY [

	<generated>
	^ GL_OUT_OF_MEMORY
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> PACK_ALIGNMENT [

	<generated>
	^ GL_PACK_ALIGNMENT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> POINTS [

	<generated>
	^ GL_POINTS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> POLYGON_OFFSET_FACTOR [

	<generated>
	^ GL_POLYGON_OFFSET_FACTOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> POLYGON_OFFSET_FILL [

	<generated>
	^ GL_POLYGON_OFFSET_FILL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> POLYGON_OFFSET_UNITS [

	<generated>
	^ GL_POLYGON_OFFSET_UNITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> PROGRAM_BINARY_FORMATS [

	<generated>
	^ GL_PROGRAM_BINARY_FORMATS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> R8 [

	<generated>
	^ GL_R8
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RED [

	<generated>
	^ GL_RED
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RED_BITS [

	<generated>
	^ GL_RED_BITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER [

	<generated>
	^ GL_RENDERBUFFER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_ALPHA_SIZE [

	<generated>
	^ GL_RENDERBUFFER_ALPHA_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_BINDING [

	<generated>
	^ GL_RENDERBUFFER_BINDING
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_BLUE_SIZE [

	<generated>
	^ GL_RENDERBUFFER_BLUE_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_DEPTH_SIZE [

	<generated>
	^ GL_RENDERBUFFER_DEPTH_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_GREEN_SIZE [

	<generated>
	^ GL_RENDERBUFFER_GREEN_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_HEIGHT [

	<generated>
	^ GL_RENDERBUFFER_HEIGHT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_INTERNAL_FORMAT [

	<generated>
	^ GL_RENDERBUFFER_INTERNAL_FORMAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_RED_SIZE [

	<generated>
	^ GL_RENDERBUFFER_RED_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_STENCIL_SIZE [

	<generated>
	^ GL_RENDERBUFFER_STENCIL_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERBUFFER_WIDTH [

	<generated>
	^ GL_RENDERBUFFER_WIDTH
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RENDERER [

	<generated>
	^ GL_RENDERER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> REPEAT [

	<generated>
	^ GL_REPEAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> REPLACE [

	<generated>
	^ GL_REPLACE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RESET_NOTIFICATION_STRATEGY [

	<generated>
	^ GL_RESET_NOTIFICATION_STRATEGY
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RG [

	<generated>
	^ GL_RG
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RG8 [

	<generated>
	^ GL_RG8
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RGB [

	<generated>
	^ GL_RGB
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RGB565 [

	<generated>
	^ GL_RGB565
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RGB5_A1 [

	<generated>
	^ GL_RGB5_A1
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RGB8 [

	<generated>
	^ GL_RGB8
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RGBA [

	<generated>
	^ GL_RGBA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RGBA4 [

	<generated>
	^ GL_RGBA4
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> RGBA8 [

	<generated>
	^ GL_RGBA8
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SAMPLER_2D [

	<generated>
	^ GL_SAMPLER_2D
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SAMPLES [

	<generated>
	^ GL_SAMPLES
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SAMPLE_ALPHA_TO_COVERAGE [

	<generated>
	^ GL_SAMPLE_ALPHA_TO_COVERAGE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SAMPLE_BUFFERS [

	<generated>
	^ GL_SAMPLE_BUFFERS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SAMPLE_COVERAGE [

	<generated>
	^ GL_SAMPLE_COVERAGE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SAMPLE_COVERAGE_INVERT [

	<generated>
	^ GL_SAMPLE_COVERAGE_INVERT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SAMPLE_COVERAGE_VALUE [

	<generated>
	^ GL_SAMPLE_COVERAGE_VALUE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SCISSOR_BOX [

	<generated>
	^ GL_SCISSOR_BOX
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SCISSOR_TEST [

	<generated>
	^ GL_SCISSOR_TEST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SHADING_LANGUAGE_VERSION [

	<generated>
	^ GL_SHADING_LANGUAGE_VERSION
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SHORT [

	<generated>
	^ GL_SHORT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SRC_ALPHA [

	<generated>
	^ GL_SRC_ALPHA
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SRC_ALPHA_SATURATE [

	<generated>
	^ GL_SRC_ALPHA_SATURATE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SRC_COLOR [

	<generated>
	^ GL_SRC_COLOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STATIC_DRAW [

	<generated>
	^ GL_STATIC_DRAW
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_ATTACHMENT [

	<generated>
	^ GL_STENCIL_ATTACHMENT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BACK_FAIL [

	<generated>
	^ GL_STENCIL_BACK_FAIL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BACK_FUNC [

	<generated>
	^ GL_STENCIL_BACK_FUNC
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BACK_PASS_DEPTH_FAIL [

	<generated>
	^ GL_STENCIL_BACK_PASS_DEPTH_FAIL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BACK_PASS_DEPTH_PASS [

	<generated>
	^ GL_STENCIL_BACK_PASS_DEPTH_PASS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BACK_REF [

	<generated>
	^ GL_STENCIL_BACK_REF
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BACK_VALUE_MASK [

	<generated>
	^ GL_STENCIL_BACK_VALUE_MASK
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BACK_WRITEMASK [

	<generated>
	^ GL_STENCIL_BACK_WRITEMASK
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BITS [

	<generated>
	^ GL_STENCIL_BITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_BUFFER_BIT [

	<generated>
	^ GL_STENCIL_BUFFER_BIT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_CLEAR_VALUE [

	<generated>
	^ GL_STENCIL_CLEAR_VALUE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_FAIL [

	<generated>
	^ GL_STENCIL_FAIL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_FUNC [

	<generated>
	^ GL_STENCIL_FUNC
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_INDEX8 [

	<generated>
	^ GL_STENCIL_INDEX8
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_PASS_DEPTH_FAIL [

	<generated>
	^ GL_STENCIL_PASS_DEPTH_FAIL
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_PASS_DEPTH_PASS [

	<generated>
	^ GL_STENCIL_PASS_DEPTH_PASS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_REF [

	<generated>
	^ GL_STENCIL_REF
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_TEST [

	<generated>
	^ GL_STENCIL_TEST
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_VALUE_MASK [

	<generated>
	^ GL_STENCIL_VALUE_MASK
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STENCIL_WRITEMASK [

	<generated>
	^ GL_STENCIL_WRITEMASK
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> STREAM_DRAW [

	<generated>
	^ GL_STREAM_DRAW
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> SUBPIXEL_BITS [

	<generated>
	^ GL_SUBPIXEL_BITS
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE [

	<generated>
	^ GL_TEXTURE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE0 [

	<generated>
	^ GL_TEXTURE0
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE1 [

	<generated>
	^ GL_TEXTURE1
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE10 [

	<generated>
	^ GL_TEXTURE10
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE11 [

	<generated>
	^ GL_TEXTURE11
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE12 [

	<generated>
	^ GL_TEXTURE12
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE13 [

	<generated>
	^ GL_TEXTURE13
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE14 [

	<generated>
	^ GL_TEXTURE14
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE15 [

	<generated>
	^ GL_TEXTURE15
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE16 [

	<generated>
	^ GL_TEXTURE16
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE17 [

	<generated>
	^ GL_TEXTURE17
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE18 [

	<generated>
	^ GL_TEXTURE18
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE19 [

	<generated>
	^ GL_TEXTURE19
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE2 [

	<generated>
	^ GL_TEXTURE2
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE20 [

	<generated>
	^ GL_TEXTURE20
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE21 [

	<generated>
	^ GL_TEXTURE21
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE22 [

	<generated>
	^ GL_TEXTURE22
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE23 [

	<generated>
	^ GL_TEXTURE23
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE24 [

	<generated>
	^ GL_TEXTURE24
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE25 [

	<generated>
	^ GL_TEXTURE25
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE26 [

	<generated>
	^ GL_TEXTURE26
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE27 [

	<generated>
	^ GL_TEXTURE27
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE28 [

	<generated>
	^ GL_TEXTURE28
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE29 [

	<generated>
	^ GL_TEXTURE29
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE3 [

	<generated>
	^ GL_TEXTURE3
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE30 [

	<generated>
	^ GL_TEXTURE30
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE31 [

	<generated>
	^ GL_TEXTURE31
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE4 [

	<generated>
	^ GL_TEXTURE4
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE5 [

	<generated>
	^ GL_TEXTURE5
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE6 [

	<generated>
	^ GL_TEXTURE6
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE7 [

	<generated>
	^ GL_TEXTURE7
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE8 [

	<generated>
	^ GL_TEXTURE8
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE9 [

	<generated>
	^ GL_TEXTURE9
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE_2D [

	<generated>
	^ GL_TEXTURE_2D
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE_BINDING_2D [

	<generated>
	^ GL_TEXTURE_BINDING_2D
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE_IMMUTABLE_FORMAT [

	<generated>
	^ GL_TEXTURE_IMMUTABLE_FORMAT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE_MAG_FILTER [

	<generated>
	^ GL_TEXTURE_MAG_FILTER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE_MIN_FILTER [

	<generated>
	^ GL_TEXTURE_MIN_FILTER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE_WRAP_S [

	<generated>
	^ GL_TEXTURE_WRAP_S
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TEXTURE_WRAP_T [

	<generated>
	^ GL_TEXTURE_WRAP_T
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TRIANGLES [

	<generated>
	^ GL_TRIANGLES
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TRIANGLE_FAN [

	<generated>
	^ GL_TRIANGLE_FAN
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TRIANGLE_STRIP [

	<generated>
	^ GL_TRIANGLE_STRIP
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> TRUE [

	<generated>
	^ GL_TRUE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> UNKNOWN_CONTEXT_RESET [

	<generated>
	^ GL_UNKNOWN_CONTEXT_RESET
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> UNPACK_ALIGNMENT [

	<generated>
	^ GL_UNPACK_ALIGNMENT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> UNSIGNED_BYTE [

	<generated>
	^ GL_UNSIGNED_BYTE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> UNSIGNED_INT [

	<generated>
	^ GL_UNSIGNED_INT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> UNSIGNED_SHORT [

	<generated>
	^ GL_UNSIGNED_SHORT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> UNSIGNED_SHORT_4_4_4_4 [

	<generated>
	^ GL_UNSIGNED_SHORT_4_4_4_4
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> UNSIGNED_SHORT_5_5_5_1 [

	<generated>
	^ GL_UNSIGNED_SHORT_5_5_5_1
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> UNSIGNED_SHORT_5_6_5 [

	<generated>
	^ GL_UNSIGNED_SHORT_5_6_5
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VENDOR [

	<generated>
	^ GL_VENDOR
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VERSION [

	<generated>
	^ GL_VERSION
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VERTEX_ATTRIB_ARRAY_BUFFER_BINDING [

	<generated>
	^ GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VERTEX_ATTRIB_ARRAY_ENABLED [

	<generated>
	^ GL_VERTEX_ATTRIB_ARRAY_ENABLED
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VERTEX_ATTRIB_ARRAY_NORMALIZED [

	<generated>
	^ GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VERTEX_ATTRIB_ARRAY_POINTER [

	<generated>
	^ GL_VERTEX_ATTRIB_ARRAY_POINTER
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VERTEX_ATTRIB_ARRAY_SIZE [

	<generated>
	^ GL_VERTEX_ATTRIB_ARRAY_SIZE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VERTEX_ATTRIB_ARRAY_STRIDE [

	<generated>
	^ GL_VERTEX_ATTRIB_ARRAY_STRIDE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VERTEX_ATTRIB_ARRAY_TYPE [

	<generated>
	^ GL_VERTEX_ATTRIB_ARRAY_TYPE
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> VIEWPORT [

	<generated>
	^ GL_VIEWPORT
]

{
	#category : #'constants - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> ZERO [

	<generated>
	^ GL_ZERO
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> activeTexture: texture [

	<generated>
	<apicall: void 'glActiveTexture' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> bindBuffer: target with: buffer [

	<generated>
	<apicall: void 'glBindBuffer' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> bindFramebuffer: target with: framebuffer [

	<generated>
	<apicall: void 'glBindFramebuffer' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> bindRenderbuffer: target with: renderbuffer [

	<generated>
	<apicall: void 'glBindRenderbuffer' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> bindTexture: target with: texture [

	<generated>
	<apicall: void 'glBindTexture' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> blendColor: red with: green with: blue with: alpha [

	<generated>
	<apicall: void 'glBlendColor' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> blendEquation: mode [

	<generated>
	<apicall: void 'glBlendEquation' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> blendEquationSeparate: modeRGB with: modeAlpha [

	<generated>
	<apicall: void 'glBlendEquationSeparate' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> blendFunc: sfactor with: dfactor [

	<generated>
	<apicall: void 'glBlendFunc' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> blendFuncSeparate: sfactorRGB with: dfactorRGB with: sfactorAlpha with: dfactorAlpha [

	<generated>
	<apicall: void 'glBlendFuncSeparate' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> bufferData: target with: size with: data with: usage [

	<generated>
	<apicall: void 'glBufferData' (GLenum GLsizeiptr void* GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> bufferSubData: target with: offset with: size with: data [

	<generated>
	<apicall: void 'glBufferSubData' (GLenum GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> checkFramebufferStatus: target [

	<generated>
	<apicall: GLenum 'glCheckFramebufferStatus' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> clear: mask [

	<generated>
	<apicall: void 'glClear' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> clearColor: red with: green with: blue with: alpha [

	<generated>
	<apicall: void 'glClearColor' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> clearDepthf: d [

	<generated>
	<apicall: void 'glClearDepthf' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> clearStencil: s [

	<generated>
	<apicall: void 'glClearStencil' (GLint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> colorMask: red with: green with: blue with: alpha [

	<generated>
	<apicall: void 'glColorMask' (GLboolean GLboolean GLboolean GLboolean)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> compressedTexSubImage2D: target with: level with: xoffset with: yoffset with: width with: height with: format with: imageSize with: data [

	<generated>
	<apicall: void 'glCompressedTexSubImage2D' (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> createProgram [

	<generated>
	<apicall: GLuint 'glCreateProgram' ()>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> cullFace: mode [

	<generated>
	<apicall: void 'glCullFace' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> depthFunc: func [

	<generated>
	<apicall: void 'glDepthFunc' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> depthMask: flag [

	<generated>
	<apicall: void 'glDepthMask' (GLboolean)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> depthRangef: n with: f [

	<generated>
	<apicall: void 'glDepthRangef' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> disable: cap [

	<generated>
	<apicall: void 'glDisable' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> disableVertexAttribArray: index [

	<generated>
	<apicall: void 'glDisableVertexAttribArray' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> drawArrays: mode with: first with: count [

	<generated>
	<apicall: void 'glDrawArrays' (GLenum GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> drawRangeElements: mode with: start with: end with: count with: type with: indices [

	<generated>
	<apicall: void 'glDrawRangeElements' (GLenum GLuint GLuint GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> enable: cap [

	<generated>
	<apicall: void 'glEnable' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> enableVertexAttribArray: index [

	<generated>
	<apicall: void 'glEnableVertexAttribArray' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> finish [

	<generated>
	<apicall: void 'glFinish' ()>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> flush [

	<generated>
	<apicall: void 'glFlush' ()>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> framebufferRenderbuffer: target with: attachment with: renderbuffertarget with: renderbuffer [

	<generated>
	<apicall: void 'glFramebufferRenderbuffer' (GLenum GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> framebufferTexture2D: target with: attachment with: textarget with: texture with: level [

	<generated>
	<apicall: void 'glFramebufferTexture2D' (GLenum GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> frontFace: mode [

	<generated>
	<apicall: void 'glFrontFace' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> genBuffers: n with: buffers [

	<generated>
	<apicall: void 'glGenBuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> genFramebuffers: n with: framebuffers [

	<generated>
	<apicall: void 'glGenFramebuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> genRenderbuffers: n with: renderbuffers [

	<generated>
	<apicall: void 'glGenRenderbuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> genTextures: n with: textures [

	<generated>
	<apicall: void 'glGenTextures' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> generateMipmap: target [

	<generated>
	<apicall: void 'glGenerateMipmap' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getAttribLocation: program with: name [

	<generated>
	<apicall: GLint 'glGetAttribLocation' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getBooleanv: pname with: data [

	<generated>
	<apicall: void 'glGetBooleanv' (GLenum GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getBufferParameteriv: target with: pname with: params [

	<generated>
	<apicall: void 'glGetBufferParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getError [

	<generated>
	<apicall: GLenum 'glGetError' ()>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getFloatv: pname with: data [

	<generated>
	<apicall: void 'glGetFloatv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getFramebufferAttachmentParameteriv: target with: attachment with: pname with: params [

	<generated>
	<apicall: void 'glGetFramebufferAttachmentParameteriv' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getGraphicsResetStatus [

	<generated>
	<apicall: GLenum 'glGetGraphicsResetStatus' ()>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getIntegerv: pname with: data [

	<generated>
	<apicall: void 'glGetIntegerv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getProgramiv: program with: pname with: params [

	<generated>
	<apicall: void 'glGetProgramiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getRenderbufferParameteriv: target with: pname with: params [

	<generated>
	<apicall: void 'glGetRenderbufferParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getString: name [

	<generated>
	<apicall: GLubyte* 'glGetString' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getTexParameterfv: target with: pname with: params [

	<generated>
	<apicall: void 'glGetTexParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getTexParameteriv: target with: pname with: params [

	<generated>
	<apicall: void 'glGetTexParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getUniformLocation: program with: name [

	<generated>
	<apicall: GLint 'glGetUniformLocation' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getVertexAttribPointerv: index with: pname with: pointer [

	<generated>
	<apicall: void 'glGetVertexAttribPointerv' (GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getVertexAttribfv: index with: pname with: params [

	<generated>
	<apicall: void 'glGetVertexAttribfv' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getVertexAttribiv: index with: pname with: params [

	<generated>
	<apicall: void 'glGetVertexAttribiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getnUniformfv: program with: location with: bufSize with: params [

	<generated>
	<apicall: void 'glGetnUniformfv' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> getnUniformiv: program with: location with: bufSize with: params [

	<generated>
	<apicall: void 'glGetnUniformiv' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> hint: target with: mode [

	<generated>
	<apicall: void 'glHint' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> isEnabled: cap [

	<generated>
	<apicall: GLboolean 'glIsEnabled' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> lineWidth: width [

	<generated>
	<apicall: void 'glLineWidth' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> pixelStorei: pname with: param [

	<generated>
	<apicall: void 'glPixelStorei' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> polygonOffset: factor with: units [

	<generated>
	<apicall: void 'glPolygonOffset' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> programBinary: program with: binaryFormat with: binary with: length [

	<generated>
	<apicall: void 'glProgramBinary' (GLuint GLenum void* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> readnPixels: x with: y with: width with: height with: format with: type with: bufSize with: data [

	<generated>
	<apicall: void 'glReadnPixels' (GLint GLint GLsizei GLsizei GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> renderbufferStorage: target with: internalformat with: width with: height [

	<generated>
	<apicall: void 'glRenderbufferStorage' (GLenum GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> sampleCoverage: value with: invert [

	<generated>
	<apicall: void 'glSampleCoverage' (GLfloat GLboolean)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> scissor: x with: y with: width with: height [

	<generated>
	<apicall: void 'glScissor' (GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> stencilFunc: func with: ref with: mask [

	<generated>
	<apicall: void 'glStencilFunc' (GLenum GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> stencilFuncSeparate: face with: func with: ref with: mask [

	<generated>
	<apicall: void 'glStencilFuncSeparate' (GLenum GLenum GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> stencilMask: mask [

	<generated>
	<apicall: void 'glStencilMask' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> stencilMaskSeparate: face with: mask [

	<generated>
	<apicall: void 'glStencilMaskSeparate' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> stencilOp: fail with: zfail with: zpass [

	<generated>
	<apicall: void 'glStencilOp' (GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> stencilOpSeparate: face with: sfail with: dpfail with: dppass [

	<generated>
	<apicall: void 'glStencilOpSeparate' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> texParameterf: target with: pname with: param [

	<generated>
	<apicall: void 'glTexParameterf' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> texParameterfv: target with: pname with: params [

	<generated>
	<apicall: void 'glTexParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> texParameteri: target with: pname with: param [

	<generated>
	<apicall: void 'glTexParameteri' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> texParameteriv: target with: pname with: params [

	<generated>
	<apicall: void 'glTexParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> texStorage2D: target with: levels with: internalformat with: width with: height [

	<generated>
	<apicall: void 'glTexStorage2D' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> texSubImage2D: target with: level with: xoffset with: yoffset with: width with: height with: format with: type with: pixels [

	<generated>
	<apicall: void 'glTexSubImage2D' (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform1f: location with: v0 [

	<generated>
	<apicall: void 'glUniform1f' (GLint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform1fv: location with: count with: value [

	<generated>
	<apicall: void 'glUniform1fv' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform1i: location with: v0 [

	<generated>
	<apicall: void 'glUniform1i' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform1iv: location with: count with: value [

	<generated>
	<apicall: void 'glUniform1iv' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform2f: location with: v0 with: v1 [

	<generated>
	<apicall: void 'glUniform2f' (GLint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform2fv: location with: count with: value [

	<generated>
	<apicall: void 'glUniform2fv' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform2i: location with: v0 with: v1 [

	<generated>
	<apicall: void 'glUniform2i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform2iv: location with: count with: value [

	<generated>
	<apicall: void 'glUniform2iv' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform3f: location with: v0 with: v1 with: v2 [

	<generated>
	<apicall: void 'glUniform3f' (GLint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform3fv: location with: count with: value [

	<generated>
	<apicall: void 'glUniform3fv' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform3i: location with: v0 with: v1 with: v2 [

	<generated>
	<apicall: void 'glUniform3i' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform3iv: location with: count with: value [

	<generated>
	<apicall: void 'glUniform3iv' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform4f: location with: v0 with: v1 with: v2 with: v3 [

	<generated>
	<apicall: void 'glUniform4f' (GLint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform4fv: location with: count with: value [

	<generated>
	<apicall: void 'glUniform4fv' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform4i: location with: v0 with: v1 with: v2 with: v3 [

	<generated>
	<apicall: void 'glUniform4i' (GLint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniform4iv: location with: count with: value [

	<generated>
	<apicall: void 'glUniform4iv' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniformMatrix2fv: location with: count with: transpose with: value [

	<generated>
	<apicall: void 'glUniformMatrix2fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniformMatrix3fv: location with: count with: transpose with: value [

	<generated>
	<apicall: void 'glUniformMatrix3fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> uniformMatrix4fv: location with: count with: transpose with: value [

	<generated>
	<apicall: void 'glUniformMatrix4fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> useProgram: program [

	<generated>
	<apicall: void 'glUseProgram' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttrib1f: index with: x [

	<generated>
	<apicall: void 'glVertexAttrib1f' (GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttrib1fv: index with: v [

	<generated>
	<apicall: void 'glVertexAttrib1fv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttrib2f: index with: x with: y [

	<generated>
	<apicall: void 'glVertexAttrib2f' (GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttrib2fv: index with: v [

	<generated>
	<apicall: void 'glVertexAttrib2fv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttrib3f: index with: x with: y with: z [

	<generated>
	<apicall: void 'glVertexAttrib3f' (GLuint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttrib3fv: index with: v [

	<generated>
	<apicall: void 'glVertexAttrib3fv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttrib4f: index with: x with: y with: z with: w [

	<generated>
	<apicall: void 'glVertexAttrib4f' (GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttrib4fv: index with: v [

	<generated>
	<apicall: void 'glVertexAttrib4fv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> vertexAttribPointer: index with: size with: type with: normalized with: stride with: pointer [

	<generated>
	<apicall: void 'glVertexAttribPointer' (GLuint GLint GLenum GLboolean GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #'api - required',
	#timestamp : 'stlu 2/22/2021 13:15'
}
GLSC20 >> viewport: x with: y with: width with: height [

	<generated>
	<apicall: void 'glViewport' (GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]
