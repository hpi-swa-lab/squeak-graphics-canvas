Class {
	#name : #GLRegistry,
	#superclass : #ExternalLibrary,
	#pools : [
		'GLConstants'
	],
	#category : #'OpenGL-API',
	#commentStamp : ''
}

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ABGR_EXT [

	<enum: #'GL_ABGR_EXT'>
	<value: 16r8000>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelFormat)>
	^ GL_ABGR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACCUM [

	<enum: #'GL_ACCUM'>
	<value: 16r100>
	<vendor: #ARB>
	<groups: #(#AccumOp)>
	^ GL_ACCUM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACCUM_ADJACENT_PAIRS_NV [

	<enum: #'GL_ACCUM_ADJACENT_PAIRS_NV'>
	<value: 16r90AD>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathListMode)>
	^ GL_ACCUM_ADJACENT_PAIRS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACCUM_ALPHA_BITS [

	<enum: #'GL_ACCUM_ALPHA_BITS'>
	<value: 16rD5B>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ACCUM_ALPHA_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACCUM_BLUE_BITS [

	<enum: #'GL_ACCUM_BLUE_BITS'>
	<value: 16rD5A>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ACCUM_BLUE_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACCUM_BUFFER_BIT [

	<enum: #'GL_ACCUM_BUFFER_BIT'>
	<value: 2r1000000000>
	<bitmask>
	<groups: #(#AttribMask #ClearBufferMask)>
	^ GL_ACCUM_BUFFER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACCUM_CLEAR_VALUE [

	<enum: #'GL_ACCUM_CLEAR_VALUE'>
	<value: 16rB80>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ACCUM_CLEAR_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACCUM_GREEN_BITS [

	<enum: #'GL_ACCUM_GREEN_BITS'>
	<value: 16rD59>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ACCUM_GREEN_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACCUM_RED_BITS [

	<enum: #'GL_ACCUM_RED_BITS'>
	<value: 16rD58>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ACCUM_RED_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_ATOMIC_COUNTER_BUFFERS [

	<enum: #'GL_ACTIVE_ATOMIC_COUNTER_BUFFERS'>
	<value: 16r92D9>
	<vendor: #NV>
	<groups: #(#ProgramPropertyARB)>
	^ GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_ATTRIBUTES [

	<enum: #'GL_ACTIVE_ATTRIBUTES'>
	<value: 16r8B89>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB)>
	^ GL_ACTIVE_ATTRIBUTES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_ATTRIBUTE_MAX_LENGTH [

	<enum: #'GL_ACTIVE_ATTRIBUTE_MAX_LENGTH'>
	<value: 16r8B8A>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB)>
	^ GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_PROGRAM [

	<enum: #'GL_ACTIVE_PROGRAM'>
	<value: 16r8259>
	<vendor: #ARB>
	<groups: #(#PipelineParameterName)>
	^ GL_ACTIVE_PROGRAM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_PROGRAM_EXT [

	<enum: #'GL_ACTIVE_PROGRAM_EXT'>
	<value: 16r8259>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_ACTIVE_PROGRAM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_RESOURCES [

	<enum: #'GL_ACTIVE_RESOURCES'>
	<value: 16r92F5>
	<vendor: #NV>
	<groups: #(#ProgramInterfacePName)>
	^ GL_ACTIVE_RESOURCES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_STENCIL_FACE_EXT [

	<enum: #'GL_ACTIVE_STENCIL_FACE_EXT'>
	<value: 16r8911>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_ACTIVE_STENCIL_FACE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_SUBROUTINES [

	<enum: #'GL_ACTIVE_SUBROUTINES'>
	<value: 16r8DE5>
	<vendor: #NV>
	<groups: #(#ProgramStagePName)>
	^ GL_ACTIVE_SUBROUTINES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_SUBROUTINE_MAX_LENGTH [

	<enum: #'GL_ACTIVE_SUBROUTINE_MAX_LENGTH'>
	<value: 16r8E48>
	<vendor: #NV>
	<groups: #(#ProgramStagePName)>
	^ GL_ACTIVE_SUBROUTINE_MAX_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_SUBROUTINE_UNIFORMS [

	<enum: #'GL_ACTIVE_SUBROUTINE_UNIFORMS'>
	<value: 16r8DE6>
	<vendor: #NV>
	<groups: #(#ProgramStagePName)>
	^ GL_ACTIVE_SUBROUTINE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS [

	<enum: #'GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS'>
	<value: 16r8E47>
	<vendor: #NV>
	<groups: #(#ProgramStagePName)>
	^ GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH [

	<enum: #'GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH'>
	<value: 16r8E49>
	<vendor: #NV>
	<groups: #(#ProgramStagePName)>
	^ GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_TEXTURE [

	<enum: #'GL_ACTIVE_TEXTURE'>
	<value: 16r84E0>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ACTIVE_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_TEXTURE_ARB [

	<enum: #'GL_ACTIVE_TEXTURE_ARB'>
	<value: 16r84E0>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_ACTIVE_TEXTURE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_UNIFORMS [

	<enum: #'GL_ACTIVE_UNIFORMS'>
	<value: 16r8B86>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB)>
	^ GL_ACTIVE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_UNIFORM_BLOCKS [

	<enum: #'GL_ACTIVE_UNIFORM_BLOCKS'>
	<value: 16r8A36>
	<vendor: #APPLE>
	<groups: #(#ProgramPropertyARB)>
	^ GL_ACTIVE_UNIFORM_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH [

	<enum: #'GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH'>
	<value: 16r8A35>
	<vendor: #APPLE>
	<groups: #(#ProgramPropertyARB)>
	^ GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_UNIFORM_MAX_LENGTH [

	<enum: #'GL_ACTIVE_UNIFORM_MAX_LENGTH'>
	<value: 16r8B87>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB)>
	^ GL_ACTIVE_UNIFORM_MAX_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_VARIABLES [

	<enum: #'GL_ACTIVE_VARIABLES'>
	<value: 16r9305>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_ACTIVE_VARIABLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_VARYINGS_NV [

	<enum: #'GL_ACTIVE_VARYINGS_NV'>
	<value: 16r8C81>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ACTIVE_VARYINGS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_VARYING_MAX_LENGTH_NV [

	<enum: #'GL_ACTIVE_VARYING_MAX_LENGTH_NV'>
	<value: 16r8C82>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ACTIVE_VARYING_MAX_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ACTIVE_VERTEX_UNITS_ARB [

	<enum: #'GL_ACTIVE_VERTEX_UNITS_ARB'>
	<value: 16r86A5>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_ACTIVE_VERTEX_UNITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ADD [

	<enum: #'GL_ADD'>
	<value: 16r104>
	<vendor: #ARB>
	<groups: #(#AccumOp #LightEnvModeSGIX #TextureEnvMode)>
	^ GL_ADD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ADD_ATI [

	<enum: #'GL_ADD_ATI'>
	<value: 16r8963>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_ADD_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ADD_BLEND_IMG [

	<enum: #'GL_ADD_BLEND_IMG'>
	<value: 16r8C09>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_ADD_BLEND_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ADD_SIGNED [

	<enum: #'GL_ADD_SIGNED'>
	<value: 16r8574>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_ADD_SIGNED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ADD_SIGNED_ARB [

	<enum: #'GL_ADD_SIGNED_ARB'>
	<value: 16r8574>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_ADD_SIGNED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ADD_SIGNED_EXT [

	<enum: #'GL_ADD_SIGNED_EXT'>
	<value: 16r8574>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_ADD_SIGNED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ADJACENT_PAIRS_NV [

	<enum: #'GL_ADJACENT_PAIRS_NV'>
	<value: 16r90AE>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathListMode)>
	^ GL_ADJACENT_PAIRS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AFFINE_2D_NV [

	<enum: #'GL_AFFINE_2D_NV'>
	<value: 16r9092>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathTransformType)>
	^ GL_AFFINE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AFFINE_3D_NV [

	<enum: #'GL_AFFINE_3D_NV'>
	<value: 16r9094>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathTransformType)>
	^ GL_AFFINE_3D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALIASED_LINE_WIDTH_RANGE [

	<enum: #'GL_ALIASED_LINE_WIDTH_RANGE'>
	<value: 16r846E>
	<vendor: #SGI>
	<groups: #(#GetPName)>
	^ GL_ALIASED_LINE_WIDTH_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALIASED_POINT_SIZE_RANGE [

	<enum: #'GL_ALIASED_POINT_SIZE_RANGE'>
	<value: 16r846D>
	<vendor: #SGI>
	<groups: #(#GetPName)>
	^ GL_ALIASED_POINT_SIZE_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALLOW_DRAW_FRG_HINT_PGI [

	<enum: #'GL_ALLOW_DRAW_FRG_HINT_PGI'>
	<value: 16r1A210>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_ALLOW_DRAW_FRG_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALLOW_DRAW_MEM_HINT_PGI [

	<enum: #'GL_ALLOW_DRAW_MEM_HINT_PGI'>
	<value: 16r1A211>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_ALLOW_DRAW_MEM_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALLOW_DRAW_OBJ_HINT_PGI [

	<enum: #'GL_ALLOW_DRAW_OBJ_HINT_PGI'>
	<value: 16r1A20E>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_ALLOW_DRAW_OBJ_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALLOW_DRAW_WIN_HINT_PGI [

	<enum: #'GL_ALLOW_DRAW_WIN_HINT_PGI'>
	<value: 16r1A20F>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_ALLOW_DRAW_WIN_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALL_ATTRIB_BITS [

	<enum: #'GL_ALL_ATTRIB_BITS'>
	<value: 2r11111111111111111111111111111111>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_ALL_ATTRIB_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALL_BARRIER_BITS [

	<enum: #'GL_ALL_BARRIER_BITS'>
	<value: 2r11111111111111111111111111111111>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_ALL_BARRIER_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALL_BARRIER_BITS_EXT [

	<enum: #'GL_ALL_BARRIER_BITS_EXT'>
	<value: 2r11111111111111111111111111111111>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_ALL_BARRIER_BITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALL_COMPLETED_NV [

	<enum: #'GL_ALL_COMPLETED_NV'>
	<value: 16r84F2>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#FenceConditionNV)>
	^ GL_ALL_COMPLETED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALL_PIXELS_AMD [

	<enum: #'GL_ALL_PIXELS_AMD'>
	<value: 16rFFFFFFFF>
	<vendor: #ARB>
	<suffix: #AMD>
	<groups: #(#SpecialNumbers)>
	^ GL_ALL_PIXELS_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALL_SHADER_BITS [

	<enum: #'GL_ALL_SHADER_BITS'>
	<value: 2r11111111111111111111111111111111>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_ALL_SHADER_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALL_SHADER_BITS_EXT [

	<enum: #'GL_ALL_SHADER_BITS_EXT'>
	<value: 2r11111111111111111111111111111111>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_ALL_SHADER_BITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALL_STATIC_DATA_IBM [

	<enum: #'GL_ALL_STATIC_DATA_IBM'>
	<value: 16r19294>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_ALL_STATIC_DATA_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA [

	<enum: #'GL_ALPHA'>
	<value: 16r1906>
	<vendor: #ARB>
	<groups: #(#CombinerComponentUsageNV #CombinerPortionNV #PathColorFormat #PixelFormat #TextureSwizzle)>
	^ GL_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA12 [

	<enum: #'GL_ALPHA12'>
	<value: 16r803D>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA12_EXT [

	<enum: #'GL_ALPHA12_EXT'>
	<value: 16r803D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA16 [

	<enum: #'GL_ALPHA16'>
	<value: 16r803E>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA16F_ARB [

	<enum: #'GL_ALPHA16F_ARB'>
	<value: 16r881C>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_ALPHA16F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA16F_EXT [

	<enum: #'GL_ALPHA16F_EXT'>
	<value: 16r881C>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_ALPHA16F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA16I_EXT [

	<enum: #'GL_ALPHA16I_EXT'>
	<value: 16r8D8A>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA16I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA16UI_EXT [

	<enum: #'GL_ALPHA16UI_EXT'>
	<value: 16r8D78>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA16UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA16_EXT [

	<enum: #'GL_ALPHA16_EXT'>
	<value: 16r803E>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA16_SNORM [

	<enum: #'GL_ALPHA16_SNORM'>
	<value: 16r9018>
	<vendor: #AMD>
	^ GL_ALPHA16_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA32F_ARB [

	<enum: #'GL_ALPHA32F_ARB'>
	<value: 16r8816>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_ALPHA32F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA32F_EXT [

	<enum: #'GL_ALPHA32F_EXT'>
	<value: 16r8816>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_ALPHA32F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA32I_EXT [

	<enum: #'GL_ALPHA32I_EXT'>
	<value: 16r8D84>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA32I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA32UI_EXT [

	<enum: #'GL_ALPHA32UI_EXT'>
	<value: 16r8D72>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA32UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA4 [

	<enum: #'GL_ALPHA4'>
	<value: 16r803B>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA4_EXT [

	<enum: #'GL_ALPHA4_EXT'>
	<value: 16r803B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA8 [

	<enum: #'GL_ALPHA8'>
	<value: 16r803C>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA8I_EXT [

	<enum: #'GL_ALPHA8I_EXT'>
	<value: 16r8D90>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA8I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA8UI_EXT [

	<enum: #'GL_ALPHA8UI_EXT'>
	<value: 16r8D7E>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA8UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA8_EXT [

	<enum: #'GL_ALPHA8_EXT'>
	<value: 16r803C>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA8_OES [

	<enum: #'GL_ALPHA8_OES'>
	<value: 16r803C>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_ALPHA8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA8_SNORM [

	<enum: #'GL_ALPHA8_SNORM'>
	<value: 16r9014>
	<vendor: #AMD>
	^ GL_ALPHA8_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_BIAS [

	<enum: #'GL_ALPHA_BIAS'>
	<value: 16rD1D>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_ALPHA_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_BITS [

	<enum: #'GL_ALPHA_BITS'>
	<value: 16rD55>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ALPHA_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_FLOAT16_APPLE [

	<enum: #'GL_ALPHA_FLOAT16_APPLE'>
	<value: 16r881C>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_ALPHA_FLOAT16_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_FLOAT16_ATI [

	<enum: #'GL_ALPHA_FLOAT16_ATI'>
	<value: 16r881C>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_ALPHA_FLOAT16_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_FLOAT32_APPLE [

	<enum: #'GL_ALPHA_FLOAT32_APPLE'>
	<value: 16r8816>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_ALPHA_FLOAT32_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_FLOAT32_ATI [

	<enum: #'GL_ALPHA_FLOAT32_ATI'>
	<value: 16r8816>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_ALPHA_FLOAT32_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_INTEGER [

	<enum: #'GL_ALPHA_INTEGER'>
	<value: 16r8D97>
	<vendor: #NV>
	^ GL_ALPHA_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_INTEGER_EXT [

	<enum: #'GL_ALPHA_INTEGER_EXT'>
	<value: 16r8D97>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_ALPHA_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_MAX_CLAMP_INGR [

	<enum: #'GL_ALPHA_MAX_CLAMP_INGR'>
	<value: 16r8567>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_ALPHA_MAX_CLAMP_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_MAX_SGIX [

	<enum: #'GL_ALPHA_MAX_SGIX'>
	<value: 16r8321>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_ALPHA_MAX_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_MIN_CLAMP_INGR [

	<enum: #'GL_ALPHA_MIN_CLAMP_INGR'>
	<value: 16r8563>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_ALPHA_MIN_CLAMP_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_MIN_SGIX [

	<enum: #'GL_ALPHA_MIN_SGIX'>
	<value: 16r8320>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_ALPHA_MIN_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_REF_COMMAND_NV [

	<enum: #'GL_ALPHA_REF_COMMAND_NV'>
	<value: 16rF>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_ALPHA_REF_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_SCALE [

	<enum: #'GL_ALPHA_SCALE'>
	<value: 16rD1C>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_ALPHA_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_SNORM [

	<enum: #'GL_ALPHA_SNORM'>
	<value: 16r9010>
	<vendor: #AMD>
	^ GL_ALPHA_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TEST [

	<enum: #'GL_ALPHA_TEST'>
	<value: 16rBC0>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_ALPHA_TEST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TEST_FUNC [

	<enum: #'GL_ALPHA_TEST_FUNC'>
	<value: 16rBC1>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ALPHA_TEST_FUNC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TEST_FUNC_QCOM [

	<enum: #'GL_ALPHA_TEST_FUNC_QCOM'>
	<value: 16rBC1>
	<vendor: #ARB>
	<suffix: #QCOM>
	<groups: #(#GetPName)>
	^ GL_ALPHA_TEST_FUNC_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TEST_QCOM [

	<enum: #'GL_ALPHA_TEST_QCOM'>
	<value: 16rBC0>
	<vendor: #ARB>
	<suffix: #QCOM>
	<groups: #(#GetPName)>
	^ GL_ALPHA_TEST_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TEST_REF [

	<enum: #'GL_ALPHA_TEST_REF'>
	<value: 16rBC2>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ALPHA_TEST_REF
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TEST_REF_QCOM [

	<enum: #'GL_ALPHA_TEST_REF_QCOM'>
	<value: 16rBC2>
	<vendor: #ARB>
	<suffix: #QCOM>
	<groups: #(#GetPName)>
	^ GL_ALPHA_TEST_REF_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV [

	<enum: #'GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV'>
	<value: 16r934D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TO_COVERAGE_DITHER_DISABLE_NV [

	<enum: #'GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV'>
	<value: 16r934F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TO_COVERAGE_DITHER_ENABLE_NV [

	<enum: #'GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV'>
	<value: 16r934E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALPHA_TO_COVERAGE_DITHER_MODE_NV [

	<enum: #'GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV'>
	<value: 16r92BF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALREADY_SIGNALED [

	<enum: #'GL_ALREADY_SIGNALED'>
	<value: 16r911A>
	<vendor: #ARB>
	<groups: #(#SyncStatus)>
	^ GL_ALREADY_SIGNALED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALREADY_SIGNALED_APPLE [

	<enum: #'GL_ALREADY_SIGNALED_APPLE'>
	<value: 16r911A>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_ALREADY_SIGNALED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALWAYS [

	<enum: #'GL_ALWAYS'>
	<value: 16r207>
	<vendor: #ARB>
	<groups: #(#AlphaFunction #DepthFunction #IndexFunctionEXT #StencilFunction)>
	^ GL_ALWAYS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALWAYS_FAST_HINT_PGI [

	<enum: #'GL_ALWAYS_FAST_HINT_PGI'>
	<value: 16r1A20C>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_ALWAYS_FAST_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ALWAYS_SOFT_HINT_PGI [

	<enum: #'GL_ALWAYS_SOFT_HINT_PGI'>
	<value: 16r1A20D>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_ALWAYS_SOFT_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AMBIENT [

	<enum: #'GL_AMBIENT'>
	<value: 16r1200>
	<vendor: #ARB>
	<groups: #(#ColorMaterialParameter #FragmentLightParameterSGIX #MaterialParameter)>
	^ GL_AMBIENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AMBIENT_AND_DIFFUSE [

	<enum: #'GL_AMBIENT_AND_DIFFUSE'>
	<value: 16r1602>
	<vendor: #ARB>
	<groups: #(#ColorMaterialParameter #MaterialParameter)>
	^ GL_AMBIENT_AND_DIFFUSE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AND [

	<enum: #'GL_AND'>
	<value: 16r1501>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_AND
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AND_INVERTED [

	<enum: #'GL_AND_INVERTED'>
	<value: 16r1504>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_AND_INVERTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AND_REVERSE [

	<enum: #'GL_AND_REVERSE'>
	<value: 16r1502>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_AND_REVERSE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ANY_SAMPLES_PASSED [

	<enum: #'GL_ANY_SAMPLES_PASSED'>
	<value: 16r8C2F>
	<vendor: #NV>
	<groups: #(#QueryTarget)>
	^ GL_ANY_SAMPLES_PASSED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ANY_SAMPLES_PASSED_CONSERVATIVE [

	<enum: #'GL_ANY_SAMPLES_PASSED_CONSERVATIVE'>
	<value: 16r8D6A>
	<vendor: #OES>
	<groups: #(#QueryTarget)>
	^ GL_ANY_SAMPLES_PASSED_CONSERVATIVE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ANY_SAMPLES_PASSED_CONSERVATIVE_EXT [

	<enum: #'GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT'>
	<value: 16r8D6A>
	<vendor: #OES>
	<suffix: #EXT>
	^ GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ANY_SAMPLES_PASSED_EXT [

	<enum: #'GL_ANY_SAMPLES_PASSED_EXT'>
	<value: 16r8C2F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_ANY_SAMPLES_PASSED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARC_TO_NV [

	<enum: #'GL_ARC_TO_NV'>
	<value: 16rFE>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_BUFFER [

	<enum: #'GL_ARRAY_BUFFER'>
	<value: 16r8892>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_ARRAY_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_BUFFER_ARB [

	<enum: #'GL_ARRAY_BUFFER_ARB'>
	<value: 16r8892>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_ARRAY_BUFFER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_BUFFER_BINDING [

	<enum: #'GL_ARRAY_BUFFER_BINDING'>
	<value: 16r8894>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r8894>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_ELEMENT_LOCK_COUNT_EXT [

	<enum: #'GL_ARRAY_ELEMENT_LOCK_COUNT_EXT'>
	<value: 16r81A9>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_ELEMENT_LOCK_FIRST_EXT [

	<enum: #'GL_ARRAY_ELEMENT_LOCK_FIRST_EXT'>
	<value: 16r81A8>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_OBJECT_BUFFER_ATI [

	<enum: #'GL_ARRAY_OBJECT_BUFFER_ATI'>
	<value: 16r8766>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_ARRAY_OBJECT_BUFFER_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_OBJECT_OFFSET_ATI [

	<enum: #'GL_ARRAY_OBJECT_OFFSET_ATI'>
	<value: 16r8767>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_ARRAY_OBJECT_OFFSET_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_SIZE [

	<enum: #'GL_ARRAY_SIZE'>
	<value: 16r92FB>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_ARRAY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ARRAY_STRIDE [

	<enum: #'GL_ARRAY_STRIDE'>
	<value: 16r92FE>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ASYNC_DRAW_PIXELS_SGIX [

	<enum: #'GL_ASYNC_DRAW_PIXELS_SGIX'>
	<value: 16r835D>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_ASYNC_DRAW_PIXELS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ASYNC_HISTOGRAM_SGIX [

	<enum: #'GL_ASYNC_HISTOGRAM_SGIX'>
	<value: 16r832C>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_ASYNC_HISTOGRAM_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ASYNC_MARKER_SGIX [

	<enum: #'GL_ASYNC_MARKER_SGIX'>
	<value: 16r8329>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_ASYNC_MARKER_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ASYNC_READ_PIXELS_SGIX [

	<enum: #'GL_ASYNC_READ_PIXELS_SGIX'>
	<value: 16r835E>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_ASYNC_READ_PIXELS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ASYNC_TEX_IMAGE_SGIX [

	<enum: #'GL_ASYNC_TEX_IMAGE_SGIX'>
	<value: 16r835C>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_ASYNC_TEX_IMAGE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATC_RGBA_EXPLICIT_ALPHA_AMD [

	<enum: #'GL_ATC_RGBA_EXPLICIT_ALPHA_AMD'>
	<value: 16r8C93>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATC_RGBA_INTERPOLATED_ALPHA_AMD [

	<enum: #'GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD'>
	<value: 16r87EE>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATC_RGB_AMD [

	<enum: #'GL_ATC_RGB_AMD'>
	<value: 16r8C92>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_ATC_RGB_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BARRIER_BIT [

	<enum: #'GL_ATOMIC_COUNTER_BARRIER_BIT'>
	<value: 2r1000000000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_ATOMIC_COUNTER_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BARRIER_BIT_EXT [

	<enum: #'GL_ATOMIC_COUNTER_BARRIER_BIT_EXT'>
	<value: 2r1000000000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_ATOMIC_COUNTER_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER'>
	<value: 16r92C0>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_ATOMIC_COUNTER_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS'>
	<value: 16r92C5>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES'>
	<value: 16r92C6>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_BINDING [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_BINDING'>
	<value: 16r92C1>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_DATA_SIZE [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE'>
	<value: 16r92C4>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_INDEX [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_INDEX'>
	<value: 16r9301>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_ATOMIC_COUNTER_BUFFER_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER'>
	<value: 16r90ED>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER'>
	<value: 16r92CB>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER'>
	<value: 16r92CA>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV'>
	<value: 16r959E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV'>
	<value: 16r959F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER'>
	<value: 16r92C8>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER'>
	<value: 16r92C9>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER'>
	<value: 16r92C7>
	<vendor: #NV>
	<groups: #(#AtomicCounterBufferPName)>
	^ GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_SIZE [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_SIZE'>
	<value: 16r92C3>
	<vendor: #NV>
	^ GL_ATOMIC_COUNTER_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATOMIC_COUNTER_BUFFER_START [

	<enum: #'GL_ATOMIC_COUNTER_BUFFER_START'>
	<value: 16r92C2>
	<vendor: #NV>
	^ GL_ATOMIC_COUNTER_BUFFER_START
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTACHED_MEMORY_OBJECT_NV [

	<enum: #'GL_ATTACHED_MEMORY_OBJECT_NV'>
	<value: 16r95A4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ATTACHED_MEMORY_OBJECT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTACHED_MEMORY_OFFSET_NV [

	<enum: #'GL_ATTACHED_MEMORY_OFFSET_NV'>
	<value: 16r95A5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ATTACHED_MEMORY_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTACHED_SHADERS [

	<enum: #'GL_ATTACHED_SHADERS'>
	<value: 16r8B85>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB)>
	^ GL_ATTACHED_SHADERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTENUATION_EXT [

	<enum: #'GL_ATTENUATION_EXT'>
	<value: 16r834D>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightTexturePNameEXT)>
	^ GL_ATTENUATION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTRIBUTE_ADDRESS_COMMAND_NV [

	<enum: #'GL_ATTRIBUTE_ADDRESS_COMMAND_NV'>
	<value: 16r9>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_ATTRIBUTE_ADDRESS_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTRIB_ARRAY_POINTER_NV [

	<enum: #'GL_ATTRIB_ARRAY_POINTER_NV'>
	<value: 16r8645>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ATTRIB_ARRAY_POINTER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTRIB_ARRAY_SIZE_NV [

	<enum: #'GL_ATTRIB_ARRAY_SIZE_NV'>
	<value: 16r8623>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ATTRIB_ARRAY_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTRIB_ARRAY_STRIDE_NV [

	<enum: #'GL_ATTRIB_ARRAY_STRIDE_NV'>
	<value: 16r8624>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ATTRIB_ARRAY_STRIDE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTRIB_ARRAY_TYPE_NV [

	<enum: #'GL_ATTRIB_ARRAY_TYPE_NV'>
	<value: 16r8625>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ATTRIB_ARRAY_TYPE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ATTRIB_STACK_DEPTH [

	<enum: #'GL_ATTRIB_STACK_DEPTH'>
	<value: 16rBB0>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ATTRIB_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AUTO_GENERATE_MIPMAP [

	<enum: #'GL_AUTO_GENERATE_MIPMAP'>
	<value: 16r8295>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_AUTO_GENERATE_MIPMAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AUTO_NORMAL [

	<enum: #'GL_AUTO_NORMAL'>
	<value: 16rD80>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_AUTO_NORMAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AUX0 [

	<enum: #'GL_AUX0'>
	<value: 16r409>
	<vendor: #ARB>
	<groups: #(#DrawBufferMode #ReadBufferMode)>
	^ GL_AUX0
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AUX1 [

	<enum: #'GL_AUX1'>
	<value: 16r40A>
	<vendor: #ARB>
	<groups: #(#DrawBufferMode #ReadBufferMode)>
	^ GL_AUX1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AUX2 [

	<enum: #'GL_AUX2'>
	<value: 16r40B>
	<vendor: #ARB>
	<groups: #(#DrawBufferMode #ReadBufferMode)>
	^ GL_AUX2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AUX3 [

	<enum: #'GL_AUX3'>
	<value: 16r40C>
	<vendor: #ARB>
	<groups: #(#DrawBufferMode #ReadBufferMode)>
	^ GL_AUX3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AUX_BUFFERS [

	<enum: #'GL_AUX_BUFFERS'>
	<value: 16rC00>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_AUX_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AUX_DEPTH_STENCIL_APPLE [

	<enum: #'GL_AUX_DEPTH_STENCIL_APPLE'>
	<value: 16r8A14>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_AUX_DEPTH_STENCIL_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AVERAGE_EXT [

	<enum: #'GL_AVERAGE_EXT'>
	<value: 16r8335>
	<vendor: #SUN>
	<suffix: #EXT>
	^ GL_AVERAGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> AVERAGE_HP [

	<enum: #'GL_AVERAGE_HP'>
	<value: 16r8160>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_AVERAGE_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BACK [

	<enum: #'GL_BACK'>
	<value: 16r405>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #ColorMaterialFace #CullFaceMode #DrawBufferMode #MaterialFace #ReadBufferMode #StencilFaceDirection)>
	^ GL_BACK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BACK_LEFT [

	<enum: #'GL_BACK_LEFT'>
	<value: 16r402>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #ReadBufferMode)>
	^ GL_BACK_LEFT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BACK_NORMALS_HINT_PGI [

	<enum: #'GL_BACK_NORMALS_HINT_PGI'>
	<value: 16r1A223>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_BACK_NORMALS_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BACK_PRIMARY_COLOR_NV [

	<enum: #'GL_BACK_PRIMARY_COLOR_NV'>
	<value: 16r8C77>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_BACK_PRIMARY_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BACK_RIGHT [

	<enum: #'GL_BACK_RIGHT'>
	<value: 16r403>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #ReadBufferMode)>
	^ GL_BACK_RIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BACK_SECONDARY_COLOR_NV [

	<enum: #'GL_BACK_SECONDARY_COLOR_NV'>
	<value: 16r8C78>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_BACK_SECONDARY_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BEVEL_NV [

	<enum: #'GL_BEVEL_NV'>
	<value: 16r90A6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_BEVEL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGR [

	<enum: #'GL_BGR'>
	<value: 16r80E0>
	<vendor: #MS>
	<groups: #(#PixelFormat)>
	^ GL_BGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGRA [

	<enum: #'GL_BGRA'>
	<value: 16r80E1>
	<vendor: #MS>
	<groups: #(#PixelFormat)>
	^ GL_BGRA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGRA8_EXT [

	<enum: #'GL_BGRA8_EXT'>
	<value: 16r93A1>
	<vendor: #ANGLE>
	<suffix: #EXT>
	^ GL_BGRA8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGRA_EXT [

	<enum: #'GL_BGRA_EXT'>
	<value: 16r80E1>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_BGRA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGRA_IMG [

	<enum: #'GL_BGRA_IMG'>
	<value: 16r80E1>
	<vendor: #MS>
	<suffix: #IMG>
	^ GL_BGRA_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGRA_INTEGER [

	<enum: #'GL_BGRA_INTEGER'>
	<value: 16r8D9B>
	<vendor: #NV>
	<groups: #(#PixelFormat)>
	^ GL_BGRA_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGRA_INTEGER_EXT [

	<enum: #'GL_BGRA_INTEGER_EXT'>
	<value: 16r8D9B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_BGRA_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGR_EXT [

	<enum: #'GL_BGR_EXT'>
	<value: 16r80E0>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_BGR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGR_INTEGER [

	<enum: #'GL_BGR_INTEGER'>
	<value: 16r8D9A>
	<vendor: #NV>
	<groups: #(#PixelFormat)>
	^ GL_BGR_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BGR_INTEGER_EXT [

	<enum: #'GL_BGR_INTEGER_EXT'>
	<value: 16r8D9A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_BGR_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BIAS_BIT_ATI [

	<enum: #'GL_BIAS_BIT_ATI'>
	<value: 2r1000>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderColorModMaskATI)>
	^ GL_BIAS_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BIAS_BY_NEGATIVE_ONE_HALF_NV [

	<enum: #'GL_BIAS_BY_NEGATIVE_ONE_HALF_NV'>
	<value: 16r8541>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerBiasNV)>
	^ GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BINNING_CONTROL_HINT_QCOM [

	<enum: #'GL_BINNING_CONTROL_HINT_QCOM'>
	<value: 16r8FB0>
	<vendor: #QCOM>
	<suffix: #QCOM>
	<groups: #(#HintTarget)>
	^ GL_BINNING_CONTROL_HINT_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BINORMAL_ARRAY_EXT [

	<enum: #'GL_BINORMAL_ARRAY_EXT'>
	<value: 16r843A>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_BINORMAL_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BINORMAL_ARRAY_POINTER_EXT [

	<enum: #'GL_BINORMAL_ARRAY_POINTER_EXT'>
	<value: 16r8443>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_BINORMAL_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BINORMAL_ARRAY_STRIDE_EXT [

	<enum: #'GL_BINORMAL_ARRAY_STRIDE_EXT'>
	<value: 16r8441>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_BINORMAL_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BINORMAL_ARRAY_TYPE_EXT [

	<enum: #'GL_BINORMAL_ARRAY_TYPE_EXT'>
	<value: 16r8440>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_BINORMAL_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BITMAP [

	<enum: #'GL_BITMAP'>
	<value: 16r1A00>
	<vendor: #ARB>
	<groups: #(#PixelType)>
	^ GL_BITMAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BITMAP_TOKEN [

	<enum: #'GL_BITMAP_TOKEN'>
	<value: 16r704>
	<vendor: #ARB>
	<groups: #(#FeedBackToken)>
	^ GL_BITMAP_TOKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLACKHOLE_RENDER_INTEL [

	<enum: #'GL_BLACKHOLE_RENDER_INTEL'>
	<value: 16r83FC>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_BLACKHOLE_RENDER_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND [

	<enum: #'GL_BLEND'>
	<value: 16rBE2>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #TextureEnvMode)>
	^ GL_BLEND
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_ADVANCED_COHERENT_KHR [

	<enum: #'GL_BLEND_ADVANCED_COHERENT_KHR'>
	<value: 16r9285>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_BLEND_ADVANCED_COHERENT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_ADVANCED_COHERENT_NV [

	<enum: #'GL_BLEND_ADVANCED_COHERENT_NV'>
	<value: 16r9285>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_BLEND_ADVANCED_COHERENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_COLOR [

	<enum: #'GL_BLEND_COLOR'>
	<value: 16r8005>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_BLEND_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_COLOR_COMMAND_NV [

	<enum: #'GL_BLEND_COLOR_COMMAND_NV'>
	<value: 16rB>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_BLEND_COLOR_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_COLOR_EXT [

	<enum: #'GL_BLEND_COLOR_EXT'>
	<value: 16r8005>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_BLEND_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_DST [

	<enum: #'GL_BLEND_DST'>
	<value: 16rBE0>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_BLEND_DST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_DST_ALPHA [

	<enum: #'GL_BLEND_DST_ALPHA'>
	<value: 16r80CA>
	<vendor: #ZiiLabs>
	<groups: #(#GetPName)>
	^ GL_BLEND_DST_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_DST_ALPHA_EXT [

	<enum: #'GL_BLEND_DST_ALPHA_EXT'>
	<value: 16r80CA>
	<vendor: #ZiiLabs>
	<suffix: #EXT>
	^ GL_BLEND_DST_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_DST_ALPHA_OES [

	<enum: #'GL_BLEND_DST_ALPHA_OES'>
	<value: 16r80CA>
	<vendor: #ZiiLabs>
	<suffix: #OES>
	^ GL_BLEND_DST_ALPHA_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_DST_RGB [

	<enum: #'GL_BLEND_DST_RGB'>
	<value: 16r80C8>
	<vendor: #ZiiLabs>
	<groups: #(#GetPName)>
	^ GL_BLEND_DST_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_DST_RGB_EXT [

	<enum: #'GL_BLEND_DST_RGB_EXT'>
	<value: 16r80C8>
	<vendor: #ZiiLabs>
	<suffix: #EXT>
	^ GL_BLEND_DST_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_DST_RGB_OES [

	<enum: #'GL_BLEND_DST_RGB_OES'>
	<value: 16r80C8>
	<vendor: #ZiiLabs>
	<suffix: #OES>
	^ GL_BLEND_DST_RGB_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION [

	<enum: #'GL_BLEND_EQUATION'>
	<value: 16r8009>
	<vendor: #ARB>
	^ GL_BLEND_EQUATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION_ALPHA [

	<enum: #'GL_BLEND_EQUATION_ALPHA'>
	<value: 16r883D>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_BLEND_EQUATION_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION_ALPHA_EXT [

	<enum: #'GL_BLEND_EQUATION_ALPHA_EXT'>
	<value: 16r883D>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_BLEND_EQUATION_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION_ALPHA_OES [

	<enum: #'GL_BLEND_EQUATION_ALPHA_OES'>
	<value: 16r883D>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_BLEND_EQUATION_ALPHA_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION_EXT [

	<enum: #'GL_BLEND_EQUATION_EXT'>
	<value: 16r8009>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_BLEND_EQUATION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION_OES [

	<enum: #'GL_BLEND_EQUATION_OES'>
	<value: 16r8009>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_BLEND_EQUATION_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION_RGB [

	<enum: #'GL_BLEND_EQUATION_RGB'>
	<value: 16r8009>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_BLEND_EQUATION_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION_RGB_EXT [

	<enum: #'GL_BLEND_EQUATION_RGB_EXT'>
	<value: 16r8009>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_BLEND_EQUATION_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_EQUATION_RGB_OES [

	<enum: #'GL_BLEND_EQUATION_RGB_OES'>
	<value: 16r8009>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_BLEND_EQUATION_RGB_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_OVERLAP_NV [

	<enum: #'GL_BLEND_OVERLAP_NV'>
	<value: 16r9281>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_BLEND_OVERLAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_PREMULTIPLIED_SRC_NV [

	<enum: #'GL_BLEND_PREMULTIPLIED_SRC_NV'>
	<value: 16r9280>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_BLEND_PREMULTIPLIED_SRC_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_SRC [

	<enum: #'GL_BLEND_SRC'>
	<value: 16rBE1>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_BLEND_SRC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_SRC_ALPHA [

	<enum: #'GL_BLEND_SRC_ALPHA'>
	<value: 16r80CB>
	<vendor: #ZiiLabs>
	<groups: #(#GetPName)>
	^ GL_BLEND_SRC_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_SRC_ALPHA_EXT [

	<enum: #'GL_BLEND_SRC_ALPHA_EXT'>
	<value: 16r80CB>
	<vendor: #ZiiLabs>
	<suffix: #EXT>
	^ GL_BLEND_SRC_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_SRC_ALPHA_OES [

	<enum: #'GL_BLEND_SRC_ALPHA_OES'>
	<value: 16r80CB>
	<vendor: #ZiiLabs>
	<suffix: #OES>
	^ GL_BLEND_SRC_ALPHA_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_SRC_RGB [

	<enum: #'GL_BLEND_SRC_RGB'>
	<value: 16r80C9>
	<vendor: #ZiiLabs>
	<groups: #(#GetPName)>
	^ GL_BLEND_SRC_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_SRC_RGB_EXT [

	<enum: #'GL_BLEND_SRC_RGB_EXT'>
	<value: 16r80C9>
	<vendor: #ZiiLabs>
	<suffix: #EXT>
	^ GL_BLEND_SRC_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLEND_SRC_RGB_OES [

	<enum: #'GL_BLEND_SRC_RGB_OES'>
	<value: 16r80C9>
	<vendor: #ZiiLabs>
	<suffix: #OES>
	^ GL_BLEND_SRC_RGB_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLOCK_INDEX [

	<enum: #'GL_BLOCK_INDEX'>
	<value: 16r92FD>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_BLOCK_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE [

	<enum: #'GL_BLUE'>
	<value: 16r1905>
	<vendor: #ARB>
	<groups: #(#CombinerComponentUsageNV #PixelFormat #TextureSwizzle)>
	^ GL_BLUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_BIAS [

	<enum: #'GL_BLUE_BIAS'>
	<value: 16rD1B>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_BLUE_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_BITS [

	<enum: #'GL_BLUE_BITS'>
	<value: 16rD54>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_BLUE_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_BIT_ATI [

	<enum: #'GL_BLUE_BIT_ATI'>
	<value: 2r100>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestMaskATI)>
	^ GL_BLUE_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_INTEGER [

	<enum: #'GL_BLUE_INTEGER'>
	<value: 16r8D96>
	<vendor: #NV>
	<groups: #(#PixelFormat)>
	^ GL_BLUE_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_INTEGER_EXT [

	<enum: #'GL_BLUE_INTEGER_EXT'>
	<value: 16r8D96>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_BLUE_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_MAX_CLAMP_INGR [

	<enum: #'GL_BLUE_MAX_CLAMP_INGR'>
	<value: 16r8566>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_BLUE_MAX_CLAMP_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_MIN_CLAMP_INGR [

	<enum: #'GL_BLUE_MIN_CLAMP_INGR'>
	<value: 16r8562>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_BLUE_MIN_CLAMP_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_NV [

	<enum: #'GL_BLUE_NV'>
	<value: 16r1905>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_BLUE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BLUE_SCALE [

	<enum: #'GL_BLUE_SCALE'>
	<value: 16rD1A>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_BLUE_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOLD_BIT_NV [

	<enum: #'GL_BOLD_BIT_NV'>
	<value: 2r1>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathFontStyle #PathRenderingMaskNV)>
	^ GL_BOLD_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOOL [

	<enum: #'GL_BOOL'>
	<value: 16r8B56>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_BOOL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOOL_ARB [

	<enum: #'GL_BOOL_ARB'>
	<value: 16r8B56>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_BOOL_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOOL_VEC2 [

	<enum: #'GL_BOOL_VEC2'>
	<value: 16r8B57>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_BOOL_VEC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOOL_VEC2_ARB [

	<enum: #'GL_BOOL_VEC2_ARB'>
	<value: 16r8B57>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_BOOL_VEC2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOOL_VEC3 [

	<enum: #'GL_BOOL_VEC3'>
	<value: 16r8B58>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_BOOL_VEC3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOOL_VEC3_ARB [

	<enum: #'GL_BOOL_VEC3_ARB'>
	<value: 16r8B58>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_BOOL_VEC3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOOL_VEC4 [

	<enum: #'GL_BOOL_VEC4'>
	<value: 16r8B59>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_BOOL_VEC4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOOL_VEC4_ARB [

	<enum: #'GL_BOOL_VEC4_ARB'>
	<value: 16r8B59>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_BOOL_VEC4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOUNDING_BOX_NV [

	<enum: #'GL_BOUNDING_BOX_NV'>
	<value: 16r908D>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoverMode)>
	^ GL_BOUNDING_BOX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BOUNDING_BOX_OF_BOUNDING_BOXES_NV [

	<enum: #'GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV'>
	<value: 16r909C>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoverMode)>
	^ GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BROWSER_DEFAULT_WEBGL [

	<enum: #'GL_BROWSER_DEFAULT_WEBGL'>
	<value: 16r9244>
	<vendor: #WEBGL>
	^ GL_BROWSER_DEFAULT_WEBGL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER [

	<enum: #'GL_BUFFER'>
	<value: 16r82E0>
	<vendor: #ARB>
	<groups: #(#ObjectIdentifier)>
	^ GL_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_ACCESS [

	<enum: #'GL_BUFFER_ACCESS'>
	<value: 16r88BB>
	<vendor: #NV>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_ACCESS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_ACCESS_ARB [

	<enum: #'GL_BUFFER_ACCESS_ARB'>
	<value: 16r88BB>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#BufferPNameARB)>
	^ GL_BUFFER_ACCESS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_ACCESS_FLAGS [

	<enum: #'GL_BUFFER_ACCESS_FLAGS'>
	<value: 16r911F>
	<vendor: #ARB>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_ACCESS_FLAGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_ACCESS_OES [

	<enum: #'GL_BUFFER_ACCESS_OES'>
	<value: 16r88BB>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_BUFFER_ACCESS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_BINDING [

	<enum: #'GL_BUFFER_BINDING'>
	<value: 16r9302>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_DATA_SIZE [

	<enum: #'GL_BUFFER_DATA_SIZE'>
	<value: 16r9303>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_BUFFER_DATA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_FLUSHING_UNMAP_APPLE [

	<enum: #'GL_BUFFER_FLUSHING_UNMAP_APPLE'>
	<value: 16r8A13>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_BUFFER_FLUSHING_UNMAP_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_GPU_ADDRESS_NV [

	<enum: #'GL_BUFFER_GPU_ADDRESS_NV'>
	<value: 16r8F1D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_BUFFER_GPU_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_IMMUTABLE_STORAGE [

	<enum: #'GL_BUFFER_IMMUTABLE_STORAGE'>
	<value: 16r821F>
	<vendor: #ARB>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_IMMUTABLE_STORAGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_IMMUTABLE_STORAGE_EXT [

	<enum: #'GL_BUFFER_IMMUTABLE_STORAGE_EXT'>
	<value: 16r821F>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_BUFFER_IMMUTABLE_STORAGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_KHR [

	<enum: #'GL_BUFFER_KHR'>
	<value: 16r82E0>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_BUFFER_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_MAPPED [

	<enum: #'GL_BUFFER_MAPPED'>
	<value: 16r88BC>
	<vendor: #NV>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_MAPPED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_MAPPED_ARB [

	<enum: #'GL_BUFFER_MAPPED_ARB'>
	<value: 16r88BC>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#BufferPNameARB)>
	^ GL_BUFFER_MAPPED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_MAPPED_OES [

	<enum: #'GL_BUFFER_MAPPED_OES'>
	<value: 16r88BC>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_BUFFER_MAPPED_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_MAP_LENGTH [

	<enum: #'GL_BUFFER_MAP_LENGTH'>
	<value: 16r9120>
	<vendor: #ARB>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_MAP_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_MAP_OFFSET [

	<enum: #'GL_BUFFER_MAP_OFFSET'>
	<value: 16r9121>
	<vendor: #ARB>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_MAP_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_MAP_POINTER [

	<enum: #'GL_BUFFER_MAP_POINTER'>
	<value: 16r88BD>
	<vendor: #NV>
	<groups: #(#BufferPointerNameARB)>
	^ GL_BUFFER_MAP_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_MAP_POINTER_ARB [

	<enum: #'GL_BUFFER_MAP_POINTER_ARB'>
	<value: 16r88BD>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#BufferPointerNameARB)>
	^ GL_BUFFER_MAP_POINTER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_MAP_POINTER_OES [

	<enum: #'GL_BUFFER_MAP_POINTER_OES'>
	<value: 16r88BD>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_BUFFER_MAP_POINTER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_OBJECT_APPLE [

	<enum: #'GL_BUFFER_OBJECT_APPLE'>
	<value: 16r85B3>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_BUFFER_OBJECT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_OBJECT_EXT [

	<enum: #'GL_BUFFER_OBJECT_EXT'>
	<value: 16r9151>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_BUFFER_OBJECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_SERIALIZED_MODIFY_APPLE [

	<enum: #'GL_BUFFER_SERIALIZED_MODIFY_APPLE'>
	<value: 16r8A12>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_BUFFER_SERIALIZED_MODIFY_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_SIZE [

	<enum: #'GL_BUFFER_SIZE'>
	<value: 16r8764>
	<vendor: #AMD>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_SIZE_ARB [

	<enum: #'GL_BUFFER_SIZE_ARB'>
	<value: 16r8764>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#BufferPNameARB)>
	^ GL_BUFFER_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_STORAGE_FLAGS [

	<enum: #'GL_BUFFER_STORAGE_FLAGS'>
	<value: 16r8220>
	<vendor: #ARB>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_STORAGE_FLAGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_STORAGE_FLAGS_EXT [

	<enum: #'GL_BUFFER_STORAGE_FLAGS_EXT'>
	<value: 16r8220>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_BUFFER_STORAGE_FLAGS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_UPDATE_BARRIER_BIT [

	<enum: #'GL_BUFFER_UPDATE_BARRIER_BIT'>
	<value: 2r1000000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_BUFFER_UPDATE_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_UPDATE_BARRIER_BIT_EXT [

	<enum: #'GL_BUFFER_UPDATE_BARRIER_BIT_EXT'>
	<value: 2r1000000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_BUFFER_UPDATE_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_USAGE [

	<enum: #'GL_BUFFER_USAGE'>
	<value: 16r8765>
	<vendor: #AMD>
	<groups: #(#BufferPNameARB #VertexBufferObjectParameter)>
	^ GL_BUFFER_USAGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_USAGE_ARB [

	<enum: #'GL_BUFFER_USAGE_ARB'>
	<value: 16r8765>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#BufferPNameARB)>
	^ GL_BUFFER_USAGE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUFFER_VARIABLE [

	<enum: #'GL_BUFFER_VARIABLE'>
	<value: 16r92E5>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_BUFFER_VARIABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUMP_ENVMAP_ATI [

	<enum: #'GL_BUMP_ENVMAP_ATI'>
	<value: 16r877B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_BUMP_ENVMAP_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUMP_NUM_TEX_UNITS_ATI [

	<enum: #'GL_BUMP_NUM_TEX_UNITS_ATI'>
	<value: 16r8777>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#GetTexBumpParameterATI)>
	^ GL_BUMP_NUM_TEX_UNITS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUMP_ROT_MATRIX_ATI [

	<enum: #'GL_BUMP_ROT_MATRIX_ATI'>
	<value: 16r8775>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#GetTexBumpParameterATI #TexBumpParameterATI)>
	^ GL_BUMP_ROT_MATRIX_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUMP_ROT_MATRIX_SIZE_ATI [

	<enum: #'GL_BUMP_ROT_MATRIX_SIZE_ATI'>
	<value: 16r8776>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#GetTexBumpParameterATI)>
	^ GL_BUMP_ROT_MATRIX_SIZE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUMP_TARGET_ATI [

	<enum: #'GL_BUMP_TARGET_ATI'>
	<value: 16r877C>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_BUMP_TARGET_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BUMP_TEX_UNITS_ATI [

	<enum: #'GL_BUMP_TEX_UNITS_ATI'>
	<value: 16r8778>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#GetTexBumpParameterATI)>
	^ GL_BUMP_TEX_UNITS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> BYTE [

	<enum: #'GL_BYTE'>
	<value: 16r1400>
	<vendor: #ARB>
	<groups: #(#BinormalPointerTypeEXT #ColorPointerType #ListNameType #NormalPointerType #PixelType #TangentPointerTypeEXT #VertexAttribIType #VertexAttribPointerType #VertexAttribType #WeightPointerTypeARB)>
	^ GL_BYTE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> C3F_V3F [

	<enum: #'GL_C3F_V3F'>
	<value: 16r2A24>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_C3F_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> C4F_N3F_V3F [

	<enum: #'GL_C4F_N3F_V3F'>
	<value: 16r2A26>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_C4F_N3F_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> C4UB_V2F [

	<enum: #'GL_C4UB_V2F'>
	<value: 16r2A22>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_C4UB_V2F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> C4UB_V3F [

	<enum: #'GL_C4UB_V3F'>
	<value: 16r2A23>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_C4UB_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CALLIGRAPHIC_FRAGMENT_SGIX [

	<enum: #'GL_CALLIGRAPHIC_FRAGMENT_SGIX'>
	<value: 16r8183>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_CALLIGRAPHIC_FRAGMENT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CAVEAT_SUPPORT [

	<enum: #'GL_CAVEAT_SUPPORT'>
	<value: 16r82B8>
	<vendor: #ARB>
	^ GL_CAVEAT_SUPPORT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CCW [

	<enum: #'GL_CCW'>
	<value: 16r901>
	<vendor: #ARB>
	<groups: #(#FrontFaceDirection)>
	^ GL_CCW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CIRCULAR_CCW_ARC_TO_NV [

	<enum: #'GL_CIRCULAR_CCW_ARC_TO_NV'>
	<value: 16rF8>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_CIRCULAR_CCW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CIRCULAR_CW_ARC_TO_NV [

	<enum: #'GL_CIRCULAR_CW_ARC_TO_NV'>
	<value: 16rFA>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_CIRCULAR_CW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CIRCULAR_TANGENT_ARC_TO_NV [

	<enum: #'GL_CIRCULAR_TANGENT_ARC_TO_NV'>
	<value: 16rFC>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_CIRCULAR_TANGENT_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP [

	<enum: #'GL_CLAMP'>
	<value: 16r2900>
	<vendor: #ARB>
	<groups: #(#TextureWrapMode)>
	^ GL_CLAMP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_FRAGMENT_COLOR [

	<enum: #'GL_CLAMP_FRAGMENT_COLOR'>
	<value: 16r891B>
	<vendor: #NV>
	^ GL_CLAMP_FRAGMENT_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_FRAGMENT_COLOR_ARB [

	<enum: #'GL_CLAMP_FRAGMENT_COLOR_ARB'>
	<value: 16r891B>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#ClampColorTargetARB)>
	^ GL_CLAMP_FRAGMENT_COLOR_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_READ_COLOR [

	<enum: #'GL_CLAMP_READ_COLOR'>
	<value: 16r891C>
	<vendor: #NV>
	<groups: #(#ClampColorTargetARB)>
	^ GL_CLAMP_READ_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_READ_COLOR_ARB [

	<enum: #'GL_CLAMP_READ_COLOR_ARB'>
	<value: 16r891C>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#ClampColorTargetARB)>
	^ GL_CLAMP_READ_COLOR_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_TO_BORDER [

	<enum: #'GL_CLAMP_TO_BORDER'>
	<value: 16r812D>
	<vendor: #SGI>
	<groups: #(#TextureWrapMode)>
	^ GL_CLAMP_TO_BORDER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_TO_BORDER_ARB [

	<enum: #'GL_CLAMP_TO_BORDER_ARB'>
	<value: 16r812D>
	<vendor: #SGI>
	<suffix: #ARB>
	<groups: #(#TextureWrapMode)>
	^ GL_CLAMP_TO_BORDER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_TO_BORDER_EXT [

	<enum: #'GL_CLAMP_TO_BORDER_EXT'>
	<value: 16r812D>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_CLAMP_TO_BORDER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_TO_BORDER_NV [

	<enum: #'GL_CLAMP_TO_BORDER_NV'>
	<value: 16r812D>
	<vendor: #SGI>
	<suffix: #NV>
	<groups: #(#TextureWrapMode)>
	^ GL_CLAMP_TO_BORDER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_TO_BORDER_OES [

	<enum: #'GL_CLAMP_TO_BORDER_OES'>
	<value: 16r812D>
	<vendor: #SGI>
	<suffix: #OES>
	^ GL_CLAMP_TO_BORDER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_TO_BORDER_SGIS [

	<enum: #'GL_CLAMP_TO_BORDER_SGIS'>
	<value: 16r812D>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureWrapMode)>
	^ GL_CLAMP_TO_BORDER_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_TO_EDGE [

	<enum: #'GL_CLAMP_TO_EDGE'>
	<value: 16r812F>
	<vendor: #SGI>
	<groups: #(#TextureWrapMode)>
	^ GL_CLAMP_TO_EDGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_TO_EDGE_SGIS [

	<enum: #'GL_CLAMP_TO_EDGE_SGIS'>
	<value: 16r812F>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureWrapMode)>
	^ GL_CLAMP_TO_EDGE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_VERTEX_COLOR [

	<enum: #'GL_CLAMP_VERTEX_COLOR'>
	<value: 16r891A>
	<vendor: #NV>
	^ GL_CLAMP_VERTEX_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLAMP_VERTEX_COLOR_ARB [

	<enum: #'GL_CLAMP_VERTEX_COLOR_ARB'>
	<value: 16r891A>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#ClampColorTargetARB)>
	^ GL_CLAMP_VERTEX_COLOR_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLEAR [

	<enum: #'GL_CLEAR'>
	<value: 16r1500>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_CLEAR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLEAR_BUFFER [

	<enum: #'GL_CLEAR_BUFFER'>
	<value: 16r82B4>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_CLEAR_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLEAR_TEXTURE [

	<enum: #'GL_CLEAR_TEXTURE'>
	<value: 16r9365>
	<vendor: #NV>
	<groups: #(#InternalFormatPName)>
	^ GL_CLEAR_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_ACTIVE_TEXTURE [

	<enum: #'GL_CLIENT_ACTIVE_TEXTURE'>
	<value: 16r84E1>
	<vendor: #ARB>
	^ GL_CLIENT_ACTIVE_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_ACTIVE_TEXTURE_ARB [

	<enum: #'GL_CLIENT_ACTIVE_TEXTURE_ARB'>
	<value: 16r84E1>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_CLIENT_ACTIVE_TEXTURE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_ALL_ATTRIB_BITS [

	<enum: #'GL_CLIENT_ALL_ATTRIB_BITS'>
	<value: 2r11111111111111111111111111111111>
	<bitmask>
	<groups: #(#ClientAttribMask)>
	^ GL_CLIENT_ALL_ATTRIB_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_ATTRIB_STACK_DEPTH [

	<enum: #'GL_CLIENT_ATTRIB_STACK_DEPTH'>
	<value: 16rBB1>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CLIENT_ATTRIB_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_MAPPED_BUFFER_BARRIER_BIT [

	<enum: #'GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT'>
	<value: 2r100000000000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT [

	<enum: #'GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT'>
	<value: 2r100000000000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_PIXEL_STORE_BIT [

	<enum: #'GL_CLIENT_PIXEL_STORE_BIT'>
	<value: 2r1>
	<bitmask>
	<groups: #(#ClientAttribMask)>
	^ GL_CLIENT_PIXEL_STORE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_STORAGE_BIT [

	<enum: #'GL_CLIENT_STORAGE_BIT'>
	<value: 2r1000000000>
	<bitmask>
	<groups: #(#BufferStorageMask)>
	^ GL_CLIENT_STORAGE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_STORAGE_BIT_EXT [

	<enum: #'GL_CLIENT_STORAGE_BIT_EXT'>
	<value: 2r1000000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#BufferStorageMask)>
	^ GL_CLIENT_STORAGE_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIENT_VERTEX_ARRAY_BIT [

	<enum: #'GL_CLIENT_VERTEX_ARRAY_BIT'>
	<value: 2r10>
	<bitmask>
	<groups: #(#ClientAttribMask)>
	^ GL_CLIENT_VERTEX_ARRAY_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIPPING_INPUT_PRIMITIVES [

	<enum: #'GL_CLIPPING_INPUT_PRIMITIVES'>
	<value: 16r82F6>
	<vendor: #ARB>
	^ GL_CLIPPING_INPUT_PRIMITIVES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIPPING_INPUT_PRIMITIVES_ARB [

	<enum: #'GL_CLIPPING_INPUT_PRIMITIVES_ARB'>
	<value: 16r82F6>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_CLIPPING_INPUT_PRIMITIVES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIPPING_OUTPUT_PRIMITIVES [

	<enum: #'GL_CLIPPING_OUTPUT_PRIMITIVES'>
	<value: 16r82F7>
	<vendor: #ARB>
	^ GL_CLIPPING_OUTPUT_PRIMITIVES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIPPING_OUTPUT_PRIMITIVES_ARB [

	<enum: #'GL_CLIPPING_OUTPUT_PRIMITIVES_ARB'>
	<value: 16r82F7>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_CLIPPING_OUTPUT_PRIMITIVES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DEPTH_MODE [

	<enum: #'GL_CLIP_DEPTH_MODE'>
	<value: 16r935D>
	<vendor: #NV>
	^ GL_CLIP_DEPTH_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DEPTH_MODE_EXT [

	<enum: #'GL_CLIP_DEPTH_MODE_EXT'>
	<value: 16r935D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_CLIP_DEPTH_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE0 [

	<enum: #'GL_CLIP_DISTANCE0'>
	<value: 16r3000>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap)>
	^ GL_CLIP_DISTANCE0
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE0_APPLE [

	<enum: #'GL_CLIP_DISTANCE0_APPLE'>
	<value: 16r3000>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CLIP_DISTANCE0_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE0_EXT [

	<enum: #'GL_CLIP_DISTANCE0_EXT'>
	<value: 16r3000>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CLIP_DISTANCE0_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE1 [

	<enum: #'GL_CLIP_DISTANCE1'>
	<value: 16r3001>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap)>
	^ GL_CLIP_DISTANCE1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE1_APPLE [

	<enum: #'GL_CLIP_DISTANCE1_APPLE'>
	<value: 16r3001>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CLIP_DISTANCE1_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE1_EXT [

	<enum: #'GL_CLIP_DISTANCE1_EXT'>
	<value: 16r3001>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CLIP_DISTANCE1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE2 [

	<enum: #'GL_CLIP_DISTANCE2'>
	<value: 16r3002>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap)>
	^ GL_CLIP_DISTANCE2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE2_APPLE [

	<enum: #'GL_CLIP_DISTANCE2_APPLE'>
	<value: 16r3002>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CLIP_DISTANCE2_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE2_EXT [

	<enum: #'GL_CLIP_DISTANCE2_EXT'>
	<value: 16r3002>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CLIP_DISTANCE2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE3 [

	<enum: #'GL_CLIP_DISTANCE3'>
	<value: 16r3003>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap)>
	^ GL_CLIP_DISTANCE3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE3_APPLE [

	<enum: #'GL_CLIP_DISTANCE3_APPLE'>
	<value: 16r3003>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CLIP_DISTANCE3_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE3_EXT [

	<enum: #'GL_CLIP_DISTANCE3_EXT'>
	<value: 16r3003>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CLIP_DISTANCE3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE4 [

	<enum: #'GL_CLIP_DISTANCE4'>
	<value: 16r3004>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap)>
	^ GL_CLIP_DISTANCE4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE4_APPLE [

	<enum: #'GL_CLIP_DISTANCE4_APPLE'>
	<value: 16r3004>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CLIP_DISTANCE4_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE4_EXT [

	<enum: #'GL_CLIP_DISTANCE4_EXT'>
	<value: 16r3004>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CLIP_DISTANCE4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE5 [

	<enum: #'GL_CLIP_DISTANCE5'>
	<value: 16r3005>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap)>
	^ GL_CLIP_DISTANCE5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE5_APPLE [

	<enum: #'GL_CLIP_DISTANCE5_APPLE'>
	<value: 16r3005>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CLIP_DISTANCE5_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE5_EXT [

	<enum: #'GL_CLIP_DISTANCE5_EXT'>
	<value: 16r3005>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CLIP_DISTANCE5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE6 [

	<enum: #'GL_CLIP_DISTANCE6'>
	<value: 16r3006>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap)>
	^ GL_CLIP_DISTANCE6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE6_APPLE [

	<enum: #'GL_CLIP_DISTANCE6_APPLE'>
	<value: 16r3006>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CLIP_DISTANCE6_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE6_EXT [

	<enum: #'GL_CLIP_DISTANCE6_EXT'>
	<value: 16r3006>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CLIP_DISTANCE6_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE7 [

	<enum: #'GL_CLIP_DISTANCE7'>
	<value: 16r3007>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap)>
	^ GL_CLIP_DISTANCE7
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE7_APPLE [

	<enum: #'GL_CLIP_DISTANCE7_APPLE'>
	<value: 16r3007>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CLIP_DISTANCE7_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE7_EXT [

	<enum: #'GL_CLIP_DISTANCE7_EXT'>
	<value: 16r3007>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CLIP_DISTANCE7_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_DISTANCE_NV [

	<enum: #'GL_CLIP_DISTANCE_NV'>
	<value: 16r8C7A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CLIP_DISTANCE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_FAR_HINT_PGI [

	<enum: #'GL_CLIP_FAR_HINT_PGI'>
	<value: 16r1A221>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_CLIP_FAR_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_NEAR_HINT_PGI [

	<enum: #'GL_CLIP_NEAR_HINT_PGI'>
	<value: 16r1A220>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_CLIP_NEAR_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_ORIGIN [

	<enum: #'GL_CLIP_ORIGIN'>
	<value: 16r935C>
	<vendor: #NV>
	^ GL_CLIP_ORIGIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_ORIGIN_EXT [

	<enum: #'GL_CLIP_ORIGIN_EXT'>
	<value: 16r935C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_CLIP_ORIGIN_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE0 [

	<enum: #'GL_CLIP_PLANE0'>
	<value: 16r3000>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap #GetPName)>
	^ GL_CLIP_PLANE0
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE0_IMG [

	<enum: #'GL_CLIP_PLANE0_IMG'>
	<value: 16r3000>
	<vendor: #ARB>
	<suffix: #IMG>
	^ GL_CLIP_PLANE0_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE1 [

	<enum: #'GL_CLIP_PLANE1'>
	<value: 16r3001>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap #GetPName)>
	^ GL_CLIP_PLANE1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE1_IMG [

	<enum: #'GL_CLIP_PLANE1_IMG'>
	<value: 16r3001>
	<vendor: #ARB>
	<suffix: #IMG>
	^ GL_CLIP_PLANE1_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE2 [

	<enum: #'GL_CLIP_PLANE2'>
	<value: 16r3002>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap #GetPName)>
	^ GL_CLIP_PLANE2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE2_IMG [

	<enum: #'GL_CLIP_PLANE2_IMG'>
	<value: 16r3002>
	<vendor: #ARB>
	<suffix: #IMG>
	^ GL_CLIP_PLANE2_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE3 [

	<enum: #'GL_CLIP_PLANE3'>
	<value: 16r3003>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap #GetPName)>
	^ GL_CLIP_PLANE3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE3_IMG [

	<enum: #'GL_CLIP_PLANE3_IMG'>
	<value: 16r3003>
	<vendor: #ARB>
	<suffix: #IMG>
	^ GL_CLIP_PLANE3_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE4 [

	<enum: #'GL_CLIP_PLANE4'>
	<value: 16r3004>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap #GetPName)>
	^ GL_CLIP_PLANE4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE4_IMG [

	<enum: #'GL_CLIP_PLANE4_IMG'>
	<value: 16r3004>
	<vendor: #ARB>
	<suffix: #IMG>
	^ GL_CLIP_PLANE4_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE5 [

	<enum: #'GL_CLIP_PLANE5'>
	<value: 16r3005>
	<vendor: #ARB>
	<groups: #(#ClipPlaneName #EnableCap #GetPName)>
	^ GL_CLIP_PLANE5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_PLANE5_IMG [

	<enum: #'GL_CLIP_PLANE5_IMG'>
	<value: 16r3005>
	<vendor: #ARB>
	<suffix: #IMG>
	^ GL_CLIP_PLANE5_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLIP_VOLUME_CLIPPING_HINT_EXT [

	<enum: #'GL_CLIP_VOLUME_CLIPPING_HINT_EXT'>
	<value: 16r80F0>
	<vendor: #MS>
	<suffix: #EXT>
	<groups: #(#HintTarget)>
	^ GL_CLIP_VOLUME_CLIPPING_HINT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CLOSE_PATH_NV [

	<enum: #'GL_CLOSE_PATH_NV'>
	<value: 16r0>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_CLOSE_PATH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CMYKA_EXT [

	<enum: #'GL_CMYKA_EXT'>
	<value: 16r800D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelFormat)>
	^ GL_CMYKA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CMYK_EXT [

	<enum: #'GL_CMYK_EXT'>
	<value: 16r800C>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelFormat)>
	^ GL_CMYK_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CND0_ATI [

	<enum: #'GL_CND0_ATI'>
	<value: 16r896B>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_CND0_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CND_ATI [

	<enum: #'GL_CND_ATI'>
	<value: 16r896A>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_CND_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COEFF [

	<enum: #'GL_COEFF'>
	<value: 16rA00>
	<vendor: #ARB>
	<groups: #(#GetMapQuery #MapQuery)>
	^ GL_COEFF
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR [

	<enum: #'GL_COLOR'>
	<value: 16r1800>
	<vendor: #ARB>
	<groups: #(#Buffer #InvalidateFramebufferAttachment #PixelCopyType)>
	^ GL_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR3_BIT_PGI [

	<enum: #'GL_COLOR3_BIT_PGI'>
	<value: 2r10000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_COLOR3_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR4_BIT_PGI [

	<enum: #'GL_COLOR4_BIT_PGI'>
	<value: 2r100000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_COLOR4_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLORBURN [

	<enum: #'GL_COLORBURN'>
	<value: 16r929A>
	<vendor: #NV>
	^ GL_COLORBURN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLORBURN_KHR [

	<enum: #'GL_COLORBURN_KHR'>
	<value: 16r929A>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_COLORBURN_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLORBURN_NV [

	<enum: #'GL_COLORBURN_NV'>
	<value: 16r929A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COLORBURN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLORDODGE [

	<enum: #'GL_COLORDODGE'>
	<value: 16r9299>
	<vendor: #NV>
	^ GL_COLORDODGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLORDODGE_KHR [

	<enum: #'GL_COLORDODGE_KHR'>
	<value: 16r9299>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_COLORDODGE_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLORDODGE_NV [

	<enum: #'GL_COLORDODGE_NV'>
	<value: 16r9299>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COLORDODGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ALPHA_PAIRING_ATI [

	<enum: #'GL_COLOR_ALPHA_PAIRING_ATI'>
	<value: 16r8975>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_COLOR_ALPHA_PAIRING_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY [

	<enum: #'GL_COLOR_ARRAY'>
	<value: 16r8076>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_COLOR_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_ADDRESS_NV [

	<enum: #'GL_COLOR_ARRAY_ADDRESS_NV'>
	<value: 16r8F23>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COLOR_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_BUFFER_BINDING [

	<enum: #'GL_COLOR_ARRAY_BUFFER_BINDING'>
	<value: 16r8898>
	<vendor: #NV>
	^ GL_COLOR_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_COLOR_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r8898>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_COLOR_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_COUNT_EXT [

	<enum: #'GL_COLOR_ARRAY_COUNT_EXT'>
	<value: 16r8084>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_COLOR_ARRAY_COUNT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_EXT [

	<enum: #'GL_COLOR_ARRAY_EXT'>
	<value: 16r8076>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_COLOR_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_LENGTH_NV [

	<enum: #'GL_COLOR_ARRAY_LENGTH_NV'>
	<value: 16r8F2D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COLOR_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_LIST_IBM [

	<enum: #'GL_COLOR_ARRAY_LIST_IBM'>
	<value: 16r192A0>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_COLOR_ARRAY_LIST_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_LIST_STRIDE_IBM [

	<enum: #'GL_COLOR_ARRAY_LIST_STRIDE_IBM'>
	<value: 16r192AA>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_COLOR_ARRAY_LIST_STRIDE_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_PARALLEL_POINTERS_INTEL [

	<enum: #'GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL'>
	<value: 16r83F7>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_POINTER [

	<enum: #'GL_COLOR_ARRAY_POINTER'>
	<value: 16r8090>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_COLOR_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_POINTER_EXT [

	<enum: #'GL_COLOR_ARRAY_POINTER_EXT'>
	<value: 16r8090>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPointervPName)>
	^ GL_COLOR_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_SIZE [

	<enum: #'GL_COLOR_ARRAY_SIZE'>
	<value: 16r8081>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_COLOR_ARRAY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_SIZE_EXT [

	<enum: #'GL_COLOR_ARRAY_SIZE_EXT'>
	<value: 16r8081>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_COLOR_ARRAY_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_STRIDE [

	<enum: #'GL_COLOR_ARRAY_STRIDE'>
	<value: 16r8083>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_COLOR_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_STRIDE_EXT [

	<enum: #'GL_COLOR_ARRAY_STRIDE_EXT'>
	<value: 16r8083>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_COLOR_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_TYPE [

	<enum: #'GL_COLOR_ARRAY_TYPE'>
	<value: 16r8082>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_COLOR_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ARRAY_TYPE_EXT [

	<enum: #'GL_COLOR_ARRAY_TYPE_EXT'>
	<value: 16r8082>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_COLOR_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT0 [

	<enum: #'GL_COLOR_ATTACHMENT0'>
	<value: 16r8CE0>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT0
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT0_EXT [

	<enum: #'GL_COLOR_ATTACHMENT0_EXT'>
	<value: 16r8CE0>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT0_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT0_NV [

	<enum: #'GL_COLOR_ATTACHMENT0_NV'>
	<value: 16r8CE0>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT0_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT0_OES [

	<enum: #'GL_COLOR_ATTACHMENT0_OES'>
	<value: 16r8CE0>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT0_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT1 [

	<enum: #'GL_COLOR_ATTACHMENT1'>
	<value: 16r8CE1>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT10 [

	<enum: #'GL_COLOR_ATTACHMENT10'>
	<value: 16r8CEA>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT10_EXT [

	<enum: #'GL_COLOR_ATTACHMENT10_EXT'>
	<value: 16r8CEA>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT10_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT10_NV [

	<enum: #'GL_COLOR_ATTACHMENT10_NV'>
	<value: 16r8CEA>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT10_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT11 [

	<enum: #'GL_COLOR_ATTACHMENT11'>
	<value: 16r8CEB>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT11
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT11_EXT [

	<enum: #'GL_COLOR_ATTACHMENT11_EXT'>
	<value: 16r8CEB>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT11_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT11_NV [

	<enum: #'GL_COLOR_ATTACHMENT11_NV'>
	<value: 16r8CEB>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT11_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT12 [

	<enum: #'GL_COLOR_ATTACHMENT12'>
	<value: 16r8CEC>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT12_EXT [

	<enum: #'GL_COLOR_ATTACHMENT12_EXT'>
	<value: 16r8CEC>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT12_NV [

	<enum: #'GL_COLOR_ATTACHMENT12_NV'>
	<value: 16r8CEC>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT12_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT13 [

	<enum: #'GL_COLOR_ATTACHMENT13'>
	<value: 16r8CED>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT13
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT13_EXT [

	<enum: #'GL_COLOR_ATTACHMENT13_EXT'>
	<value: 16r8CED>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT13_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT13_NV [

	<enum: #'GL_COLOR_ATTACHMENT13_NV'>
	<value: 16r8CED>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT13_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT14 [

	<enum: #'GL_COLOR_ATTACHMENT14'>
	<value: 16r8CEE>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT14
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT14_EXT [

	<enum: #'GL_COLOR_ATTACHMENT14_EXT'>
	<value: 16r8CEE>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT14_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT14_NV [

	<enum: #'GL_COLOR_ATTACHMENT14_NV'>
	<value: 16r8CEE>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT14_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT15 [

	<enum: #'GL_COLOR_ATTACHMENT15'>
	<value: 16r8CEF>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT15
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT15_EXT [

	<enum: #'GL_COLOR_ATTACHMENT15_EXT'>
	<value: 16r8CEF>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT15_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT15_NV [

	<enum: #'GL_COLOR_ATTACHMENT15_NV'>
	<value: 16r8CEF>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT15_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT16 [

	<enum: #'GL_COLOR_ATTACHMENT16'>
	<value: 16r8CF0>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT17 [

	<enum: #'GL_COLOR_ATTACHMENT17'>
	<value: 16r8CF1>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT17
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT18 [

	<enum: #'GL_COLOR_ATTACHMENT18'>
	<value: 16r8CF2>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT18
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT19 [

	<enum: #'GL_COLOR_ATTACHMENT19'>
	<value: 16r8CF3>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT19
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT1_EXT [

	<enum: #'GL_COLOR_ATTACHMENT1_EXT'>
	<value: 16r8CE1>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT1_NV [

	<enum: #'GL_COLOR_ATTACHMENT1_NV'>
	<value: 16r8CE1>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT2 [

	<enum: #'GL_COLOR_ATTACHMENT2'>
	<value: 16r8CE2>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT20 [

	<enum: #'GL_COLOR_ATTACHMENT20'>
	<value: 16r8CF4>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT20
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT21 [

	<enum: #'GL_COLOR_ATTACHMENT21'>
	<value: 16r8CF5>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT21
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT22 [

	<enum: #'GL_COLOR_ATTACHMENT22'>
	<value: 16r8CF6>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT22
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT23 [

	<enum: #'GL_COLOR_ATTACHMENT23'>
	<value: 16r8CF7>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT23
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT24 [

	<enum: #'GL_COLOR_ATTACHMENT24'>
	<value: 16r8CF8>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT24
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT25 [

	<enum: #'GL_COLOR_ATTACHMENT25'>
	<value: 16r8CF9>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT25
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT26 [

	<enum: #'GL_COLOR_ATTACHMENT26'>
	<value: 16r8CFA>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT26
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT27 [

	<enum: #'GL_COLOR_ATTACHMENT27'>
	<value: 16r8CFB>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT27
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT28 [

	<enum: #'GL_COLOR_ATTACHMENT28'>
	<value: 16r8CFC>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT28
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT29 [

	<enum: #'GL_COLOR_ATTACHMENT29'>
	<value: 16r8CFD>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT29
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT2_EXT [

	<enum: #'GL_COLOR_ATTACHMENT2_EXT'>
	<value: 16r8CE2>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT2_NV [

	<enum: #'GL_COLOR_ATTACHMENT2_NV'>
	<value: 16r8CE2>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT3 [

	<enum: #'GL_COLOR_ATTACHMENT3'>
	<value: 16r8CE3>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT30 [

	<enum: #'GL_COLOR_ATTACHMENT30'>
	<value: 16r8CFE>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT30
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT31 [

	<enum: #'GL_COLOR_ATTACHMENT31'>
	<value: 16r8CFF>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT31
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT3_EXT [

	<enum: #'GL_COLOR_ATTACHMENT3_EXT'>
	<value: 16r8CE3>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT3_NV [

	<enum: #'GL_COLOR_ATTACHMENT3_NV'>
	<value: 16r8CE3>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT4 [

	<enum: #'GL_COLOR_ATTACHMENT4'>
	<value: 16r8CE4>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT4_EXT [

	<enum: #'GL_COLOR_ATTACHMENT4_EXT'>
	<value: 16r8CE4>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT4_NV [

	<enum: #'GL_COLOR_ATTACHMENT4_NV'>
	<value: 16r8CE4>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT5 [

	<enum: #'GL_COLOR_ATTACHMENT5'>
	<value: 16r8CE5>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT5_EXT [

	<enum: #'GL_COLOR_ATTACHMENT5_EXT'>
	<value: 16r8CE5>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT5_NV [

	<enum: #'GL_COLOR_ATTACHMENT5_NV'>
	<value: 16r8CE5>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT5_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT6 [

	<enum: #'GL_COLOR_ATTACHMENT6'>
	<value: 16r8CE6>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT6_EXT [

	<enum: #'GL_COLOR_ATTACHMENT6_EXT'>
	<value: 16r8CE6>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT6_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT6_NV [

	<enum: #'GL_COLOR_ATTACHMENT6_NV'>
	<value: 16r8CE6>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT6_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT7 [

	<enum: #'GL_COLOR_ATTACHMENT7'>
	<value: 16r8CE7>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT7
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT7_EXT [

	<enum: #'GL_COLOR_ATTACHMENT7_EXT'>
	<value: 16r8CE7>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT7_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT7_NV [

	<enum: #'GL_COLOR_ATTACHMENT7_NV'>
	<value: 16r8CE7>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT7_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT8 [

	<enum: #'GL_COLOR_ATTACHMENT8'>
	<value: 16r8CE8>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT8_EXT [

	<enum: #'GL_COLOR_ATTACHMENT8_EXT'>
	<value: 16r8CE8>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT8_NV [

	<enum: #'GL_COLOR_ATTACHMENT8_NV'>
	<value: 16r8CE8>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT9 [

	<enum: #'GL_COLOR_ATTACHMENT9'>
	<value: 16r8CE9>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #FramebufferAttachment #InvalidateFramebufferAttachment #ReadBufferMode)>
	^ GL_COLOR_ATTACHMENT9
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT9_EXT [

	<enum: #'GL_COLOR_ATTACHMENT9_EXT'>
	<value: 16r8CE9>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT9_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT9_NV [

	<enum: #'GL_COLOR_ATTACHMENT9_NV'>
	<value: 16r8CE9>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#DrawBufferModeATI #InvalidateFramebufferAttachment)>
	^ GL_COLOR_ATTACHMENT9_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ATTACHMENT_EXT [

	<enum: #'GL_COLOR_ATTACHMENT_EXT'>
	<value: 16r90F0>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COLOR_ATTACHMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT [

	<enum: #'GL_COLOR_BUFFER_BIT'>
	<value: 2r100000000000000>
	<bitmask>
	<groups: #(#AttribMask #ClearBufferMask)>
	^ GL_COLOR_BUFFER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT0_QCOM [

	<enum: #'GL_COLOR_BUFFER_BIT0_QCOM'>
	<value: 2r1>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_COLOR_BUFFER_BIT0_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT1_QCOM [

	<enum: #'GL_COLOR_BUFFER_BIT1_QCOM'>
	<value: 2r10>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_COLOR_BUFFER_BIT1_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT2_QCOM [

	<enum: #'GL_COLOR_BUFFER_BIT2_QCOM'>
	<value: 2r100>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_COLOR_BUFFER_BIT2_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT3_QCOM [

	<enum: #'GL_COLOR_BUFFER_BIT3_QCOM'>
	<value: 2r1000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_COLOR_BUFFER_BIT3_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT4_QCOM [

	<enum: #'GL_COLOR_BUFFER_BIT4_QCOM'>
	<value: 2r10000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_COLOR_BUFFER_BIT4_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT5_QCOM [

	<enum: #'GL_COLOR_BUFFER_BIT5_QCOM'>
	<value: 2r100000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_COLOR_BUFFER_BIT5_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT6_QCOM [

	<enum: #'GL_COLOR_BUFFER_BIT6_QCOM'>
	<value: 2r1000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_COLOR_BUFFER_BIT6_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_BUFFER_BIT7_QCOM [

	<enum: #'GL_COLOR_BUFFER_BIT7_QCOM'>
	<value: 2r10000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_COLOR_BUFFER_BIT7_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_CLEAR_UNCLAMPED_VALUE_ATI [

	<enum: #'GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI'>
	<value: 16r8835>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_CLEAR_VALUE [

	<enum: #'GL_COLOR_CLEAR_VALUE'>
	<value: 16rC22>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_COLOR_CLEAR_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_COMPONENTS [

	<enum: #'GL_COLOR_COMPONENTS'>
	<value: 16r8283>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_COLOR_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_ENCODING [

	<enum: #'GL_COLOR_ENCODING'>
	<value: 16r8296>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_COLOR_ENCODING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_EXT [

	<enum: #'GL_COLOR_EXT'>
	<value: 16r1800>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelCopyType)>
	^ GL_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_FLOAT_APPLE [

	<enum: #'GL_COLOR_FLOAT_APPLE'>
	<value: 16r8A0F>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_COLOR_FLOAT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_INDEX [

	<enum: #'GL_COLOR_INDEX'>
	<value: 16r1900>
	<vendor: #ARB>
	<groups: #(#PixelFormat)>
	^ GL_COLOR_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_INDEX12_EXT [

	<enum: #'GL_COLOR_INDEX12_EXT'>
	<value: 16r80E6>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_COLOR_INDEX12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_INDEX16_EXT [

	<enum: #'GL_COLOR_INDEX16_EXT'>
	<value: 16r80E7>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_COLOR_INDEX16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_INDEX1_EXT [

	<enum: #'GL_COLOR_INDEX1_EXT'>
	<value: 16r80E2>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_COLOR_INDEX1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_INDEX2_EXT [

	<enum: #'GL_COLOR_INDEX2_EXT'>
	<value: 16r80E3>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_COLOR_INDEX2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_INDEX4_EXT [

	<enum: #'GL_COLOR_INDEX4_EXT'>
	<value: 16r80E4>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_COLOR_INDEX4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_INDEX8_EXT [

	<enum: #'GL_COLOR_INDEX8_EXT'>
	<value: 16r80E5>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_COLOR_INDEX8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_INDEXES [

	<enum: #'GL_COLOR_INDEXES'>
	<value: 16r1603>
	<vendor: #ARB>
	<groups: #(#MaterialParameter)>
	^ GL_COLOR_INDEXES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_LOGIC_OP [

	<enum: #'GL_COLOR_LOGIC_OP'>
	<value: 16rBF2>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_COLOR_LOGIC_OP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_MATERIAL [

	<enum: #'GL_COLOR_MATERIAL'>
	<value: 16rB57>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_COLOR_MATERIAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_MATERIAL_FACE [

	<enum: #'GL_COLOR_MATERIAL_FACE'>
	<value: 16rB55>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_COLOR_MATERIAL_FACE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_MATERIAL_PARAMETER [

	<enum: #'GL_COLOR_MATERIAL_PARAMETER'>
	<value: 16rB56>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_COLOR_MATERIAL_PARAMETER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_MATRIX [

	<enum: #'GL_COLOR_MATRIX'>
	<value: 16r80B1>
	<vendor: #ARB>
	^ GL_COLOR_MATRIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_MATRIX_SGI [

	<enum: #'GL_COLOR_MATRIX_SGI'>
	<value: 16r80B1>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName)>
	^ GL_COLOR_MATRIX_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_MATRIX_STACK_DEPTH [

	<enum: #'GL_COLOR_MATRIX_STACK_DEPTH'>
	<value: 16r80B2>
	<vendor: #ARB>
	^ GL_COLOR_MATRIX_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_MATRIX_STACK_DEPTH_SGI [

	<enum: #'GL_COLOR_MATRIX_STACK_DEPTH_SGI'>
	<value: 16r80B2>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName)>
	^ GL_COLOR_MATRIX_STACK_DEPTH_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_RENDERABLE [

	<enum: #'GL_COLOR_RENDERABLE'>
	<value: 16r8286>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_COLOR_RENDERABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_SAMPLES_NV [

	<enum: #'GL_COLOR_SAMPLES_NV'>
	<value: 16r8E20>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COLOR_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_SUM [

	<enum: #'GL_COLOR_SUM'>
	<value: 16r8458>
	<vendor: #SGI>
	^ GL_COLOR_SUM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_SUM_ARB [

	<enum: #'GL_COLOR_SUM_ARB'>
	<value: 16r8458>
	<vendor: #SGI>
	<suffix: #ARB>
	^ GL_COLOR_SUM_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_SUM_CLAMP_NV [

	<enum: #'GL_COLOR_SUM_CLAMP_NV'>
	<value: 16r854F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COLOR_SUM_CLAMP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_SUM_EXT [

	<enum: #'GL_COLOR_SUM_EXT'>
	<value: 16r8458>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_COLOR_SUM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE [

	<enum: #'GL_COLOR_TABLE'>
	<value: 16r80D0>
	<vendor: #SGI>
	<groups: #(#ColorTableTarget #ColorTableTargetSGI #EnableCap)>
	^ GL_COLOR_TABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_ALPHA_SIZE [

	<enum: #'GL_COLOR_TABLE_ALPHA_SIZE'>
	<value: 16r80DD>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_ALPHA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_ALPHA_SIZE_SGI [

	<enum: #'GL_COLOR_TABLE_ALPHA_SIZE_SGI'>
	<value: 16r80DD>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_ALPHA_SIZE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_BIAS [

	<enum: #'GL_COLOR_TABLE_BIAS'>
	<value: 16r80D7>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_BIAS_SGI [

	<enum: #'GL_COLOR_TABLE_BIAS_SGI'>
	<value: 16r80D7>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_BIAS_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_BLUE_SIZE [

	<enum: #'GL_COLOR_TABLE_BLUE_SIZE'>
	<value: 16r80DC>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_BLUE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_BLUE_SIZE_SGI [

	<enum: #'GL_COLOR_TABLE_BLUE_SIZE_SGI'>
	<value: 16r80DC>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_BLUE_SIZE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_FORMAT [

	<enum: #'GL_COLOR_TABLE_FORMAT'>
	<value: 16r80D8>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_FORMAT_SGI [

	<enum: #'GL_COLOR_TABLE_FORMAT_SGI'>
	<value: 16r80D8>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_FORMAT_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_GREEN_SIZE [

	<enum: #'GL_COLOR_TABLE_GREEN_SIZE'>
	<value: 16r80DB>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_GREEN_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_GREEN_SIZE_SGI [

	<enum: #'GL_COLOR_TABLE_GREEN_SIZE_SGI'>
	<value: 16r80DB>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_GREEN_SIZE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_INTENSITY_SIZE [

	<enum: #'GL_COLOR_TABLE_INTENSITY_SIZE'>
	<value: 16r80DF>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_INTENSITY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_INTENSITY_SIZE_SGI [

	<enum: #'GL_COLOR_TABLE_INTENSITY_SIZE_SGI'>
	<value: 16r80DF>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_INTENSITY_SIZE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_LUMINANCE_SIZE [

	<enum: #'GL_COLOR_TABLE_LUMINANCE_SIZE'>
	<value: 16r80DE>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_LUMINANCE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_LUMINANCE_SIZE_SGI [

	<enum: #'GL_COLOR_TABLE_LUMINANCE_SIZE_SGI'>
	<value: 16r80DE>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_RED_SIZE [

	<enum: #'GL_COLOR_TABLE_RED_SIZE'>
	<value: 16r80DA>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_RED_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_RED_SIZE_SGI [

	<enum: #'GL_COLOR_TABLE_RED_SIZE_SGI'>
	<value: 16r80DA>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_RED_SIZE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_SCALE [

	<enum: #'GL_COLOR_TABLE_SCALE'>
	<value: 16r80D6>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_SCALE_SGI [

	<enum: #'GL_COLOR_TABLE_SCALE_SGI'>
	<value: 16r80D6>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_SCALE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_SGI [

	<enum: #'GL_COLOR_TABLE_SGI'>
	<value: 16r80D0>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableTargetSGI #EnableCap #GetPName)>
	^ GL_COLOR_TABLE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_WIDTH [

	<enum: #'GL_COLOR_TABLE_WIDTH'>
	<value: 16r80D9>
	<vendor: #SGI>
	<groups: #(#ColorTableParameterPName #ColorTableParameterPNameSGI #GetColorTableParameterPName #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_TABLE_WIDTH_SGI [

	<enum: #'GL_COLOR_TABLE_WIDTH_SGI'>
	<value: 16r80D9>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableParameterPNameSGI #GetColorTableParameterPNameSGI)>
	^ GL_COLOR_TABLE_WIDTH_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COLOR_WRITEMASK [

	<enum: #'GL_COLOR_WRITEMASK'>
	<value: 16rC23>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_COLOR_WRITEMASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE [

	<enum: #'GL_COMBINE'>
	<value: 16r8570>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE4_NV [

	<enum: #'GL_COMBINE4_NV'>
	<value: 16r8503>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINE4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER0_NV [

	<enum: #'GL_COMBINER0_NV'>
	<value: 16r8550>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerStageNV)>
	^ GL_COMBINER0_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER1_NV [

	<enum: #'GL_COMBINER1_NV'>
	<value: 16r8551>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerStageNV)>
	^ GL_COMBINER1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER2_NV [

	<enum: #'GL_COMBINER2_NV'>
	<value: 16r8552>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerStageNV)>
	^ GL_COMBINER2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER3_NV [

	<enum: #'GL_COMBINER3_NV'>
	<value: 16r8553>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerStageNV)>
	^ GL_COMBINER3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER4_NV [

	<enum: #'GL_COMBINER4_NV'>
	<value: 16r8554>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerStageNV)>
	^ GL_COMBINER4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER5_NV [

	<enum: #'GL_COMBINER5_NV'>
	<value: 16r8555>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerStageNV)>
	^ GL_COMBINER5_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER6_NV [

	<enum: #'GL_COMBINER6_NV'>
	<value: 16r8556>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerStageNV)>
	^ GL_COMBINER6_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER7_NV [

	<enum: #'GL_COMBINER7_NV'>
	<value: 16r8557>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerStageNV)>
	^ GL_COMBINER7_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_AB_DOT_PRODUCT_NV [

	<enum: #'GL_COMBINER_AB_DOT_PRODUCT_NV'>
	<value: 16r8545>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINER_AB_DOT_PRODUCT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_AB_OUTPUT_NV [

	<enum: #'GL_COMBINER_AB_OUTPUT_NV'>
	<value: 16r854A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINER_AB_OUTPUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_BIAS_NV [

	<enum: #'GL_COMBINER_BIAS_NV'>
	<value: 16r8549>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINER_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_CD_DOT_PRODUCT_NV [

	<enum: #'GL_COMBINER_CD_DOT_PRODUCT_NV'>
	<value: 16r8546>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINER_CD_DOT_PRODUCT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_CD_OUTPUT_NV [

	<enum: #'GL_COMBINER_CD_OUTPUT_NV'>
	<value: 16r854B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINER_CD_OUTPUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_COMPONENT_USAGE_NV [

	<enum: #'GL_COMBINER_COMPONENT_USAGE_NV'>
	<value: 16r8544>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerParameterNV)>
	^ GL_COMBINER_COMPONENT_USAGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_INPUT_NV [

	<enum: #'GL_COMBINER_INPUT_NV'>
	<value: 16r8542>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerParameterNV)>
	^ GL_COMBINER_INPUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_MAPPING_NV [

	<enum: #'GL_COMBINER_MAPPING_NV'>
	<value: 16r8543>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerParameterNV)>
	^ GL_COMBINER_MAPPING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_MUX_SUM_NV [

	<enum: #'GL_COMBINER_MUX_SUM_NV'>
	<value: 16r8547>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINER_MUX_SUM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_SCALE_NV [

	<enum: #'GL_COMBINER_SCALE_NV'>
	<value: 16r8548>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINER_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINER_SUM_OUTPUT_NV [

	<enum: #'GL_COMBINER_SUM_OUTPUT_NV'>
	<value: 16r854C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMBINER_SUM_OUTPUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE_ALPHA [

	<enum: #'GL_COMBINE_ALPHA'>
	<value: 16r8572>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE_ALPHA_ARB [

	<enum: #'GL_COMBINE_ALPHA_ARB'>
	<value: 16r8572>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE_ALPHA_EXT [

	<enum: #'GL_COMBINE_ALPHA_EXT'>
	<value: 16r8572>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE_ARB [

	<enum: #'GL_COMBINE_ARB'>
	<value: 16r8570>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE_EXT [

	<enum: #'GL_COMBINE_EXT'>
	<value: 16r8570>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE_RGB [

	<enum: #'GL_COMBINE_RGB'>
	<value: 16r8571>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE_RGB_ARB [

	<enum: #'GL_COMBINE_RGB_ARB'>
	<value: 16r8571>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMBINE_RGB_EXT [

	<enum: #'GL_COMBINE_RGB_EXT'>
	<value: 16r8571>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_COMBINE_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMMAND_BARRIER_BIT [

	<enum: #'GL_COMMAND_BARRIER_BIT'>
	<value: 2r1000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_COMMAND_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMMAND_BARRIER_BIT_EXT [

	<enum: #'GL_COMMAND_BARRIER_BIT_EXT'>
	<value: 2r1000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_COMMAND_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPARE_REF_DEPTH_TO_TEXTURE_EXT [

	<enum: #'GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT'>
	<value: 16r884E>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPARE_REF_TO_TEXTURE [

	<enum: #'GL_COMPARE_REF_TO_TEXTURE'>
	<value: 16r884E>
	<vendor: #ARB>
	<groups: #(#TextureCompareMode)>
	^ GL_COMPARE_REF_TO_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPARE_REF_TO_TEXTURE_EXT [

	<enum: #'GL_COMPARE_REF_TO_TEXTURE_EXT'>
	<value: 16r884E>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_COMPARE_REF_TO_TEXTURE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPARE_R_TO_TEXTURE [

	<enum: #'GL_COMPARE_R_TO_TEXTURE'>
	<value: 16r884E>
	<vendor: #ARB>
	<groups: #(#TextureCompareMode)>
	^ GL_COMPARE_R_TO_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPARE_R_TO_TEXTURE_ARB [

	<enum: #'GL_COMPARE_R_TO_TEXTURE_ARB'>
	<value: 16r884E>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPARE_R_TO_TEXTURE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPATIBLE_SUBROUTINES [

	<enum: #'GL_COMPATIBLE_SUBROUTINES'>
	<value: 16r8E4B>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty #SubroutineParameterName)>
	^ GL_COMPATIBLE_SUBROUTINES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPILE [

	<enum: #'GL_COMPILE'>
	<value: 16r1300>
	<vendor: #ARB>
	<groups: #(#ListMode)>
	^ GL_COMPILE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPILE_AND_EXECUTE [

	<enum: #'GL_COMPILE_AND_EXECUTE'>
	<value: 16r1301>
	<vendor: #ARB>
	<groups: #(#ListMode)>
	^ GL_COMPILE_AND_EXECUTE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPILE_STATUS [

	<enum: #'GL_COMPILE_STATUS'>
	<value: 16r8B81>
	<vendor: #ARB>
	<groups: #(#ShaderParameterName)>
	^ GL_COMPILE_STATUS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPLETION_STATUS_ARB [

	<enum: #'GL_COMPLETION_STATUS_ARB'>
	<value: 16r91B1>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_COMPLETION_STATUS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPLETION_STATUS_KHR [

	<enum: #'GL_COMPLETION_STATUS_KHR'>
	<value: 16r91B1>
	<vendor: #AMD>
	<suffix: #KHR>
	^ GL_COMPLETION_STATUS_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_ALPHA [

	<enum: #'GL_COMPRESSED_ALPHA'>
	<value: 16r84E9>
	<vendor: #ARB>
	^ GL_COMPRESSED_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_ALPHA_ARB [

	<enum: #'GL_COMPRESSED_ALPHA_ARB'>
	<value: 16r84E9>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPRESSED_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_INTENSITY [

	<enum: #'GL_COMPRESSED_INTENSITY'>
	<value: 16r84EC>
	<vendor: #ARB>
	^ GL_COMPRESSED_INTENSITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_INTENSITY_ARB [

	<enum: #'GL_COMPRESSED_INTENSITY_ARB'>
	<value: 16r84EC>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPRESSED_INTENSITY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_LUMINANCE [

	<enum: #'GL_COMPRESSED_LUMINANCE'>
	<value: 16r84EA>
	<vendor: #ARB>
	^ GL_COMPRESSED_LUMINANCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_LUMINANCE_ALPHA [

	<enum: #'GL_COMPRESSED_LUMINANCE_ALPHA'>
	<value: 16r84EB>
	<vendor: #ARB>
	^ GL_COMPRESSED_LUMINANCE_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_LUMINANCE_ALPHA_3DC_ATI [

	<enum: #'GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI'>
	<value: 16r8837>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_LUMINANCE_ALPHA_ARB [

	<enum: #'GL_COMPRESSED_LUMINANCE_ALPHA_ARB'>
	<value: 16r84EB>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPRESSED_LUMINANCE_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT [

	<enum: #'GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT'>
	<value: 16r8C72>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_LUMINANCE_ARB [

	<enum: #'GL_COMPRESSED_LUMINANCE_ARB'>
	<value: 16r84EA>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPRESSED_LUMINANCE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_LUMINANCE_LATC1_EXT [

	<enum: #'GL_COMPRESSED_LUMINANCE_LATC1_EXT'>
	<value: 16r8C70>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COMPRESSED_LUMINANCE_LATC1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_R11_EAC [

	<enum: #'GL_COMPRESSED_R11_EAC'>
	<value: 16r9270>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_R11_EAC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_R11_EAC_OES [

	<enum: #'GL_COMPRESSED_R11_EAC_OES'>
	<value: 16r9270>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_R11_EAC_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RED [

	<enum: #'GL_COMPRESSED_RED'>
	<value: 16r8225>
	<vendor: #ARB>
	<groups: #(#InternalFormat)>
	^ GL_COMPRESSED_RED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RED_GREEN_RGTC2_EXT [

	<enum: #'GL_COMPRESSED_RED_GREEN_RGTC2_EXT'>
	<value: 16r8DBD>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RED_GREEN_RGTC2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RED_RGTC1 [

	<enum: #'GL_COMPRESSED_RED_RGTC1'>
	<value: 16r8DBB>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RED_RGTC1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RED_RGTC1_EXT [

	<enum: #'GL_COMPRESSED_RED_RGTC1_EXT'>
	<value: 16r8DBB>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RED_RGTC1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RG [

	<enum: #'GL_COMPRESSED_RG'>
	<value: 16r8226>
	<vendor: #ARB>
	<groups: #(#InternalFormat)>
	^ GL_COMPRESSED_RG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RG11_EAC [

	<enum: #'GL_COMPRESSED_RG11_EAC'>
	<value: 16r9272>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RG11_EAC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RG11_EAC_OES [

	<enum: #'GL_COMPRESSED_RG11_EAC_OES'>
	<value: 16r9272>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RG11_EAC_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB [

	<enum: #'GL_COMPRESSED_RGB'>
	<value: 16r84ED>
	<vendor: #ARB>
	<groups: #(#InternalFormat)>
	^ GL_COMPRESSED_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB8_ETC2 [

	<enum: #'GL_COMPRESSED_RGB8_ETC2'>
	<value: 16r9274>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB8_ETC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB8_ETC2_OES [

	<enum: #'GL_COMPRESSED_RGB8_ETC2_OES'>
	<value: 16r9274>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB8_ETC2_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 [

	<enum: #'GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2'>
	<value: 16r9276>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES [

	<enum: #'GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES'>
	<value: 16r9276>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA [

	<enum: #'GL_COMPRESSED_RGBA'>
	<value: 16r84EE>
	<vendor: #ARB>
	<groups: #(#InternalFormat)>
	^ GL_COMPRESSED_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA8_ETC2_EAC [

	<enum: #'GL_COMPRESSED_RGBA8_ETC2_EAC'>
	<value: 16r9278>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA8_ETC2_EAC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA8_ETC2_EAC_OES [

	<enum: #'GL_COMPRESSED_RGBA8_ETC2_EAC_OES'>
	<value: 16r9278>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA8_ETC2_EAC_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ARB [

	<enum: #'GL_COMPRESSED_RGBA_ARB'>
	<value: 16r84EE>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPRESSED_RGBA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_10x10 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_10x10'>
	<value: 16r93BB>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_10x10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_10x10_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_10x10_KHR'>
	<value: 16r93BB>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_10x10_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_10x5 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_10x5'>
	<value: 16r93B8>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_10x5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_10x5_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_10x5_KHR'>
	<value: 16r93B8>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_10x5_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_10x6 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_10x6'>
	<value: 16r93B9>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_10x6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_10x6_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_10x6_KHR'>
	<value: 16r93B9>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_10x6_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_10x8 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_10x8'>
	<value: 16r93BA>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_10x8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_10x8_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_10x8_KHR'>
	<value: 16r93BA>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_10x8_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_12x10 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_12x10'>
	<value: 16r93BC>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_12x10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_12x10_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_12x10_KHR'>
	<value: 16r93BC>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_12x10_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_12x12 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_12x12'>
	<value: 16r93BD>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_12x12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_12x12_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_12x12_KHR'>
	<value: 16r93BD>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_12x12_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_3x3x3_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_3x3x3_OES'>
	<value: 16r93C0>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_3x3x3_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_4x3x3_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_4x3x3_OES'>
	<value: 16r93C1>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_4x3x3_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_4x4 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_4x4'>
	<value: 16r93B0>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_4x4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_4x4_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_4x4_KHR'>
	<value: 16r93B0>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_4x4_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_4x4x3_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_4x4x3_OES'>
	<value: 16r93C2>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_4x4x3_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_4x4x4_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_4x4x4_OES'>
	<value: 16r93C3>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_4x4x4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_5x4 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_5x4'>
	<value: 16r93B1>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_5x4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_5x4_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_5x4_KHR'>
	<value: 16r93B1>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_5x4_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_5x4x4_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_5x4x4_OES'>
	<value: 16r93C4>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_5x4x4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_5x5 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_5x5'>
	<value: 16r93B2>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_5x5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_5x5_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_5x5_KHR'>
	<value: 16r93B2>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_5x5_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_5x5x4_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_5x5x4_OES'>
	<value: 16r93C5>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_5x5x4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_5x5x5_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_5x5x5_OES'>
	<value: 16r93C6>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_5x5x5_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_6x5 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_6x5'>
	<value: 16r93B3>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_6x5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_6x5_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_6x5_KHR'>
	<value: 16r93B3>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_6x5_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_6x5x5_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_6x5x5_OES'>
	<value: 16r93C7>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_6x5x5_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_6x6 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_6x6'>
	<value: 16r93B4>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_6x6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_6x6_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_6x6_KHR'>
	<value: 16r93B4>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_6x6_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_6x6x5_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_6x6x5_OES'>
	<value: 16r93C8>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_6x6x5_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_6x6x6_OES [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_6x6x6_OES'>
	<value: 16r93C9>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_6x6x6_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_8x5 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_8x5'>
	<value: 16r93B5>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_8x5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_8x5_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_8x5_KHR'>
	<value: 16r93B5>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_8x5_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_8x6 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_8x6'>
	<value: 16r93B6>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_8x6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_8x6_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_8x6_KHR'>
	<value: 16r93B6>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_8x6_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_8x8 [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_8x8'>
	<value: 16r93B7>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_8x8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_ASTC_8x8_KHR [

	<enum: #'GL_COMPRESSED_RGBA_ASTC_8x8_KHR'>
	<value: 16r93B7>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_ASTC_8x8_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_BPTC_UNORM [

	<enum: #'GL_COMPRESSED_RGBA_BPTC_UNORM'>
	<value: 16r8E8C>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_BPTC_UNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_BPTC_UNORM_ARB [

	<enum: #'GL_COMPRESSED_RGBA_BPTC_UNORM_ARB'>
	<value: 16r8E8C>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_BPTC_UNORM_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_BPTC_UNORM_EXT [

	<enum: #'GL_COMPRESSED_RGBA_BPTC_UNORM_EXT'>
	<value: 16r8E8C>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_BPTC_UNORM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_FXT1_3DFX [

	<enum: #'GL_COMPRESSED_RGBA_FXT1_3DFX'>
	<value: 16r86B1>
	<vendor: #'3DFX'>
	<suffix: #'3DFX'>
	^ GL_COMPRESSED_RGBA_FXT1_3DFX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_PVRTC_2BPPV1_IMG [

	<enum: #'GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG'>
	<value: 16r8C03>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_PVRTC_2BPPV2_IMG [

	<enum: #'GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG'>
	<value: 16r9137>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_PVRTC_4BPPV1_IMG [

	<enum: #'GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG'>
	<value: 16r8C02>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_PVRTC_4BPPV2_IMG [

	<enum: #'GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG'>
	<value: 16r9138>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_S3TC_DXT1_EXT [

	<enum: #'GL_COMPRESSED_RGBA_S3TC_DXT1_EXT'>
	<value: 16r83F1>
	<vendor: #INTEL>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_S3TC_DXT3_ANGLE [

	<enum: #'GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE'>
	<value: 16r83F2>
	<vendor: #INTEL>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_S3TC_DXT3_EXT [

	<enum: #'GL_COMPRESSED_RGBA_S3TC_DXT3_EXT'>
	<value: 16r83F2>
	<vendor: #INTEL>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_S3TC_DXT5_ANGLE [

	<enum: #'GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE'>
	<value: 16r83F3>
	<vendor: #INTEL>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGBA_S3TC_DXT5_EXT [

	<enum: #'GL_COMPRESSED_RGBA_S3TC_DXT5_EXT'>
	<value: 16r83F3>
	<vendor: #INTEL>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_ARB [

	<enum: #'GL_COMPRESSED_RGB_ARB'>
	<value: 16r84ED>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPRESSED_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_BPTC_SIGNED_FLOAT [

	<enum: #'GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT'>
	<value: 16r8E8E>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB [

	<enum: #'GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB'>
	<value: 16r8E8E>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT [

	<enum: #'GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT'>
	<value: 16r8E8E>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT [

	<enum: #'GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT'>
	<value: 16r8E8F>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB [

	<enum: #'GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB'>
	<value: 16r8E8F>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT [

	<enum: #'GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT'>
	<value: 16r8E8F>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_FXT1_3DFX [

	<enum: #'GL_COMPRESSED_RGB_FXT1_3DFX'>
	<value: 16r86B0>
	<vendor: #'3DFX'>
	<suffix: #'3DFX'>
	^ GL_COMPRESSED_RGB_FXT1_3DFX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_PVRTC_2BPPV1_IMG [

	<enum: #'GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG'>
	<value: 16r8C01>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_PVRTC_4BPPV1_IMG [

	<enum: #'GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG'>
	<value: 16r8C00>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RGB_S3TC_DXT1_EXT [

	<enum: #'GL_COMPRESSED_RGB_S3TC_DXT1_EXT'>
	<value: 16r83F0>
	<vendor: #INTEL>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RGB_S3TC_DXT1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_RG_RGTC2 [

	<enum: #'GL_COMPRESSED_RG_RGTC2'>
	<value: 16r8DBD>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_RG_RGTC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT [

	<enum: #'GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT'>
	<value: 16r8C73>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT [

	<enum: #'GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT'>
	<value: 16r8C71>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_R11_EAC [

	<enum: #'GL_COMPRESSED_SIGNED_R11_EAC'>
	<value: 16r9271>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SIGNED_R11_EAC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_R11_EAC_OES [

	<enum: #'GL_COMPRESSED_SIGNED_R11_EAC_OES'>
	<value: 16r9271>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SIGNED_R11_EAC_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT [

	<enum: #'GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT'>
	<value: 16r8DBE>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_RED_RGTC1 [

	<enum: #'GL_COMPRESSED_SIGNED_RED_RGTC1'>
	<value: 16r8DBC>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SIGNED_RED_RGTC1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_RED_RGTC1_EXT [

	<enum: #'GL_COMPRESSED_SIGNED_RED_RGTC1_EXT'>
	<value: 16r8DBC>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_RG11_EAC [

	<enum: #'GL_COMPRESSED_SIGNED_RG11_EAC'>
	<value: 16r9273>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SIGNED_RG11_EAC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_RG11_EAC_OES [

	<enum: #'GL_COMPRESSED_SIGNED_RG11_EAC_OES'>
	<value: 16r9273>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SIGNED_RG11_EAC_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SIGNED_RG_RGTC2 [

	<enum: #'GL_COMPRESSED_SIGNED_RG_RGTC2'>
	<value: 16r8DBE>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SIGNED_RG_RGTC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SLUMINANCE [

	<enum: #'GL_COMPRESSED_SLUMINANCE'>
	<value: 16r8C4A>
	<vendor: #NV>
	^ GL_COMPRESSED_SLUMINANCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SLUMINANCE_ALPHA [

	<enum: #'GL_COMPRESSED_SLUMINANCE_ALPHA'>
	<value: 16r8C4B>
	<vendor: #NV>
	^ GL_COMPRESSED_SLUMINANCE_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SLUMINANCE_ALPHA_EXT [

	<enum: #'GL_COMPRESSED_SLUMINANCE_ALPHA_EXT'>
	<value: 16r8C4B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SLUMINANCE_EXT [

	<enum: #'GL_COMPRESSED_SLUMINANCE_EXT'>
	<value: 16r8C4A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COMPRESSED_SLUMINANCE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB [

	<enum: #'GL_COMPRESSED_SRGB'>
	<value: 16r8C48>
	<vendor: #NV>
	<groups: #(#InternalFormat)>
	^ GL_COMPRESSED_SRGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10'>
	<value: 16r93DB>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR'>
	<value: 16r93DB>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5'>
	<value: 16r93D8>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR'>
	<value: 16r93D8>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6'>
	<value: 16r93D9>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR'>
	<value: 16r93D9>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8'>
	<value: 16r93DA>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR'>
	<value: 16r93DA>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10'>
	<value: 16r93DC>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR'>
	<value: 16r93DC>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12'>
	<value: 16r93DD>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR'>
	<value: 16r93DD>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES'>
	<value: 16r93E0>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES'>
	<value: 16r93E1>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4'>
	<value: 16r93D0>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR'>
	<value: 16r93D0>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES'>
	<value: 16r93E2>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES'>
	<value: 16r93E3>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4'>
	<value: 16r93D1>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR'>
	<value: 16r93D1>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES'>
	<value: 16r93E4>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5'>
	<value: 16r93D2>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR'>
	<value: 16r93D2>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES'>
	<value: 16r93E5>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES'>
	<value: 16r93E6>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5'>
	<value: 16r93D3>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR'>
	<value: 16r93D3>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES'>
	<value: 16r93E7>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6'>
	<value: 16r93D4>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR'>
	<value: 16r93D4>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES'>
	<value: 16r93E8>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES'>
	<value: 16r93E9>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5'>
	<value: 16r93D5>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR'>
	<value: 16r93D5>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6'>
	<value: 16r93D6>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR'>
	<value: 16r93D6>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8'>
	<value: 16r93D7>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR'>
	<value: 16r93D7>
	<vendor: #OES>
	<suffix: #KHR>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ETC2_EAC [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC'>
	<value: 16r9279>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES'>
	<value: 16r9279>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ETC2 [

	<enum: #'GL_COMPRESSED_SRGB8_ETC2'>
	<value: 16r9275>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ETC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_ETC2_OES [

	<enum: #'GL_COMPRESSED_SRGB8_ETC2_OES'>
	<value: 16r9275>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_ETC2_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 [

	<enum: #'GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2'>
	<value: 16r9277>
	<vendor: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES [

	<enum: #'GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES'>
	<value: 16r9277>
	<vendor: #OES>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA'>
	<value: 16r8C49>
	<vendor: #NV>
	<groups: #(#InternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_BPTC_UNORM [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM'>
	<value: 16r8E8D>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB'>
	<value: 16r8E8D>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT'>
	<value: 16r8E8D>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_EXT [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_EXT'>
	<value: 16r8C49>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COMPRESSED_SRGB_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT'>
	<value: 16r8A56>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG'>
	<value: 16r93F0>
	<vendor: #APPLE>
	<suffix: #IMG>
	^ GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT'>
	<value: 16r8A57>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG'>
	<value: 16r93F1>
	<vendor: #APPLE>
	<suffix: #IMG>
	^ GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT'>
	<value: 16r8C4D>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV'>
	<value: 16r8C4D>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT'>
	<value: 16r8C4E>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV'>
	<value: 16r8C4E>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT'>
	<value: 16r8C4F>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV [

	<enum: #'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV'>
	<value: 16r8C4F>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_EXT [

	<enum: #'GL_COMPRESSED_SRGB_EXT'>
	<value: 16r8C48>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_COMPRESSED_SRGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_PVRTC_2BPPV1_EXT [

	<enum: #'GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT'>
	<value: 16r8A54>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_PVRTC_4BPPV1_EXT [

	<enum: #'GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT'>
	<value: 16r8A55>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_S3TC_DXT1_EXT [

	<enum: #'GL_COMPRESSED_SRGB_S3TC_DXT1_EXT'>
	<value: 16r8C4C>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_SRGB_S3TC_DXT1_NV [

	<enum: #'GL_COMPRESSED_SRGB_S3TC_DXT1_NV'>
	<value: 16r8C4C>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_COMPRESSED_SRGB_S3TC_DXT1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_TEXTURE_FORMATS [

	<enum: #'GL_COMPRESSED_TEXTURE_FORMATS'>
	<value: 16r86A3>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_COMPRESSED_TEXTURE_FORMATS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPRESSED_TEXTURE_FORMATS_ARB [

	<enum: #'GL_COMPRESSED_TEXTURE_FORMATS_ARB'>
	<value: 16r86A3>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPRESSED_TEXTURE_FORMATS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_PROGRAM_NV [

	<enum: #'GL_COMPUTE_PROGRAM_NV'>
	<value: 16r90FB>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#ProgramTarget)>
	^ GL_COMPUTE_PROGRAM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_PROGRAM_PARAMETER_BUFFER_NV [

	<enum: #'GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV'>
	<value: 16r90FC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_SHADER [

	<enum: #'GL_COMPUTE_SHADER'>
	<value: 16r91B9>
	<vendor: #AMD>
	<groups: #(#ShaderType)>
	^ GL_COMPUTE_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_SHADER_BIT [

	<enum: #'GL_COMPUTE_SHADER_BIT'>
	<value: 2r100000>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_COMPUTE_SHADER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_SHADER_INVOCATIONS [

	<enum: #'GL_COMPUTE_SHADER_INVOCATIONS'>
	<value: 16r82F5>
	<vendor: #ARB>
	^ GL_COMPUTE_SHADER_INVOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_SHADER_INVOCATIONS_ARB [

	<enum: #'GL_COMPUTE_SHADER_INVOCATIONS_ARB'>
	<value: 16r82F5>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_COMPUTE_SHADER_INVOCATIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_SUBROUTINE [

	<enum: #'GL_COMPUTE_SUBROUTINE'>
	<value: 16r92ED>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_COMPUTE_SUBROUTINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_SUBROUTINE_UNIFORM [

	<enum: #'GL_COMPUTE_SUBROUTINE_UNIFORM'>
	<value: 16r92F3>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_COMPUTE_SUBROUTINE_UNIFORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_TEXTURE [

	<enum: #'GL_COMPUTE_TEXTURE'>
	<value: 16r82A0>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_COMPUTE_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMPUTE_WORK_GROUP_SIZE [

	<enum: #'GL_COMPUTE_WORK_GROUP_SIZE'>
	<value: 16r8267>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB)>
	^ GL_COMPUTE_WORK_GROUP_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COMP_BIT_ATI [

	<enum: #'GL_COMP_BIT_ATI'>
	<value: 2r10>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderColorModMaskATI)>
	^ GL_COMP_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONDITION_SATISFIED [

	<enum: #'GL_CONDITION_SATISFIED'>
	<value: 16r911C>
	<vendor: #ARB>
	<groups: #(#SyncStatus)>
	^ GL_CONDITION_SATISFIED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONDITION_SATISFIED_APPLE [

	<enum: #'GL_CONDITION_SATISFIED_APPLE'>
	<value: 16r911C>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_CONDITION_SATISFIED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONFORMANT_NV [

	<enum: #'GL_CONFORMANT_NV'>
	<value: 16r9374>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONFORMANT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONIC_CURVE_TO_NV [

	<enum: #'GL_CONIC_CURVE_TO_NV'>
	<value: 16r1A>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_CONIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONJOINT_NV [

	<enum: #'GL_CONJOINT_NV'>
	<value: 16r9284>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONJOINT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTERIZATION_INTEL [

	<enum: #'GL_CONSERVATIVE_RASTERIZATION_INTEL'>
	<value: 16r83FE>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_CONSERVATIVE_RASTERIZATION_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTERIZATION_NV [

	<enum: #'GL_CONSERVATIVE_RASTERIZATION_NV'>
	<value: 16r9346>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSERVATIVE_RASTERIZATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV [

	<enum: #'GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV'>
	<value: 16r937B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTER_DILATE_NV [

	<enum: #'GL_CONSERVATIVE_RASTER_DILATE_NV'>
	<value: 16r9379>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSERVATIVE_RASTER_DILATE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTER_DILATE_RANGE_NV [

	<enum: #'GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV'>
	<value: 16r937A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTER_MODE_NV [

	<enum: #'GL_CONSERVATIVE_RASTER_MODE_NV'>
	<value: 16r954D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSERVATIVE_RASTER_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTER_MODE_POST_SNAP_NV [

	<enum: #'GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV'>
	<value: 16r954E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV [

	<enum: #'GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV'>
	<value: 16r9550>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV [

	<enum: #'GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV'>
	<value: 16r954F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSERVE_MEMORY_HINT_PGI [

	<enum: #'GL_CONSERVE_MEMORY_HINT_PGI'>
	<value: 16r1A1FD>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_CONSERVE_MEMORY_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT [

	<enum: #'GL_CONSTANT'>
	<value: 16r8576>
	<vendor: #'AMD/NV'>
	<groups: #(#PathGenMode #RegisterCombinerPname)>
	^ GL_CONSTANT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_ALPHA [

	<enum: #'GL_CONSTANT_ALPHA'>
	<value: 16r8003>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_CONSTANT_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_ALPHA_EXT [

	<enum: #'GL_CONSTANT_ALPHA_EXT'>
	<value: 16r8003>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CONSTANT_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_ARB [

	<enum: #'GL_CONSTANT_ARB'>
	<value: 16r8576>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_CONSTANT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_ATTENUATION [

	<enum: #'GL_CONSTANT_ATTENUATION'>
	<value: 16r1207>
	<vendor: #ARB>
	<groups: #(#FragmentLightParameterSGIX #LightParameter)>
	^ GL_CONSTANT_ATTENUATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_BORDER [

	<enum: #'GL_CONSTANT_BORDER'>
	<value: 16r8151>
	<vendor: #HP>
	^ GL_CONSTANT_BORDER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_BORDER_HP [

	<enum: #'GL_CONSTANT_BORDER_HP'>
	<value: 16r8151>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_CONSTANT_BORDER_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_COLOR [

	<enum: #'GL_CONSTANT_COLOR'>
	<value: 16r8001>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_CONSTANT_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_COLOR0_NV [

	<enum: #'GL_CONSTANT_COLOR0_NV'>
	<value: 16r852A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSTANT_COLOR0_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_COLOR1_NV [

	<enum: #'GL_CONSTANT_COLOR1_NV'>
	<value: 16r852B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONSTANT_COLOR1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_COLOR_EXT [

	<enum: #'GL_CONSTANT_COLOR_EXT'>
	<value: 16r8001>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_CONSTANT_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_EXT [

	<enum: #'GL_CONSTANT_EXT'>
	<value: 16r8576>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_CONSTANT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONSTANT_NV [

	<enum: #'GL_CONSTANT_NV'>
	<value: 16r8576>
	<vendor: #'AMD/NV'>
	<suffix: #NV>
	<groups: #(#RegisterCombinerPname)>
	^ GL_CONSTANT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONST_EYE_NV [

	<enum: #'GL_CONST_EYE_NV'>
	<value: 16r86E5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONST_EYE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_COMPATIBILITY_PROFILE_BIT [

	<enum: #'GL_CONTEXT_COMPATIBILITY_PROFILE_BIT'>
	<value: 2r10>
	<bitmask>
	<groups: #(#ContextProfileMask)>
	^ GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_CORE_PROFILE_BIT [

	<enum: #'GL_CONTEXT_CORE_PROFILE_BIT'>
	<value: 2r1>
	<bitmask>
	<groups: #(#ContextProfileMask)>
	^ GL_CONTEXT_CORE_PROFILE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAGS [

	<enum: #'GL_CONTEXT_FLAGS'>
	<value: 16r821E>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CONTEXT_FLAGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAG_DEBUG_BIT [

	<enum: #'GL_CONTEXT_FLAG_DEBUG_BIT'>
	<value: 2r10>
	<bitmask>
	<groups: #(#ContextFlagMask)>
	^ GL_CONTEXT_FLAG_DEBUG_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAG_DEBUG_BIT_KHR [

	<enum: #'GL_CONTEXT_FLAG_DEBUG_BIT_KHR'>
	<value: 2r10>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#ContextFlagMask)>
	^ GL_CONTEXT_FLAG_DEBUG_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT [

	<enum: #'GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT'>
	<value: 2r1>
	<bitmask>
	<groups: #(#ContextFlagMask)>
	^ GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAG_NO_ERROR_BIT [

	<enum: #'GL_CONTEXT_FLAG_NO_ERROR_BIT'>
	<value: 2r1000>
	<bitmask>
	<groups: #(#ContextFlagMask)>
	^ GL_CONTEXT_FLAG_NO_ERROR_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAG_NO_ERROR_BIT_KHR [

	<enum: #'GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR'>
	<value: 2r1000>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#ContextFlagMask)>
	^ GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT [

	<enum: #'GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT'>
	<value: 2r10000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#ContextFlagMask)>
	^ GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAG_ROBUST_ACCESS_BIT [

	<enum: #'GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT'>
	<value: 2r100>
	<bitmask>
	<groups: #(#ContextFlagMask)>
	^ GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB [

	<enum: #'GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB'>
	<value: 2r100>
	<suffix: #ARB>
	<bitmask>
	<groups: #(#ContextFlagMask)>
	^ GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_LOST [

	<enum: #'GL_CONTEXT_LOST'>
	<value: 16r507>
	<vendor: #ARB>
	^ GL_CONTEXT_LOST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_LOST_KHR [

	<enum: #'GL_CONTEXT_LOST_KHR'>
	<value: 16r507>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_CONTEXT_LOST_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_LOST_WEBGL [

	<enum: #'GL_CONTEXT_LOST_WEBGL'>
	<value: 16r9242>
	<vendor: #WEBGL>
	^ GL_CONTEXT_LOST_WEBGL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_PROFILE_MASK [

	<enum: #'GL_CONTEXT_PROFILE_MASK'>
	<value: 16r9126>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CONTEXT_PROFILE_MASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_RELEASE_BEHAVIOR [

	<enum: #'GL_CONTEXT_RELEASE_BEHAVIOR'>
	<value: 16r82FB>
	<vendor: #ARB>
	^ GL_CONTEXT_RELEASE_BEHAVIOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_RELEASE_BEHAVIOR_FLUSH [

	<enum: #'GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH'>
	<value: 16r82FC>
	<vendor: #ARB>
	^ GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR [

	<enum: #'GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR'>
	<value: 16r82FC>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_RELEASE_BEHAVIOR_KHR [

	<enum: #'GL_CONTEXT_RELEASE_BEHAVIOR_KHR'>
	<value: 16r82FB>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_CONTEXT_RELEASE_BEHAVIOR_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_ROBUST_ACCESS [

	<enum: #'GL_CONTEXT_ROBUST_ACCESS'>
	<value: 16r90F3>
	<vendor: #NV>
	^ GL_CONTEXT_ROBUST_ACCESS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_ROBUST_ACCESS_EXT [

	<enum: #'GL_CONTEXT_ROBUST_ACCESS_EXT'>
	<value: 16r90F3>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_CONTEXT_ROBUST_ACCESS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTEXT_ROBUST_ACCESS_KHR [

	<enum: #'GL_CONTEXT_ROBUST_ACCESS_KHR'>
	<value: 16r90F3>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_CONTEXT_ROBUST_ACCESS_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTINUOUS_AMD [

	<enum: #'GL_CONTINUOUS_AMD'>
	<value: 16r9007>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_CONTINUOUS_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONTRAST_NV [

	<enum: #'GL_CONTRAST_NV'>
	<value: 16r92A1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CONTRAST_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVEX_HULL_NV [

	<enum: #'GL_CONVEX_HULL_NV'>
	<value: 16r908B>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoverMode)>
	^ GL_CONVEX_HULL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_1D [

	<enum: #'GL_CONVOLUTION_1D'>
	<value: 16r8010>
	<vendor: #ARB>
	<groups: #(#ConvolutionTarget #ConvolutionTargetEXT)>
	^ GL_CONVOLUTION_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_1D_EXT [

	<enum: #'GL_CONVOLUTION_1D_EXT'>
	<value: 16r8010>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ConvolutionTargetEXT #EnableCap #GetPName)>
	^ GL_CONVOLUTION_1D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_2D [

	<enum: #'GL_CONVOLUTION_2D'>
	<value: 16r8011>
	<vendor: #ARB>
	<groups: #(#ConvolutionTarget #ConvolutionTargetEXT)>
	^ GL_CONVOLUTION_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_2D_EXT [

	<enum: #'GL_CONVOLUTION_2D_EXT'>
	<value: 16r8011>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ConvolutionTargetEXT #EnableCap #GetPName)>
	^ GL_CONVOLUTION_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_BORDER_COLOR [

	<enum: #'GL_CONVOLUTION_BORDER_COLOR'>
	<value: 16r8154>
	<vendor: #HP>
	<groups: #(#GetConvolutionParameter)>
	^ GL_CONVOLUTION_BORDER_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_BORDER_COLOR_HP [

	<enum: #'GL_CONVOLUTION_BORDER_COLOR_HP'>
	<value: 16r8154>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_CONVOLUTION_BORDER_COLOR_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_BORDER_MODE [

	<enum: #'GL_CONVOLUTION_BORDER_MODE'>
	<value: 16r8013>
	<vendor: #ARB>
	<groups: #(#ConvolutionParameterEXT #GetConvolutionParameter)>
	^ GL_CONVOLUTION_BORDER_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_BORDER_MODE_EXT [

	<enum: #'GL_CONVOLUTION_BORDER_MODE_EXT'>
	<value: 16r8013>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ConvolutionParameterEXT #GetConvolutionParameter)>
	^ GL_CONVOLUTION_BORDER_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_FILTER_BIAS [

	<enum: #'GL_CONVOLUTION_FILTER_BIAS'>
	<value: 16r8015>
	<vendor: #ARB>
	<groups: #(#ConvolutionParameterEXT #GetConvolutionParameter)>
	^ GL_CONVOLUTION_FILTER_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_FILTER_BIAS_EXT [

	<enum: #'GL_CONVOLUTION_FILTER_BIAS_EXT'>
	<value: 16r8015>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ConvolutionParameterEXT #GetConvolutionParameter)>
	^ GL_CONVOLUTION_FILTER_BIAS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_FILTER_SCALE [

	<enum: #'GL_CONVOLUTION_FILTER_SCALE'>
	<value: 16r8014>
	<vendor: #ARB>
	<groups: #(#ConvolutionParameterEXT #GetConvolutionParameter)>
	^ GL_CONVOLUTION_FILTER_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_FILTER_SCALE_EXT [

	<enum: #'GL_CONVOLUTION_FILTER_SCALE_EXT'>
	<value: 16r8014>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ConvolutionParameterEXT #GetConvolutionParameter)>
	^ GL_CONVOLUTION_FILTER_SCALE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_FORMAT [

	<enum: #'GL_CONVOLUTION_FORMAT'>
	<value: 16r8017>
	<vendor: #ARB>
	<groups: #(#GetConvolutionParameter)>
	^ GL_CONVOLUTION_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_FORMAT_EXT [

	<enum: #'GL_CONVOLUTION_FORMAT_EXT'>
	<value: 16r8017>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetConvolutionParameter)>
	^ GL_CONVOLUTION_FORMAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_HEIGHT [

	<enum: #'GL_CONVOLUTION_HEIGHT'>
	<value: 16r8019>
	<vendor: #ARB>
	<groups: #(#GetConvolutionParameter)>
	^ GL_CONVOLUTION_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_HEIGHT_EXT [

	<enum: #'GL_CONVOLUTION_HEIGHT_EXT'>
	<value: 16r8019>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetConvolutionParameter)>
	^ GL_CONVOLUTION_HEIGHT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_HINT_SGIX [

	<enum: #'GL_CONVOLUTION_HINT_SGIX'>
	<value: 16r8316>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #HintTarget)>
	^ GL_CONVOLUTION_HINT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_WIDTH [

	<enum: #'GL_CONVOLUTION_WIDTH'>
	<value: 16r8018>
	<vendor: #ARB>
	<groups: #(#GetConvolutionParameter)>
	^ GL_CONVOLUTION_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CONVOLUTION_WIDTH_EXT [

	<enum: #'GL_CONVOLUTION_WIDTH_EXT'>
	<value: 16r8018>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetConvolutionParameter)>
	^ GL_CONVOLUTION_WIDTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_0_ATI [

	<enum: #'GL_CON_0_ATI'>
	<value: 16r8941>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_0_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_10_ATI [

	<enum: #'GL_CON_10_ATI'>
	<value: 16r894B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_10_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_11_ATI [

	<enum: #'GL_CON_11_ATI'>
	<value: 16r894C>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_11_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_12_ATI [

	<enum: #'GL_CON_12_ATI'>
	<value: 16r894D>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_12_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_13_ATI [

	<enum: #'GL_CON_13_ATI'>
	<value: 16r894E>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_13_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_14_ATI [

	<enum: #'GL_CON_14_ATI'>
	<value: 16r894F>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_14_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_15_ATI [

	<enum: #'GL_CON_15_ATI'>
	<value: 16r8950>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_15_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_16_ATI [

	<enum: #'GL_CON_16_ATI'>
	<value: 16r8951>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_16_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_17_ATI [

	<enum: #'GL_CON_17_ATI'>
	<value: 16r8952>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_17_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_18_ATI [

	<enum: #'GL_CON_18_ATI'>
	<value: 16r8953>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_18_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_19_ATI [

	<enum: #'GL_CON_19_ATI'>
	<value: 16r8954>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_19_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_1_ATI [

	<enum: #'GL_CON_1_ATI'>
	<value: 16r8942>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_1_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_20_ATI [

	<enum: #'GL_CON_20_ATI'>
	<value: 16r8955>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_20_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_21_ATI [

	<enum: #'GL_CON_21_ATI'>
	<value: 16r8956>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_21_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_22_ATI [

	<enum: #'GL_CON_22_ATI'>
	<value: 16r8957>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_22_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_23_ATI [

	<enum: #'GL_CON_23_ATI'>
	<value: 16r8958>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_23_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_24_ATI [

	<enum: #'GL_CON_24_ATI'>
	<value: 16r8959>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_24_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_25_ATI [

	<enum: #'GL_CON_25_ATI'>
	<value: 16r895A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_25_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_26_ATI [

	<enum: #'GL_CON_26_ATI'>
	<value: 16r895B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_26_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_27_ATI [

	<enum: #'GL_CON_27_ATI'>
	<value: 16r895C>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_27_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_28_ATI [

	<enum: #'GL_CON_28_ATI'>
	<value: 16r895D>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_28_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_29_ATI [

	<enum: #'GL_CON_29_ATI'>
	<value: 16r895E>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_29_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_2_ATI [

	<enum: #'GL_CON_2_ATI'>
	<value: 16r8943>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_2_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_30_ATI [

	<enum: #'GL_CON_30_ATI'>
	<value: 16r895F>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_30_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_31_ATI [

	<enum: #'GL_CON_31_ATI'>
	<value: 16r8960>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_31_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_3_ATI [

	<enum: #'GL_CON_3_ATI'>
	<value: 16r8944>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_3_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_4_ATI [

	<enum: #'GL_CON_4_ATI'>
	<value: 16r8945>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_4_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_5_ATI [

	<enum: #'GL_CON_5_ATI'>
	<value: 16r8946>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_5_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_6_ATI [

	<enum: #'GL_CON_6_ATI'>
	<value: 16r8947>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_6_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_7_ATI [

	<enum: #'GL_CON_7_ATI'>
	<value: 16r8948>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_7_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_8_ATI [

	<enum: #'GL_CON_8_ATI'>
	<value: 16r8949>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_8_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CON_9_ATI [

	<enum: #'GL_CON_9_ATI'>
	<value: 16r894A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_CON_9_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COORD_REPLACE [

	<enum: #'GL_COORD_REPLACE'>
	<value: 16r8862>
	<vendor: #NV>
	^ GL_COORD_REPLACE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COORD_REPLACE_ARB [

	<enum: #'GL_COORD_REPLACE_ARB'>
	<value: 16r8862>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_COORD_REPLACE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COORD_REPLACE_NV [

	<enum: #'GL_COORD_REPLACE_NV'>
	<value: 16r8862>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COORD_REPLACE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COORD_REPLACE_OES [

	<enum: #'GL_COORD_REPLACE_OES'>
	<value: 16r8862>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_COORD_REPLACE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY [

	<enum: #'GL_COPY'>
	<value: 16r1503>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_COPY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY_INVERTED [

	<enum: #'GL_COPY_INVERTED'>
	<value: 16r150C>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_COPY_INVERTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY_PIXEL_TOKEN [

	<enum: #'GL_COPY_PIXEL_TOKEN'>
	<value: 16r706>
	<vendor: #ARB>
	<groups: #(#FeedBackToken)>
	^ GL_COPY_PIXEL_TOKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY_READ_BUFFER [

	<enum: #'GL_COPY_READ_BUFFER'>
	<value: 16r8F36>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_COPY_READ_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY_READ_BUFFER_BINDING [

	<enum: #'GL_COPY_READ_BUFFER_BINDING'>
	<value: 16r8F36>
	<vendor: #NV>
	^ GL_COPY_READ_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY_READ_BUFFER_NV [

	<enum: #'GL_COPY_READ_BUFFER_NV'>
	<value: 16r8F36>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COPY_READ_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY_WRITE_BUFFER [

	<enum: #'GL_COPY_WRITE_BUFFER'>
	<value: 16r8F37>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_COPY_WRITE_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY_WRITE_BUFFER_BINDING [

	<enum: #'GL_COPY_WRITE_BUFFER_BINDING'>
	<value: 16r8F37>
	<vendor: #NV>
	^ GL_COPY_WRITE_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COPY_WRITE_BUFFER_NV [

	<enum: #'GL_COPY_WRITE_BUFFER_NV'>
	<value: 16r8F37>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COPY_WRITE_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COUNTER_RANGE_AMD [

	<enum: #'GL_COUNTER_RANGE_AMD'>
	<value: 16r8BC1>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_COUNTER_RANGE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COUNTER_TYPE_AMD [

	<enum: #'GL_COUNTER_TYPE_AMD'>
	<value: 16r8BC0>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_COUNTER_TYPE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COUNT_DOWN_NV [

	<enum: #'GL_COUNT_DOWN_NV'>
	<value: 16r9089>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathFillMode)>
	^ GL_COUNT_DOWN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COUNT_UP_NV [

	<enum: #'GL_COUNT_UP_NV'>
	<value: 16r9088>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathFillMode)>
	^ GL_COUNT_UP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_ALL_FRAGMENTS_NV [

	<enum: #'GL_COVERAGE_ALL_FRAGMENTS_NV'>
	<value: 16r8ED5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_ALL_FRAGMENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_ATTACHMENT_NV [

	<enum: #'GL_COVERAGE_ATTACHMENT_NV'>
	<value: 16r8ED2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_ATTACHMENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_AUTOMATIC_NV [

	<enum: #'GL_COVERAGE_AUTOMATIC_NV'>
	<value: 16r8ED7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_AUTOMATIC_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_BUFFERS_NV [

	<enum: #'GL_COVERAGE_BUFFERS_NV'>
	<value: 16r8ED3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_BUFFERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_BUFFER_BIT_NV [

	<enum: #'GL_COVERAGE_BUFFER_BIT_NV'>
	<value: 2r1000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#ClearBufferMask)>
	^ GL_COVERAGE_BUFFER_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_COMPONENT4_NV [

	<enum: #'GL_COVERAGE_COMPONENT4_NV'>
	<value: 16r8ED1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_COMPONENT4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_COMPONENT_NV [

	<enum: #'GL_COVERAGE_COMPONENT_NV'>
	<value: 16r8ED0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_COMPONENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_EDGE_FRAGMENTS_NV [

	<enum: #'GL_COVERAGE_EDGE_FRAGMENTS_NV'>
	<value: 16r8ED6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_EDGE_FRAGMENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_MODULATION_NV [

	<enum: #'GL_COVERAGE_MODULATION_NV'>
	<value: 16r9332>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_MODULATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_MODULATION_TABLE_NV [

	<enum: #'GL_COVERAGE_MODULATION_TABLE_NV'>
	<value: 16r9331>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_MODULATION_TABLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_MODULATION_TABLE_SIZE_NV [

	<enum: #'GL_COVERAGE_MODULATION_TABLE_SIZE_NV'>
	<value: 16r9333>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_MODULATION_TABLE_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> COVERAGE_SAMPLES_NV [

	<enum: #'GL_COVERAGE_SAMPLES_NV'>
	<value: 16r8ED4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_COVERAGE_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CPU_OPTIMIZED_QCOM [

	<enum: #'GL_CPU_OPTIMIZED_QCOM'>
	<value: 16r8FB1>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_CPU_OPTIMIZED_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CUBIC_CURVE_TO_NV [

	<enum: #'GL_CUBIC_CURVE_TO_NV'>
	<value: 16rC>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_CUBIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CUBIC_EXT [

	<enum: #'GL_CUBIC_EXT'>
	<value: 16r8334>
	<vendor: #SUN>
	<suffix: #EXT>
	^ GL_CUBIC_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CUBIC_HP [

	<enum: #'GL_CUBIC_HP'>
	<value: 16r815F>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_CUBIC_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CUBIC_IMG [

	<enum: #'GL_CUBIC_IMG'>
	<value: 16r9139>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_CUBIC_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CUBIC_MIPMAP_LINEAR_IMG [

	<enum: #'GL_CUBIC_MIPMAP_LINEAR_IMG'>
	<value: 16r913B>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_CUBIC_MIPMAP_LINEAR_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CUBIC_MIPMAP_NEAREST_IMG [

	<enum: #'GL_CUBIC_MIPMAP_NEAREST_IMG'>
	<value: 16r913A>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_CUBIC_MIPMAP_NEAREST_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CULL_FACE [

	<enum: #'GL_CULL_FACE'>
	<value: 16rB44>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_CULL_FACE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CULL_FACE_MODE [

	<enum: #'GL_CULL_FACE_MODE'>
	<value: 16rB45>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CULL_FACE_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CULL_FRAGMENT_NV [

	<enum: #'GL_CULL_FRAGMENT_NV'>
	<value: 16r86E7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CULL_FRAGMENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CULL_MODES_NV [

	<enum: #'GL_CULL_MODES_NV'>
	<value: 16r86E0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CULL_MODES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CULL_VERTEX_EXT [

	<enum: #'GL_CULL_VERTEX_EXT'>
	<value: 16r81AA>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_CULL_VERTEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CULL_VERTEX_EYE_POSITION_EXT [

	<enum: #'GL_CULL_VERTEX_EYE_POSITION_EXT'>
	<value: 16r81AB>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#CullParameterEXT)>
	^ GL_CULL_VERTEX_EYE_POSITION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CULL_VERTEX_IBM [

	<enum: #'GL_CULL_VERTEX_IBM'>
	<value: 16r1928A>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_CULL_VERTEX_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CULL_VERTEX_OBJECT_POSITION_EXT [

	<enum: #'GL_CULL_VERTEX_OBJECT_POSITION_EXT'>
	<value: 16r81AC>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#CullParameterEXT)>
	^ GL_CULL_VERTEX_OBJECT_POSITION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_ATTRIB_NV [

	<enum: #'GL_CURRENT_ATTRIB_NV'>
	<value: 16r8626>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CURRENT_ATTRIB_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_BINORMAL_EXT [

	<enum: #'GL_CURRENT_BINORMAL_EXT'>
	<value: 16r843C>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_CURRENT_BINORMAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_BIT [

	<enum: #'GL_CURRENT_BIT'>
	<value: 2r1>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_CURRENT_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_COLOR [

	<enum: #'GL_CURRENT_COLOR'>
	<value: 16rB00>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_FOG_COORD [

	<enum: #'GL_CURRENT_FOG_COORD'>
	<value: 16r8453>
	<vendor: #SGI>
	^ GL_CURRENT_FOG_COORD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_FOG_COORDINATE [

	<enum: #'GL_CURRENT_FOG_COORDINATE'>
	<value: 16r8453>
	<vendor: #SGI>
	^ GL_CURRENT_FOG_COORDINATE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_FOG_COORDINATE_EXT [

	<enum: #'GL_CURRENT_FOG_COORDINATE_EXT'>
	<value: 16r8453>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_CURRENT_FOG_COORDINATE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_INDEX [

	<enum: #'GL_CURRENT_INDEX'>
	<value: 16rB01>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_MATRIX_ARB [

	<enum: #'GL_CURRENT_MATRIX_ARB'>
	<value: 16r8641>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_CURRENT_MATRIX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_MATRIX_INDEX_ARB [

	<enum: #'GL_CURRENT_MATRIX_INDEX_ARB'>
	<value: 16r8845>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_CURRENT_MATRIX_INDEX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_MATRIX_NV [

	<enum: #'GL_CURRENT_MATRIX_NV'>
	<value: 16r8641>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CURRENT_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_MATRIX_STACK_DEPTH_ARB [

	<enum: #'GL_CURRENT_MATRIX_STACK_DEPTH_ARB'>
	<value: 16r8640>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_CURRENT_MATRIX_STACK_DEPTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_MATRIX_STACK_DEPTH_NV [

	<enum: #'GL_CURRENT_MATRIX_STACK_DEPTH_NV'>
	<value: 16r8640>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CURRENT_MATRIX_STACK_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_NORMAL [

	<enum: #'GL_CURRENT_NORMAL'>
	<value: 16rB02>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_NORMAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_OCCLUSION_QUERY_ID_NV [

	<enum: #'GL_CURRENT_OCCLUSION_QUERY_ID_NV'>
	<value: 16r8865>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CURRENT_OCCLUSION_QUERY_ID_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_PALETTE_MATRIX_ARB [

	<enum: #'GL_CURRENT_PALETTE_MATRIX_ARB'>
	<value: 16r8843>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_CURRENT_PALETTE_MATRIX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_PALETTE_MATRIX_OES [

	<enum: #'GL_CURRENT_PALETTE_MATRIX_OES'>
	<value: 16r8843>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_CURRENT_PALETTE_MATRIX_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_PROGRAM [

	<enum: #'GL_CURRENT_PROGRAM'>
	<value: 16r8B8D>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_PROGRAM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_QUERY [

	<enum: #'GL_CURRENT_QUERY'>
	<value: 16r8865>
	<vendor: #NV>
	<groups: #(#QueryParameterName)>
	^ GL_CURRENT_QUERY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_QUERY_ARB [

	<enum: #'GL_CURRENT_QUERY_ARB'>
	<value: 16r8865>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_CURRENT_QUERY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_QUERY_EXT [

	<enum: #'GL_CURRENT_QUERY_EXT'>
	<value: 16r8865>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_CURRENT_QUERY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_RASTER_COLOR [

	<enum: #'GL_CURRENT_RASTER_COLOR'>
	<value: 16rB04>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_RASTER_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_RASTER_DISTANCE [

	<enum: #'GL_CURRENT_RASTER_DISTANCE'>
	<value: 16rB09>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_RASTER_DISTANCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_RASTER_INDEX [

	<enum: #'GL_CURRENT_RASTER_INDEX'>
	<value: 16rB05>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_RASTER_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_RASTER_NORMAL_SGIX [

	<enum: #'GL_CURRENT_RASTER_NORMAL_SGIX'>
	<value: 16r8406>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_CURRENT_RASTER_NORMAL_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_RASTER_POSITION [

	<enum: #'GL_CURRENT_RASTER_POSITION'>
	<value: 16rB07>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_RASTER_POSITION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_RASTER_POSITION_VALID [

	<enum: #'GL_CURRENT_RASTER_POSITION_VALID'>
	<value: 16rB08>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_RASTER_POSITION_VALID
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_RASTER_SECONDARY_COLOR [

	<enum: #'GL_CURRENT_RASTER_SECONDARY_COLOR'>
	<value: 16r845F>
	<vendor: #SGI>
	^ GL_CURRENT_RASTER_SECONDARY_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_RASTER_TEXTURE_COORDS [

	<enum: #'GL_CURRENT_RASTER_TEXTURE_COORDS'>
	<value: 16rB06>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_CURRENT_RASTER_TEXTURE_COORDS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_SECONDARY_COLOR [

	<enum: #'GL_CURRENT_SECONDARY_COLOR'>
	<value: 16r8459>
	<vendor: #SGI>
	^ GL_CURRENT_SECONDARY_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_SECONDARY_COLOR_EXT [

	<enum: #'GL_CURRENT_SECONDARY_COLOR_EXT'>
	<value: 16r8459>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_CURRENT_SECONDARY_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_TANGENT_EXT [

	<enum: #'GL_CURRENT_TANGENT_EXT'>
	<value: 16r843B>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_CURRENT_TANGENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_TEXTURE_COORDS [

	<enum: #'GL_CURRENT_TEXTURE_COORDS'>
	<value: 16rB03>
	<vendor: #ARB>
	<groups: #(#GetPName #VertexShaderTextureUnitParameter)>
	^ GL_CURRENT_TEXTURE_COORDS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_TIME_NV [

	<enum: #'GL_CURRENT_TIME_NV'>
	<value: 16r8E28>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_CURRENT_TIME_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_VERTEX_ATTRIB [

	<enum: #'GL_CURRENT_VERTEX_ATTRIB'>
	<value: 16r8626>
	<vendor: #NV>
	<groups: #(#VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_CURRENT_VERTEX_ATTRIB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_VERTEX_ATTRIB_ARB [

	<enum: #'GL_CURRENT_VERTEX_ATTRIB_ARB'>
	<value: 16r8626>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_CURRENT_VERTEX_ATTRIB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_VERTEX_EXT [

	<enum: #'GL_CURRENT_VERTEX_EXT'>
	<value: 16r87E2>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderParameterEXT)>
	^ GL_CURRENT_VERTEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_VERTEX_WEIGHT_EXT [

	<enum: #'GL_CURRENT_VERTEX_WEIGHT_EXT'>
	<value: 16r850B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_CURRENT_VERTEX_WEIGHT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CURRENT_WEIGHT_ARB [

	<enum: #'GL_CURRENT_WEIGHT_ARB'>
	<value: 16r86A8>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_CURRENT_WEIGHT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> CW [

	<enum: #'GL_CW'>
	<value: 16r900>
	<vendor: #ARB>
	<groups: #(#FrontFaceDirection)>
	^ GL_CW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> D3D12_FENCE_VALUE_EXT [

	<enum: #'GL_D3D12_FENCE_VALUE_EXT'>
	<value: 16r9595>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#SemaphoreParameterName)>
	^ GL_D3D12_FENCE_VALUE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DARKEN [

	<enum: #'GL_DARKEN'>
	<value: 16r9297>
	<vendor: #NV>
	^ GL_DARKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DARKEN_KHR [

	<enum: #'GL_DARKEN_KHR'>
	<value: 16r9297>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_DARKEN_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DARKEN_NV [

	<enum: #'GL_DARKEN_NV'>
	<value: 16r9297>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DARKEN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DATA_BUFFER_AMD [

	<enum: #'GL_DATA_BUFFER_AMD'>
	<value: 16r9151>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DATA_BUFFER_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_ASSERT_MESA [

	<enum: #'GL_DEBUG_ASSERT_MESA'>
	<value: 16r875B>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_DEBUG_ASSERT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CALLBACK_FUNCTION [

	<enum: #'GL_DEBUG_CALLBACK_FUNCTION'>
	<value: 16r8244>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_DEBUG_CALLBACK_FUNCTION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CALLBACK_FUNCTION_ARB [

	<enum: #'GL_DEBUG_CALLBACK_FUNCTION_ARB'>
	<value: 16r8244>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_CALLBACK_FUNCTION_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CALLBACK_FUNCTION_KHR [

	<enum: #'GL_DEBUG_CALLBACK_FUNCTION_KHR'>
	<value: 16r8244>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_CALLBACK_FUNCTION_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CALLBACK_USER_PARAM [

	<enum: #'GL_DEBUG_CALLBACK_USER_PARAM'>
	<value: 16r8245>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_DEBUG_CALLBACK_USER_PARAM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CALLBACK_USER_PARAM_ARB [

	<enum: #'GL_DEBUG_CALLBACK_USER_PARAM_ARB'>
	<value: 16r8245>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_CALLBACK_USER_PARAM_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CALLBACK_USER_PARAM_KHR [

	<enum: #'GL_DEBUG_CALLBACK_USER_PARAM_KHR'>
	<value: 16r8245>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_CALLBACK_USER_PARAM_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CATEGORY_API_ERROR_AMD [

	<enum: #'GL_DEBUG_CATEGORY_API_ERROR_AMD'>
	<value: 16r9149>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_CATEGORY_API_ERROR_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CATEGORY_APPLICATION_AMD [

	<enum: #'GL_DEBUG_CATEGORY_APPLICATION_AMD'>
	<value: 16r914F>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_CATEGORY_APPLICATION_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CATEGORY_DEPRECATION_AMD [

	<enum: #'GL_DEBUG_CATEGORY_DEPRECATION_AMD'>
	<value: 16r914B>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_CATEGORY_DEPRECATION_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CATEGORY_OTHER_AMD [

	<enum: #'GL_DEBUG_CATEGORY_OTHER_AMD'>
	<value: 16r9150>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_CATEGORY_OTHER_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CATEGORY_PERFORMANCE_AMD [

	<enum: #'GL_DEBUG_CATEGORY_PERFORMANCE_AMD'>
	<value: 16r914D>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_CATEGORY_PERFORMANCE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CATEGORY_SHADER_COMPILER_AMD [

	<enum: #'GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD'>
	<value: 16r914E>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD [

	<enum: #'GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD'>
	<value: 16r914C>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_CATEGORY_WINDOW_SYSTEM_AMD [

	<enum: #'GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD'>
	<value: 16r914A>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_GROUP_STACK_DEPTH [

	<enum: #'GL_DEBUG_GROUP_STACK_DEPTH'>
	<value: 16r826D>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_DEBUG_GROUP_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_GROUP_STACK_DEPTH_KHR [

	<enum: #'GL_DEBUG_GROUP_STACK_DEPTH_KHR'>
	<value: 16r826D>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_GROUP_STACK_DEPTH_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_LOGGED_MESSAGES [

	<enum: #'GL_DEBUG_LOGGED_MESSAGES'>
	<value: 16r9145>
	<vendor: #AMD>
	^ GL_DEBUG_LOGGED_MESSAGES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_LOGGED_MESSAGES_AMD [

	<enum: #'GL_DEBUG_LOGGED_MESSAGES_AMD'>
	<value: 16r9145>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_LOGGED_MESSAGES_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_LOGGED_MESSAGES_ARB [

	<enum: #'GL_DEBUG_LOGGED_MESSAGES_ARB'>
	<value: 16r9145>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DEBUG_LOGGED_MESSAGES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_LOGGED_MESSAGES_KHR [

	<enum: #'GL_DEBUG_LOGGED_MESSAGES_KHR'>
	<value: 16r9145>
	<vendor: #AMD>
	<suffix: #KHR>
	^ GL_DEBUG_LOGGED_MESSAGES_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_NEXT_LOGGED_MESSAGE_LENGTH [

	<enum: #'GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH'>
	<value: 16r8243>
	<vendor: #ARB>
	^ GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB [

	<enum: #'GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB'>
	<value: 16r8243>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR [

	<enum: #'GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR'>
	<value: 16r8243>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_OBJECT_MESA [

	<enum: #'GL_DEBUG_OBJECT_MESA'>
	<value: 16r8759>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_DEBUG_OBJECT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_OUTPUT [

	<enum: #'GL_DEBUG_OUTPUT'>
	<value: 16r92E0>
	<vendor: #NV>
	<groups: #(#EnableCap)>
	^ GL_DEBUG_OUTPUT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_OUTPUT_KHR [

	<enum: #'GL_DEBUG_OUTPUT_KHR'>
	<value: 16r92E0>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_DEBUG_OUTPUT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_OUTPUT_SYNCHRONOUS [

	<enum: #'GL_DEBUG_OUTPUT_SYNCHRONOUS'>
	<value: 16r8242>
	<vendor: #ARB>
	<groups: #(#EnableCap)>
	^ GL_DEBUG_OUTPUT_SYNCHRONOUS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_OUTPUT_SYNCHRONOUS_ARB [

	<enum: #'GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB'>
	<value: 16r8242>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_OUTPUT_SYNCHRONOUS_KHR [

	<enum: #'GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR'>
	<value: 16r8242>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_PRINT_MESA [

	<enum: #'GL_DEBUG_PRINT_MESA'>
	<value: 16r875A>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_DEBUG_PRINT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_HIGH [

	<enum: #'GL_DEBUG_SEVERITY_HIGH'>
	<value: 16r9146>
	<vendor: #AMD>
	<groups: #(#DebugSeverity)>
	^ GL_DEBUG_SEVERITY_HIGH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_HIGH_AMD [

	<enum: #'GL_DEBUG_SEVERITY_HIGH_AMD'>
	<value: 16r9146>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_SEVERITY_HIGH_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_HIGH_ARB [

	<enum: #'GL_DEBUG_SEVERITY_HIGH_ARB'>
	<value: 16r9146>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DEBUG_SEVERITY_HIGH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_HIGH_KHR [

	<enum: #'GL_DEBUG_SEVERITY_HIGH_KHR'>
	<value: 16r9146>
	<vendor: #AMD>
	<suffix: #KHR>
	^ GL_DEBUG_SEVERITY_HIGH_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_LOW [

	<enum: #'GL_DEBUG_SEVERITY_LOW'>
	<value: 16r9148>
	<vendor: #AMD>
	<groups: #(#DebugSeverity)>
	^ GL_DEBUG_SEVERITY_LOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_LOW_AMD [

	<enum: #'GL_DEBUG_SEVERITY_LOW_AMD'>
	<value: 16r9148>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_SEVERITY_LOW_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_LOW_ARB [

	<enum: #'GL_DEBUG_SEVERITY_LOW_ARB'>
	<value: 16r9148>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DEBUG_SEVERITY_LOW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_LOW_KHR [

	<enum: #'GL_DEBUG_SEVERITY_LOW_KHR'>
	<value: 16r9148>
	<vendor: #AMD>
	<suffix: #KHR>
	^ GL_DEBUG_SEVERITY_LOW_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_MEDIUM [

	<enum: #'GL_DEBUG_SEVERITY_MEDIUM'>
	<value: 16r9147>
	<vendor: #AMD>
	<groups: #(#DebugSeverity)>
	^ GL_DEBUG_SEVERITY_MEDIUM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_MEDIUM_AMD [

	<enum: #'GL_DEBUG_SEVERITY_MEDIUM_AMD'>
	<value: 16r9147>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEBUG_SEVERITY_MEDIUM_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_MEDIUM_ARB [

	<enum: #'GL_DEBUG_SEVERITY_MEDIUM_ARB'>
	<value: 16r9147>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DEBUG_SEVERITY_MEDIUM_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_MEDIUM_KHR [

	<enum: #'GL_DEBUG_SEVERITY_MEDIUM_KHR'>
	<value: 16r9147>
	<vendor: #AMD>
	<suffix: #KHR>
	^ GL_DEBUG_SEVERITY_MEDIUM_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_NOTIFICATION [

	<enum: #'GL_DEBUG_SEVERITY_NOTIFICATION'>
	<value: 16r826B>
	<vendor: #ARB>
	<groups: #(#DebugSeverity)>
	^ GL_DEBUG_SEVERITY_NOTIFICATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SEVERITY_NOTIFICATION_KHR [

	<enum: #'GL_DEBUG_SEVERITY_NOTIFICATION_KHR'>
	<value: 16r826B>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_SEVERITY_NOTIFICATION_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_API [

	<enum: #'GL_DEBUG_SOURCE_API'>
	<value: 16r8246>
	<vendor: #ARB>
	<groups: #(#DebugSource)>
	^ GL_DEBUG_SOURCE_API
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_API_ARB [

	<enum: #'GL_DEBUG_SOURCE_API_ARB'>
	<value: 16r8246>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_SOURCE_API_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_API_KHR [

	<enum: #'GL_DEBUG_SOURCE_API_KHR'>
	<value: 16r8246>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_SOURCE_API_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_APPLICATION [

	<enum: #'GL_DEBUG_SOURCE_APPLICATION'>
	<value: 16r824A>
	<vendor: #ARB>
	<groups: #(#DebugSource)>
	^ GL_DEBUG_SOURCE_APPLICATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_APPLICATION_ARB [

	<enum: #'GL_DEBUG_SOURCE_APPLICATION_ARB'>
	<value: 16r824A>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_SOURCE_APPLICATION_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_APPLICATION_KHR [

	<enum: #'GL_DEBUG_SOURCE_APPLICATION_KHR'>
	<value: 16r824A>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_SOURCE_APPLICATION_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_OTHER [

	<enum: #'GL_DEBUG_SOURCE_OTHER'>
	<value: 16r824B>
	<vendor: #ARB>
	<groups: #(#DebugSource)>
	^ GL_DEBUG_SOURCE_OTHER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_OTHER_ARB [

	<enum: #'GL_DEBUG_SOURCE_OTHER_ARB'>
	<value: 16r824B>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_SOURCE_OTHER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_OTHER_KHR [

	<enum: #'GL_DEBUG_SOURCE_OTHER_KHR'>
	<value: 16r824B>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_SOURCE_OTHER_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_SHADER_COMPILER [

	<enum: #'GL_DEBUG_SOURCE_SHADER_COMPILER'>
	<value: 16r8248>
	<vendor: #ARB>
	<groups: #(#DebugSource)>
	^ GL_DEBUG_SOURCE_SHADER_COMPILER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_SHADER_COMPILER_ARB [

	<enum: #'GL_DEBUG_SOURCE_SHADER_COMPILER_ARB'>
	<value: 16r8248>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_SOURCE_SHADER_COMPILER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_SHADER_COMPILER_KHR [

	<enum: #'GL_DEBUG_SOURCE_SHADER_COMPILER_KHR'>
	<value: 16r8248>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_SOURCE_SHADER_COMPILER_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_THIRD_PARTY [

	<enum: #'GL_DEBUG_SOURCE_THIRD_PARTY'>
	<value: 16r8249>
	<vendor: #ARB>
	<groups: #(#DebugSource)>
	^ GL_DEBUG_SOURCE_THIRD_PARTY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_THIRD_PARTY_ARB [

	<enum: #'GL_DEBUG_SOURCE_THIRD_PARTY_ARB'>
	<value: 16r8249>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_SOURCE_THIRD_PARTY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_THIRD_PARTY_KHR [

	<enum: #'GL_DEBUG_SOURCE_THIRD_PARTY_KHR'>
	<value: 16r8249>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_SOURCE_THIRD_PARTY_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_WINDOW_SYSTEM [

	<enum: #'GL_DEBUG_SOURCE_WINDOW_SYSTEM'>
	<value: 16r8247>
	<vendor: #ARB>
	<groups: #(#DebugSource)>
	^ GL_DEBUG_SOURCE_WINDOW_SYSTEM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_WINDOW_SYSTEM_ARB [

	<enum: #'GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB'>
	<value: 16r8247>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_SOURCE_WINDOW_SYSTEM_KHR [

	<enum: #'GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR'>
	<value: 16r8247>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_DEPRECATED_BEHAVIOR [

	<enum: #'GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR'>
	<value: 16r824D>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB [

	<enum: #'GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB'>
	<value: 16r824D>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR [

	<enum: #'GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR'>
	<value: 16r824D>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_ERROR [

	<enum: #'GL_DEBUG_TYPE_ERROR'>
	<value: 16r824C>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_ERROR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_ERROR_ARB [

	<enum: #'GL_DEBUG_TYPE_ERROR_ARB'>
	<value: 16r824C>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_TYPE_ERROR_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_ERROR_KHR [

	<enum: #'GL_DEBUG_TYPE_ERROR_KHR'>
	<value: 16r824C>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_ERROR_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_MARKER [

	<enum: #'GL_DEBUG_TYPE_MARKER'>
	<value: 16r8268>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_MARKER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_MARKER_KHR [

	<enum: #'GL_DEBUG_TYPE_MARKER_KHR'>
	<value: 16r8268>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_MARKER_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_OTHER [

	<enum: #'GL_DEBUG_TYPE_OTHER'>
	<value: 16r8251>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_OTHER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_OTHER_ARB [

	<enum: #'GL_DEBUG_TYPE_OTHER_ARB'>
	<value: 16r8251>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_TYPE_OTHER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_OTHER_KHR [

	<enum: #'GL_DEBUG_TYPE_OTHER_KHR'>
	<value: 16r8251>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_OTHER_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_PERFORMANCE [

	<enum: #'GL_DEBUG_TYPE_PERFORMANCE'>
	<value: 16r8250>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_PERFORMANCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_PERFORMANCE_ARB [

	<enum: #'GL_DEBUG_TYPE_PERFORMANCE_ARB'>
	<value: 16r8250>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_TYPE_PERFORMANCE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_PERFORMANCE_KHR [

	<enum: #'GL_DEBUG_TYPE_PERFORMANCE_KHR'>
	<value: 16r8250>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_PERFORMANCE_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_POP_GROUP [

	<enum: #'GL_DEBUG_TYPE_POP_GROUP'>
	<value: 16r826A>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_POP_GROUP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_POP_GROUP_KHR [

	<enum: #'GL_DEBUG_TYPE_POP_GROUP_KHR'>
	<value: 16r826A>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_POP_GROUP_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_PORTABILITY [

	<enum: #'GL_DEBUG_TYPE_PORTABILITY'>
	<value: 16r824F>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_PORTABILITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_PORTABILITY_ARB [

	<enum: #'GL_DEBUG_TYPE_PORTABILITY_ARB'>
	<value: 16r824F>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_TYPE_PORTABILITY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_PORTABILITY_KHR [

	<enum: #'GL_DEBUG_TYPE_PORTABILITY_KHR'>
	<value: 16r824F>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_PORTABILITY_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_PUSH_GROUP [

	<enum: #'GL_DEBUG_TYPE_PUSH_GROUP'>
	<value: 16r8269>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_PUSH_GROUP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_PUSH_GROUP_KHR [

	<enum: #'GL_DEBUG_TYPE_PUSH_GROUP_KHR'>
	<value: 16r8269>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_PUSH_GROUP_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_UNDEFINED_BEHAVIOR [

	<enum: #'GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR'>
	<value: 16r824E>
	<vendor: #ARB>
	<groups: #(#DebugType)>
	^ GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB [

	<enum: #'GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB'>
	<value: 16r824E>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR [

	<enum: #'GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR'>
	<value: 16r824E>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DECAL [

	<enum: #'GL_DECAL'>
	<value: 16r2101>
	<vendor: #ARB>
	<groups: #(#TextureEnvMode)>
	^ GL_DECAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DECODE_EXT [

	<enum: #'GL_DECODE_EXT'>
	<value: 16r8A49>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_DECODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DECR [

	<enum: #'GL_DECR'>
	<value: 16r1E03>
	<vendor: #ARB>
	<groups: #(#StencilOp)>
	^ GL_DECR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DECR_WRAP [

	<enum: #'GL_DECR_WRAP'>
	<value: 16r8508>
	<vendor: #NV>
	<groups: #(#StencilOp)>
	^ GL_DECR_WRAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DECR_WRAP_EXT [

	<enum: #'GL_DECR_WRAP_EXT'>
	<value: 16r8508>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DECR_WRAP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DECR_WRAP_OES [

	<enum: #'GL_DECR_WRAP_OES'>
	<value: 16r8508>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_DECR_WRAP_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEDICATED_MEMORY_OBJECT_EXT [

	<enum: #'GL_DEDICATED_MEMORY_OBJECT_EXT'>
	<value: 16r9581>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#MemoryObjectParameterName)>
	^ GL_DEDICATED_MEMORY_OBJECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEFORMATIONS_MASK_SGIX [

	<enum: #'GL_DEFORMATIONS_MASK_SGIX'>
	<value: 16r8196>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_DEFORMATIONS_MASK_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DELETE_STATUS [

	<enum: #'GL_DELETE_STATUS'>
	<value: 16r8B80>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB #ShaderParameterName)>
	^ GL_DELETE_STATUS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPENDENT_AR_TEXTURE_2D_NV [

	<enum: #'GL_DEPENDENT_AR_TEXTURE_2D_NV'>
	<value: 16r86E9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPENDENT_AR_TEXTURE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPENDENT_GB_TEXTURE_2D_NV [

	<enum: #'GL_DEPENDENT_GB_TEXTURE_2D_NV'>
	<value: 16r86EA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPENDENT_GB_TEXTURE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPENDENT_HILO_TEXTURE_2D_NV [

	<enum: #'GL_DEPENDENT_HILO_TEXTURE_2D_NV'>
	<value: 16r8858>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPENDENT_HILO_TEXTURE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPENDENT_RGB_TEXTURE_3D_NV [

	<enum: #'GL_DEPENDENT_RGB_TEXTURE_3D_NV'>
	<value: 16r8859>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPENDENT_RGB_TEXTURE_3D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV [

	<enum: #'GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV'>
	<value: 16r885A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH [

	<enum: #'GL_DEPTH'>
	<value: 16r1801>
	<vendor: #ARB>
	<groups: #(#Buffer #InvalidateFramebufferAttachment #PixelCopyType)>
	^ GL_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH24_STENCIL8 [

	<enum: #'GL_DEPTH24_STENCIL8'>
	<value: 16r88F0>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH24_STENCIL8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH24_STENCIL8_EXT [

	<enum: #'GL_DEPTH24_STENCIL8_EXT'>
	<value: 16r88F0>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH24_STENCIL8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH24_STENCIL8_OES [

	<enum: #'GL_DEPTH24_STENCIL8_OES'>
	<value: 16r88F0>
	<vendor: #NV>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH24_STENCIL8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH32F_STENCIL8 [

	<enum: #'GL_DEPTH32F_STENCIL8'>
	<value: 16r8CAD>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH32F_STENCIL8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH32F_STENCIL8_NV [

	<enum: #'GL_DEPTH32F_STENCIL8_NV'>
	<value: 16r8DAC>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH32F_STENCIL8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_ATTACHMENT [

	<enum: #'GL_DEPTH_ATTACHMENT'>
	<value: 16r8D00>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachment #InvalidateFramebufferAttachment)>
	^ GL_DEPTH_ATTACHMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_ATTACHMENT_EXT [

	<enum: #'GL_DEPTH_ATTACHMENT_EXT'>
	<value: 16r8D00>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_DEPTH_ATTACHMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_ATTACHMENT_OES [

	<enum: #'GL_DEPTH_ATTACHMENT_OES'>
	<value: 16r8D00>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_DEPTH_ATTACHMENT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BIAS [

	<enum: #'GL_DEPTH_BIAS'>
	<value: 16rD1F>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_DEPTH_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BITS [

	<enum: #'GL_DEPTH_BITS'>
	<value: 16rD56>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_DEPTH_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BOUNDS_EXT [

	<enum: #'GL_DEPTH_BOUNDS_EXT'>
	<value: 16r8891>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DEPTH_BOUNDS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BOUNDS_TEST_EXT [

	<enum: #'GL_DEPTH_BOUNDS_TEST_EXT'>
	<value: 16r8890>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DEPTH_BOUNDS_TEST_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT [

	<enum: #'GL_DEPTH_BUFFER_BIT'>
	<value: 2r100000000>
	<bitmask>
	<groups: #(#AttribMask #ClearBufferMask)>
	^ GL_DEPTH_BUFFER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT0_QCOM [

	<enum: #'GL_DEPTH_BUFFER_BIT0_QCOM'>
	<value: 2r100000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_DEPTH_BUFFER_BIT0_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT1_QCOM [

	<enum: #'GL_DEPTH_BUFFER_BIT1_QCOM'>
	<value: 2r1000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_DEPTH_BUFFER_BIT1_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT2_QCOM [

	<enum: #'GL_DEPTH_BUFFER_BIT2_QCOM'>
	<value: 2r10000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_DEPTH_BUFFER_BIT2_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT3_QCOM [

	<enum: #'GL_DEPTH_BUFFER_BIT3_QCOM'>
	<value: 2r100000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_DEPTH_BUFFER_BIT3_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT4_QCOM [

	<enum: #'GL_DEPTH_BUFFER_BIT4_QCOM'>
	<value: 2r1000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_DEPTH_BUFFER_BIT4_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT5_QCOM [

	<enum: #'GL_DEPTH_BUFFER_BIT5_QCOM'>
	<value: 2r10000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_DEPTH_BUFFER_BIT5_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT6_QCOM [

	<enum: #'GL_DEPTH_BUFFER_BIT6_QCOM'>
	<value: 2r100000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_DEPTH_BUFFER_BIT6_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_BIT7_QCOM [

	<enum: #'GL_DEPTH_BUFFER_BIT7_QCOM'>
	<value: 2r1000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_DEPTH_BUFFER_BIT7_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_BUFFER_FLOAT_MODE_NV [

	<enum: #'GL_DEPTH_BUFFER_FLOAT_MODE_NV'>
	<value: 16r8DAF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPTH_BUFFER_FLOAT_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_CLAMP [

	<enum: #'GL_DEPTH_CLAMP'>
	<value: 16r864F>
	<vendor: #NV>
	<groups: #(#EnableCap)>
	^ GL_DEPTH_CLAMP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_CLAMP_EXT [

	<enum: #'GL_DEPTH_CLAMP_EXT'>
	<value: 16r864F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DEPTH_CLAMP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_CLAMP_FAR_AMD [

	<enum: #'GL_DEPTH_CLAMP_FAR_AMD'>
	<value: 16r901F>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEPTH_CLAMP_FAR_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_CLAMP_NEAR_AMD [

	<enum: #'GL_DEPTH_CLAMP_NEAR_AMD'>
	<value: 16r901E>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DEPTH_CLAMP_NEAR_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_CLAMP_NV [

	<enum: #'GL_DEPTH_CLAMP_NV'>
	<value: 16r864F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPTH_CLAMP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_CLEAR_VALUE [

	<enum: #'GL_DEPTH_CLEAR_VALUE'>
	<value: 16rB73>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_DEPTH_CLEAR_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT [

	<enum: #'GL_DEPTH_COMPONENT'>
	<value: 16r1902>
	<vendor: #ARB>
	<groups: #(#InternalFormat #PixelFormat)>
	^ GL_DEPTH_COMPONENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT16 [

	<enum: #'GL_DEPTH_COMPONENT16'>
	<value: 16r81A5>
	<vendor: #SGI>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT16_ARB [

	<enum: #'GL_DEPTH_COMPONENT16_ARB'>
	<value: 16r81A5>
	<vendor: #SGI>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT16_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT16_NONLINEAR_NV [

	<enum: #'GL_DEPTH_COMPONENT16_NONLINEAR_NV'>
	<value: 16r8E2C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPTH_COMPONENT16_NONLINEAR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT16_OES [

	<enum: #'GL_DEPTH_COMPONENT16_OES'>
	<value: 16r81A5>
	<vendor: #SGI>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT16_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT16_SGIX [

	<enum: #'GL_DEPTH_COMPONENT16_SGIX'>
	<value: 16r81A5>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT16_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT24 [

	<enum: #'GL_DEPTH_COMPONENT24'>
	<value: 16r81A6>
	<vendor: #SGI>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT24
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT24_ARB [

	<enum: #'GL_DEPTH_COMPONENT24_ARB'>
	<value: 16r81A6>
	<vendor: #SGI>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT24_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT24_OES [

	<enum: #'GL_DEPTH_COMPONENT24_OES'>
	<value: 16r81A6>
	<vendor: #SGI>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT24_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT24_SGIX [

	<enum: #'GL_DEPTH_COMPONENT24_SGIX'>
	<value: 16r81A6>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT24_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT32 [

	<enum: #'GL_DEPTH_COMPONENT32'>
	<value: 16r81A7>
	<vendor: #SGI>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT32
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT32F [

	<enum: #'GL_DEPTH_COMPONENT32F'>
	<value: 16r8CAC>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT32F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT32F_NV [

	<enum: #'GL_DEPTH_COMPONENT32F_NV'>
	<value: 16r8DAB>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT32F_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT32_ARB [

	<enum: #'GL_DEPTH_COMPONENT32_ARB'>
	<value: 16r81A7>
	<vendor: #SGI>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT32_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT32_OES [

	<enum: #'GL_DEPTH_COMPONENT32_OES'>
	<value: 16r81A7>
	<vendor: #SGI>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT32_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENT32_SGIX [

	<enum: #'GL_DEPTH_COMPONENT32_SGIX'>
	<value: 16r81A7>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_DEPTH_COMPONENT32_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_COMPONENTS [

	<enum: #'GL_DEPTH_COMPONENTS'>
	<value: 16r8284>
	<vendor: #ARB>
	^ GL_DEPTH_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_EXT [

	<enum: #'GL_DEPTH_EXT'>
	<value: 16r1801>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelCopyType)>
	^ GL_DEPTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_FUNC [

	<enum: #'GL_DEPTH_FUNC'>
	<value: 16rB74>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_DEPTH_FUNC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX [

	<enum: #'GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX'>
	<value: 16r8311>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_PASS_INSTRUMENT_MAX_SGIX [

	<enum: #'GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX'>
	<value: 16r8312>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_PASS_INSTRUMENT_SGIX [

	<enum: #'GL_DEPTH_PASS_INSTRUMENT_SGIX'>
	<value: 16r8310>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_DEPTH_PASS_INSTRUMENT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_RANGE [

	<enum: #'GL_DEPTH_RANGE'>
	<value: 16rB70>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_DEPTH_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_RENDERABLE [

	<enum: #'GL_DEPTH_RENDERABLE'>
	<value: 16r8287>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_DEPTH_RENDERABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_SAMPLES_NV [

	<enum: #'GL_DEPTH_SAMPLES_NV'>
	<value: 16r932D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPTH_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_SCALE [

	<enum: #'GL_DEPTH_SCALE'>
	<value: 16rD1E>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_DEPTH_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL [

	<enum: #'GL_DEPTH_STENCIL'>
	<value: 16r84F9>
	<vendor: #NV>
	<groups: #(#InternalFormat #PixelFormat)>
	^ GL_DEPTH_STENCIL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL_ATTACHMENT [

	<enum: #'GL_DEPTH_STENCIL_ATTACHMENT'>
	<value: 16r821A>
	<vendor: #ARB>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_DEPTH_STENCIL_ATTACHMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL_EXT [

	<enum: #'GL_DEPTH_STENCIL_EXT'>
	<value: 16r84F9>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat)>
	^ GL_DEPTH_STENCIL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL_MESA [

	<enum: #'GL_DEPTH_STENCIL_MESA'>
	<value: 16r8750>
	<vendor: #MESA>
	<suffix: #MESA>
	<groups: #(#InternalFormat)>
	^ GL_DEPTH_STENCIL_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL_NV [

	<enum: #'GL_DEPTH_STENCIL_NV'>
	<value: 16r84F9>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#InternalFormat)>
	^ GL_DEPTH_STENCIL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL_OES [

	<enum: #'GL_DEPTH_STENCIL_OES'>
	<value: 16r84F9>
	<vendor: #NV>
	<suffix: #OES>
	<groups: #(#InternalFormat)>
	^ GL_DEPTH_STENCIL_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL_TEXTURE_MODE [

	<enum: #'GL_DEPTH_STENCIL_TEXTURE_MODE'>
	<value: 16r90EA>
	<vendor: #NV>
	<groups: #(#TextureParameterName)>
	^ GL_DEPTH_STENCIL_TEXTURE_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL_TO_BGRA_NV [

	<enum: #'GL_DEPTH_STENCIL_TO_BGRA_NV'>
	<value: 16r886F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPTH_STENCIL_TO_BGRA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_STENCIL_TO_RGBA_NV [

	<enum: #'GL_DEPTH_STENCIL_TO_RGBA_NV'>
	<value: 16r886E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DEPTH_STENCIL_TO_RGBA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_TEST [

	<enum: #'GL_DEPTH_TEST'>
	<value: 16rB71>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_DEPTH_TEST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_TEXTURE_MODE [

	<enum: #'GL_DEPTH_TEXTURE_MODE'>
	<value: 16r884B>
	<vendor: #ARB>
	^ GL_DEPTH_TEXTURE_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_TEXTURE_MODE_ARB [

	<enum: #'GL_DEPTH_TEXTURE_MODE_ARB'>
	<value: 16r884B>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DEPTH_TEXTURE_MODE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEPTH_WRITEMASK [

	<enum: #'GL_DEPTH_WRITEMASK'>
	<value: 16rB72>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_DEPTH_WRITEMASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DETACHED_BUFFERS_NV [

	<enum: #'GL_DETACHED_BUFFERS_NV'>
	<value: 16r95AB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DETACHED_BUFFERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DETACHED_MEMORY_INCARNATION_NV [

	<enum: #'GL_DETACHED_MEMORY_INCARNATION_NV'>
	<value: 16r95A9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DETACHED_MEMORY_INCARNATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DETACHED_TEXTURES_NV [

	<enum: #'GL_DETACHED_TEXTURES_NV'>
	<value: 16r95AA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DETACHED_TEXTURES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DETAIL_TEXTURE_2D_BINDING_SGIS [

	<enum: #'GL_DETAIL_TEXTURE_2D_BINDING_SGIS'>
	<value: 16r8096>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_DETAIL_TEXTURE_2D_BINDING_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DETAIL_TEXTURE_2D_SGIS [

	<enum: #'GL_DETAIL_TEXTURE_2D_SGIS'>
	<value: 16r8095>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#TextureTarget)>
	^ GL_DETAIL_TEXTURE_2D_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DETAIL_TEXTURE_FUNC_POINTS_SGIS [

	<enum: #'GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS'>
	<value: 16r809C>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DETAIL_TEXTURE_LEVEL_SGIS [

	<enum: #'GL_DETAIL_TEXTURE_LEVEL_SGIS'>
	<value: 16r809A>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_DETAIL_TEXTURE_LEVEL_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DETAIL_TEXTURE_MODE_SGIS [

	<enum: #'GL_DETAIL_TEXTURE_MODE_SGIS'>
	<value: 16r809B>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_DETAIL_TEXTURE_MODE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEVICE_LUID_EXT [

	<enum: #'GL_DEVICE_LUID_EXT'>
	<value: 16r9599>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_DEVICE_LUID_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEVICE_NODE_MASK_EXT [

	<enum: #'GL_DEVICE_NODE_MASK_EXT'>
	<value: 16r959A>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_DEVICE_NODE_MASK_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DEVICE_UUID_EXT [

	<enum: #'GL_DEVICE_UUID_EXT'>
	<value: 16r9597>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_DEVICE_UUID_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DIFFERENCE [

	<enum: #'GL_DIFFERENCE'>
	<value: 16r929E>
	<vendor: #NV>
	^ GL_DIFFERENCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DIFFERENCE_KHR [

	<enum: #'GL_DIFFERENCE_KHR'>
	<value: 16r929E>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_DIFFERENCE_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DIFFERENCE_NV [

	<enum: #'GL_DIFFERENCE_NV'>
	<value: 16r929E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DIFFERENCE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DIFFUSE [

	<enum: #'GL_DIFFUSE'>
	<value: 16r1201>
	<vendor: #ARB>
	<groups: #(#ColorMaterialParameter #FragmentLightParameterSGIX #MaterialParameter)>
	^ GL_DIFFUSE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISCARD_ATI [

	<enum: #'GL_DISCARD_ATI'>
	<value: 16r8763>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#PreserveModeATI)>
	^ GL_DISCARD_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISCARD_NV [

	<enum: #'GL_DISCARD_NV'>
	<value: 16r8530>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerRegisterNV)>
	^ GL_DISCARD_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISCRETE_AMD [

	<enum: #'GL_DISCRETE_AMD'>
	<value: 16r9006>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_DISCRETE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISJOINT_NV [

	<enum: #'GL_DISJOINT_NV'>
	<value: 16r9283>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DISJOINT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISPATCH_INDIRECT_BUFFER [

	<enum: #'GL_DISPATCH_INDIRECT_BUFFER'>
	<value: 16r90EE>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_DISPATCH_INDIRECT_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISPATCH_INDIRECT_BUFFER_BINDING [

	<enum: #'GL_DISPATCH_INDIRECT_BUFFER_BINDING'>
	<value: 16r90EF>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_DISPATCH_INDIRECT_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISPLAY_LIST [

	<enum: #'GL_DISPLAY_LIST'>
	<value: 16r82E7>
	<vendor: #ARB>
	^ GL_DISPLAY_LIST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISTANCE_ATTENUATION_EXT [

	<enum: #'GL_DISTANCE_ATTENUATION_EXT'>
	<value: 16r8129>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#PointParameterNameSGIS)>
	^ GL_DISTANCE_ATTENUATION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DISTANCE_ATTENUATION_SGIS [

	<enum: #'GL_DISTANCE_ATTENUATION_SGIS'>
	<value: 16r8129>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #PointParameterNameSGIS)>
	^ GL_DISTANCE_ATTENUATION_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DITHER [

	<enum: #'GL_DITHER'>
	<value: 16rBD0>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_DITHER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DMP_PROGRAM_BINARY_DMP [

	<enum: #'GL_DMP_PROGRAM_BINARY_DMP'>
	<value: 16r9253>
	<vendor: #DMP>
	<suffix: #DMP>
	^ GL_DMP_PROGRAM_BINARY_DMP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOMAIN [

	<enum: #'GL_DOMAIN'>
	<value: 16rA02>
	<vendor: #ARB>
	<groups: #(#GetMapQuery #MapQuery)>
	^ GL_DOMAIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DONT_CARE [

	<enum: #'GL_DONT_CARE'>
	<value: 16r1100>
	<vendor: #ARB>
	<groups: #(#DebugSeverity #DebugSource #DebugType #HintMode)>
	^ GL_DONT_CARE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT2_ADD_ATI [

	<enum: #'GL_DOT2_ADD_ATI'>
	<value: 16r896C>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_DOT2_ADD_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT3_ATI [

	<enum: #'GL_DOT3_ATI'>
	<value: 16r8966>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_DOT3_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT3_RGB [

	<enum: #'GL_DOT3_RGB'>
	<value: 16r86AE>
	<vendor: #ARB>
	^ GL_DOT3_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT3_RGBA [

	<enum: #'GL_DOT3_RGBA'>
	<value: 16r86AF>
	<vendor: #ARB>
	^ GL_DOT3_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT3_RGBA_ARB [

	<enum: #'GL_DOT3_RGBA_ARB'>
	<value: 16r86AF>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DOT3_RGBA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT3_RGBA_EXT [

	<enum: #'GL_DOT3_RGBA_EXT'>
	<value: 16r8741>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DOT3_RGBA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT3_RGBA_IMG [

	<enum: #'GL_DOT3_RGBA_IMG'>
	<value: 16r86AF>
	<vendor: #ARB>
	<suffix: #IMG>
	^ GL_DOT3_RGBA_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT3_RGB_ARB [

	<enum: #'GL_DOT3_RGB_ARB'>
	<value: 16r86AE>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_DOT3_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT3_RGB_EXT [

	<enum: #'GL_DOT3_RGB_EXT'>
	<value: 16r8740>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DOT3_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT4_ATI [

	<enum: #'GL_DOT4_ATI'>
	<value: 16r8967>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_DOT4_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV [

	<enum: #'GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV'>
	<value: 16r885D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV [

	<enum: #'GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV'>
	<value: 16r86F3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_DEPTH_REPLACE_NV [

	<enum: #'GL_DOT_PRODUCT_DEPTH_REPLACE_NV'>
	<value: 16r86ED>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_DEPTH_REPLACE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV [

	<enum: #'GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV'>
	<value: 16r86F1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_NV [

	<enum: #'GL_DOT_PRODUCT_NV'>
	<value: 16r86EC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_PASS_THROUGH_NV [

	<enum: #'GL_DOT_PRODUCT_PASS_THROUGH_NV'>
	<value: 16r885B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_PASS_THROUGH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_REFLECT_CUBE_MAP_NV [

	<enum: #'GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV'>
	<value: 16r86F2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_TEXTURE_1D_NV [

	<enum: #'GL_DOT_PRODUCT_TEXTURE_1D_NV'>
	<value: 16r885C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_TEXTURE_1D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_TEXTURE_2D_NV [

	<enum: #'GL_DOT_PRODUCT_TEXTURE_2D_NV'>
	<value: 16r86EE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_TEXTURE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_TEXTURE_3D_NV [

	<enum: #'GL_DOT_PRODUCT_TEXTURE_3D_NV'>
	<value: 16r86EF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_TEXTURE_3D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_TEXTURE_CUBE_MAP_NV [

	<enum: #'GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV'>
	<value: 16r86F0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOT_PRODUCT_TEXTURE_RECTANGLE_NV [

	<enum: #'GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV'>
	<value: 16r864E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE [

	<enum: #'GL_DOUBLE'>
	<value: 16r140A>
	<vendor: #ARB>
	<groups: #(#AttributeType #BinormalPointerTypeEXT #FogCoordinatePointerType #FogPointerTypeEXT #FogPointerTypeIBM #GlslTypeToken #IndexPointerType #MapTypeNV #NormalPointerType #SecondaryColorPointerTypeIBM #TangentPointerTypeEXT #TexCoordPointerType #UniformType #VertexAttribLType #VertexAttribPointerType #VertexAttribType #VertexPointerType #WeightPointerTypeARB)>
	^ GL_DOUBLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLEBUFFER [

	<enum: #'GL_DOUBLEBUFFER'>
	<value: 16rC32>
	<vendor: #ARB>
	<groups: #(#GetFramebufferParameter #GetPName)>
	^ GL_DOUBLEBUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_EXT [

	<enum: #'GL_DOUBLE_EXT'>
	<value: 16r140A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#BinormalPointerTypeEXT #TangentPointerTypeEXT)>
	^ GL_DOUBLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT2 [

	<enum: #'GL_DOUBLE_MAT2'>
	<value: 16r8F46>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_DOUBLE_MAT2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT2_EXT [

	<enum: #'GL_DOUBLE_MAT2_EXT'>
	<value: 16r8F46>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT2x3 [

	<enum: #'GL_DOUBLE_MAT2x3'>
	<value: 16r8F49>
	<vendor: #NV>
	<groups: #(#AttributeType #UniformType)>
	^ GL_DOUBLE_MAT2x3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT2x3_EXT [

	<enum: #'GL_DOUBLE_MAT2x3_EXT'>
	<value: 16r8F49>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT2x3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT2x4 [

	<enum: #'GL_DOUBLE_MAT2x4'>
	<value: 16r8F4A>
	<vendor: #NV>
	<groups: #(#AttributeType #UniformType)>
	^ GL_DOUBLE_MAT2x4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT2x4_EXT [

	<enum: #'GL_DOUBLE_MAT2x4_EXT'>
	<value: 16r8F4A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT2x4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT3 [

	<enum: #'GL_DOUBLE_MAT3'>
	<value: 16r8F47>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_DOUBLE_MAT3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT3_EXT [

	<enum: #'GL_DOUBLE_MAT3_EXT'>
	<value: 16r8F47>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT3x2 [

	<enum: #'GL_DOUBLE_MAT3x2'>
	<value: 16r8F4B>
	<vendor: #NV>
	<groups: #(#AttributeType #UniformType)>
	^ GL_DOUBLE_MAT3x2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT3x2_EXT [

	<enum: #'GL_DOUBLE_MAT3x2_EXT'>
	<value: 16r8F4B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT3x2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT3x4 [

	<enum: #'GL_DOUBLE_MAT3x4'>
	<value: 16r8F4C>
	<vendor: #NV>
	<groups: #(#AttributeType #UniformType)>
	^ GL_DOUBLE_MAT3x4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT3x4_EXT [

	<enum: #'GL_DOUBLE_MAT3x4_EXT'>
	<value: 16r8F4C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT3x4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT4 [

	<enum: #'GL_DOUBLE_MAT4'>
	<value: 16r8F48>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_DOUBLE_MAT4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT4_EXT [

	<enum: #'GL_DOUBLE_MAT4_EXT'>
	<value: 16r8F48>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT4x2 [

	<enum: #'GL_DOUBLE_MAT4x2'>
	<value: 16r8F4D>
	<vendor: #NV>
	<groups: #(#AttributeType #UniformType)>
	^ GL_DOUBLE_MAT4x2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT4x2_EXT [

	<enum: #'GL_DOUBLE_MAT4x2_EXT'>
	<value: 16r8F4D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT4x2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT4x3 [

	<enum: #'GL_DOUBLE_MAT4x3'>
	<value: 16r8F4E>
	<vendor: #NV>
	<groups: #(#AttributeType #UniformType)>
	^ GL_DOUBLE_MAT4x3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_MAT4x3_EXT [

	<enum: #'GL_DOUBLE_MAT4x3_EXT'>
	<value: 16r8F4E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_MAT4x3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_VEC2 [

	<enum: #'GL_DOUBLE_VEC2'>
	<value: 16r8FFC>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_DOUBLE_VEC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_VEC2_EXT [

	<enum: #'GL_DOUBLE_VEC2_EXT'>
	<value: 16r8FFC>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_VEC2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_VEC3 [

	<enum: #'GL_DOUBLE_VEC3'>
	<value: 16r8FFD>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_DOUBLE_VEC3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_VEC3_EXT [

	<enum: #'GL_DOUBLE_VEC3_EXT'>
	<value: 16r8FFD>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_VEC3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_VEC4 [

	<enum: #'GL_DOUBLE_VEC4'>
	<value: 16r8FFE>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_DOUBLE_VEC4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOUBLE_VEC4_EXT [

	<enum: #'GL_DOUBLE_VEC4_EXT'>
	<value: 16r8FFE>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_DOUBLE_VEC4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DOWNSAMPLE_SCALES_IMG [

	<enum: #'GL_DOWNSAMPLE_SCALES_IMG'>
	<value: 16r913E>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_DOWNSAMPLE_SCALES_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_ARRAYS_COMMAND_NV [

	<enum: #'GL_DRAW_ARRAYS_COMMAND_NV'>
	<value: 16r3>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_DRAW_ARRAYS_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_ARRAYS_INSTANCED_COMMAND_NV [

	<enum: #'GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV'>
	<value: 16r7>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_ARRAYS_STRIP_COMMAND_NV [

	<enum: #'GL_DRAW_ARRAYS_STRIP_COMMAND_NV'>
	<value: 16r5>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_DRAW_ARRAYS_STRIP_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER [

	<enum: #'GL_DRAW_BUFFER'>
	<value: 16rC01>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_DRAW_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER0 [

	<enum: #'GL_DRAW_BUFFER0'>
	<value: 16r8825>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER0
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER0_ARB [

	<enum: #'GL_DRAW_BUFFER0_ARB'>
	<value: 16r8825>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER0_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER0_ATI [

	<enum: #'GL_DRAW_BUFFER0_ATI'>
	<value: 16r8825>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER0_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER0_EXT [

	<enum: #'GL_DRAW_BUFFER0_EXT'>
	<value: 16r8825>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER0_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER0_NV [

	<enum: #'GL_DRAW_BUFFER0_NV'>
	<value: 16r8825>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER0_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER1 [

	<enum: #'GL_DRAW_BUFFER1'>
	<value: 16r8826>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER10 [

	<enum: #'GL_DRAW_BUFFER10'>
	<value: 16r882F>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER10_ARB [

	<enum: #'GL_DRAW_BUFFER10_ARB'>
	<value: 16r882F>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER10_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER10_ATI [

	<enum: #'GL_DRAW_BUFFER10_ATI'>
	<value: 16r882F>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER10_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER10_EXT [

	<enum: #'GL_DRAW_BUFFER10_EXT'>
	<value: 16r882F>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER10_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER10_NV [

	<enum: #'GL_DRAW_BUFFER10_NV'>
	<value: 16r882F>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER10_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER11 [

	<enum: #'GL_DRAW_BUFFER11'>
	<value: 16r8830>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER11
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER11_ARB [

	<enum: #'GL_DRAW_BUFFER11_ARB'>
	<value: 16r8830>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER11_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER11_ATI [

	<enum: #'GL_DRAW_BUFFER11_ATI'>
	<value: 16r8830>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER11_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER11_EXT [

	<enum: #'GL_DRAW_BUFFER11_EXT'>
	<value: 16r8830>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER11_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER11_NV [

	<enum: #'GL_DRAW_BUFFER11_NV'>
	<value: 16r8830>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER11_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER12 [

	<enum: #'GL_DRAW_BUFFER12'>
	<value: 16r8831>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER12_ARB [

	<enum: #'GL_DRAW_BUFFER12_ARB'>
	<value: 16r8831>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER12_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER12_ATI [

	<enum: #'GL_DRAW_BUFFER12_ATI'>
	<value: 16r8831>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER12_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER12_EXT [

	<enum: #'GL_DRAW_BUFFER12_EXT'>
	<value: 16r8831>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER12_NV [

	<enum: #'GL_DRAW_BUFFER12_NV'>
	<value: 16r8831>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER12_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER13 [

	<enum: #'GL_DRAW_BUFFER13'>
	<value: 16r8832>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER13
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER13_ARB [

	<enum: #'GL_DRAW_BUFFER13_ARB'>
	<value: 16r8832>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER13_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER13_ATI [

	<enum: #'GL_DRAW_BUFFER13_ATI'>
	<value: 16r8832>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER13_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER13_EXT [

	<enum: #'GL_DRAW_BUFFER13_EXT'>
	<value: 16r8832>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER13_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER13_NV [

	<enum: #'GL_DRAW_BUFFER13_NV'>
	<value: 16r8832>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER13_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER14 [

	<enum: #'GL_DRAW_BUFFER14'>
	<value: 16r8833>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER14
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER14_ARB [

	<enum: #'GL_DRAW_BUFFER14_ARB'>
	<value: 16r8833>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER14_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER14_ATI [

	<enum: #'GL_DRAW_BUFFER14_ATI'>
	<value: 16r8833>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER14_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER14_EXT [

	<enum: #'GL_DRAW_BUFFER14_EXT'>
	<value: 16r8833>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER14_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER14_NV [

	<enum: #'GL_DRAW_BUFFER14_NV'>
	<value: 16r8833>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER14_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER15 [

	<enum: #'GL_DRAW_BUFFER15'>
	<value: 16r8834>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER15
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER15_ARB [

	<enum: #'GL_DRAW_BUFFER15_ARB'>
	<value: 16r8834>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER15_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER15_ATI [

	<enum: #'GL_DRAW_BUFFER15_ATI'>
	<value: 16r8834>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER15_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER15_EXT [

	<enum: #'GL_DRAW_BUFFER15_EXT'>
	<value: 16r8834>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER15_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER15_NV [

	<enum: #'GL_DRAW_BUFFER15_NV'>
	<value: 16r8834>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER15_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER1_ARB [

	<enum: #'GL_DRAW_BUFFER1_ARB'>
	<value: 16r8826>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER1_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER1_ATI [

	<enum: #'GL_DRAW_BUFFER1_ATI'>
	<value: 16r8826>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER1_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER1_EXT [

	<enum: #'GL_DRAW_BUFFER1_EXT'>
	<value: 16r8826>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER1_NV [

	<enum: #'GL_DRAW_BUFFER1_NV'>
	<value: 16r8826>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER2 [

	<enum: #'GL_DRAW_BUFFER2'>
	<value: 16r8827>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER2_ARB [

	<enum: #'GL_DRAW_BUFFER2_ARB'>
	<value: 16r8827>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER2_ATI [

	<enum: #'GL_DRAW_BUFFER2_ATI'>
	<value: 16r8827>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER2_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER2_EXT [

	<enum: #'GL_DRAW_BUFFER2_EXT'>
	<value: 16r8827>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER2_NV [

	<enum: #'GL_DRAW_BUFFER2_NV'>
	<value: 16r8827>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER3 [

	<enum: #'GL_DRAW_BUFFER3'>
	<value: 16r8828>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER3_ARB [

	<enum: #'GL_DRAW_BUFFER3_ARB'>
	<value: 16r8828>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER3_ATI [

	<enum: #'GL_DRAW_BUFFER3_ATI'>
	<value: 16r8828>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER3_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER3_EXT [

	<enum: #'GL_DRAW_BUFFER3_EXT'>
	<value: 16r8828>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER3_NV [

	<enum: #'GL_DRAW_BUFFER3_NV'>
	<value: 16r8828>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER4 [

	<enum: #'GL_DRAW_BUFFER4'>
	<value: 16r8829>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER4_ARB [

	<enum: #'GL_DRAW_BUFFER4_ARB'>
	<value: 16r8829>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER4_ATI [

	<enum: #'GL_DRAW_BUFFER4_ATI'>
	<value: 16r8829>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER4_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER4_EXT [

	<enum: #'GL_DRAW_BUFFER4_EXT'>
	<value: 16r8829>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER4_NV [

	<enum: #'GL_DRAW_BUFFER4_NV'>
	<value: 16r8829>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER5 [

	<enum: #'GL_DRAW_BUFFER5'>
	<value: 16r882A>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER5_ARB [

	<enum: #'GL_DRAW_BUFFER5_ARB'>
	<value: 16r882A>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER5_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER5_ATI [

	<enum: #'GL_DRAW_BUFFER5_ATI'>
	<value: 16r882A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER5_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER5_EXT [

	<enum: #'GL_DRAW_BUFFER5_EXT'>
	<value: 16r882A>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER5_NV [

	<enum: #'GL_DRAW_BUFFER5_NV'>
	<value: 16r882A>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER5_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER6 [

	<enum: #'GL_DRAW_BUFFER6'>
	<value: 16r882B>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER6_ARB [

	<enum: #'GL_DRAW_BUFFER6_ARB'>
	<value: 16r882B>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER6_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER6_ATI [

	<enum: #'GL_DRAW_BUFFER6_ATI'>
	<value: 16r882B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER6_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER6_EXT [

	<enum: #'GL_DRAW_BUFFER6_EXT'>
	<value: 16r882B>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER6_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER6_NV [

	<enum: #'GL_DRAW_BUFFER6_NV'>
	<value: 16r882B>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER6_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER7 [

	<enum: #'GL_DRAW_BUFFER7'>
	<value: 16r882C>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER7
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER7_ARB [

	<enum: #'GL_DRAW_BUFFER7_ARB'>
	<value: 16r882C>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER7_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER7_ATI [

	<enum: #'GL_DRAW_BUFFER7_ATI'>
	<value: 16r882C>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER7_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER7_EXT [

	<enum: #'GL_DRAW_BUFFER7_EXT'>
	<value: 16r882C>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER7_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER7_NV [

	<enum: #'GL_DRAW_BUFFER7_NV'>
	<value: 16r882C>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER7_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER8 [

	<enum: #'GL_DRAW_BUFFER8'>
	<value: 16r882D>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER8_ARB [

	<enum: #'GL_DRAW_BUFFER8_ARB'>
	<value: 16r882D>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER8_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER8_ATI [

	<enum: #'GL_DRAW_BUFFER8_ATI'>
	<value: 16r882D>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER8_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER8_EXT [

	<enum: #'GL_DRAW_BUFFER8_EXT'>
	<value: 16r882D>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER8_NV [

	<enum: #'GL_DRAW_BUFFER8_NV'>
	<value: 16r882D>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER9 [

	<enum: #'GL_DRAW_BUFFER9'>
	<value: 16r882E>
	<vendor: #AMD>
	^ GL_DRAW_BUFFER9
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER9_ARB [

	<enum: #'GL_DRAW_BUFFER9_ARB'>
	<value: 16r882E>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_DRAW_BUFFER9_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER9_ATI [

	<enum: #'GL_DRAW_BUFFER9_ATI'>
	<value: 16r882E>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DRAW_BUFFER9_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER9_EXT [

	<enum: #'GL_DRAW_BUFFER9_EXT'>
	<value: 16r882E>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_DRAW_BUFFER9_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER9_NV [

	<enum: #'GL_DRAW_BUFFER9_NV'>
	<value: 16r882E>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_DRAW_BUFFER9_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_BUFFER_EXT [

	<enum: #'GL_DRAW_BUFFER_EXT'>
	<value: 16rC01>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_DRAW_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_ELEMENTS_COMMAND_NV [

	<enum: #'GL_DRAW_ELEMENTS_COMMAND_NV'>
	<value: 16r2>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_DRAW_ELEMENTS_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_ELEMENTS_INSTANCED_COMMAND_NV [

	<enum: #'GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV'>
	<value: 16r6>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_ELEMENTS_STRIP_COMMAND_NV [

	<enum: #'GL_DRAW_ELEMENTS_STRIP_COMMAND_NV'>
	<value: 16r4>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_DRAW_ELEMENTS_STRIP_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER [

	<enum: #'GL_DRAW_FRAMEBUFFER'>
	<value: 16r8CA9>
	<vendor: #ARB>
	<groups: #(#CheckFramebufferStatusTarget #FramebufferTarget)>
	^ GL_DRAW_FRAMEBUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_ANGLE [

	<enum: #'GL_DRAW_FRAMEBUFFER_ANGLE'>
	<value: 16r8CA9>
	<vendor: #ARB>
	^ GL_DRAW_FRAMEBUFFER_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_APPLE [

	<enum: #'GL_DRAW_FRAMEBUFFER_APPLE'>
	<value: 16r8CA9>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_DRAW_FRAMEBUFFER_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_BINDING [

	<enum: #'GL_DRAW_FRAMEBUFFER_BINDING'>
	<value: 16r8CA6>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_DRAW_FRAMEBUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_BINDING_ANGLE [

	<enum: #'GL_DRAW_FRAMEBUFFER_BINDING_ANGLE'>
	<value: 16r8CA6>
	<vendor: #ARB>
	^ GL_DRAW_FRAMEBUFFER_BINDING_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_BINDING_APPLE [

	<enum: #'GL_DRAW_FRAMEBUFFER_BINDING_APPLE'>
	<value: 16r8CA6>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_DRAW_FRAMEBUFFER_BINDING_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_BINDING_EXT [

	<enum: #'GL_DRAW_FRAMEBUFFER_BINDING_EXT'>
	<value: 16r8CA6>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_DRAW_FRAMEBUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_BINDING_NV [

	<enum: #'GL_DRAW_FRAMEBUFFER_BINDING_NV'>
	<value: 16r8CA6>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_DRAW_FRAMEBUFFER_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_EXT [

	<enum: #'GL_DRAW_FRAMEBUFFER_EXT'>
	<value: 16r8CA9>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_DRAW_FRAMEBUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_FRAMEBUFFER_NV [

	<enum: #'GL_DRAW_FRAMEBUFFER_NV'>
	<value: 16r8CA9>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_DRAW_FRAMEBUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_INDIRECT_ADDRESS_NV [

	<enum: #'GL_DRAW_INDIRECT_ADDRESS_NV'>
	<value: 16r8F41>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DRAW_INDIRECT_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_INDIRECT_BUFFER [

	<enum: #'GL_DRAW_INDIRECT_BUFFER'>
	<value: 16r8F3F>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_DRAW_INDIRECT_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_INDIRECT_BUFFER_BINDING [

	<enum: #'GL_DRAW_INDIRECT_BUFFER_BINDING'>
	<value: 16r8F43>
	<vendor: #NV>
	^ GL_DRAW_INDIRECT_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_INDIRECT_LENGTH_NV [

	<enum: #'GL_DRAW_INDIRECT_LENGTH_NV'>
	<value: 16r8F42>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DRAW_INDIRECT_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_INDIRECT_UNIFIED_NV [

	<enum: #'GL_DRAW_INDIRECT_UNIFIED_NV'>
	<value: 16r8F40>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DRAW_INDIRECT_UNIFIED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_PIXELS_APPLE [

	<enum: #'GL_DRAW_PIXELS_APPLE'>
	<value: 16r8A0A>
	<vendor: #APPLE>
	<suffix: #APPLE>
	<groups: #(#ObjectTypeAPPLE)>
	^ GL_DRAW_PIXELS_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRAW_PIXEL_TOKEN [

	<enum: #'GL_DRAW_PIXEL_TOKEN'>
	<value: 16r705>
	<vendor: #ARB>
	<groups: #(#FeedBackToken)>
	^ GL_DRAW_PIXEL_TOKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DRIVER_UUID_EXT [

	<enum: #'GL_DRIVER_UUID_EXT'>
	<value: 16r9598>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_DRIVER_UUID_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DSDT8_MAG8_INTENSITY8_NV [

	<enum: #'GL_DSDT8_MAG8_INTENSITY8_NV'>
	<value: 16r870B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DSDT8_MAG8_INTENSITY8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DSDT8_MAG8_NV [

	<enum: #'GL_DSDT8_MAG8_NV'>
	<value: 16r870A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DSDT8_MAG8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DSDT8_NV [

	<enum: #'GL_DSDT8_NV'>
	<value: 16r8709>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DSDT8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DSDT_MAG_INTENSITY_NV [

	<enum: #'GL_DSDT_MAG_INTENSITY_NV'>
	<value: 16r86DC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DSDT_MAG_INTENSITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DSDT_MAG_NV [

	<enum: #'GL_DSDT_MAG_NV'>
	<value: 16r86F6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DSDT_MAG_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DSDT_MAG_VIB_NV [

	<enum: #'GL_DSDT_MAG_VIB_NV'>
	<value: 16r86F7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DSDT_MAG_VIB_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DSDT_NV [

	<enum: #'GL_DSDT_NV'>
	<value: 16r86F5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DSDT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DST_ALPHA [

	<enum: #'GL_DST_ALPHA'>
	<value: 16r304>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_DST_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DST_ATOP_NV [

	<enum: #'GL_DST_ATOP_NV'>
	<value: 16r928F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DST_ATOP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DST_COLOR [

	<enum: #'GL_DST_COLOR'>
	<value: 16r306>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_DST_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DST_IN_NV [

	<enum: #'GL_DST_IN_NV'>
	<value: 16r928B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DST_IN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DST_NV [

	<enum: #'GL_DST_NV'>
	<value: 16r9287>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DST_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DST_OUT_NV [

	<enum: #'GL_DST_OUT_NV'>
	<value: 16r928D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DST_OUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DST_OVER_NV [

	<enum: #'GL_DST_OVER_NV'>
	<value: 16r9289>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DST_OVER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DS_BIAS_NV [

	<enum: #'GL_DS_BIAS_NV'>
	<value: 16r8716>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DS_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DS_SCALE_NV [

	<enum: #'GL_DS_SCALE_NV'>
	<value: 16r8710>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DS_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DT_BIAS_NV [

	<enum: #'GL_DT_BIAS_NV'>
	<value: 16r8717>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DT_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DT_SCALE_NV [

	<enum: #'GL_DT_SCALE_NV'>
	<value: 16r8711>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_DT_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DU8DV8_ATI [

	<enum: #'GL_DU8DV8_ATI'>
	<value: 16r877A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DU8DV8_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_ALPHA12_SGIS [

	<enum: #'GL_DUAL_ALPHA12_SGIS'>
	<value: 16r8112>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_ALPHA12_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_ALPHA16_SGIS [

	<enum: #'GL_DUAL_ALPHA16_SGIS'>
	<value: 16r8113>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_ALPHA16_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_ALPHA4_SGIS [

	<enum: #'GL_DUAL_ALPHA4_SGIS'>
	<value: 16r8110>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_ALPHA4_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_ALPHA8_SGIS [

	<enum: #'GL_DUAL_ALPHA8_SGIS'>
	<value: 16r8111>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_ALPHA8_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_INTENSITY12_SGIS [

	<enum: #'GL_DUAL_INTENSITY12_SGIS'>
	<value: 16r811A>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_INTENSITY12_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_INTENSITY16_SGIS [

	<enum: #'GL_DUAL_INTENSITY16_SGIS'>
	<value: 16r811B>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_INTENSITY16_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_INTENSITY4_SGIS [

	<enum: #'GL_DUAL_INTENSITY4_SGIS'>
	<value: 16r8118>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_INTENSITY4_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_INTENSITY8_SGIS [

	<enum: #'GL_DUAL_INTENSITY8_SGIS'>
	<value: 16r8119>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_INTENSITY8_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_LUMINANCE12_SGIS [

	<enum: #'GL_DUAL_LUMINANCE12_SGIS'>
	<value: 16r8116>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_LUMINANCE12_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_LUMINANCE16_SGIS [

	<enum: #'GL_DUAL_LUMINANCE16_SGIS'>
	<value: 16r8117>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_LUMINANCE16_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_LUMINANCE4_SGIS [

	<enum: #'GL_DUAL_LUMINANCE4_SGIS'>
	<value: 16r8114>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_LUMINANCE4_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_LUMINANCE8_SGIS [

	<enum: #'GL_DUAL_LUMINANCE8_SGIS'>
	<value: 16r8115>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_LUMINANCE8_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_LUMINANCE_ALPHA4_SGIS [

	<enum: #'GL_DUAL_LUMINANCE_ALPHA4_SGIS'>
	<value: 16r811C>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_LUMINANCE_ALPHA4_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_LUMINANCE_ALPHA8_SGIS [

	<enum: #'GL_DUAL_LUMINANCE_ALPHA8_SGIS'>
	<value: 16r811D>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_DUAL_LUMINANCE_ALPHA8_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUAL_TEXTURE_SELECT_SGIS [

	<enum: #'GL_DUAL_TEXTURE_SELECT_SGIS'>
	<value: 16r8124>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_DUAL_TEXTURE_SELECT_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUDV_ATI [

	<enum: #'GL_DUDV_ATI'>
	<value: 16r8779>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_DUDV_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUP_FIRST_CUBIC_CURVE_TO_NV [

	<enum: #'GL_DUP_FIRST_CUBIC_CURVE_TO_NV'>
	<value: 16rF2>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_DUP_FIRST_CUBIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DUP_LAST_CUBIC_CURVE_TO_NV [

	<enum: #'GL_DUP_LAST_CUBIC_CURVE_TO_NV'>
	<value: 16rF4>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_DUP_LAST_CUBIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_ATI [

	<enum: #'GL_DYNAMIC_ATI'>
	<value: 16r8761>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#ArrayObjectUsageATI)>
	^ GL_DYNAMIC_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_COPY [

	<enum: #'GL_DYNAMIC_COPY'>
	<value: 16r88EA>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_DYNAMIC_COPY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_COPY_ARB [

	<enum: #'GL_DYNAMIC_COPY_ARB'>
	<value: 16r88EA>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_DYNAMIC_COPY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_DRAW [

	<enum: #'GL_DYNAMIC_DRAW'>
	<value: 16r88E8>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_DYNAMIC_DRAW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_DRAW_ARB [

	<enum: #'GL_DYNAMIC_DRAW_ARB'>
	<value: 16r88E8>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_DYNAMIC_DRAW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_READ [

	<enum: #'GL_DYNAMIC_READ'>
	<value: 16r88E9>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_DYNAMIC_READ
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_READ_ARB [

	<enum: #'GL_DYNAMIC_READ_ARB'>
	<value: 16r88E9>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_DYNAMIC_READ_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_STORAGE_BIT [

	<enum: #'GL_DYNAMIC_STORAGE_BIT'>
	<value: 2r100000000>
	<bitmask>
	<groups: #(#BufferStorageMask)>
	^ GL_DYNAMIC_STORAGE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> DYNAMIC_STORAGE_BIT_EXT [

	<enum: #'GL_DYNAMIC_STORAGE_BIT_EXT'>
	<value: 2r100000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#BufferStorageMask)>
	^ GL_DYNAMIC_STORAGE_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGEFLAG_BIT_PGI [

	<enum: #'GL_EDGEFLAG_BIT_PGI'>
	<value: 2r1000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_EDGEFLAG_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG [

	<enum: #'GL_EDGE_FLAG'>
	<value: 16rB43>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_EDGE_FLAG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY [

	<enum: #'GL_EDGE_FLAG_ARRAY'>
	<value: 16r8079>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_EDGE_FLAG_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_ADDRESS_NV [

	<enum: #'GL_EDGE_FLAG_ARRAY_ADDRESS_NV'>
	<value: 16r8F26>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EDGE_FLAG_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_BUFFER_BINDING [

	<enum: #'GL_EDGE_FLAG_ARRAY_BUFFER_BINDING'>
	<value: 16r889B>
	<vendor: #NV>
	^ GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r889B>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_COUNT_EXT [

	<enum: #'GL_EDGE_FLAG_ARRAY_COUNT_EXT'>
	<value: 16r808D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_EDGE_FLAG_ARRAY_COUNT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_EXT [

	<enum: #'GL_EDGE_FLAG_ARRAY_EXT'>
	<value: 16r8079>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_EDGE_FLAG_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_LENGTH_NV [

	<enum: #'GL_EDGE_FLAG_ARRAY_LENGTH_NV'>
	<value: 16r8F30>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EDGE_FLAG_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_LIST_IBM [

	<enum: #'GL_EDGE_FLAG_ARRAY_LIST_IBM'>
	<value: 16r192A3>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_EDGE_FLAG_ARRAY_LIST_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_LIST_STRIDE_IBM [

	<enum: #'GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM'>
	<value: 16r192AD>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_POINTER [

	<enum: #'GL_EDGE_FLAG_ARRAY_POINTER'>
	<value: 16r8093>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_EDGE_FLAG_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_POINTER_EXT [

	<enum: #'GL_EDGE_FLAG_ARRAY_POINTER_EXT'>
	<value: 16r8093>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPointervPName)>
	^ GL_EDGE_FLAG_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_STRIDE [

	<enum: #'GL_EDGE_FLAG_ARRAY_STRIDE'>
	<value: 16r808C>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_EDGE_FLAG_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EDGE_FLAG_ARRAY_STRIDE_EXT [

	<enum: #'GL_EDGE_FLAG_ARRAY_STRIDE_EXT'>
	<value: 16r808C>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_EDGE_FLAG_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EFFECTIVE_RASTER_SAMPLES_EXT [

	<enum: #'GL_EFFECTIVE_RASTER_SAMPLES_EXT'>
	<value: 16r932C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_EFFECTIVE_RASTER_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EIGHTH_BIT_ATI [

	<enum: #'GL_EIGHTH_BIT_ATI'>
	<value: 2r100000>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestModMaskATI)>
	^ GL_EIGHTH_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ADDRESS_COMMAND_NV [

	<enum: #'GL_ELEMENT_ADDRESS_COMMAND_NV'>
	<value: 16r8>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_ELEMENT_ADDRESS_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_ADDRESS_NV [

	<enum: #'GL_ELEMENT_ARRAY_ADDRESS_NV'>
	<value: 16r8F29>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ELEMENT_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_APPLE [

	<enum: #'GL_ELEMENT_ARRAY_APPLE'>
	<value: 16r8A0C>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_ELEMENT_ARRAY_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_ATI [

	<enum: #'GL_ELEMENT_ARRAY_ATI'>
	<value: 16r8768>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_ELEMENT_ARRAY_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_BARRIER_BIT [

	<enum: #'GL_ELEMENT_ARRAY_BARRIER_BIT'>
	<value: 2r10>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_ELEMENT_ARRAY_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_BARRIER_BIT_EXT [

	<enum: #'GL_ELEMENT_ARRAY_BARRIER_BIT_EXT'>
	<value: 2r10>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_ELEMENT_ARRAY_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_BUFFER [

	<enum: #'GL_ELEMENT_ARRAY_BUFFER'>
	<value: 16r8893>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_ELEMENT_ARRAY_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_BUFFER_ARB [

	<enum: #'GL_ELEMENT_ARRAY_BUFFER_ARB'>
	<value: 16r8893>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_ELEMENT_ARRAY_BUFFER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_BUFFER_BINDING [

	<enum: #'GL_ELEMENT_ARRAY_BUFFER_BINDING'>
	<value: 16r8895>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_ELEMENT_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r8895>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_LENGTH_NV [

	<enum: #'GL_ELEMENT_ARRAY_LENGTH_NV'>
	<value: 16r8F33>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ELEMENT_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_POINTER_APPLE [

	<enum: #'GL_ELEMENT_ARRAY_POINTER_APPLE'>
	<value: 16r8A0E>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_ELEMENT_ARRAY_POINTER_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_POINTER_ATI [

	<enum: #'GL_ELEMENT_ARRAY_POINTER_ATI'>
	<value: 16r876A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_ELEMENT_ARRAY_POINTER_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_TYPE_APPLE [

	<enum: #'GL_ELEMENT_ARRAY_TYPE_APPLE'>
	<value: 16r8A0D>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_ELEMENT_ARRAY_TYPE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_TYPE_ATI [

	<enum: #'GL_ELEMENT_ARRAY_TYPE_ATI'>
	<value: 16r8769>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_ELEMENT_ARRAY_TYPE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ELEMENT_ARRAY_UNIFIED_NV [

	<enum: #'GL_ELEMENT_ARRAY_UNIFIED_NV'>
	<value: 16r8F1F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ELEMENT_ARRAY_UNIFIED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EMBOSS_CONSTANT_NV [

	<enum: #'GL_EMBOSS_CONSTANT_NV'>
	<value: 16r855E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EMBOSS_CONSTANT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EMBOSS_LIGHT_NV [

	<enum: #'GL_EMBOSS_LIGHT_NV'>
	<value: 16r855D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EMBOSS_LIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EMBOSS_MAP_NV [

	<enum: #'GL_EMBOSS_MAP_NV'>
	<value: 16r855F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EMBOSS_MAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EMISSION [

	<enum: #'GL_EMISSION'>
	<value: 16r1600>
	<vendor: #ARB>
	<groups: #(#ColorMaterialParameter #MaterialParameter)>
	^ GL_EMISSION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ENABLE_BIT [

	<enum: #'GL_ENABLE_BIT'>
	<value: 2r10000000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_ENABLE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EQUAL [

	<enum: #'GL_EQUAL'>
	<value: 16r202>
	<vendor: #ARB>
	<groups: #(#AlphaFunction #DepthFunction #IndexFunctionEXT #StencilFunction)>
	^ GL_EQUAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EQUIV [

	<enum: #'GL_EQUIV'>
	<value: 16r1509>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_EQUIV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ETC1_RGB8_OES [

	<enum: #'GL_ETC1_RGB8_OES'>
	<value: 16r8D64>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_ETC1_RGB8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ETC1_SRGB8_NV [

	<enum: #'GL_ETC1_SRGB8_NV'>
	<value: 16r88EE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ETC1_SRGB8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_2D_NV [

	<enum: #'GL_EVAL_2D_NV'>
	<value: 16r86C0>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#EvalTargetNV)>
	^ GL_EVAL_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_BIT [

	<enum: #'GL_EVAL_BIT'>
	<value: 2r10000000000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_EVAL_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_FRACTIONAL_TESSELLATION_NV [

	<enum: #'GL_EVAL_FRACTIONAL_TESSELLATION_NV'>
	<value: 16r86C5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_FRACTIONAL_TESSELLATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_TRIANGULAR_2D_NV [

	<enum: #'GL_EVAL_TRIANGULAR_2D_NV'>
	<value: 16r86C1>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#EvalTargetNV)>
	^ GL_EVAL_TRIANGULAR_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB0_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB0_NV'>
	<value: 16r86C6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB0_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB10_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB10_NV'>
	<value: 16r86D0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB10_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB11_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB11_NV'>
	<value: 16r86D1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB11_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB12_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB12_NV'>
	<value: 16r86D2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB12_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB13_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB13_NV'>
	<value: 16r86D3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB13_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB14_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB14_NV'>
	<value: 16r86D4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB14_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB15_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB15_NV'>
	<value: 16r86D5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB15_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB1_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB1_NV'>
	<value: 16r86C7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB2_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB2_NV'>
	<value: 16r86C8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB3_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB3_NV'>
	<value: 16r86C9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB4_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB4_NV'>
	<value: 16r86CA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB5_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB5_NV'>
	<value: 16r86CB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB5_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB6_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB6_NV'>
	<value: 16r86CC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB6_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB7_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB7_NV'>
	<value: 16r86CD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB7_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB8_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB8_NV'>
	<value: 16r86CE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EVAL_VERTEX_ATTRIB9_NV [

	<enum: #'GL_EVAL_VERTEX_ATTRIB9_NV'>
	<value: 16r86CF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EVAL_VERTEX_ATTRIB9_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXCLUSION [

	<enum: #'GL_EXCLUSION'>
	<value: 16r92A0>
	<vendor: #NV>
	^ GL_EXCLUSION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXCLUSION_KHR [

	<enum: #'GL_EXCLUSION_KHR'>
	<value: 16r92A0>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_EXCLUSION_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXCLUSION_NV [

	<enum: #'GL_EXCLUSION_NV'>
	<value: 16r92A0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EXCLUSION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXCLUSIVE_EXT [

	<enum: #'GL_EXCLUSIVE_EXT'>
	<value: 16r8F11>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_EXCLUSIVE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXP [

	<enum: #'GL_EXP'>
	<value: 16r800>
	<vendor: #ARB>
	<groups: #(#FogMode)>
	^ GL_EXP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXP2 [

	<enum: #'GL_EXP2'>
	<value: 16r801>
	<vendor: #ARB>
	<groups: #(#FogMode)>
	^ GL_EXP2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXPAND_NEGATE_NV [

	<enum: #'GL_EXPAND_NEGATE_NV'>
	<value: 16r8539>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerMappingNV)>
	^ GL_EXPAND_NEGATE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXPAND_NORMAL_NV [

	<enum: #'GL_EXPAND_NORMAL_NV'>
	<value: 16r8538>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerMappingNV)>
	^ GL_EXPAND_NORMAL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXTENSIONS [

	<enum: #'GL_EXTENSIONS'>
	<value: 16r1F03>
	<vendor: #ARB>
	<groups: #(#StringName)>
	^ GL_EXTENSIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXTERNAL_STORAGE_BIT_NVX [

	<enum: #'GL_EXTERNAL_STORAGE_BIT_NVX'>
	<value: 2r10000000000000>
	<suffix: #NVX>
	<bitmask>
	<groups: #(#BufferStorageMask)>
	^ GL_EXTERNAL_STORAGE_BIT_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD [

	<enum: #'GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD'>
	<value: 16r9160>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_DISTANCE_TO_LINE_SGIS [

	<enum: #'GL_EYE_DISTANCE_TO_LINE_SGIS'>
	<value: 16r81F2>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureGenMode)>
	^ GL_EYE_DISTANCE_TO_LINE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_DISTANCE_TO_POINT_SGIS [

	<enum: #'GL_EYE_DISTANCE_TO_POINT_SGIS'>
	<value: 16r81F0>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureGenMode)>
	^ GL_EYE_DISTANCE_TO_POINT_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_LINEAR [

	<enum: #'GL_EYE_LINEAR'>
	<value: 16r2400>
	<vendor: #ARB>
	<groups: #(#PathGenMode #TextureGenMode)>
	^ GL_EYE_LINEAR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_LINEAR_NV [

	<enum: #'GL_EYE_LINEAR_NV'>
	<value: 16r2400>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_EYE_LINEAR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_LINE_SGIS [

	<enum: #'GL_EYE_LINE_SGIS'>
	<value: 16r81F6>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureGenParameter)>
	^ GL_EYE_LINE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_PLANE [

	<enum: #'GL_EYE_PLANE'>
	<value: 16r2502>
	<vendor: #ARB>
	<groups: #(#TextureGenParameter)>
	^ GL_EYE_PLANE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_PLANE_ABSOLUTE_NV [

	<enum: #'GL_EYE_PLANE_ABSOLUTE_NV'>
	<value: 16r855C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EYE_PLANE_ABSOLUTE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_POINT_SGIS [

	<enum: #'GL_EYE_POINT_SGIS'>
	<value: 16r81F4>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureGenParameter)>
	^ GL_EYE_POINT_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> EYE_RADIAL_NV [

	<enum: #'GL_EYE_RADIAL_NV'>
	<value: 16r855B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_EYE_RADIAL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> E_TIMES_F_NV [

	<enum: #'GL_E_TIMES_F_NV'>
	<value: 16r8531>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_E_TIMES_F_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FACTOR_ALPHA_MODULATE_IMG [

	<enum: #'GL_FACTOR_ALPHA_MODULATE_IMG'>
	<value: 16r8C07>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_FACTOR_ALPHA_MODULATE_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FACTOR_MAX_AMD [

	<enum: #'GL_FACTOR_MAX_AMD'>
	<value: 16r901D>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FACTOR_MAX_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FACTOR_MIN_AMD [

	<enum: #'GL_FACTOR_MIN_AMD'>
	<value: 16r901C>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FACTOR_MIN_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FAILURE_NV [

	<enum: #'GL_FAILURE_NV'>
	<value: 16r9030>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FAILURE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FALSE [

	<enum: #'GL_FALSE'>
	<value: 16r0>
	<vendor: #ARB>
	<groups: #(#Boolean #ClampColorModeARB #SpecialNumbers #VertexShaderWriteMaskEXT)>
	^ GL_FALSE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FASTEST [

	<enum: #'GL_FASTEST'>
	<value: 16r1101>
	<vendor: #ARB>
	<groups: #(#HintMode)>
	^ GL_FASTEST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FEEDBACK [

	<enum: #'GL_FEEDBACK'>
	<value: 16r1C01>
	<vendor: #ARB>
	<groups: #(#RenderingMode)>
	^ GL_FEEDBACK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FEEDBACK_BUFFER_POINTER [

	<enum: #'GL_FEEDBACK_BUFFER_POINTER'>
	<value: 16rDF0>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_FEEDBACK_BUFFER_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FEEDBACK_BUFFER_SIZE [

	<enum: #'GL_FEEDBACK_BUFFER_SIZE'>
	<value: 16rDF1>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_FEEDBACK_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FEEDBACK_BUFFER_TYPE [

	<enum: #'GL_FEEDBACK_BUFFER_TYPE'>
	<value: 16rDF2>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_FEEDBACK_BUFFER_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FENCE_APPLE [

	<enum: #'GL_FENCE_APPLE'>
	<value: 16r8A0B>
	<vendor: #APPLE>
	<suffix: #APPLE>
	<groups: #(#ObjectTypeAPPLE)>
	^ GL_FENCE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FENCE_CONDITION_NV [

	<enum: #'GL_FENCE_CONDITION_NV'>
	<value: 16r84F4>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#FenceParameterNameNV)>
	^ GL_FENCE_CONDITION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FENCE_STATUS_NV [

	<enum: #'GL_FENCE_STATUS_NV'>
	<value: 16r84F3>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#FenceParameterNameNV)>
	^ GL_FENCE_STATUS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FETCH_PER_SAMPLE_ARM [

	<enum: #'GL_FETCH_PER_SAMPLE_ARM'>
	<value: 16r8F65>
	<vendor: #ARM>
	<suffix: #ARM>
	^ GL_FETCH_PER_SAMPLE_ARM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIELDS_NV [

	<enum: #'GL_FIELDS_NV'>
	<value: 16r8E27>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FIELDS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIELD_LOWER_NV [

	<enum: #'GL_FIELD_LOWER_NV'>
	<value: 16r9023>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FIELD_LOWER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIELD_UPPER_NV [

	<enum: #'GL_FIELD_UPPER_NV'>
	<value: 16r9022>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FIELD_UPPER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FILE_NAME_NV [

	<enum: #'GL_FILE_NAME_NV'>
	<value: 16r9074>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathFontTarget)>
	^ GL_FILE_NAME_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FILL [

	<enum: #'GL_FILL'>
	<value: 16r1B02>
	<vendor: #ARB>
	<groups: #(#MeshMode2 #PolygonMode)>
	^ GL_FILL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FILL_NV [

	<enum: #'GL_FILL_NV'>
	<value: 16r1B02>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#EvalMapsModeNV)>
	^ GL_FILL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FILL_RECTANGLE_NV [

	<enum: #'GL_FILL_RECTANGLE_NV'>
	<value: 16r933C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FILL_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FILTER [

	<enum: #'GL_FILTER'>
	<value: 16r829A>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_FILTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FILTER4_SGIS [

	<enum: #'GL_FILTER4_SGIS'>
	<value: 16r8146>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureFilterFuncSGIS #TextureFilterSGIS #TextureMagFilter #TextureMinFilter)>
	^ GL_FILTER4_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIRST_TO_REST_NV [

	<enum: #'GL_FIRST_TO_REST_NV'>
	<value: 16r90AF>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathListMode)>
	^ GL_FIRST_TO_REST_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIRST_VERTEX_CONVENTION [

	<enum: #'GL_FIRST_VERTEX_CONVENTION'>
	<value: 16r8E4D>
	<vendor: #NV>
	<groups: #(#VertexProvokingMode)>
	^ GL_FIRST_VERTEX_CONVENTION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIRST_VERTEX_CONVENTION_EXT [

	<enum: #'GL_FIRST_VERTEX_CONVENTION_EXT'>
	<value: 16r8E4D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_FIRST_VERTEX_CONVENTION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIRST_VERTEX_CONVENTION_OES [

	<enum: #'GL_FIRST_VERTEX_CONVENTION_OES'>
	<value: 16r8E4D>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_FIRST_VERTEX_CONVENTION_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIXED [

	<enum: #'GL_FIXED'>
	<value: 16r140C>
	<vendor: #ARB>
	<groups: #(#VertexAttribPointerType #VertexAttribType)>
	^ GL_FIXED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIXED_OES [

	<enum: #'GL_FIXED_OES'>
	<value: 16r140C>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FIXED_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIXED_ONLY [

	<enum: #'GL_FIXED_ONLY'>
	<value: 16r891D>
	<vendor: #NV>
	<groups: #(#ClampColorModeARB)>
	^ GL_FIXED_ONLY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FIXED_ONLY_ARB [

	<enum: #'GL_FIXED_ONLY_ARB'>
	<value: 16r891D>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#ClampColorModeARB)>
	^ GL_FIXED_ONLY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLAT [

	<enum: #'GL_FLAT'>
	<value: 16r1D00>
	<vendor: #ARB>
	<groups: #(#ShadingModel)>
	^ GL_FLAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT [

	<enum: #'GL_FLOAT'>
	<value: 16r1406>
	<vendor: #ARB>
	<groups: #(#AttributeType #BinormalPointerTypeEXT #FogCoordinatePointerType #FogPointerTypeEXT #FogPointerTypeIBM #GlslTypeToken #IndexPointerType #ListNameType #MapTypeNV #NormalPointerType #PixelType #SecondaryColorPointerTypeIBM #TangentPointerTypeEXT #TexCoordPointerType #UniformType #VertexAttribPointerType #VertexAttribType #VertexPointerType #VertexWeightPointerTypeEXT #WeightPointerTypeARB)>
	^ GL_FLOAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT2_AMD [

	<enum: #'GL_FLOAT16_MAT2_AMD'>
	<value: 16r91C5>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT2_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT2x3_AMD [

	<enum: #'GL_FLOAT16_MAT2x3_AMD'>
	<value: 16r91C8>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT2x3_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT2x4_AMD [

	<enum: #'GL_FLOAT16_MAT2x4_AMD'>
	<value: 16r91C9>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT2x4_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT3_AMD [

	<enum: #'GL_FLOAT16_MAT3_AMD'>
	<value: 16r91C6>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT3_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT3x2_AMD [

	<enum: #'GL_FLOAT16_MAT3x2_AMD'>
	<value: 16r91CA>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT3x2_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT3x4_AMD [

	<enum: #'GL_FLOAT16_MAT3x4_AMD'>
	<value: 16r91CB>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT3x4_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT4_AMD [

	<enum: #'GL_FLOAT16_MAT4_AMD'>
	<value: 16r91C7>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT4_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT4x2_AMD [

	<enum: #'GL_FLOAT16_MAT4x2_AMD'>
	<value: 16r91CC>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT4x2_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_MAT4x3_AMD [

	<enum: #'GL_FLOAT16_MAT4x3_AMD'>
	<value: 16r91CD>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_FLOAT16_MAT4x3_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_NV [

	<enum: #'GL_FLOAT16_NV'>
	<value: 16r8FF8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_VEC2_NV [

	<enum: #'GL_FLOAT16_VEC2_NV'>
	<value: 16r8FF9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT16_VEC2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_VEC3_NV [

	<enum: #'GL_FLOAT16_VEC3_NV'>
	<value: 16r8FFA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT16_VEC3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT16_VEC4_NV [

	<enum: #'GL_FLOAT16_VEC4_NV'>
	<value: 16r8FFB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT16_VEC4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_32_UNSIGNED_INT_24_8_REV [

	<enum: #'GL_FLOAT_32_UNSIGNED_INT_24_8_REV'>
	<value: 16r8DAD>
	<vendor: #NV>
	^ GL_FLOAT_32_UNSIGNED_INT_24_8_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_32_UNSIGNED_INT_24_8_REV_NV [

	<enum: #'GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV'>
	<value: 16r8DAD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_CLEAR_COLOR_VALUE_NV [

	<enum: #'GL_FLOAT_CLEAR_COLOR_VALUE_NV'>
	<value: 16r888D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_CLEAR_COLOR_VALUE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT2 [

	<enum: #'GL_FLOAT_MAT2'>
	<value: 16r8B5A>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT2_ARB [

	<enum: #'GL_FLOAT_MAT2_ARB'>
	<value: 16r8B5A>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT2x3 [

	<enum: #'GL_FLOAT_MAT2x3'>
	<value: 16r8B65>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT2x3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT2x3_NV [

	<enum: #'GL_FLOAT_MAT2x3_NV'>
	<value: 16r8B65>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT2x3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT2x4 [

	<enum: #'GL_FLOAT_MAT2x4'>
	<value: 16r8B66>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT2x4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT2x4_NV [

	<enum: #'GL_FLOAT_MAT2x4_NV'>
	<value: 16r8B66>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT2x4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT3 [

	<enum: #'GL_FLOAT_MAT3'>
	<value: 16r8B5B>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT3_ARB [

	<enum: #'GL_FLOAT_MAT3_ARB'>
	<value: 16r8B5B>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT3x2 [

	<enum: #'GL_FLOAT_MAT3x2'>
	<value: 16r8B67>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT3x2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT3x2_NV [

	<enum: #'GL_FLOAT_MAT3x2_NV'>
	<value: 16r8B67>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT3x2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT3x4 [

	<enum: #'GL_FLOAT_MAT3x4'>
	<value: 16r8B68>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT3x4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT3x4_NV [

	<enum: #'GL_FLOAT_MAT3x4_NV'>
	<value: 16r8B68>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT3x4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT4 [

	<enum: #'GL_FLOAT_MAT4'>
	<value: 16r8B5C>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT4_ARB [

	<enum: #'GL_FLOAT_MAT4_ARB'>
	<value: 16r8B5C>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT4x2 [

	<enum: #'GL_FLOAT_MAT4x2'>
	<value: 16r8B69>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT4x2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT4x2_NV [

	<enum: #'GL_FLOAT_MAT4x2_NV'>
	<value: 16r8B69>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT4x2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT4x3 [

	<enum: #'GL_FLOAT_MAT4x3'>
	<value: 16r8B6A>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_MAT4x3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_MAT4x3_NV [

	<enum: #'GL_FLOAT_MAT4x3_NV'>
	<value: 16r8B6A>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_MAT4x3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_R16_NV [

	<enum: #'GL_FLOAT_R16_NV'>
	<value: 16r8884>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_R16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_R32_NV [

	<enum: #'GL_FLOAT_R32_NV'>
	<value: 16r8885>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_R32_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RG16_NV [

	<enum: #'GL_FLOAT_RG16_NV'>
	<value: 16r8886>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RG16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RG32_NV [

	<enum: #'GL_FLOAT_RG32_NV'>
	<value: 16r8887>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RG32_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RGB16_NV [

	<enum: #'GL_FLOAT_RGB16_NV'>
	<value: 16r8888>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RGB16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RGB32_NV [

	<enum: #'GL_FLOAT_RGB32_NV'>
	<value: 16r8889>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RGB32_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RGBA16_NV [

	<enum: #'GL_FLOAT_RGBA16_NV'>
	<value: 16r888A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RGBA16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RGBA32_NV [

	<enum: #'GL_FLOAT_RGBA32_NV'>
	<value: 16r888B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RGBA32_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RGBA_MODE_NV [

	<enum: #'GL_FLOAT_RGBA_MODE_NV'>
	<value: 16r888E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RGBA_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RGBA_NV [

	<enum: #'GL_FLOAT_RGBA_NV'>
	<value: 16r8883>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RGBA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RGB_NV [

	<enum: #'GL_FLOAT_RGB_NV'>
	<value: 16r8882>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RGB_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_RG_NV [

	<enum: #'GL_FLOAT_RG_NV'>
	<value: 16r8881>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_RG_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_R_NV [

	<enum: #'GL_FLOAT_R_NV'>
	<value: 16r8880>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FLOAT_R_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_VEC2 [

	<enum: #'GL_FLOAT_VEC2'>
	<value: 16r8B50>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_VEC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_VEC2_ARB [

	<enum: #'GL_FLOAT_VEC2_ARB'>
	<value: 16r8B50>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_VEC2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_VEC3 [

	<enum: #'GL_FLOAT_VEC3'>
	<value: 16r8B51>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_VEC3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_VEC3_ARB [

	<enum: #'GL_FLOAT_VEC3_ARB'>
	<value: 16r8B51>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_VEC3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_VEC4 [

	<enum: #'GL_FLOAT_VEC4'>
	<value: 16r8B52>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_FLOAT_VEC4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FLOAT_VEC4_ARB [

	<enum: #'GL_FLOAT_VEC4_ARB'>
	<value: 16r8B52>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_FLOAT_VEC4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG [

	<enum: #'GL_FOG'>
	<value: 16rB60>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_FOG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_BIT [

	<enum: #'GL_FOG_BIT'>
	<value: 2r10000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_FOG_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COLOR [

	<enum: #'GL_FOG_COLOR'>
	<value: 16rB66>
	<vendor: #ARB>
	<groups: #(#FogParameter #GetPName)>
	^ GL_FOG_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD [

	<enum: #'GL_FOG_COORD'>
	<value: 16r8451>
	<vendor: #SGI>
	^ GL_FOG_COORD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE [

	<enum: #'GL_FOG_COORDINATE'>
	<value: 16r8451>
	<vendor: #SGI>
	^ GL_FOG_COORDINATE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY [

	<enum: #'GL_FOG_COORDINATE_ARRAY'>
	<value: 16r8457>
	<vendor: #SGI>
	^ GL_FOG_COORDINATE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_BUFFER_BINDING [

	<enum: #'GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING'>
	<value: 16r889D>
	<vendor: #NV>
	^ GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r889D>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_EXT [

	<enum: #'GL_FOG_COORDINATE_ARRAY_EXT'>
	<value: 16r8457>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_FOG_COORDINATE_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_LIST_IBM [

	<enum: #'GL_FOG_COORDINATE_ARRAY_LIST_IBM'>
	<value: 16r192A4>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_FOG_COORDINATE_ARRAY_LIST_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM [

	<enum: #'GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM'>
	<value: 16r192AE>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_POINTER [

	<enum: #'GL_FOG_COORDINATE_ARRAY_POINTER'>
	<value: 16r8456>
	<vendor: #SGI>
	^ GL_FOG_COORDINATE_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_POINTER_EXT [

	<enum: #'GL_FOG_COORDINATE_ARRAY_POINTER_EXT'>
	<value: 16r8456>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_FOG_COORDINATE_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_STRIDE [

	<enum: #'GL_FOG_COORDINATE_ARRAY_STRIDE'>
	<value: 16r8455>
	<vendor: #SGI>
	^ GL_FOG_COORDINATE_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_STRIDE_EXT [

	<enum: #'GL_FOG_COORDINATE_ARRAY_STRIDE_EXT'>
	<value: 16r8455>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_TYPE [

	<enum: #'GL_FOG_COORDINATE_ARRAY_TYPE'>
	<value: 16r8454>
	<vendor: #SGI>
	^ GL_FOG_COORDINATE_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_ARRAY_TYPE_EXT [

	<enum: #'GL_FOG_COORDINATE_ARRAY_TYPE_EXT'>
	<value: 16r8454>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_FOG_COORDINATE_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_EXT [

	<enum: #'GL_FOG_COORDINATE_EXT'>
	<value: 16r8451>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_FOG_COORDINATE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_SOURCE [

	<enum: #'GL_FOG_COORDINATE_SOURCE'>
	<value: 16r8450>
	<vendor: #SGI>
	^ GL_FOG_COORDINATE_SOURCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORDINATE_SOURCE_EXT [

	<enum: #'GL_FOG_COORDINATE_SOURCE_EXT'>
	<value: 16r8450>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_FOG_COORDINATE_SOURCE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD_ARRAY [

	<enum: #'GL_FOG_COORD_ARRAY'>
	<value: 16r8457>
	<vendor: #SGI>
	^ GL_FOG_COORD_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD_ARRAY_ADDRESS_NV [

	<enum: #'GL_FOG_COORD_ARRAY_ADDRESS_NV'>
	<value: 16r8F28>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FOG_COORD_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD_ARRAY_BUFFER_BINDING [

	<enum: #'GL_FOG_COORD_ARRAY_BUFFER_BINDING'>
	<value: 16r889D>
	<vendor: #NV>
	^ GL_FOG_COORD_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD_ARRAY_LENGTH_NV [

	<enum: #'GL_FOG_COORD_ARRAY_LENGTH_NV'>
	<value: 16r8F32>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FOG_COORD_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD_ARRAY_POINTER [

	<enum: #'GL_FOG_COORD_ARRAY_POINTER'>
	<value: 16r8456>
	<vendor: #SGI>
	^ GL_FOG_COORD_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD_ARRAY_STRIDE [

	<enum: #'GL_FOG_COORD_ARRAY_STRIDE'>
	<value: 16r8455>
	<vendor: #SGI>
	^ GL_FOG_COORD_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD_ARRAY_TYPE [

	<enum: #'GL_FOG_COORD_ARRAY_TYPE'>
	<value: 16r8454>
	<vendor: #SGI>
	^ GL_FOG_COORD_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_COORD_SRC [

	<enum: #'GL_FOG_COORD_SRC'>
	<value: 16r8450>
	<vendor: #SGI>
	<groups: #(#FogPName)>
	^ GL_FOG_COORD_SRC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_DENSITY [

	<enum: #'GL_FOG_DENSITY'>
	<value: 16rB62>
	<vendor: #ARB>
	<groups: #(#FogPName #FogParameter #GetPName)>
	^ GL_FOG_DENSITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_DISTANCE_MODE_NV [

	<enum: #'GL_FOG_DISTANCE_MODE_NV'>
	<value: 16r855A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FOG_DISTANCE_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_END [

	<enum: #'GL_FOG_END'>
	<value: 16rB64>
	<vendor: #ARB>
	<groups: #(#FogPName #FogParameter #GetPName)>
	^ GL_FOG_END
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_FUNC_POINTS_SGIS [

	<enum: #'GL_FOG_FUNC_POINTS_SGIS'>
	<value: 16r812B>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_FOG_FUNC_POINTS_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_FUNC_SGIS [

	<enum: #'GL_FOG_FUNC_SGIS'>
	<value: 16r812A>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#FogMode)>
	^ GL_FOG_FUNC_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_HINT [

	<enum: #'GL_FOG_HINT'>
	<value: 16rC54>
	<vendor: #ARB>
	<groups: #(#GetPName #HintTarget)>
	^ GL_FOG_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_INDEX [

	<enum: #'GL_FOG_INDEX'>
	<value: 16rB61>
	<vendor: #ARB>
	<groups: #(#FogPName #FogParameter #GetPName)>
	^ GL_FOG_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_MODE [

	<enum: #'GL_FOG_MODE'>
	<value: 16rB65>
	<vendor: #ARB>
	<groups: #(#FogPName #FogParameter #GetPName)>
	^ GL_FOG_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_OFFSET_SGIX [

	<enum: #'GL_FOG_OFFSET_SGIX'>
	<value: 16r8198>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_FOG_OFFSET_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_OFFSET_VALUE_SGIX [

	<enum: #'GL_FOG_OFFSET_VALUE_SGIX'>
	<value: 16r8199>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#FogParameter #GetPName)>
	^ GL_FOG_OFFSET_VALUE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_SPECULAR_TEXTURE_WIN [

	<enum: #'GL_FOG_SPECULAR_TEXTURE_WIN'>
	<value: 16r80EC>
	<vendor: #MS>
	<suffix: #WIN>
	^ GL_FOG_SPECULAR_TEXTURE_WIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOG_START [

	<enum: #'GL_FOG_START'>
	<value: 16rB63>
	<vendor: #ARB>
	<groups: #(#FogPName #FogParameter #GetPName)>
	^ GL_FOG_START
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_ASCENDER_BIT_NV [

	<enum: #'GL_FONT_ASCENDER_BIT_NV'>
	<value: 2r1000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_ASCENDER_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_DESCENDER_BIT_NV [

	<enum: #'GL_FONT_DESCENDER_BIT_NV'>
	<value: 2r10000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_DESCENDER_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_GLYPHS_AVAILABLE_NV [

	<enum: #'GL_FONT_GLYPHS_AVAILABLE_NV'>
	<value: 16r9368>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FONT_GLYPHS_AVAILABLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_HAS_KERNING_BIT_NV [

	<enum: #'GL_FONT_HAS_KERNING_BIT_NV'>
	<value: 2r10000000000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_HAS_KERNING_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_HEIGHT_BIT_NV [

	<enum: #'GL_FONT_HEIGHT_BIT_NV'>
	<value: 2r100000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_HEIGHT_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_MAX_ADVANCE_HEIGHT_BIT_NV [

	<enum: #'GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV'>
	<value: 2r10000000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_MAX_ADVANCE_WIDTH_BIT_NV [

	<enum: #'GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV'>
	<value: 2r1000000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_NUM_GLYPH_INDICES_BIT_NV [

	<enum: #'GL_FONT_NUM_GLYPH_INDICES_BIT_NV'>
	<value: 2r100000000000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_NUM_GLYPH_INDICES_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_TARGET_UNAVAILABLE_NV [

	<enum: #'GL_FONT_TARGET_UNAVAILABLE_NV'>
	<value: 16r9369>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FONT_TARGET_UNAVAILABLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_UNAVAILABLE_NV [

	<enum: #'GL_FONT_UNAVAILABLE_NV'>
	<value: 16r936A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FONT_UNAVAILABLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_UNDERLINE_POSITION_BIT_NV [

	<enum: #'GL_FONT_UNDERLINE_POSITION_BIT_NV'>
	<value: 2r100000000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_UNDERLINE_POSITION_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_UNDERLINE_THICKNESS_BIT_NV [

	<enum: #'GL_FONT_UNDERLINE_THICKNESS_BIT_NV'>
	<value: 2r1000000000000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_UNDERLINE_THICKNESS_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_UNINTELLIGIBLE_NV [

	<enum: #'GL_FONT_UNINTELLIGIBLE_NV'>
	<value: 16r936B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FONT_UNINTELLIGIBLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_UNITS_PER_EM_BIT_NV [

	<enum: #'GL_FONT_UNITS_PER_EM_BIT_NV'>
	<value: 2r100000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_UNITS_PER_EM_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_X_MAX_BOUNDS_BIT_NV [

	<enum: #'GL_FONT_X_MAX_BOUNDS_BIT_NV'>
	<value: 2r1000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_X_MAX_BOUNDS_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_X_MIN_BOUNDS_BIT_NV [

	<enum: #'GL_FONT_X_MIN_BOUNDS_BIT_NV'>
	<value: 2r10000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_X_MIN_BOUNDS_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_Y_MAX_BOUNDS_BIT_NV [

	<enum: #'GL_FONT_Y_MAX_BOUNDS_BIT_NV'>
	<value: 2r10000000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_Y_MAX_BOUNDS_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FONT_Y_MIN_BOUNDS_BIT_NV [

	<enum: #'GL_FONT_Y_MIN_BOUNDS_BIT_NV'>
	<value: 2r100000000000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_FONT_Y_MIN_BOUNDS_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FORCE_BLUE_TO_ONE_NV [

	<enum: #'GL_FORCE_BLUE_TO_ONE_NV'>
	<value: 16r8860>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FORCE_BLUE_TO_ONE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FORMAT_SUBSAMPLE_244_244_OML [

	<enum: #'GL_FORMAT_SUBSAMPLE_244_244_OML'>
	<value: 16r8983>
	<vendor: #OML>
	<suffix: #OML>
	^ GL_FORMAT_SUBSAMPLE_244_244_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FORMAT_SUBSAMPLE_24_24_OML [

	<enum: #'GL_FORMAT_SUBSAMPLE_24_24_OML'>
	<value: 16r8982>
	<vendor: #OML>
	<suffix: #OML>
	^ GL_FORMAT_SUBSAMPLE_24_24_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOVEATION_ENABLE_BIT_QCOM [

	<enum: #'GL_FOVEATION_ENABLE_BIT_QCOM'>
	<value: 2r1>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#FoveationConfigBitQCOM)>
	^ GL_FOVEATION_ENABLE_BIT_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOVEATION_SCALED_BIN_METHOD_BIT_QCOM [

	<enum: #'GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM'>
	<value: 2r10>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#FoveationConfigBitQCOM)>
	^ GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM [

	<enum: #'GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM'>
	<value: 2r100>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#FoveationConfigBitQCOM)>
	^ GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRACTIONAL_EVEN [

	<enum: #'GL_FRACTIONAL_EVEN'>
	<value: 16r8E7C>
	<vendor: #NV>
	^ GL_FRACTIONAL_EVEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRACTIONAL_EVEN_EXT [

	<enum: #'GL_FRACTIONAL_EVEN_EXT'>
	<value: 16r8E7C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_FRACTIONAL_EVEN_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRACTIONAL_EVEN_OES [

	<enum: #'GL_FRACTIONAL_EVEN_OES'>
	<value: 16r8E7C>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_FRACTIONAL_EVEN_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRACTIONAL_ODD [

	<enum: #'GL_FRACTIONAL_ODD'>
	<value: 16r8E7B>
	<vendor: #NV>
	^ GL_FRACTIONAL_ODD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRACTIONAL_ODD_EXT [

	<enum: #'GL_FRACTIONAL_ODD_EXT'>
	<value: 16r8E7B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_FRACTIONAL_ODD_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRACTIONAL_ODD_OES [

	<enum: #'GL_FRACTIONAL_ODD_OES'>
	<value: 16r8E7B>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_FRACTIONAL_ODD_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENTS_INSTRUMENT_COUNTERS_SGIX [

	<enum: #'GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX'>
	<value: 16r8314>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENTS_INSTRUMENT_MAX_SGIX [

	<enum: #'GL_FRAGMENTS_INSTRUMENT_MAX_SGIX'>
	<value: 16r8315>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_FRAGMENTS_INSTRUMENT_MAX_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENTS_INSTRUMENT_SGIX [

	<enum: #'GL_FRAGMENTS_INSTRUMENT_SGIX'>
	<value: 16r8313>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_FRAGMENTS_INSTRUMENT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_ALPHA_MODULATE_IMG [

	<enum: #'GL_FRAGMENT_ALPHA_MODULATE_IMG'>
	<value: 16r8C08>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_FRAGMENT_ALPHA_MODULATE_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_COLOR_EXT [

	<enum: #'GL_FRAGMENT_COLOR_EXT'>
	<value: 16r834C>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightTextureModeEXT)>
	^ GL_FRAGMENT_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_COLOR_MATERIAL_FACE_SGIX [

	<enum: #'GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX'>
	<value: 16r8402>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX [

	<enum: #'GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX'>
	<value: 16r8403>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_COLOR_MATERIAL_SGIX [

	<enum: #'GL_FRAGMENT_COLOR_MATERIAL_SGIX'>
	<value: 16r8401>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_FRAGMENT_COLOR_MATERIAL_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_COVERAGE_COLOR_NV [

	<enum: #'GL_FRAGMENT_COVERAGE_COLOR_NV'>
	<value: 16r92DE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAGMENT_COVERAGE_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_COVERAGE_TO_COLOR_NV [

	<enum: #'GL_FRAGMENT_COVERAGE_TO_COLOR_NV'>
	<value: 16r92DD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAGMENT_COVERAGE_TO_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_DEPTH [

	<enum: #'GL_FRAGMENT_DEPTH'>
	<value: 16r8452>
	<vendor: #SGI>
	^ GL_FRAGMENT_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_DEPTH_EXT [

	<enum: #'GL_FRAGMENT_DEPTH_EXT'>
	<value: 16r8452>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightTextureModeEXT)>
	^ GL_FRAGMENT_DEPTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_INPUT_NV [

	<enum: #'GL_FRAGMENT_INPUT_NV'>
	<value: 16r936D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAGMENT_INPUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_INTERPOLATION_OFFSET_BITS [

	<enum: #'GL_FRAGMENT_INTERPOLATION_OFFSET_BITS'>
	<value: 16r8E5D>
	<vendor: #NV>
	^ GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_INTERPOLATION_OFFSET_BITS_OES [

	<enum: #'GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES'>
	<value: 16r8E5D>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT0_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT0_SGIX'>
	<value: 16r840C>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #FragmentLightNameSGIX #GetPName #LightName)>
	^ GL_FRAGMENT_LIGHT0_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT1_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT1_SGIX'>
	<value: 16r840D>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #FragmentLightNameSGIX #LightName)>
	^ GL_FRAGMENT_LIGHT1_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT2_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT2_SGIX'>
	<value: 16r840E>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #FragmentLightNameSGIX #LightName)>
	^ GL_FRAGMENT_LIGHT2_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT3_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT3_SGIX'>
	<value: 16r840F>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #FragmentLightNameSGIX #LightName)>
	^ GL_FRAGMENT_LIGHT3_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT4_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT4_SGIX'>
	<value: 16r8410>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #FragmentLightNameSGIX #LightName)>
	^ GL_FRAGMENT_LIGHT4_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT5_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT5_SGIX'>
	<value: 16r8411>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #FragmentLightNameSGIX #LightName)>
	^ GL_FRAGMENT_LIGHT5_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT6_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT6_SGIX'>
	<value: 16r8412>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #FragmentLightNameSGIX #LightName)>
	^ GL_FRAGMENT_LIGHT6_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT7_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT7_SGIX'>
	<value: 16r8413>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #FragmentLightNameSGIX #LightName)>
	^ GL_FRAGMENT_LIGHT7_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHTING_SGIX [

	<enum: #'GL_FRAGMENT_LIGHTING_SGIX'>
	<value: 16r8400>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_FRAGMENT_LIGHTING_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX'>
	<value: 16r840A>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#FragmentLightModelParameterSGIX #GetPName)>
	^ GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX'>
	<value: 16r8408>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#FragmentLightModelParameterSGIX #GetPName)>
	^ GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX'>
	<value: 16r840B>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#FragmentLightModelParameterSGIX #GetPName)>
	^ GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX [

	<enum: #'GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX'>
	<value: 16r8409>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#FragmentLightModelParameterSGIX #GetPName)>
	^ GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_MATERIAL_EXT [

	<enum: #'GL_FRAGMENT_MATERIAL_EXT'>
	<value: 16r8349>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightTextureModeEXT)>
	^ GL_FRAGMENT_MATERIAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_NORMAL_EXT [

	<enum: #'GL_FRAGMENT_NORMAL_EXT'>
	<value: 16r834A>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightTextureModeEXT)>
	^ GL_FRAGMENT_NORMAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_ARB [

	<enum: #'GL_FRAGMENT_PROGRAM_ARB'>
	<value: 16r8804>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#ProgramTarget)>
	^ GL_FRAGMENT_PROGRAM_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_BINDING_NV [

	<enum: #'GL_FRAGMENT_PROGRAM_BINDING_NV'>
	<value: 16r8873>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAGMENT_PROGRAM_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_CALLBACK_DATA_MESA [

	<enum: #'GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA'>
	<value: 16r8BB3>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA [

	<enum: #'GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA'>
	<value: 16r8BB2>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_CALLBACK_MESA [

	<enum: #'GL_FRAGMENT_PROGRAM_CALLBACK_MESA'>
	<value: 16r8BB1>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_FRAGMENT_PROGRAM_CALLBACK_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV [

	<enum: #'GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV'>
	<value: 16r8E5D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_NV [

	<enum: #'GL_FRAGMENT_PROGRAM_NV'>
	<value: 16r8870>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAGMENT_PROGRAM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV [

	<enum: #'GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV'>
	<value: 16r8DA4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_PROGRAM_POSITION_MESA [

	<enum: #'GL_FRAGMENT_PROGRAM_POSITION_MESA'>
	<value: 16r8BB0>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_FRAGMENT_PROGRAM_POSITION_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER [

	<enum: #'GL_FRAGMENT_SHADER'>
	<value: 16r8B30>
	<vendor: #ARB>
	<groups: #(#PipelineParameterName #ShaderType)>
	^ GL_FRAGMENT_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_ARB [

	<enum: #'GL_FRAGMENT_SHADER_ARB'>
	<value: 16r8B30>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#ShaderType)>
	^ GL_FRAGMENT_SHADER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_ATI [

	<enum: #'GL_FRAGMENT_SHADER_ATI'>
	<value: 16r8920>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_FRAGMENT_SHADER_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_BIT [

	<enum: #'GL_FRAGMENT_SHADER_BIT'>
	<value: 2r10>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_FRAGMENT_SHADER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_BIT_EXT [

	<enum: #'GL_FRAGMENT_SHADER_BIT_EXT'>
	<value: 2r10>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_FRAGMENT_SHADER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_DERIVATIVE_HINT [

	<enum: #'GL_FRAGMENT_SHADER_DERIVATIVE_HINT'>
	<value: 16r8B8B>
	<vendor: #ARB>
	<groups: #(#GetPName #HintTarget)>
	^ GL_FRAGMENT_SHADER_DERIVATIVE_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_DERIVATIVE_HINT_ARB [

	<enum: #'GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB'>
	<value: 16r8B8B>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#HintTarget)>
	^ GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_DERIVATIVE_HINT_OES [

	<enum: #'GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES'>
	<value: 16r8B8B>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#HintTarget)>
	^ GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT [

	<enum: #'GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT'>
	<value: 16r8A52>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM [

	<enum: #'GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM'>
	<value: 16r8F66>
	<vendor: #ARM>
	<suffix: #ARM>
	^ GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_INVOCATIONS [

	<enum: #'GL_FRAGMENT_SHADER_INVOCATIONS'>
	<value: 16r82F4>
	<vendor: #ARB>
	^ GL_FRAGMENT_SHADER_INVOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SHADER_INVOCATIONS_ARB [

	<enum: #'GL_FRAGMENT_SHADER_INVOCATIONS_ARB'>
	<value: 16r82F4>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_FRAGMENT_SHADER_INVOCATIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SUBROUTINE [

	<enum: #'GL_FRAGMENT_SUBROUTINE'>
	<value: 16r92EC>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_FRAGMENT_SUBROUTINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_SUBROUTINE_UNIFORM [

	<enum: #'GL_FRAGMENT_SUBROUTINE_UNIFORM'>
	<value: 16r92F2>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_FRAGMENT_SUBROUTINE_UNIFORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAGMENT_TEXTURE [

	<enum: #'GL_FRAGMENT_TEXTURE'>
	<value: 16r829F>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_FRAGMENT_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER [

	<enum: #'GL_FRAMEBUFFER'>
	<value: 16r8D40>
	<vendor: #ARB>
	<groups: #(#CheckFramebufferStatusTarget #FramebufferTarget #ObjectIdentifier)>
	^ GL_FRAMEBUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE'>
	<value: 16r8215>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_ANGLE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_ANGLE'>
	<value: 16r93A3>
	<vendor: #ANGLE>
	^ GL_FRAMEBUFFER_ATTACHMENT_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_BLUE_SIZE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE'>
	<value: 16r8214>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING'>
	<value: 16r8210>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT'>
	<value: 16r8210>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE'>
	<value: 16r8211>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT'>
	<value: 16r8211>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE'>
	<value: 16r8216>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_GREEN_SIZE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE'>
	<value: 16r8213>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_LAYERED [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_LAYERED'>
	<value: 16r8DA7>
	<vendor: #NV>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_LAYERED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_LAYERED_ARB [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB'>
	<value: 16r8DA7>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_LAYERED_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT'>
	<value: 16r8DA7>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_LAYERED_OES [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES'>
	<value: 16r8DA7>
	<vendor: #NV>
	<suffix: #OES>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_OBJECT_NAME [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME'>
	<value: 16r8CD1>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT'>
	<value: 16r8CD1>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES'>
	<value: 16r8CD1>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE'>
	<value: 16r8CD0>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT'>
	<value: 16r8CD0>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES'>
	<value: 16r8CD0>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_RED_SIZE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE'>
	<value: 16r8212>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE'>
	<value: 16r8217>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT'>
	<value: 16r8CD4>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES'>
	<value: 16r8CD4>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR'>
	<value: 16r9632>
	<vendor: #Oculus>
	<suffix: #OVR>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE'>
	<value: 16r8CD3>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT'>
	<value: 16r8CD3>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES'>
	<value: 16r8CD3>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER'>
	<value: 16r8CD4>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT'>
	<value: 16r8CD4>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL'>
	<value: 16r8CD2>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT'>
	<value: 16r8CD2>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES'>
	<value: 16r8CD2>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR'>
	<value: 16r9630>
	<vendor: #Oculus>
	<suffix: #OVR>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT'>
	<value: 16r8D6C>
	<vendor: #OES>
	<suffix: #EXT>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG [

	<enum: #'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG'>
	<value: 16r913F>
	<vendor: #IMG>
	<suffix: #IMG>
	<groups: #(#FramebufferAttachmentParameterName)>
	^ GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_BARRIER_BIT [

	<enum: #'GL_FRAMEBUFFER_BARRIER_BIT'>
	<value: 2r10000000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_FRAMEBUFFER_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_BARRIER_BIT_EXT [

	<enum: #'GL_FRAMEBUFFER_BARRIER_BIT_EXT'>
	<value: 2r10000000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_FRAMEBUFFER_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_BINDING [

	<enum: #'GL_FRAMEBUFFER_BINDING'>
	<value: 16r8CA6>
	<vendor: #ARB>
	^ GL_FRAMEBUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_BINDING_ANGLE [

	<enum: #'GL_FRAMEBUFFER_BINDING_ANGLE'>
	<value: 16r8CA6>
	<vendor: #ARB>
	^ GL_FRAMEBUFFER_BINDING_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_BINDING_EXT [

	<enum: #'GL_FRAMEBUFFER_BINDING_EXT'>
	<value: 16r8CA6>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_BINDING_OES [

	<enum: #'GL_FRAMEBUFFER_BINDING_OES'>
	<value: 16r8CA6>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_BLEND [

	<enum: #'GL_FRAMEBUFFER_BLEND'>
	<value: 16r828B>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_FRAMEBUFFER_BLEND
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_COMPLETE [

	<enum: #'GL_FRAMEBUFFER_COMPLETE'>
	<value: 16r8CD5>
	<vendor: #ARB>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_COMPLETE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_COMPLETE_EXT [

	<enum: #'GL_FRAMEBUFFER_COMPLETE_EXT'>
	<value: 16r8CD5>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_COMPLETE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_COMPLETE_OES [

	<enum: #'GL_FRAMEBUFFER_COMPLETE_OES'>
	<value: 16r8CD5>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_COMPLETE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_DEFAULT [

	<enum: #'GL_FRAMEBUFFER_DEFAULT'>
	<value: 16r8218>
	<vendor: #ARB>
	^ GL_FRAMEBUFFER_DEFAULT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS [

	<enum: #'GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS'>
	<value: 16r9314>
	<vendor: #NV>
	<groups: #(#FramebufferParameterName #GetFramebufferParameter)>
	^ GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_DEFAULT_HEIGHT [

	<enum: #'GL_FRAMEBUFFER_DEFAULT_HEIGHT'>
	<value: 16r9311>
	<vendor: #NV>
	<groups: #(#FramebufferParameterName #GetFramebufferParameter)>
	^ GL_FRAMEBUFFER_DEFAULT_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_DEFAULT_LAYERS [

	<enum: #'GL_FRAMEBUFFER_DEFAULT_LAYERS'>
	<value: 16r9312>
	<vendor: #NV>
	<groups: #(#FramebufferParameterName #GetFramebufferParameter)>
	^ GL_FRAMEBUFFER_DEFAULT_LAYERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_DEFAULT_LAYERS_EXT [

	<enum: #'GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT'>
	<value: 16r9312>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_DEFAULT_LAYERS_OES [

	<enum: #'GL_FRAMEBUFFER_DEFAULT_LAYERS_OES'>
	<value: 16r9312>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_DEFAULT_LAYERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_DEFAULT_SAMPLES [

	<enum: #'GL_FRAMEBUFFER_DEFAULT_SAMPLES'>
	<value: 16r9313>
	<vendor: #NV>
	<groups: #(#FramebufferParameterName #GetFramebufferParameter)>
	^ GL_FRAMEBUFFER_DEFAULT_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_DEFAULT_WIDTH [

	<enum: #'GL_FRAMEBUFFER_DEFAULT_WIDTH'>
	<value: 16r9310>
	<vendor: #NV>
	<groups: #(#FramebufferParameterName #GetFramebufferParameter)>
	^ GL_FRAMEBUFFER_DEFAULT_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_EXT [

	<enum: #'GL_FRAMEBUFFER_EXT'>
	<value: 16r8D40>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_FETCH_NONCOHERENT_QCOM [

	<enum: #'GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM'>
	<value: 16r96A2>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#FramebufferFetchNoncoherent)>
	^ GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_FLIP_X_MESA [

	<enum: #'GL_FRAMEBUFFER_FLIP_X_MESA'>
	<value: 16r8BBC>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_FRAMEBUFFER_FLIP_X_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_FLIP_Y_MESA [

	<enum: #'GL_FRAMEBUFFER_FLIP_Y_MESA'>
	<value: 16r8BBB>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_FRAMEBUFFER_FLIP_Y_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_ATTACHMENT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT'>
	<value: 16r8CD6>
	<vendor: #ARB>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT'>
	<value: 16r8CD6>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES'>
	<value: 16r8CD6>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_DIMENSIONS [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS'>
	<value: 16r8CD9>
	<vendor: #ARB>
	^ GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT'>
	<value: 16r8CD9>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES'>
	<value: 16r8CD9>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER'>
	<value: 16r8CDB>
	<vendor: #ARB>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT'>
	<value: 16r8CDB>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES'>
	<value: 16r8CDB>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_FORMATS_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT'>
	<value: 16r8CDA>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_FORMATS_OES [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES'>
	<value: 16r8CDA>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM'>
	<value: 16r8BFF>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT'>
	<value: 16r9652>
	<vendor: #IMG>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB'>
	<value: 16r8DA9>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT'>
	<value: 16r8DA9>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS'>
	<value: 16r8DA8>
	<vendor: #NV>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB'>
	<value: 16r8DA8>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT'>
	<value: 16r8DA8>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES'>
	<value: 16r8DA8>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT'>
	<value: 16r8CD7>
	<vendor: #ARB>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT'>
	<value: 16r8CD7>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES'>
	<value: 16r8CD7>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MULTISAMPLE [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE'>
	<value: 16r8D56>
	<vendor: #ARB>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG'>
	<value: 16r913C>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE'>
	<value: 16r8D56>
	<vendor: #ARB>
	^ GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE'>
	<value: 16r8D56>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT'>
	<value: 16r8D56>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG'>
	<value: 16r9134>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV'>
	<value: 16r8D56>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_READ_BUFFER [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER'>
	<value: 16r8CDC>
	<vendor: #ARB>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT'>
	<value: 16r8CDC>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES'>
	<value: 16r8CDC>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR [

	<enum: #'GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR'>
	<value: 16r9633>
	<vendor: #Oculus>
	<suffix: #OVR>
	^ GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_OES [

	<enum: #'GL_FRAMEBUFFER_OES'>
	<value: 16r8D40>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#FramebufferTarget)>
	^ GL_FRAMEBUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB [

	<enum: #'GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB'>
	<value: 16r9342>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV [

	<enum: #'GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV'>
	<value: 16r9342>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_RENDERABLE [

	<enum: #'GL_FRAMEBUFFER_RENDERABLE'>
	<value: 16r8289>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_FRAMEBUFFER_RENDERABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_RENDERABLE_LAYERED [

	<enum: #'GL_FRAMEBUFFER_RENDERABLE_LAYERED'>
	<value: 16r828A>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_FRAMEBUFFER_RENDERABLE_LAYERED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB [

	<enum: #'GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB'>
	<value: 16r9343>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV [

	<enum: #'GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV'>
	<value: 16r9343>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_SRGB [

	<enum: #'GL_FRAMEBUFFER_SRGB'>
	<value: 16r8DB9>
	<vendor: #NV>
	<groups: #(#EnableCap)>
	^ GL_FRAMEBUFFER_SRGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_SRGB_CAPABLE_EXT [

	<enum: #'GL_FRAMEBUFFER_SRGB_CAPABLE_EXT'>
	<value: 16r8DBA>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_SRGB_EXT [

	<enum: #'GL_FRAMEBUFFER_SRGB_EXT'>
	<value: 16r8DB9>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_SRGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_SWAP_XY_MESA [

	<enum: #'GL_FRAMEBUFFER_SWAP_XY_MESA'>
	<value: 16r8BBD>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_FRAMEBUFFER_SWAP_XY_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_UNDEFINED [

	<enum: #'GL_FRAMEBUFFER_UNDEFINED'>
	<value: 16r8219>
	<vendor: #ARB>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_UNDEFINED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_UNDEFINED_OES [

	<enum: #'GL_FRAMEBUFFER_UNDEFINED_OES'>
	<value: 16r8219>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_UNDEFINED_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_UNSUPPORTED [

	<enum: #'GL_FRAMEBUFFER_UNSUPPORTED'>
	<value: 16r8CDD>
	<vendor: #ARB>
	<groups: #(#FramebufferStatus)>
	^ GL_FRAMEBUFFER_UNSUPPORTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_UNSUPPORTED_EXT [

	<enum: #'GL_FRAMEBUFFER_UNSUPPORTED_EXT'>
	<value: 16r8CDD>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_FRAMEBUFFER_UNSUPPORTED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEBUFFER_UNSUPPORTED_OES [

	<enum: #'GL_FRAMEBUFFER_UNSUPPORTED_OES'>
	<value: 16r8CDD>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FRAMEBUFFER_UNSUPPORTED_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEZOOM_FACTOR_SGIX [

	<enum: #'GL_FRAMEZOOM_FACTOR_SGIX'>
	<value: 16r818C>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_FRAMEZOOM_FACTOR_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAMEZOOM_SGIX [

	<enum: #'GL_FRAMEZOOM_SGIX'>
	<value: 16r818B>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_FRAMEZOOM_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRAME_NV [

	<enum: #'GL_FRAME_NV'>
	<value: 16r8E26>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_FRAME_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRONT [

	<enum: #'GL_FRONT'>
	<value: 16r404>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #ColorMaterialFace #CullFaceMode #DrawBufferMode #MaterialFace #ReadBufferMode #StencilFaceDirection)>
	^ GL_FRONT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRONT_AND_BACK [

	<enum: #'GL_FRONT_AND_BACK'>
	<value: 16r408>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #ColorMaterialFace #CullFaceMode #DrawBufferMode #MaterialFace #StencilFaceDirection)>
	^ GL_FRONT_AND_BACK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRONT_FACE [

	<enum: #'GL_FRONT_FACE'>
	<value: 16rB46>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_FRONT_FACE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRONT_FACE_COMMAND_NV [

	<enum: #'GL_FRONT_FACE_COMMAND_NV'>
	<value: 16r12>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_FRONT_FACE_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRONT_LEFT [

	<enum: #'GL_FRONT_LEFT'>
	<value: 16r400>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #ReadBufferMode)>
	^ GL_FRONT_LEFT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FRONT_RIGHT [

	<enum: #'GL_FRONT_RIGHT'>
	<value: 16r401>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #ReadBufferMode)>
	^ GL_FRONT_RIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FULL_RANGE_EXT [

	<enum: #'GL_FULL_RANGE_EXT'>
	<value: 16r87E1>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#ParameterRangeEXT)>
	^ GL_FULL_RANGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FULL_STIPPLE_HINT_PGI [

	<enum: #'GL_FULL_STIPPLE_HINT_PGI'>
	<value: 16r1A219>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_FULL_STIPPLE_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FULL_SUPPORT [

	<enum: #'GL_FULL_SUPPORT'>
	<value: 16r82B7>
	<vendor: #ARB>
	^ GL_FULL_SUPPORT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_ADD [

	<enum: #'GL_FUNC_ADD'>
	<value: 16r8006>
	<vendor: #ARB>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_FUNC_ADD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_ADD_EXT [

	<enum: #'GL_FUNC_ADD_EXT'>
	<value: 16r8006>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_FUNC_ADD_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_ADD_OES [

	<enum: #'GL_FUNC_ADD_OES'>
	<value: 16r8006>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FUNC_ADD_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_REVERSE_SUBTRACT [

	<enum: #'GL_FUNC_REVERSE_SUBTRACT'>
	<value: 16r800B>
	<vendor: #ARB>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_FUNC_REVERSE_SUBTRACT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_REVERSE_SUBTRACT_EXT [

	<enum: #'GL_FUNC_REVERSE_SUBTRACT_EXT'>
	<value: 16r800B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_FUNC_REVERSE_SUBTRACT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_REVERSE_SUBTRACT_OES [

	<enum: #'GL_FUNC_REVERSE_SUBTRACT_OES'>
	<value: 16r800B>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FUNC_REVERSE_SUBTRACT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_SUBTRACT [

	<enum: #'GL_FUNC_SUBTRACT'>
	<value: 16r800A>
	<vendor: #ARB>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_FUNC_SUBTRACT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_SUBTRACT_EXT [

	<enum: #'GL_FUNC_SUBTRACT_EXT'>
	<value: 16r800A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_FUNC_SUBTRACT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> FUNC_SUBTRACT_OES [

	<enum: #'GL_FUNC_SUBTRACT_OES'>
	<value: 16r800A>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_FUNC_SUBTRACT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GCCSO_SHADER_BINARY_FJ [

	<enum: #'GL_GCCSO_SHADER_BINARY_FJ'>
	<value: 16r9260>
	<vendor: #FJ>
	<suffix: #FJ>
	<groups: #(#ShaderBinaryFormat)>
	^ GL_GCCSO_SHADER_BINARY_FJ
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GENERATE_MIPMAP [

	<enum: #'GL_GENERATE_MIPMAP'>
	<value: 16r8191>
	<vendor: #SGI>
	<groups: #(#InternalFormatPName #TextureParameterName)>
	^ GL_GENERATE_MIPMAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GENERATE_MIPMAP_HINT [

	<enum: #'GL_GENERATE_MIPMAP_HINT'>
	<value: 16r8192>
	<vendor: #SGI>
	<groups: #(#HintTarget)>
	^ GL_GENERATE_MIPMAP_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GENERATE_MIPMAP_HINT_SGIS [

	<enum: #'GL_GENERATE_MIPMAP_HINT_SGIS'>
	<value: 16r8192>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #HintTarget)>
	^ GL_GENERATE_MIPMAP_HINT_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GENERATE_MIPMAP_SGIS [

	<enum: #'GL_GENERATE_MIPMAP_SGIS'>
	<value: 16r8191>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_GENERATE_MIPMAP_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GENERIC_ATTRIB_NV [

	<enum: #'GL_GENERIC_ATTRIB_NV'>
	<value: 16r8C7D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_GENERIC_ATTRIB_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_DEFORMATION_BIT_SGIX [

	<enum: #'GL_GEOMETRY_DEFORMATION_BIT_SGIX'>
	<value: 2r10>
	<suffix: #SGIX>
	<bitmask>
	<groups: #(#FfdMaskSGIX)>
	^ GL_GEOMETRY_DEFORMATION_BIT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_DEFORMATION_SGIX [

	<enum: #'GL_GEOMETRY_DEFORMATION_SGIX'>
	<value: 16r8194>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#FfdTargetSGIX #MapTarget)>
	^ GL_GEOMETRY_DEFORMATION_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_INPUT_TYPE [

	<enum: #'GL_GEOMETRY_INPUT_TYPE'>
	<value: 16r8917>
	<vendor: #NV>
	<groups: #(#ProgramPropertyARB)>
	^ GL_GEOMETRY_INPUT_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_INPUT_TYPE_ARB [

	<enum: #'GL_GEOMETRY_INPUT_TYPE_ARB'>
	<value: 16r8DDB>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_GEOMETRY_INPUT_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_INPUT_TYPE_EXT [

	<enum: #'GL_GEOMETRY_INPUT_TYPE_EXT'>
	<value: 16r8DDB>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GEOMETRY_INPUT_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_LINKED_INPUT_TYPE_EXT [

	<enum: #'GL_GEOMETRY_LINKED_INPUT_TYPE_EXT'>
	<value: 16r8917>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GEOMETRY_LINKED_INPUT_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_LINKED_INPUT_TYPE_OES [

	<enum: #'GL_GEOMETRY_LINKED_INPUT_TYPE_OES'>
	<value: 16r8917>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_GEOMETRY_LINKED_INPUT_TYPE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_LINKED_OUTPUT_TYPE_EXT [

	<enum: #'GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT'>
	<value: 16r8918>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_LINKED_OUTPUT_TYPE_OES [

	<enum: #'GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES'>
	<value: 16r8918>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_LINKED_VERTICES_OUT_EXT [

	<enum: #'GL_GEOMETRY_LINKED_VERTICES_OUT_EXT'>
	<value: 16r8916>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GEOMETRY_LINKED_VERTICES_OUT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_LINKED_VERTICES_OUT_OES [

	<enum: #'GL_GEOMETRY_LINKED_VERTICES_OUT_OES'>
	<value: 16r8916>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_GEOMETRY_LINKED_VERTICES_OUT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_OUTPUT_TYPE [

	<enum: #'GL_GEOMETRY_OUTPUT_TYPE'>
	<value: 16r8918>
	<vendor: #NV>
	<groups: #(#ProgramPropertyARB)>
	^ GL_GEOMETRY_OUTPUT_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_OUTPUT_TYPE_ARB [

	<enum: #'GL_GEOMETRY_OUTPUT_TYPE_ARB'>
	<value: 16r8DDC>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_GEOMETRY_OUTPUT_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_OUTPUT_TYPE_EXT [

	<enum: #'GL_GEOMETRY_OUTPUT_TYPE_EXT'>
	<value: 16r8DDC>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GEOMETRY_OUTPUT_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_PROGRAM_NV [

	<enum: #'GL_GEOMETRY_PROGRAM_NV'>
	<value: 16r8C26>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#ProgramTarget)>
	^ GL_GEOMETRY_PROGRAM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV [

	<enum: #'GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV'>
	<value: 16r8DA3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER [

	<enum: #'GL_GEOMETRY_SHADER'>
	<value: 16r8DD9>
	<vendor: #NV>
	<groups: #(#PipelineParameterName #ShaderType)>
	^ GL_GEOMETRY_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_ARB [

	<enum: #'GL_GEOMETRY_SHADER_ARB'>
	<value: 16r8DD9>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_GEOMETRY_SHADER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_BIT [

	<enum: #'GL_GEOMETRY_SHADER_BIT'>
	<value: 2r100>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_GEOMETRY_SHADER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_BIT_EXT [

	<enum: #'GL_GEOMETRY_SHADER_BIT_EXT'>
	<value: 2r100>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_GEOMETRY_SHADER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_BIT_OES [

	<enum: #'GL_GEOMETRY_SHADER_BIT_OES'>
	<value: 2r100>
	<suffix: #OES>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_GEOMETRY_SHADER_BIT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_EXT [

	<enum: #'GL_GEOMETRY_SHADER_EXT'>
	<value: 16r8DD9>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GEOMETRY_SHADER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_INVOCATIONS [

	<enum: #'GL_GEOMETRY_SHADER_INVOCATIONS'>
	<value: 16r887F>
	<vendor: #NV>
	^ GL_GEOMETRY_SHADER_INVOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_INVOCATIONS_EXT [

	<enum: #'GL_GEOMETRY_SHADER_INVOCATIONS_EXT'>
	<value: 16r887F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GEOMETRY_SHADER_INVOCATIONS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_INVOCATIONS_OES [

	<enum: #'GL_GEOMETRY_SHADER_INVOCATIONS_OES'>
	<value: 16r887F>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_GEOMETRY_SHADER_INVOCATIONS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_OES [

	<enum: #'GL_GEOMETRY_SHADER_OES'>
	<value: 16r8DD9>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_GEOMETRY_SHADER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_PRIMITIVES_EMITTED [

	<enum: #'GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED'>
	<value: 16r82F3>
	<vendor: #ARB>
	^ GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB [

	<enum: #'GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB'>
	<value: 16r82F3>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SUBROUTINE [

	<enum: #'GL_GEOMETRY_SUBROUTINE'>
	<value: 16r92EB>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_GEOMETRY_SUBROUTINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_SUBROUTINE_UNIFORM [

	<enum: #'GL_GEOMETRY_SUBROUTINE_UNIFORM'>
	<value: 16r92F1>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_GEOMETRY_SUBROUTINE_UNIFORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_TEXTURE [

	<enum: #'GL_GEOMETRY_TEXTURE'>
	<value: 16r829E>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_GEOMETRY_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_VERTICES_OUT [

	<enum: #'GL_GEOMETRY_VERTICES_OUT'>
	<value: 16r8916>
	<vendor: #NV>
	<groups: #(#ProgramPropertyARB)>
	^ GL_GEOMETRY_VERTICES_OUT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_VERTICES_OUT_ARB [

	<enum: #'GL_GEOMETRY_VERTICES_OUT_ARB'>
	<value: 16r8DDA>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_GEOMETRY_VERTICES_OUT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEOMETRY_VERTICES_OUT_EXT [

	<enum: #'GL_GEOMETRY_VERTICES_OUT_EXT'>
	<value: 16r8DDA>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GEOMETRY_VERTICES_OUT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GEQUAL [

	<enum: #'GL_GEQUAL'>
	<value: 16r206>
	<vendor: #ARB>
	<groups: #(#AlphaFunction #DepthFunction #IndexFunctionEXT #StencilFunction)>
	^ GL_GEQUAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GET_TEXTURE_IMAGE_FORMAT [

	<enum: #'GL_GET_TEXTURE_IMAGE_FORMAT'>
	<value: 16r8291>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_GET_TEXTURE_IMAGE_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GET_TEXTURE_IMAGE_TYPE [

	<enum: #'GL_GET_TEXTURE_IMAGE_TYPE'>
	<value: 16r8292>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_GET_TEXTURE_IMAGE_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLOBAL_ALPHA_FACTOR_SUN [

	<enum: #'GL_GLOBAL_ALPHA_FACTOR_SUN'>
	<value: 16r81DA>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_GLOBAL_ALPHA_FACTOR_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLOBAL_ALPHA_SUN [

	<enum: #'GL_GLOBAL_ALPHA_SUN'>
	<value: 16r81D9>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_GLOBAL_ALPHA_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_HAS_KERNING_BIT_NV [

	<enum: #'GL_GLYPH_HAS_KERNING_BIT_NV'>
	<value: 2r100000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_HAS_KERNING_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_HEIGHT_BIT_NV [

	<enum: #'GL_GLYPH_HEIGHT_BIT_NV'>
	<value: 2r10>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_HEIGHT_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV [

	<enum: #'GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV'>
	<value: 2r10000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_HORIZONTAL_BEARING_X_BIT_NV [

	<enum: #'GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV'>
	<value: 2r100>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_HORIZONTAL_BEARING_Y_BIT_NV [

	<enum: #'GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV'>
	<value: 2r1000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV [

	<enum: #'GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV'>
	<value: 2r10000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_VERTICAL_BEARING_X_BIT_NV [

	<enum: #'GL_GLYPH_VERTICAL_BEARING_X_BIT_NV'>
	<value: 2r100000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_VERTICAL_BEARING_X_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_VERTICAL_BEARING_Y_BIT_NV [

	<enum: #'GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV'>
	<value: 2r1000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GLYPH_WIDTH_BIT_NV [

	<enum: #'GL_GLYPH_WIDTH_BIT_NV'>
	<value: 2r1>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathMetricMask #PathRenderingMaskNV)>
	^ GL_GLYPH_WIDTH_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_1PASS_EXT [

	<enum: #'GL_1PASS_EXT'>
	<value: 16r80A1>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SamplePatternEXT #SamplePatternSGIS)>
	^ GL_1PASS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_1PASS_SGIS [

	<enum: #'GL_1PASS_SGIS'>
	<value: 16r80A1>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#SamplePatternSGIS)>
	^ GL_1PASS_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_2D [

	<enum: #'GL_2D'>
	<value: 16r600>
	<vendor: #ARB>
	<groups: #(#FeedbackType)>
	^ GL_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_2PASS_0_EXT [

	<enum: #'GL_2PASS_0_EXT'>
	<value: 16r80A2>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SamplePatternEXT #SamplePatternSGIS)>
	^ GL_2PASS_0_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_2PASS_0_SGIS [

	<enum: #'GL_2PASS_0_SGIS'>
	<value: 16r80A2>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#SamplePatternSGIS)>
	^ GL_2PASS_0_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_2PASS_1_EXT [

	<enum: #'GL_2PASS_1_EXT'>
	<value: 16r80A3>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SamplePatternEXT #SamplePatternSGIS)>
	^ GL_2PASS_1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_2PASS_1_SGIS [

	<enum: #'GL_2PASS_1_SGIS'>
	<value: 16r80A3>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#SamplePatternSGIS)>
	^ GL_2PASS_1_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_2X_BIT_ATI [

	<enum: #'GL_2X_BIT_ATI'>
	<value: 2r1>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestModMaskATI)>
	^ GL_2X_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_2_BYTES [

	<enum: #'GL_2_BYTES'>
	<value: 16r1407>
	<vendor: #ARB>
	<groups: #(#ListNameType)>
	^ GL_2_BYTES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_2_BYTES_NV [

	<enum: #'GL_2_BYTES_NV'>
	<value: 16r1407>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_2_BYTES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_3D [

	<enum: #'GL_3D'>
	<value: 16r601>
	<vendor: #ARB>
	<groups: #(#FeedbackType)>
	^ GL_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_3DC_XY_AMD [

	<enum: #'GL_3DC_XY_AMD'>
	<value: 16r87FA>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_3DC_XY_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_3DC_X_AMD [

	<enum: #'GL_3DC_X_AMD'>
	<value: 16r87F9>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_3DC_X_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_3D_COLOR [

	<enum: #'GL_3D_COLOR'>
	<value: 16r602>
	<vendor: #ARB>
	<groups: #(#FeedbackType)>
	^ GL_3D_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_3D_COLOR_TEXTURE [

	<enum: #'GL_3D_COLOR_TEXTURE'>
	<value: 16r603>
	<vendor: #ARB>
	<groups: #(#FeedbackType)>
	^ GL_3D_COLOR_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_3_BYTES [

	<enum: #'GL_3_BYTES'>
	<value: 16r1408>
	<vendor: #ARB>
	<groups: #(#ListNameType)>
	^ GL_3_BYTES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_3_BYTES_NV [

	<enum: #'GL_3_BYTES_NV'>
	<value: 16r1408>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_3_BYTES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_422_AVERAGE_EXT [

	<enum: #'GL_422_AVERAGE_EXT'>
	<value: 16r80CE>
	<vendor: #ZiiLabs>
	<suffix: #EXT>
	^ GL_422_AVERAGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_422_EXT [

	<enum: #'GL_422_EXT'>
	<value: 16r80CC>
	<vendor: #ZiiLabs>
	<suffix: #EXT>
	^ GL_422_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_422_REV_AVERAGE_EXT [

	<enum: #'GL_422_REV_AVERAGE_EXT'>
	<value: 16r80CF>
	<vendor: #ZiiLabs>
	<suffix: #EXT>
	^ GL_422_REV_AVERAGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_422_REV_EXT [

	<enum: #'GL_422_REV_EXT'>
	<value: 16r80CD>
	<vendor: #ZiiLabs>
	<suffix: #EXT>
	^ GL_422_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4D_COLOR_TEXTURE [

	<enum: #'GL_4D_COLOR_TEXTURE'>
	<value: 16r604>
	<vendor: #ARB>
	<groups: #(#FeedbackType)>
	^ GL_4D_COLOR_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4PASS_0_EXT [

	<enum: #'GL_4PASS_0_EXT'>
	<value: 16r80A4>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SamplePatternEXT #SamplePatternSGIS)>
	^ GL_4PASS_0_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4PASS_0_SGIS [

	<enum: #'GL_4PASS_0_SGIS'>
	<value: 16r80A4>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#SamplePatternSGIS)>
	^ GL_4PASS_0_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4PASS_1_EXT [

	<enum: #'GL_4PASS_1_EXT'>
	<value: 16r80A5>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SamplePatternEXT #SamplePatternSGIS)>
	^ GL_4PASS_1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4PASS_1_SGIS [

	<enum: #'GL_4PASS_1_SGIS'>
	<value: 16r80A5>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#SamplePatternSGIS)>
	^ GL_4PASS_1_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4PASS_2_EXT [

	<enum: #'GL_4PASS_2_EXT'>
	<value: 16r80A6>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SamplePatternEXT #SamplePatternSGIS)>
	^ GL_4PASS_2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4PASS_2_SGIS [

	<enum: #'GL_4PASS_2_SGIS'>
	<value: 16r80A6>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#SamplePatternSGIS)>
	^ GL_4PASS_2_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4PASS_3_EXT [

	<enum: #'GL_4PASS_3_EXT'>
	<value: 16r80A7>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SamplePatternEXT #SamplePatternSGIS)>
	^ GL_4PASS_3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4PASS_3_SGIS [

	<enum: #'GL_4PASS_3_SGIS'>
	<value: 16r80A7>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#SamplePatternSGIS)>
	^ GL_4PASS_3_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4X_BIT_ATI [

	<enum: #'GL_4X_BIT_ATI'>
	<value: 2r10>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestModMaskATI)>
	^ GL_4X_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4_BYTES [

	<enum: #'GL_4_BYTES'>
	<value: 16r1409>
	<vendor: #ARB>
	<groups: #(#ListNameType)>
	^ GL_4_BYTES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_4_BYTES_NV [

	<enum: #'GL_4_BYTES_NV'>
	<value: 16r1409>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_4_BYTES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GL_8X_BIT_ATI [

	<enum: #'GL_8X_BIT_ATI'>
	<value: 2r100>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestModMaskATI)>
	^ GL_8X_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GPU_ADDRESS_NV [

	<enum: #'GL_GPU_ADDRESS_NV'>
	<value: 16r8F34>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_GPU_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GPU_DISJOINT_EXT [

	<enum: #'GL_GPU_DISJOINT_EXT'>
	<value: 16r8FBB>
	<vendor: #QCOM>
	<suffix: #EXT>
	^ GL_GPU_DISJOINT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX [

	<enum: #'GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX'>
	<value: 16r9049>
	<vendor: #NV>
	<suffix: #NVX>
	^ GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX [

	<enum: #'GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX'>
	<value: 16r9047>
	<vendor: #NV>
	<suffix: #NVX>
	^ GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GPU_MEMORY_INFO_EVICTED_MEMORY_NVX [

	<enum: #'GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX'>
	<value: 16r904B>
	<vendor: #NV>
	<suffix: #NVX>
	^ GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GPU_MEMORY_INFO_EVICTION_COUNT_NVX [

	<enum: #'GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX'>
	<value: 16r904A>
	<vendor: #NV>
	<suffix: #NVX>
	^ GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX [

	<enum: #'GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX'>
	<value: 16r9048>
	<vendor: #NV>
	<suffix: #NVX>
	^ GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GPU_OPTIMIZED_QCOM [

	<enum: #'GL_GPU_OPTIMIZED_QCOM'>
	<value: 16r8FB2>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_GPU_OPTIMIZED_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREATER [

	<enum: #'GL_GREATER'>
	<value: 16r204>
	<vendor: #ARB>
	<groups: #(#AlphaFunction #DepthFunction #IndexFunctionEXT #StencilFunction)>
	^ GL_GREATER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN [

	<enum: #'GL_GREEN'>
	<value: 16r1904>
	<vendor: #ARB>
	<groups: #(#PixelFormat #TextureSwizzle)>
	^ GL_GREEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_BIAS [

	<enum: #'GL_GREEN_BIAS'>
	<value: 16rD19>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_GREEN_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_BITS [

	<enum: #'GL_GREEN_BITS'>
	<value: 16rD53>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_GREEN_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_BIT_ATI [

	<enum: #'GL_GREEN_BIT_ATI'>
	<value: 2r10>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestMaskATI)>
	^ GL_GREEN_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_INTEGER [

	<enum: #'GL_GREEN_INTEGER'>
	<value: 16r8D95>
	<vendor: #NV>
	<groups: #(#PixelFormat)>
	^ GL_GREEN_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_INTEGER_EXT [

	<enum: #'GL_GREEN_INTEGER_EXT'>
	<value: 16r8D95>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_GREEN_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_MAX_CLAMP_INGR [

	<enum: #'GL_GREEN_MAX_CLAMP_INGR'>
	<value: 16r8565>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_GREEN_MAX_CLAMP_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_MIN_CLAMP_INGR [

	<enum: #'GL_GREEN_MIN_CLAMP_INGR'>
	<value: 16r8561>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_GREEN_MIN_CLAMP_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_NV [

	<enum: #'GL_GREEN_NV'>
	<value: 16r1904>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_GREEN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GREEN_SCALE [

	<enum: #'GL_GREEN_SCALE'>
	<value: 16rD18>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_GREEN_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GS_PROGRAM_BINARY_MTK [

	<enum: #'GL_GS_PROGRAM_BINARY_MTK'>
	<value: 16r9641>
	<vendor: #Mediatek>
	^ GL_GS_PROGRAM_BINARY_MTK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GS_SHADER_BINARY_MTK [

	<enum: #'GL_GS_SHADER_BINARY_MTK'>
	<value: 16r9640>
	<vendor: #Mediatek>
	^ GL_GS_SHADER_BINARY_MTK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GUILTY_CONTEXT_RESET [

	<enum: #'GL_GUILTY_CONTEXT_RESET'>
	<value: 16r8253>
	<vendor: #ARB>
	<groups: #(#GraphicsResetStatus)>
	^ GL_GUILTY_CONTEXT_RESET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GUILTY_CONTEXT_RESET_ARB [

	<enum: #'GL_GUILTY_CONTEXT_RESET_ARB'>
	<value: 16r8253>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_GUILTY_CONTEXT_RESET_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GUILTY_CONTEXT_RESET_EXT [

	<enum: #'GL_GUILTY_CONTEXT_RESET_EXT'>
	<value: 16r8253>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_GUILTY_CONTEXT_RESET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> GUILTY_CONTEXT_RESET_KHR [

	<enum: #'GL_GUILTY_CONTEXT_RESET_KHR'>
	<value: 16r8253>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_GUILTY_CONTEXT_RESET_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HALF_APPLE [

	<enum: #'GL_HALF_APPLE'>
	<value: 16r140B>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_HALF_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HALF_BIAS_NEGATE_NV [

	<enum: #'GL_HALF_BIAS_NEGATE_NV'>
	<value: 16r853B>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerMappingNV)>
	^ GL_HALF_BIAS_NEGATE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HALF_BIAS_NORMAL_NV [

	<enum: #'GL_HALF_BIAS_NORMAL_NV'>
	<value: 16r853A>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerMappingNV)>
	^ GL_HALF_BIAS_NORMAL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HALF_BIT_ATI [

	<enum: #'GL_HALF_BIT_ATI'>
	<value: 2r1000>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestModMaskATI)>
	^ GL_HALF_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HALF_FLOAT [

	<enum: #'GL_HALF_FLOAT'>
	<value: 16r140B>
	<vendor: #ARB>
	<groups: #(#VertexAttribPointerType #VertexAttribType)>
	^ GL_HALF_FLOAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HALF_FLOAT_ARB [

	<enum: #'GL_HALF_FLOAT_ARB'>
	<value: 16r140B>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_HALF_FLOAT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HALF_FLOAT_NV [

	<enum: #'GL_HALF_FLOAT_NV'>
	<value: 16r140B>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_HALF_FLOAT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HALF_FLOAT_OES [

	<enum: #'GL_HALF_FLOAT_OES'>
	<value: 16r8D61>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_HALF_FLOAT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HANDLE_TYPE_D3D11_IMAGE_EXT [

	<enum: #'GL_HANDLE_TYPE_D3D11_IMAGE_EXT'>
	<value: 16r958B>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#ExternalHandleType)>
	^ GL_HANDLE_TYPE_D3D11_IMAGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HANDLE_TYPE_D3D11_IMAGE_KMT_EXT [

	<enum: #'GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT'>
	<value: 16r958C>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#ExternalHandleType)>
	^ GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HANDLE_TYPE_D3D12_FENCE_EXT [

	<enum: #'GL_HANDLE_TYPE_D3D12_FENCE_EXT'>
	<value: 16r9594>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#ExternalHandleType)>
	^ GL_HANDLE_TYPE_D3D12_FENCE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HANDLE_TYPE_D3D12_RESOURCE_EXT [

	<enum: #'GL_HANDLE_TYPE_D3D12_RESOURCE_EXT'>
	<value: 16r958A>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#ExternalHandleType)>
	^ GL_HANDLE_TYPE_D3D12_RESOURCE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HANDLE_TYPE_D3D12_TILEPOOL_EXT [

	<enum: #'GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT'>
	<value: 16r9589>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#ExternalHandleType)>
	^ GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HANDLE_TYPE_OPAQUE_FD_EXT [

	<enum: #'GL_HANDLE_TYPE_OPAQUE_FD_EXT'>
	<value: 16r9586>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#ExternalHandleType)>
	^ GL_HANDLE_TYPE_OPAQUE_FD_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HANDLE_TYPE_OPAQUE_WIN32_EXT [

	<enum: #'GL_HANDLE_TYPE_OPAQUE_WIN32_EXT'>
	<value: 16r9587>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#ExternalHandleType)>
	^ GL_HANDLE_TYPE_OPAQUE_WIN32_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT [

	<enum: #'GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT'>
	<value: 16r9588>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#ExternalHandleType)>
	^ GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HARDLIGHT [

	<enum: #'GL_HARDLIGHT'>
	<value: 16r929B>
	<vendor: #NV>
	^ GL_HARDLIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HARDLIGHT_KHR [

	<enum: #'GL_HARDLIGHT_KHR'>
	<value: 16r929B>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_HARDLIGHT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HARDLIGHT_NV [

	<enum: #'GL_HARDLIGHT_NV'>
	<value: 16r929B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HARDLIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HARDMIX_NV [

	<enum: #'GL_HARDMIX_NV'>
	<value: 16r92A9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HARDMIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HIGH_FLOAT [

	<enum: #'GL_HIGH_FLOAT'>
	<value: 16r8DF2>
	<vendor: #OES>
	<groups: #(#PrecisionType)>
	^ GL_HIGH_FLOAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HIGH_INT [

	<enum: #'GL_HIGH_INT'>
	<value: 16r8DF5>
	<vendor: #OES>
	<groups: #(#PrecisionType)>
	^ GL_HIGH_INT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HILO16_NV [

	<enum: #'GL_HILO16_NV'>
	<value: 16r86F8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HILO16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HILO8_NV [

	<enum: #'GL_HILO8_NV'>
	<value: 16r885E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HILO8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HILO_NV [

	<enum: #'GL_HILO_NV'>
	<value: 16r86F4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HILO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HINT_BIT [

	<enum: #'GL_HINT_BIT'>
	<value: 2r1000000000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_HINT_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM [

	<enum: #'GL_HISTOGRAM'>
	<value: 16r8024>
	<vendor: #ARB>
	<groups: #(#HistogramTarget #HistogramTargetEXT)>
	^ GL_HISTOGRAM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_ALPHA_SIZE [

	<enum: #'GL_HISTOGRAM_ALPHA_SIZE'>
	<value: 16r802B>
	<vendor: #ARB>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_ALPHA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_ALPHA_SIZE_EXT [

	<enum: #'GL_HISTOGRAM_ALPHA_SIZE_EXT'>
	<value: 16r802B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_ALPHA_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_BLUE_SIZE [

	<enum: #'GL_HISTOGRAM_BLUE_SIZE'>
	<value: 16r802A>
	<vendor: #ARB>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_BLUE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_BLUE_SIZE_EXT [

	<enum: #'GL_HISTOGRAM_BLUE_SIZE_EXT'>
	<value: 16r802A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_BLUE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_EXT [

	<enum: #'GL_HISTOGRAM_EXT'>
	<value: 16r8024>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#EnableCap #GetPName #HistogramTargetEXT)>
	^ GL_HISTOGRAM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_FORMAT [

	<enum: #'GL_HISTOGRAM_FORMAT'>
	<value: 16r8027>
	<vendor: #ARB>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_FORMAT_EXT [

	<enum: #'GL_HISTOGRAM_FORMAT_EXT'>
	<value: 16r8027>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_FORMAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_GREEN_SIZE [

	<enum: #'GL_HISTOGRAM_GREEN_SIZE'>
	<value: 16r8029>
	<vendor: #ARB>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_GREEN_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_GREEN_SIZE_EXT [

	<enum: #'GL_HISTOGRAM_GREEN_SIZE_EXT'>
	<value: 16r8029>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_GREEN_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_LUMINANCE_SIZE [

	<enum: #'GL_HISTOGRAM_LUMINANCE_SIZE'>
	<value: 16r802C>
	<vendor: #ARB>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_LUMINANCE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_LUMINANCE_SIZE_EXT [

	<enum: #'GL_HISTOGRAM_LUMINANCE_SIZE_EXT'>
	<value: 16r802C>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_LUMINANCE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_RED_SIZE [

	<enum: #'GL_HISTOGRAM_RED_SIZE'>
	<value: 16r8028>
	<vendor: #ARB>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_RED_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_RED_SIZE_EXT [

	<enum: #'GL_HISTOGRAM_RED_SIZE_EXT'>
	<value: 16r8028>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_RED_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_SINK [

	<enum: #'GL_HISTOGRAM_SINK'>
	<value: 16r802D>
	<vendor: #ARB>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_SINK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_SINK_EXT [

	<enum: #'GL_HISTOGRAM_SINK_EXT'>
	<value: 16r802D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_SINK_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_WIDTH [

	<enum: #'GL_HISTOGRAM_WIDTH'>
	<value: 16r8026>
	<vendor: #ARB>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HISTOGRAM_WIDTH_EXT [

	<enum: #'GL_HISTOGRAM_WIDTH_EXT'>
	<value: 16r8026>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetHistogramParameterPNameEXT)>
	^ GL_HISTOGRAM_WIDTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HI_BIAS_NV [

	<enum: #'GL_HI_BIAS_NV'>
	<value: 16r8714>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HI_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HI_SCALE_NV [

	<enum: #'GL_HI_SCALE_NV'>
	<value: 16r870E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HI_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HORIZONTAL_LINE_TO_NV [

	<enum: #'GL_HORIZONTAL_LINE_TO_NV'>
	<value: 16r6>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_HORIZONTAL_LINE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_COLOR [

	<enum: #'GL_HSL_COLOR'>
	<value: 16r92AF>
	<vendor: #NV>
	^ GL_HSL_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_COLOR_KHR [

	<enum: #'GL_HSL_COLOR_KHR'>
	<value: 16r92AF>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_HSL_COLOR_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_COLOR_NV [

	<enum: #'GL_HSL_COLOR_NV'>
	<value: 16r92AF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HSL_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_HUE [

	<enum: #'GL_HSL_HUE'>
	<value: 16r92AD>
	<vendor: #NV>
	^ GL_HSL_HUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_HUE_KHR [

	<enum: #'GL_HSL_HUE_KHR'>
	<value: 16r92AD>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_HSL_HUE_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_HUE_NV [

	<enum: #'GL_HSL_HUE_NV'>
	<value: 16r92AD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HSL_HUE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_LUMINOSITY [

	<enum: #'GL_HSL_LUMINOSITY'>
	<value: 16r92B0>
	<vendor: #NV>
	^ GL_HSL_LUMINOSITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_LUMINOSITY_KHR [

	<enum: #'GL_HSL_LUMINOSITY_KHR'>
	<value: 16r92B0>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_HSL_LUMINOSITY_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_LUMINOSITY_NV [

	<enum: #'GL_HSL_LUMINOSITY_NV'>
	<value: 16r92B0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HSL_LUMINOSITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_SATURATION [

	<enum: #'GL_HSL_SATURATION'>
	<value: 16r92AE>
	<vendor: #NV>
	^ GL_HSL_SATURATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_SATURATION_KHR [

	<enum: #'GL_HSL_SATURATION_KHR'>
	<value: 16r92AE>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_HSL_SATURATION_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> HSL_SATURATION_NV [

	<enum: #'GL_HSL_SATURATION_NV'>
	<value: 16r92AE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_HSL_SATURATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IDENTITY_NV [

	<enum: #'GL_IDENTITY_NV'>
	<value: 16r862A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_IDENTITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IGNORE_BORDER_HP [

	<enum: #'GL_IGNORE_BORDER_HP'>
	<value: 16r8150>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_IGNORE_BORDER_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_1D [

	<enum: #'GL_IMAGE_1D'>
	<value: 16r904C>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_1D_ARRAY [

	<enum: #'GL_IMAGE_1D_ARRAY'>
	<value: 16r9052>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_1D_ARRAY_EXT [

	<enum: #'GL_IMAGE_1D_ARRAY_EXT'>
	<value: 16r9052>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_1D_EXT [

	<enum: #'GL_IMAGE_1D_EXT'>
	<value: 16r904C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_1D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D [

	<enum: #'GL_IMAGE_2D'>
	<value: 16r904D>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_ARRAY [

	<enum: #'GL_IMAGE_2D_ARRAY'>
	<value: 16r9053>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_ARRAY_EXT [

	<enum: #'GL_IMAGE_2D_ARRAY_EXT'>
	<value: 16r9053>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_EXT [

	<enum: #'GL_IMAGE_2D_EXT'>
	<value: 16r904D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_MULTISAMPLE [

	<enum: #'GL_IMAGE_2D_MULTISAMPLE'>
	<value: 16r9055>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_IMAGE_2D_MULTISAMPLE_ARRAY'>
	<value: 16r9056>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_MULTISAMPLE_ARRAY_EXT [

	<enum: #'GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT'>
	<value: 16r9056>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_MULTISAMPLE_EXT [

	<enum: #'GL_IMAGE_2D_MULTISAMPLE_EXT'>
	<value: 16r9055>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_2D_MULTISAMPLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_RECT [

	<enum: #'GL_IMAGE_2D_RECT'>
	<value: 16r904F>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_2D_RECT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_2D_RECT_EXT [

	<enum: #'GL_IMAGE_2D_RECT_EXT'>
	<value: 16r904F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_2D_RECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_3D [

	<enum: #'GL_IMAGE_3D'>
	<value: 16r904E>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_3D_EXT [

	<enum: #'GL_IMAGE_3D_EXT'>
	<value: 16r904E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_3D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_ACCESS [

	<enum: #'GL_IMAGE_BINDING_ACCESS'>
	<value: 16r8F3E>
	<vendor: #NV>
	^ GL_IMAGE_BINDING_ACCESS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_ACCESS_EXT [

	<enum: #'GL_IMAGE_BINDING_ACCESS_EXT'>
	<value: 16r8F3E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_BINDING_ACCESS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_FORMAT [

	<enum: #'GL_IMAGE_BINDING_FORMAT'>
	<value: 16r906E>
	<vendor: #NV>
	^ GL_IMAGE_BINDING_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_FORMAT_EXT [

	<enum: #'GL_IMAGE_BINDING_FORMAT_EXT'>
	<value: 16r906E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_BINDING_FORMAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_LAYER [

	<enum: #'GL_IMAGE_BINDING_LAYER'>
	<value: 16r8F3D>
	<vendor: #NV>
	^ GL_IMAGE_BINDING_LAYER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_LAYERED [

	<enum: #'GL_IMAGE_BINDING_LAYERED'>
	<value: 16r8F3C>
	<vendor: #NV>
	^ GL_IMAGE_BINDING_LAYERED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_LAYERED_EXT [

	<enum: #'GL_IMAGE_BINDING_LAYERED_EXT'>
	<value: 16r8F3C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_BINDING_LAYERED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_LAYER_EXT [

	<enum: #'GL_IMAGE_BINDING_LAYER_EXT'>
	<value: 16r8F3D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_BINDING_LAYER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_LEVEL [

	<enum: #'GL_IMAGE_BINDING_LEVEL'>
	<value: 16r8F3B>
	<vendor: #NV>
	^ GL_IMAGE_BINDING_LEVEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_LEVEL_EXT [

	<enum: #'GL_IMAGE_BINDING_LEVEL_EXT'>
	<value: 16r8F3B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_BINDING_LEVEL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_NAME [

	<enum: #'GL_IMAGE_BINDING_NAME'>
	<value: 16r8F3A>
	<vendor: #NV>
	^ GL_IMAGE_BINDING_NAME
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BINDING_NAME_EXT [

	<enum: #'GL_IMAGE_BINDING_NAME_EXT'>
	<value: 16r8F3A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_BINDING_NAME_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BUFFER [

	<enum: #'GL_IMAGE_BUFFER'>
	<value: 16r9051>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BUFFER_EXT [

	<enum: #'GL_IMAGE_BUFFER_EXT'>
	<value: 16r9051>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_BUFFER_OES [

	<enum: #'GL_IMAGE_BUFFER_OES'>
	<value: 16r9051>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_IMAGE_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_10_10_10_2 [

	<enum: #'GL_IMAGE_CLASS_10_10_10_2'>
	<value: 16r82C3>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_10_10_10_2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_11_11_10 [

	<enum: #'GL_IMAGE_CLASS_11_11_10'>
	<value: 16r82C2>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_11_11_10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_1_X_16 [

	<enum: #'GL_IMAGE_CLASS_1_X_16'>
	<value: 16r82BE>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_1_X_16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_1_X_32 [

	<enum: #'GL_IMAGE_CLASS_1_X_32'>
	<value: 16r82BB>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_1_X_32
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_1_X_8 [

	<enum: #'GL_IMAGE_CLASS_1_X_8'>
	<value: 16r82C1>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_1_X_8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_2_X_16 [

	<enum: #'GL_IMAGE_CLASS_2_X_16'>
	<value: 16r82BD>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_2_X_16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_2_X_32 [

	<enum: #'GL_IMAGE_CLASS_2_X_32'>
	<value: 16r82BA>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_2_X_32
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_2_X_8 [

	<enum: #'GL_IMAGE_CLASS_2_X_8'>
	<value: 16r82C0>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_2_X_8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_4_X_16 [

	<enum: #'GL_IMAGE_CLASS_4_X_16'>
	<value: 16r82BC>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_4_X_16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_4_X_32 [

	<enum: #'GL_IMAGE_CLASS_4_X_32'>
	<value: 16r82B9>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_4_X_32
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CLASS_4_X_8 [

	<enum: #'GL_IMAGE_CLASS_4_X_8'>
	<value: 16r82BF>
	<vendor: #ARB>
	^ GL_IMAGE_CLASS_4_X_8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_COMPATIBILITY_CLASS [

	<enum: #'GL_IMAGE_COMPATIBILITY_CLASS'>
	<value: 16r82A8>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_IMAGE_COMPATIBILITY_CLASS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CUBE [

	<enum: #'GL_IMAGE_CUBE'>
	<value: 16r9050>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_CUBE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CUBE_EXT [

	<enum: #'GL_IMAGE_CUBE_EXT'>
	<value: 16r9050>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_CUBE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CUBE_MAP_ARRAY [

	<enum: #'GL_IMAGE_CUBE_MAP_ARRAY'>
	<value: 16r9054>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_IMAGE_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CUBE_MAP_ARRAY_EXT [

	<enum: #'GL_IMAGE_CUBE_MAP_ARRAY_EXT'>
	<value: 16r9054>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IMAGE_CUBE_MAP_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CUBE_MAP_ARRAY_OES [

	<enum: #'GL_IMAGE_CUBE_MAP_ARRAY_OES'>
	<value: 16r9054>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_IMAGE_CUBE_MAP_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_CUBIC_WEIGHT_HP [

	<enum: #'GL_IMAGE_CUBIC_WEIGHT_HP'>
	<value: 16r815E>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_CUBIC_WEIGHT_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_FORMAT_COMPATIBILITY_BY_CLASS [

	<enum: #'GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS'>
	<value: 16r90C9>
	<vendor: #NV>
	^ GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_FORMAT_COMPATIBILITY_BY_SIZE [

	<enum: #'GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE'>
	<value: 16r90C8>
	<vendor: #NV>
	^ GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_FORMAT_COMPATIBILITY_TYPE [

	<enum: #'GL_IMAGE_FORMAT_COMPATIBILITY_TYPE'>
	<value: 16r90C7>
	<vendor: #NV>
	<groups: #(#InternalFormatPName)>
	^ GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_MAG_FILTER_HP [

	<enum: #'GL_IMAGE_MAG_FILTER_HP'>
	<value: 16r815C>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_MAG_FILTER_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_MIN_FILTER_HP [

	<enum: #'GL_IMAGE_MIN_FILTER_HP'>
	<value: 16r815D>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_MIN_FILTER_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_PIXEL_FORMAT [

	<enum: #'GL_IMAGE_PIXEL_FORMAT'>
	<value: 16r82A9>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_IMAGE_PIXEL_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_PIXEL_TYPE [

	<enum: #'GL_IMAGE_PIXEL_TYPE'>
	<value: 16r82AA>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_IMAGE_PIXEL_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_ROTATE_ANGLE_HP [

	<enum: #'GL_IMAGE_ROTATE_ANGLE_HP'>
	<value: 16r8159>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_ROTATE_ANGLE_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_ROTATE_ORIGIN_X_HP [

	<enum: #'GL_IMAGE_ROTATE_ORIGIN_X_HP'>
	<value: 16r815A>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_ROTATE_ORIGIN_X_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_ROTATE_ORIGIN_Y_HP [

	<enum: #'GL_IMAGE_ROTATE_ORIGIN_Y_HP'>
	<value: 16r815B>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_ROTATE_ORIGIN_Y_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_SCALE_X_HP [

	<enum: #'GL_IMAGE_SCALE_X_HP'>
	<value: 16r8155>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_SCALE_X_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_SCALE_Y_HP [

	<enum: #'GL_IMAGE_SCALE_Y_HP'>
	<value: 16r8156>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_SCALE_Y_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_TEXEL_SIZE [

	<enum: #'GL_IMAGE_TEXEL_SIZE'>
	<value: 16r82A7>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_IMAGE_TEXEL_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_TRANSFORM_2D_HP [

	<enum: #'GL_IMAGE_TRANSFORM_2D_HP'>
	<value: 16r8161>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformTargetHP)>
	^ GL_IMAGE_TRANSFORM_2D_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_TRANSLATE_X_HP [

	<enum: #'GL_IMAGE_TRANSLATE_X_HP'>
	<value: 16r8157>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_TRANSLATE_X_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMAGE_TRANSLATE_Y_HP [

	<enum: #'GL_IMAGE_TRANSLATE_Y_HP'>
	<value: 16r8158>
	<vendor: #HP>
	<suffix: #HP>
	<groups: #(#ImageTransformPNameHP)>
	^ GL_IMAGE_TRANSLATE_Y_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMPLEMENTATION_COLOR_READ_FORMAT [

	<enum: #'GL_IMPLEMENTATION_COLOR_READ_FORMAT'>
	<value: 16r8B9B>
	<vendor: #OES>
	<groups: #(#GetFramebufferParameter #GetPName)>
	^ GL_IMPLEMENTATION_COLOR_READ_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMPLEMENTATION_COLOR_READ_FORMAT_OES [

	<enum: #'GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES'>
	<value: 16r8B9B>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMPLEMENTATION_COLOR_READ_TYPE [

	<enum: #'GL_IMPLEMENTATION_COLOR_READ_TYPE'>
	<value: 16r8B9A>
	<vendor: #OES>
	<groups: #(#GetFramebufferParameter #GetPName)>
	^ GL_IMPLEMENTATION_COLOR_READ_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IMPLEMENTATION_COLOR_READ_TYPE_OES [

	<enum: #'GL_IMPLEMENTATION_COLOR_READ_TYPE_OES'>
	<value: 16r8B9A>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INCLUSIVE_EXT [

	<enum: #'GL_INCLUSIVE_EXT'>
	<value: 16r8F10>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INCLUSIVE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INCR [

	<enum: #'GL_INCR'>
	<value: 16r1E02>
	<vendor: #ARB>
	<groups: #(#StencilOp)>
	^ GL_INCR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INCR_WRAP [

	<enum: #'GL_INCR_WRAP'>
	<value: 16r8507>
	<vendor: #NV>
	<groups: #(#StencilOp)>
	^ GL_INCR_WRAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INCR_WRAP_EXT [

	<enum: #'GL_INCR_WRAP_EXT'>
	<value: 16r8507>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INCR_WRAP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INCR_WRAP_OES [

	<enum: #'GL_INCR_WRAP_OES'>
	<value: 16r8507>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_INCR_WRAP_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX [

	<enum: #'GL_INDEX'>
	<value: 16r8222>
	<vendor: #ARB>
	^ GL_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY [

	<enum: #'GL_INDEX_ARRAY'>
	<value: 16r8077>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_INDEX_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_ADDRESS_NV [

	<enum: #'GL_INDEX_ARRAY_ADDRESS_NV'>
	<value: 16r8F24>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INDEX_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_BUFFER_BINDING [

	<enum: #'GL_INDEX_ARRAY_BUFFER_BINDING'>
	<value: 16r8899>
	<vendor: #NV>
	^ GL_INDEX_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_INDEX_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r8899>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_INDEX_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_COUNT_EXT [

	<enum: #'GL_INDEX_ARRAY_COUNT_EXT'>
	<value: 16r8087>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_INDEX_ARRAY_COUNT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_EXT [

	<enum: #'GL_INDEX_ARRAY_EXT'>
	<value: 16r8077>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_INDEX_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_LENGTH_NV [

	<enum: #'GL_INDEX_ARRAY_LENGTH_NV'>
	<value: 16r8F2E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INDEX_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_LIST_IBM [

	<enum: #'GL_INDEX_ARRAY_LIST_IBM'>
	<value: 16r192A1>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_INDEX_ARRAY_LIST_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_LIST_STRIDE_IBM [

	<enum: #'GL_INDEX_ARRAY_LIST_STRIDE_IBM'>
	<value: 16r192AB>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_INDEX_ARRAY_LIST_STRIDE_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_POINTER [

	<enum: #'GL_INDEX_ARRAY_POINTER'>
	<value: 16r8091>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_INDEX_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_POINTER_EXT [

	<enum: #'GL_INDEX_ARRAY_POINTER_EXT'>
	<value: 16r8091>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPointervPName)>
	^ GL_INDEX_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_STRIDE [

	<enum: #'GL_INDEX_ARRAY_STRIDE'>
	<value: 16r8086>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_INDEX_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_STRIDE_EXT [

	<enum: #'GL_INDEX_ARRAY_STRIDE_EXT'>
	<value: 16r8086>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_INDEX_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_TYPE [

	<enum: #'GL_INDEX_ARRAY_TYPE'>
	<value: 16r8085>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_INDEX_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_ARRAY_TYPE_EXT [

	<enum: #'GL_INDEX_ARRAY_TYPE_EXT'>
	<value: 16r8085>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_INDEX_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_BITS [

	<enum: #'GL_INDEX_BITS'>
	<value: 16rD51>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_INDEX_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_BIT_PGI [

	<enum: #'GL_INDEX_BIT_PGI'>
	<value: 2r10000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_INDEX_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_CLEAR_VALUE [

	<enum: #'GL_INDEX_CLEAR_VALUE'>
	<value: 16rC20>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_INDEX_CLEAR_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_LOGIC_OP [

	<enum: #'GL_INDEX_LOGIC_OP'>
	<value: 16rBF1>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_INDEX_LOGIC_OP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_MATERIAL_EXT [

	<enum: #'GL_INDEX_MATERIAL_EXT'>
	<value: 16r81B8>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_INDEX_MATERIAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_MATERIAL_FACE_EXT [

	<enum: #'GL_INDEX_MATERIAL_FACE_EXT'>
	<value: 16r81BA>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_INDEX_MATERIAL_FACE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_MATERIAL_PARAMETER_EXT [

	<enum: #'GL_INDEX_MATERIAL_PARAMETER_EXT'>
	<value: 16r81B9>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_INDEX_MATERIAL_PARAMETER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_MODE [

	<enum: #'GL_INDEX_MODE'>
	<value: 16rC30>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_INDEX_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_OFFSET [

	<enum: #'GL_INDEX_OFFSET'>
	<value: 16rD13>
	<vendor: #ARB>
	<groups: #(#GetPName #IndexMaterialParameterEXT #PixelTransferParameter)>
	^ GL_INDEX_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_SHIFT [

	<enum: #'GL_INDEX_SHIFT'>
	<value: 16rD12>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_INDEX_SHIFT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_TEST_EXT [

	<enum: #'GL_INDEX_TEST_EXT'>
	<value: 16r81B5>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_INDEX_TEST_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_TEST_FUNC_EXT [

	<enum: #'GL_INDEX_TEST_FUNC_EXT'>
	<value: 16r81B6>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_INDEX_TEST_FUNC_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_TEST_REF_EXT [

	<enum: #'GL_INDEX_TEST_REF_EXT'>
	<value: 16r81B7>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_INDEX_TEST_REF_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INDEX_WRITEMASK [

	<enum: #'GL_INDEX_WRITEMASK'>
	<value: 16rC21>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_INDEX_WRITEMASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INFO_LOG_LENGTH [

	<enum: #'GL_INFO_LOG_LENGTH'>
	<value: 16r8B84>
	<vendor: #ARB>
	<groups: #(#PipelineParameterName #ProgramPropertyARB #ShaderParameterName)>
	^ GL_INFO_LOG_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INNOCENT_CONTEXT_RESET [

	<enum: #'GL_INNOCENT_CONTEXT_RESET'>
	<value: 16r8254>
	<vendor: #ARB>
	<groups: #(#GraphicsResetStatus)>
	^ GL_INNOCENT_CONTEXT_RESET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INNOCENT_CONTEXT_RESET_ARB [

	<enum: #'GL_INNOCENT_CONTEXT_RESET_ARB'>
	<value: 16r8254>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_INNOCENT_CONTEXT_RESET_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INNOCENT_CONTEXT_RESET_EXT [

	<enum: #'GL_INNOCENT_CONTEXT_RESET_EXT'>
	<value: 16r8254>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_INNOCENT_CONTEXT_RESET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INNOCENT_CONTEXT_RESET_KHR [

	<enum: #'GL_INNOCENT_CONTEXT_RESET_KHR'>
	<value: 16r8254>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_INNOCENT_CONTEXT_RESET_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INSTRUMENT_BUFFER_POINTER_SGIX [

	<enum: #'GL_INSTRUMENT_BUFFER_POINTER_SGIX'>
	<value: 16r8180>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPointervPName)>
	^ GL_INSTRUMENT_BUFFER_POINTER_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INSTRUMENT_MEASUREMENTS_SGIX [

	<enum: #'GL_INSTRUMENT_MEASUREMENTS_SGIX'>
	<value: 16r8181>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_INSTRUMENT_MEASUREMENTS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT [

	<enum: #'GL_INT'>
	<value: 16r1404>
	<vendor: #ARB>
	<groups: #(#AttributeType #BinormalPointerTypeEXT #GlslTypeToken #IndexPointerType #ListNameType #NormalPointerType #PixelType #SecondaryColorPointerTypeIBM #TangentPointerTypeEXT #TexCoordPointerType #UniformType #VertexAttribIType #VertexAttribPointerType #VertexAttribType #VertexPointerType #WeightPointerTypeARB)>
	^ GL_INT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT16_NV [

	<enum: #'GL_INT16_NV'>
	<value: 16r8FE4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT16_VEC2_NV [

	<enum: #'GL_INT16_VEC2_NV'>
	<value: 16r8FE5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT16_VEC2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT16_VEC3_NV [

	<enum: #'GL_INT16_VEC3_NV'>
	<value: 16r8FE6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT16_VEC3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT16_VEC4_NV [

	<enum: #'GL_INT16_VEC4_NV'>
	<value: 16r8FE7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT16_VEC4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT64_ARB [

	<enum: #'GL_INT64_ARB'>
	<value: 16r140E>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType #VertexAttribPointerType)>
	^ GL_INT64_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT64_NV [

	<enum: #'GL_INT64_NV'>
	<value: 16r140E>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#AttributeType #VertexAttribPointerType)>
	^ GL_INT64_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT64_VEC2_ARB [

	<enum: #'GL_INT64_VEC2_ARB'>
	<value: 16r8FE9>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_INT64_VEC2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT64_VEC2_NV [

	<enum: #'GL_INT64_VEC2_NV'>
	<value: 16r8FE9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT64_VEC2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT64_VEC3_ARB [

	<enum: #'GL_INT64_VEC3_ARB'>
	<value: 16r8FEA>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_INT64_VEC3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT64_VEC3_NV [

	<enum: #'GL_INT64_VEC3_NV'>
	<value: 16r8FEA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT64_VEC3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT64_VEC4_ARB [

	<enum: #'GL_INT64_VEC4_ARB'>
	<value: 16r8FEB>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_INT64_VEC4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT64_VEC4_NV [

	<enum: #'GL_INT64_VEC4_NV'>
	<value: 16r8FEB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT64_VEC4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT8_NV [

	<enum: #'GL_INT8_NV'>
	<value: 16r8FE0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT8_VEC2_NV [

	<enum: #'GL_INT8_VEC2_NV'>
	<value: 16r8FE1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT8_VEC2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT8_VEC3_NV [

	<enum: #'GL_INT8_VEC3_NV'>
	<value: 16r8FE2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT8_VEC3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT8_VEC4_NV [

	<enum: #'GL_INT8_VEC4_NV'>
	<value: 16r8FE3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT8_VEC4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY [

	<enum: #'GL_INTENSITY'>
	<value: 16r8049>
	<vendor: #ARB>
	<groups: #(#InternalFormat #PathColorFormat)>
	^ GL_INTENSITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY12 [

	<enum: #'GL_INTENSITY12'>
	<value: 16r804C>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY12_EXT [

	<enum: #'GL_INTENSITY12_EXT'>
	<value: 16r804C>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY16 [

	<enum: #'GL_INTENSITY16'>
	<value: 16r804D>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY16F_ARB [

	<enum: #'GL_INTENSITY16F_ARB'>
	<value: 16r881D>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_INTENSITY16F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY16I_EXT [

	<enum: #'GL_INTENSITY16I_EXT'>
	<value: 16r8D8B>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY16I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY16UI_EXT [

	<enum: #'GL_INTENSITY16UI_EXT'>
	<value: 16r8D79>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY16UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY16_EXT [

	<enum: #'GL_INTENSITY16_EXT'>
	<value: 16r804D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY16_SNORM [

	<enum: #'GL_INTENSITY16_SNORM'>
	<value: 16r901B>
	<vendor: #AMD>
	^ GL_INTENSITY16_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY32F_ARB [

	<enum: #'GL_INTENSITY32F_ARB'>
	<value: 16r8817>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_INTENSITY32F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY32I_EXT [

	<enum: #'GL_INTENSITY32I_EXT'>
	<value: 16r8D85>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY32I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY32UI_EXT [

	<enum: #'GL_INTENSITY32UI_EXT'>
	<value: 16r8D73>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY32UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY4 [

	<enum: #'GL_INTENSITY4'>
	<value: 16r804A>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY4_EXT [

	<enum: #'GL_INTENSITY4_EXT'>
	<value: 16r804A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY8 [

	<enum: #'GL_INTENSITY8'>
	<value: 16r804B>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY8I_EXT [

	<enum: #'GL_INTENSITY8I_EXT'>
	<value: 16r8D91>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY8I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY8UI_EXT [

	<enum: #'GL_INTENSITY8UI_EXT'>
	<value: 16r8D7F>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY8UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY8_EXT [

	<enum: #'GL_INTENSITY8_EXT'>
	<value: 16r804B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_INTENSITY8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY8_SNORM [

	<enum: #'GL_INTENSITY8_SNORM'>
	<value: 16r9017>
	<vendor: #AMD>
	^ GL_INTENSITY8_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY_EXT [

	<enum: #'GL_INTENSITY_EXT'>
	<value: 16r8049>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_INTENSITY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY_FLOAT16_APPLE [

	<enum: #'GL_INTENSITY_FLOAT16_APPLE'>
	<value: 16r881D>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_INTENSITY_FLOAT16_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY_FLOAT16_ATI [

	<enum: #'GL_INTENSITY_FLOAT16_ATI'>
	<value: 16r881D>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_INTENSITY_FLOAT16_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY_FLOAT32_APPLE [

	<enum: #'GL_INTENSITY_FLOAT32_APPLE'>
	<value: 16r8817>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_INTENSITY_FLOAT32_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY_FLOAT32_ATI [

	<enum: #'GL_INTENSITY_FLOAT32_ATI'>
	<value: 16r8817>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_INTENSITY_FLOAT32_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTENSITY_SNORM [

	<enum: #'GL_INTENSITY_SNORM'>
	<value: 16r9013>
	<vendor: #AMD>
	^ GL_INTENSITY_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERLACE_OML [

	<enum: #'GL_INTERLACE_OML'>
	<value: 16r8980>
	<vendor: #OML>
	<suffix: #OML>
	^ GL_INTERLACE_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERLACE_READ_INGR [

	<enum: #'GL_INTERLACE_READ_INGR'>
	<value: 16r8568>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_INTERLACE_READ_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERLACE_READ_OML [

	<enum: #'GL_INTERLACE_READ_OML'>
	<value: 16r8981>
	<vendor: #OML>
	<suffix: #OML>
	^ GL_INTERLACE_READ_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERLACE_SGIX [

	<enum: #'GL_INTERLACE_SGIX'>
	<value: 16r8094>
	<vendor: #ARB>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_INTERLACE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERLEAVED_ATTRIBS [

	<enum: #'GL_INTERLEAVED_ATTRIBS'>
	<value: 16r8C8C>
	<vendor: #NV>
	<groups: #(#TransformFeedbackBufferMode)>
	^ GL_INTERLEAVED_ATTRIBS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERLEAVED_ATTRIBS_EXT [

	<enum: #'GL_INTERLEAVED_ATTRIBS_EXT'>
	<value: 16r8C8C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INTERLEAVED_ATTRIBS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERLEAVED_ATTRIBS_NV [

	<enum: #'GL_INTERLEAVED_ATTRIBS_NV'>
	<value: 16r8C8C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INTERLEAVED_ATTRIBS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_ALPHA_SIZE [

	<enum: #'GL_INTERNALFORMAT_ALPHA_SIZE'>
	<value: 16r8274>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_ALPHA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_ALPHA_TYPE [

	<enum: #'GL_INTERNALFORMAT_ALPHA_TYPE'>
	<value: 16r827B>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_ALPHA_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_BLUE_SIZE [

	<enum: #'GL_INTERNALFORMAT_BLUE_SIZE'>
	<value: 16r8273>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_BLUE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_BLUE_TYPE [

	<enum: #'GL_INTERNALFORMAT_BLUE_TYPE'>
	<value: 16r827A>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_BLUE_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_DEPTH_SIZE [

	<enum: #'GL_INTERNALFORMAT_DEPTH_SIZE'>
	<value: 16r8275>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_DEPTH_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_DEPTH_TYPE [

	<enum: #'GL_INTERNALFORMAT_DEPTH_TYPE'>
	<value: 16r827C>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_DEPTH_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_GREEN_SIZE [

	<enum: #'GL_INTERNALFORMAT_GREEN_SIZE'>
	<value: 16r8272>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_GREEN_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_GREEN_TYPE [

	<enum: #'GL_INTERNALFORMAT_GREEN_TYPE'>
	<value: 16r8279>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_GREEN_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_PREFERRED [

	<enum: #'GL_INTERNALFORMAT_PREFERRED'>
	<value: 16r8270>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_PREFERRED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_RED_SIZE [

	<enum: #'GL_INTERNALFORMAT_RED_SIZE'>
	<value: 16r8271>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_RED_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_RED_TYPE [

	<enum: #'GL_INTERNALFORMAT_RED_TYPE'>
	<value: 16r8278>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_RED_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_SHARED_SIZE [

	<enum: #'GL_INTERNALFORMAT_SHARED_SIZE'>
	<value: 16r8277>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_SHARED_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_STENCIL_SIZE [

	<enum: #'GL_INTERNALFORMAT_STENCIL_SIZE'>
	<value: 16r8276>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_STENCIL_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_STENCIL_TYPE [

	<enum: #'GL_INTERNALFORMAT_STENCIL_TYPE'>
	<value: 16r827D>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_STENCIL_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERNALFORMAT_SUPPORTED [

	<enum: #'GL_INTERNALFORMAT_SUPPORTED'>
	<value: 16r826F>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_INTERNALFORMAT_SUPPORTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERPOLATE [

	<enum: #'GL_INTERPOLATE'>
	<value: 16r8575>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_INTERPOLATE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERPOLATE_ARB [

	<enum: #'GL_INTERPOLATE_ARB'>
	<value: 16r8575>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_INTERPOLATE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INTERPOLATE_EXT [

	<enum: #'GL_INTERPOLATE_EXT'>
	<value: 16r8575>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_INTERPOLATE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_10_10_10_2_OES [

	<enum: #'GL_INT_10_10_10_2_OES'>
	<value: 16r8DF7>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_INT_10_10_10_2_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_2_10_10_10_REV [

	<enum: #'GL_INT_2_10_10_10_REV'>
	<value: 16r8D9F>
	<vendor: #NV>
	<groups: #(#VertexAttribPointerType #VertexAttribType)>
	^ GL_INT_2_10_10_10_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_1D [

	<enum: #'GL_INT_IMAGE_1D'>
	<value: 16r9057>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_1D_ARRAY [

	<enum: #'GL_INT_IMAGE_1D_ARRAY'>
	<value: 16r905D>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_1D_ARRAY_EXT [

	<enum: #'GL_INT_IMAGE_1D_ARRAY_EXT'>
	<value: 16r905D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_1D_EXT [

	<enum: #'GL_INT_IMAGE_1D_EXT'>
	<value: 16r9057>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_1D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D [

	<enum: #'GL_INT_IMAGE_2D'>
	<value: 16r9058>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_ARRAY [

	<enum: #'GL_INT_IMAGE_2D_ARRAY'>
	<value: 16r905E>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_ARRAY_EXT [

	<enum: #'GL_INT_IMAGE_2D_ARRAY_EXT'>
	<value: 16r905E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_EXT [

	<enum: #'GL_INT_IMAGE_2D_EXT'>
	<value: 16r9058>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_MULTISAMPLE [

	<enum: #'GL_INT_IMAGE_2D_MULTISAMPLE'>
	<value: 16r9060>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY'>
	<value: 16r9061>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT [

	<enum: #'GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT'>
	<value: 16r9061>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_MULTISAMPLE_EXT [

	<enum: #'GL_INT_IMAGE_2D_MULTISAMPLE_EXT'>
	<value: 16r9060>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_2D_MULTISAMPLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_RECT [

	<enum: #'GL_INT_IMAGE_2D_RECT'>
	<value: 16r905A>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_2D_RECT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_2D_RECT_EXT [

	<enum: #'GL_INT_IMAGE_2D_RECT_EXT'>
	<value: 16r905A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_2D_RECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_3D [

	<enum: #'GL_INT_IMAGE_3D'>
	<value: 16r9059>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_3D_EXT [

	<enum: #'GL_INT_IMAGE_3D_EXT'>
	<value: 16r9059>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_3D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_BUFFER [

	<enum: #'GL_INT_IMAGE_BUFFER'>
	<value: 16r905C>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_BUFFER_EXT [

	<enum: #'GL_INT_IMAGE_BUFFER_EXT'>
	<value: 16r905C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_BUFFER_OES [

	<enum: #'GL_INT_IMAGE_BUFFER_OES'>
	<value: 16r905C>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_INT_IMAGE_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_CUBE [

	<enum: #'GL_INT_IMAGE_CUBE'>
	<value: 16r905B>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_CUBE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_CUBE_EXT [

	<enum: #'GL_INT_IMAGE_CUBE_EXT'>
	<value: 16r905B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_CUBE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_CUBE_MAP_ARRAY [

	<enum: #'GL_INT_IMAGE_CUBE_MAP_ARRAY'>
	<value: 16r905F>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_INT_IMAGE_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_CUBE_MAP_ARRAY_EXT [

	<enum: #'GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT'>
	<value: 16r905F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_IMAGE_CUBE_MAP_ARRAY_OES [

	<enum: #'GL_INT_IMAGE_CUBE_MAP_ARRAY_OES'>
	<value: 16r905F>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_INT_IMAGE_CUBE_MAP_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_1D [

	<enum: #'GL_INT_SAMPLER_1D'>
	<value: 16r8DC9>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_1D_ARRAY [

	<enum: #'GL_INT_SAMPLER_1D_ARRAY'>
	<value: 16r8DCE>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_1D_ARRAY_EXT [

	<enum: #'GL_INT_SAMPLER_1D_ARRAY_EXT'>
	<value: 16r8DCE>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_1D_EXT [

	<enum: #'GL_INT_SAMPLER_1D_EXT'>
	<value: 16r8DC9>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_1D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D [

	<enum: #'GL_INT_SAMPLER_2D'>
	<value: 16r8DCA>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D_ARRAY [

	<enum: #'GL_INT_SAMPLER_2D_ARRAY'>
	<value: 16r8DCF>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D_ARRAY_EXT [

	<enum: #'GL_INT_SAMPLER_2D_ARRAY_EXT'>
	<value: 16r8DCF>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D_EXT [

	<enum: #'GL_INT_SAMPLER_2D_EXT'>
	<value: 16r8DCA>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D_MULTISAMPLE [

	<enum: #'GL_INT_SAMPLER_2D_MULTISAMPLE'>
	<value: 16r9109>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY'>
	<value: 16r910C>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES [

	<enum: #'GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES'>
	<value: 16r910C>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D_RECT [

	<enum: #'GL_INT_SAMPLER_2D_RECT'>
	<value: 16r8DCD>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_2D_RECT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_2D_RECT_EXT [

	<enum: #'GL_INT_SAMPLER_2D_RECT_EXT'>
	<value: 16r8DCD>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_2D_RECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_3D [

	<enum: #'GL_INT_SAMPLER_3D'>
	<value: 16r8DCB>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_3D_EXT [

	<enum: #'GL_INT_SAMPLER_3D_EXT'>
	<value: 16r8DCB>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_3D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_BUFFER [

	<enum: #'GL_INT_SAMPLER_BUFFER'>
	<value: 16r8DD0>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_BUFFER_AMD [

	<enum: #'GL_INT_SAMPLER_BUFFER_AMD'>
	<value: 16r9002>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_INT_SAMPLER_BUFFER_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_BUFFER_EXT [

	<enum: #'GL_INT_SAMPLER_BUFFER_EXT'>
	<value: 16r8DD0>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_BUFFER_OES [

	<enum: #'GL_INT_SAMPLER_BUFFER_OES'>
	<value: 16r8DD0>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_INT_SAMPLER_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_CUBE [

	<enum: #'GL_INT_SAMPLER_CUBE'>
	<value: 16r8DCC>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_CUBE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_CUBE_EXT [

	<enum: #'GL_INT_SAMPLER_CUBE_EXT'>
	<value: 16r8DCC>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_CUBE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_CUBE_MAP_ARRAY [

	<enum: #'GL_INT_SAMPLER_CUBE_MAP_ARRAY'>
	<value: 16r900E>
	<vendor: #AMD>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_SAMPLER_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_CUBE_MAP_ARRAY_ARB [

	<enum: #'GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB'>
	<value: 16r900E>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_CUBE_MAP_ARRAY_EXT [

	<enum: #'GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT'>
	<value: 16r900E>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_CUBE_MAP_ARRAY_OES [

	<enum: #'GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES'>
	<value: 16r900E>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_SAMPLER_RENDERBUFFER_NV [

	<enum: #'GL_INT_SAMPLER_RENDERBUFFER_NV'>
	<value: 16r8E57>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INT_SAMPLER_RENDERBUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_VEC2 [

	<enum: #'GL_INT_VEC2'>
	<value: 16r8B53>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_VEC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_VEC2_ARB [

	<enum: #'GL_INT_VEC2_ARB'>
	<value: 16r8B53>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_INT_VEC2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_VEC3 [

	<enum: #'GL_INT_VEC3'>
	<value: 16r8B54>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_VEC3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_VEC3_ARB [

	<enum: #'GL_INT_VEC3_ARB'>
	<value: 16r8B54>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_INT_VEC3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_VEC4 [

	<enum: #'GL_INT_VEC4'>
	<value: 16r8B55>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_INT_VEC4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INT_VEC4_ARB [

	<enum: #'GL_INT_VEC4_ARB'>
	<value: 16r8B55>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_INT_VEC4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVALID_ENUM [

	<enum: #'GL_INVALID_ENUM'>
	<value: 16r500>
	<vendor: #ARB>
	<groups: #(#ErrorCode)>
	^ GL_INVALID_ENUM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVALID_FRAMEBUFFER_OPERATION [

	<enum: #'GL_INVALID_FRAMEBUFFER_OPERATION'>
	<value: 16r506>
	<vendor: #ARB>
	<groups: #(#ErrorCode)>
	^ GL_INVALID_FRAMEBUFFER_OPERATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVALID_FRAMEBUFFER_OPERATION_EXT [

	<enum: #'GL_INVALID_FRAMEBUFFER_OPERATION_EXT'>
	<value: 16r506>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ErrorCode)>
	^ GL_INVALID_FRAMEBUFFER_OPERATION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVALID_FRAMEBUFFER_OPERATION_OES [

	<enum: #'GL_INVALID_FRAMEBUFFER_OPERATION_OES'>
	<value: 16r506>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#ErrorCode)>
	^ GL_INVALID_FRAMEBUFFER_OPERATION_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVALID_INDEX [

	<enum: #'GL_INVALID_INDEX'>
	<value: 16rFFFFFFFF>
	<vendor: #ARB>
	<groups: #(#SpecialNumbers)>
	^ GL_INVALID_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVALID_OPERATION [

	<enum: #'GL_INVALID_OPERATION'>
	<value: 16r502>
	<vendor: #ARB>
	<groups: #(#ErrorCode)>
	^ GL_INVALID_OPERATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVALID_VALUE [

	<enum: #'GL_INVALID_VALUE'>
	<value: 16r501>
	<vendor: #ARB>
	<groups: #(#ErrorCode)>
	^ GL_INVALID_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVARIANT_DATATYPE_EXT [

	<enum: #'GL_INVARIANT_DATATYPE_EXT'>
	<value: 16r87EB>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_INVARIANT_DATATYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVARIANT_EXT [

	<enum: #'GL_INVARIANT_EXT'>
	<value: 16r87C2>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderStorageTypeEXT)>
	^ GL_INVARIANT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVARIANT_VALUE_EXT [

	<enum: #'GL_INVARIANT_VALUE_EXT'>
	<value: 16r87EA>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_INVARIANT_VALUE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVERSE_NV [

	<enum: #'GL_INVERSE_NV'>
	<value: 16r862B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INVERSE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVERSE_TRANSPOSE_NV [

	<enum: #'GL_INVERSE_TRANSPOSE_NV'>
	<value: 16r862D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INVERSE_TRANSPOSE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVERT [

	<enum: #'GL_INVERT'>
	<value: 16r150A>
	<vendor: #ARB>
	<groups: #(#LogicOp #PathFillMode #StencilOp)>
	^ GL_INVERT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVERTED_SCREEN_W_REND [

	<enum: #'GL_INVERTED_SCREEN_W_REND'>
	<value: 16r8491>
	<vendor: #REND>
	<suffix: #REND>
	^ GL_INVERTED_SCREEN_W_REND
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVERT_OVG_NV [

	<enum: #'GL_INVERT_OVG_NV'>
	<value: 16r92B4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INVERT_OVG_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> INVERT_RGB_NV [

	<enum: #'GL_INVERT_RGB_NV'>
	<value: 16r92A3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_INVERT_RGB_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IR_INSTRUMENT1_SGIX [

	<enum: #'GL_IR_INSTRUMENT1_SGIX'>
	<value: 16r817F>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_IR_INSTRUMENT1_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ISOLINES [

	<enum: #'GL_ISOLINES'>
	<value: 16r8E7A>
	<vendor: #NV>
	^ GL_ISOLINES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ISOLINES_EXT [

	<enum: #'GL_ISOLINES_EXT'>
	<value: 16r8E7A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_ISOLINES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ISOLINES_OES [

	<enum: #'GL_ISOLINES_OES'>
	<value: 16r8E7A>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_ISOLINES_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IS_PER_PATCH [

	<enum: #'GL_IS_PER_PATCH'>
	<value: 16r92E7>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_IS_PER_PATCH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IS_PER_PATCH_EXT [

	<enum: #'GL_IS_PER_PATCH_EXT'>
	<value: 16r92E7>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_IS_PER_PATCH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IS_PER_PATCH_OES [

	<enum: #'GL_IS_PER_PATCH_OES'>
	<value: 16r92E7>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_IS_PER_PATCH_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IS_ROW_MAJOR [

	<enum: #'GL_IS_ROW_MAJOR'>
	<value: 16r9300>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_IS_ROW_MAJOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ITALIC_BIT_NV [

	<enum: #'GL_ITALIC_BIT_NV'>
	<value: 2r10>
	<suffix: #NV>
	<bitmask>
	<groups: #(#PathFontStyle #PathRenderingMaskNV)>
	^ GL_ITALIC_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IUI_N3F_V2F_EXT [

	<enum: #'GL_IUI_N3F_V2F_EXT'>
	<value: 16r81AF>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_IUI_N3F_V2F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IUI_N3F_V3F_EXT [

	<enum: #'GL_IUI_N3F_V3F_EXT'>
	<value: 16r81B0>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_IUI_N3F_V3F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IUI_V2F_EXT [

	<enum: #'GL_IUI_V2F_EXT'>
	<value: 16r81AD>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_IUI_V2F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> IUI_V3F_EXT [

	<enum: #'GL_IUI_V3F_EXT'>
	<value: 16r81AE>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_IUI_V3F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> KEEP [

	<enum: #'GL_KEEP'>
	<value: 16r1E00>
	<vendor: #ARB>
	<groups: #(#StencilOp)>
	^ GL_KEEP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LARGE_CCW_ARC_TO_NV [

	<enum: #'GL_LARGE_CCW_ARC_TO_NV'>
	<value: 16r16>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_LARGE_CCW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LARGE_CW_ARC_TO_NV [

	<enum: #'GL_LARGE_CW_ARC_TO_NV'>
	<value: 16r18>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_LARGE_CW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAST_VERTEX_CONVENTION [

	<enum: #'GL_LAST_VERTEX_CONVENTION'>
	<value: 16r8E4E>
	<vendor: #NV>
	<groups: #(#VertexProvokingMode)>
	^ GL_LAST_VERTEX_CONVENTION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAST_VERTEX_CONVENTION_EXT [

	<enum: #'GL_LAST_VERTEX_CONVENTION_EXT'>
	<value: 16r8E4E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_LAST_VERTEX_CONVENTION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAST_VERTEX_CONVENTION_OES [

	<enum: #'GL_LAST_VERTEX_CONVENTION_OES'>
	<value: 16r8E4E>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_LAST_VERTEX_CONVENTION_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAST_VIDEO_CAPTURE_STATUS_NV [

	<enum: #'GL_LAST_VIDEO_CAPTURE_STATUS_NV'>
	<value: 16r9027>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_LAST_VIDEO_CAPTURE_STATUS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYER_NV [

	<enum: #'GL_LAYER_NV'>
	<value: 16r8DAA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_LAYER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYER_PROVOKING_VERTEX [

	<enum: #'GL_LAYER_PROVOKING_VERTEX'>
	<value: 16r825E>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LAYER_PROVOKING_VERTEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYER_PROVOKING_VERTEX_EXT [

	<enum: #'GL_LAYER_PROVOKING_VERTEX_EXT'>
	<value: 16r825E>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_LAYER_PROVOKING_VERTEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYER_PROVOKING_VERTEX_OES [

	<enum: #'GL_LAYER_PROVOKING_VERTEX_OES'>
	<value: 16r825E>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_LAYER_PROVOKING_VERTEX_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_COLOR_ATTACHMENT_EXT [

	<enum: #'GL_LAYOUT_COLOR_ATTACHMENT_EXT'>
	<value: 16r958E>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_COLOR_ATTACHMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_DEFAULT_INTEL [

	<enum: #'GL_LAYOUT_DEFAULT_INTEL'>
	<value: 16r0>
	<vendor: #INTEL>
	<suffix: #INTEL>
	<groups: #(#MapTextureFormatINTEL)>
	^ GL_LAYOUT_DEFAULT_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT [

	<enum: #'GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT'>
	<value: 16r9531>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT [

	<enum: #'GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT'>
	<value: 16r9530>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT [

	<enum: #'GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT'>
	<value: 16r958F>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT [

	<enum: #'GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT'>
	<value: 16r9590>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_GENERAL_EXT [

	<enum: #'GL_LAYOUT_GENERAL_EXT'>
	<value: 16r958D>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_GENERAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_LINEAR_CPU_CACHED_INTEL [

	<enum: #'GL_LAYOUT_LINEAR_CPU_CACHED_INTEL'>
	<value: 16r2>
	<vendor: #INTEL>
	<suffix: #INTEL>
	<groups: #(#MapTextureFormatINTEL)>
	^ GL_LAYOUT_LINEAR_CPU_CACHED_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_LINEAR_INTEL [

	<enum: #'GL_LAYOUT_LINEAR_INTEL'>
	<value: 16r1>
	<vendor: #INTEL>
	<suffix: #INTEL>
	<groups: #(#MapTextureFormatINTEL)>
	^ GL_LAYOUT_LINEAR_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_SHADER_READ_ONLY_EXT [

	<enum: #'GL_LAYOUT_SHADER_READ_ONLY_EXT'>
	<value: 16r9591>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_SHADER_READ_ONLY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_TRANSFER_DST_EXT [

	<enum: #'GL_LAYOUT_TRANSFER_DST_EXT'>
	<value: 16r9593>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_TRANSFER_DST_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LAYOUT_TRANSFER_SRC_EXT [

	<enum: #'GL_LAYOUT_TRANSFER_SRC_EXT'>
	<value: 16r9592>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureLayout)>
	^ GL_LAYOUT_TRANSFER_SRC_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LEFT [

	<enum: #'GL_LEFT'>
	<value: 16r406>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #ReadBufferMode)>
	^ GL_LEFT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LEQUAL [

	<enum: #'GL_LEQUAL'>
	<value: 16r203>
	<vendor: #ARB>
	<groups: #(#AlphaFunction #DepthFunction #IndexFunctionEXT #StencilFunction)>
	^ GL_LEQUAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LERP_ATI [

	<enum: #'GL_LERP_ATI'>
	<value: 16r8969>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_LERP_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LESS [

	<enum: #'GL_LESS'>
	<value: 16r201>
	<vendor: #ARB>
	<groups: #(#AlphaFunction #DepthFunction #IndexFunctionEXT #StencilFunction)>
	^ GL_LESS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LGPU_SEPARATE_STORAGE_BIT_NVX [

	<enum: #'GL_LGPU_SEPARATE_STORAGE_BIT_NVX'>
	<value: 2r100000000000>
	<suffix: #NVX>
	<bitmask>
	<groups: #(#BufferStorageMask)>
	^ GL_LGPU_SEPARATE_STORAGE_BIT_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT0 [

	<enum: #'GL_LIGHT0'>
	<value: 16r4000>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #LightName)>
	^ GL_LIGHT0
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT1 [

	<enum: #'GL_LIGHT1'>
	<value: 16r4001>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #LightName)>
	^ GL_LIGHT1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT2 [

	<enum: #'GL_LIGHT2'>
	<value: 16r4002>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #LightName)>
	^ GL_LIGHT2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT3 [

	<enum: #'GL_LIGHT3'>
	<value: 16r4003>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #LightName)>
	^ GL_LIGHT3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT4 [

	<enum: #'GL_LIGHT4'>
	<value: 16r4004>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #LightName)>
	^ GL_LIGHT4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT5 [

	<enum: #'GL_LIGHT5'>
	<value: 16r4005>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #LightName)>
	^ GL_LIGHT5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT6 [

	<enum: #'GL_LIGHT6'>
	<value: 16r4006>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #LightName)>
	^ GL_LIGHT6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT7 [

	<enum: #'GL_LIGHT7'>
	<value: 16r4007>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #LightName)>
	^ GL_LIGHT7
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHTEN [

	<enum: #'GL_LIGHTEN'>
	<value: 16r9298>
	<vendor: #NV>
	^ GL_LIGHTEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHTEN_KHR [

	<enum: #'GL_LIGHTEN_KHR'>
	<value: 16r9298>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_LIGHTEN_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHTEN_NV [

	<enum: #'GL_LIGHTEN_NV'>
	<value: 16r9298>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_LIGHTEN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHTING [

	<enum: #'GL_LIGHTING'>
	<value: 16rB50>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_LIGHTING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHTING_BIT [

	<enum: #'GL_LIGHTING_BIT'>
	<value: 2r1000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_LIGHTING_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT_ENV_MODE_SGIX [

	<enum: #'GL_LIGHT_ENV_MODE_SGIX'>
	<value: 16r8407>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #LightEnvParameterSGIX)>
	^ GL_LIGHT_ENV_MODE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT_MODEL_AMBIENT [

	<enum: #'GL_LIGHT_MODEL_AMBIENT'>
	<value: 16rB53>
	<vendor: #ARB>
	<groups: #(#GetPName #LightModelParameter)>
	^ GL_LIGHT_MODEL_AMBIENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT_MODEL_COLOR_CONTROL [

	<enum: #'GL_LIGHT_MODEL_COLOR_CONTROL'>
	<value: 16r81F8>
	<vendor: #SGI>
	<groups: #(#GetPName #LightModelParameter)>
	^ GL_LIGHT_MODEL_COLOR_CONTROL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT_MODEL_COLOR_CONTROL_EXT [

	<enum: #'GL_LIGHT_MODEL_COLOR_CONTROL_EXT'>
	<value: 16r81F8>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightModelParameter)>
	^ GL_LIGHT_MODEL_COLOR_CONTROL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT_MODEL_LOCAL_VIEWER [

	<enum: #'GL_LIGHT_MODEL_LOCAL_VIEWER'>
	<value: 16rB51>
	<vendor: #ARB>
	<groups: #(#GetPName #LightModelParameter)>
	^ GL_LIGHT_MODEL_LOCAL_VIEWER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT_MODEL_SPECULAR_VECTOR_APPLE [

	<enum: #'GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE'>
	<value: 16r85B0>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIGHT_MODEL_TWO_SIDE [

	<enum: #'GL_LIGHT_MODEL_TWO_SIDE'>
	<value: 16rB52>
	<vendor: #ARB>
	<groups: #(#GetPName #LightModelParameter)>
	^ GL_LIGHT_MODEL_TWO_SIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE [

	<enum: #'GL_LINE'>
	<value: 16r1B01>
	<vendor: #ARB>
	<groups: #(#MeshMode1 #MeshMode2 #PolygonMode)>
	^ GL_LINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR [

	<enum: #'GL_LINEAR'>
	<value: 16r2601>
	<vendor: #ARB>
	<groups: #(#BlitFramebufferFilter #FogMode #TextureMagFilter #TextureMinFilter)>
	^ GL_LINEAR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEARBURN_NV [

	<enum: #'GL_LINEARBURN_NV'>
	<value: 16r92A5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_LINEARBURN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEARDODGE_NV [

	<enum: #'GL_LINEARDODGE_NV'>
	<value: 16r92A4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_LINEARDODGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEARLIGHT_NV [

	<enum: #'GL_LINEARLIGHT_NV'>
	<value: 16r92A7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_LINEARLIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_ATTENUATION [

	<enum: #'GL_LINEAR_ATTENUATION'>
	<value: 16r1208>
	<vendor: #ARB>
	<groups: #(#FragmentLightParameterSGIX #LightParameter)>
	^ GL_LINEAR_ATTENUATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_CLIPMAP_LINEAR_SGIX [

	<enum: #'GL_LINEAR_CLIPMAP_LINEAR_SGIX'>
	<value: 16r8170>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#TextureMinFilter)>
	^ GL_LINEAR_CLIPMAP_LINEAR_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_CLIPMAP_NEAREST_SGIX [

	<enum: #'GL_LINEAR_CLIPMAP_NEAREST_SGIX'>
	<value: 16r844F>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#TextureMinFilter)>
	^ GL_LINEAR_CLIPMAP_NEAREST_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_DETAIL_ALPHA_SGIS [

	<enum: #'GL_LINEAR_DETAIL_ALPHA_SGIS'>
	<value: 16r8098>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#TextureMagFilter)>
	^ GL_LINEAR_DETAIL_ALPHA_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_DETAIL_COLOR_SGIS [

	<enum: #'GL_LINEAR_DETAIL_COLOR_SGIS'>
	<value: 16r8099>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#TextureMagFilter)>
	^ GL_LINEAR_DETAIL_COLOR_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_DETAIL_SGIS [

	<enum: #'GL_LINEAR_DETAIL_SGIS'>
	<value: 16r8097>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#TextureMagFilter)>
	^ GL_LINEAR_DETAIL_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_MIPMAP_LINEAR [

	<enum: #'GL_LINEAR_MIPMAP_LINEAR'>
	<value: 16r2703>
	<vendor: #ARB>
	<groups: #(#TextureMinFilter #TextureWrapMode)>
	^ GL_LINEAR_MIPMAP_LINEAR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_MIPMAP_NEAREST [

	<enum: #'GL_LINEAR_MIPMAP_NEAREST'>
	<value: 16r2701>
	<vendor: #ARB>
	<groups: #(#TextureMinFilter)>
	^ GL_LINEAR_MIPMAP_NEAREST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_SHARPEN_ALPHA_SGIS [

	<enum: #'GL_LINEAR_SHARPEN_ALPHA_SGIS'>
	<value: 16r80AE>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#TextureMagFilter)>
	^ GL_LINEAR_SHARPEN_ALPHA_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_SHARPEN_COLOR_SGIS [

	<enum: #'GL_LINEAR_SHARPEN_COLOR_SGIS'>
	<value: 16r80AF>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#TextureMagFilter)>
	^ GL_LINEAR_SHARPEN_COLOR_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_SHARPEN_SGIS [

	<enum: #'GL_LINEAR_SHARPEN_SGIS'>
	<value: 16r80AD>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#TextureMagFilter)>
	^ GL_LINEAR_SHARPEN_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINEAR_TILING_EXT [

	<enum: #'GL_LINEAR_TILING_EXT'>
	<value: 16r9585>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_LINEAR_TILING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINES [

	<enum: #'GL_LINES'>
	<value: 16r1>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_LINES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINES_ADJACENCY [

	<enum: #'GL_LINES_ADJACENCY'>
	<value: 16rA>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_LINES_ADJACENCY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINES_ADJACENCY_ARB [

	<enum: #'GL_LINES_ADJACENCY_ARB'>
	<value: 16rA>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_LINES_ADJACENCY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINES_ADJACENCY_EXT [

	<enum: #'GL_LINES_ADJACENCY_EXT'>
	<value: 16rA>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PrimitiveType)>
	^ GL_LINES_ADJACENCY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINES_ADJACENCY_OES [

	<enum: #'GL_LINES_ADJACENCY_OES'>
	<value: 16rA>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_LINES_ADJACENCY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_BIT [

	<enum: #'GL_LINE_BIT'>
	<value: 2r100>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_LINE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_LOOP [

	<enum: #'GL_LINE_LOOP'>
	<value: 16r2>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_LINE_LOOP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_NV [

	<enum: #'GL_LINE_NV'>
	<value: 16r1B01>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_LINE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_QUALITY_HINT_SGIX [

	<enum: #'GL_LINE_QUALITY_HINT_SGIX'>
	<value: 16r835B>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#HintTarget)>
	^ GL_LINE_QUALITY_HINT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_RESET_TOKEN [

	<enum: #'GL_LINE_RESET_TOKEN'>
	<value: 16r707>
	<vendor: #ARB>
	<groups: #(#FeedBackToken)>
	^ GL_LINE_RESET_TOKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_SMOOTH [

	<enum: #'GL_LINE_SMOOTH'>
	<value: 16rB20>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_LINE_SMOOTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_SMOOTH_HINT [

	<enum: #'GL_LINE_SMOOTH_HINT'>
	<value: 16rC52>
	<vendor: #ARB>
	<groups: #(#GetPName #HintTarget)>
	^ GL_LINE_SMOOTH_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_STIPPLE [

	<enum: #'GL_LINE_STIPPLE'>
	<value: 16rB24>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_LINE_STIPPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_STIPPLE_PATTERN [

	<enum: #'GL_LINE_STIPPLE_PATTERN'>
	<value: 16rB25>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LINE_STIPPLE_PATTERN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_STIPPLE_REPEAT [

	<enum: #'GL_LINE_STIPPLE_REPEAT'>
	<value: 16rB26>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LINE_STIPPLE_REPEAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_STRIP [

	<enum: #'GL_LINE_STRIP'>
	<value: 16r3>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_LINE_STRIP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_STRIP_ADJACENCY [

	<enum: #'GL_LINE_STRIP_ADJACENCY'>
	<value: 16rB>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_LINE_STRIP_ADJACENCY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_STRIP_ADJACENCY_ARB [

	<enum: #'GL_LINE_STRIP_ADJACENCY_ARB'>
	<value: 16rB>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_LINE_STRIP_ADJACENCY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_STRIP_ADJACENCY_EXT [

	<enum: #'GL_LINE_STRIP_ADJACENCY_EXT'>
	<value: 16rB>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PrimitiveType)>
	^ GL_LINE_STRIP_ADJACENCY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_STRIP_ADJACENCY_OES [

	<enum: #'GL_LINE_STRIP_ADJACENCY_OES'>
	<value: 16rB>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_LINE_STRIP_ADJACENCY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_TOKEN [

	<enum: #'GL_LINE_TOKEN'>
	<value: 16r702>
	<vendor: #ARB>
	<groups: #(#FeedBackToken)>
	^ GL_LINE_TOKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_TO_NV [

	<enum: #'GL_LINE_TO_NV'>
	<value: 16r4>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_LINE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_WIDTH [

	<enum: #'GL_LINE_WIDTH'>
	<value: 16rB21>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LINE_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_WIDTH_COMMAND_NV [

	<enum: #'GL_LINE_WIDTH_COMMAND_NV'>
	<value: 16rD>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_LINE_WIDTH_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_WIDTH_GRANULARITY [

	<enum: #'GL_LINE_WIDTH_GRANULARITY'>
	<value: 16rB23>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LINE_WIDTH_GRANULARITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINE_WIDTH_RANGE [

	<enum: #'GL_LINE_WIDTH_RANGE'>
	<value: 16rB22>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LINE_WIDTH_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LINK_STATUS [

	<enum: #'GL_LINK_STATUS'>
	<value: 16r8B82>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB)>
	^ GL_LINK_STATUS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIST_BASE [

	<enum: #'GL_LIST_BASE'>
	<value: 16rB32>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LIST_BASE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIST_BIT [

	<enum: #'GL_LIST_BIT'>
	<value: 2r100000000000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_LIST_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIST_INDEX [

	<enum: #'GL_LIST_INDEX'>
	<value: 16rB33>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LIST_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIST_MODE [

	<enum: #'GL_LIST_MODE'>
	<value: 16rB30>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LIST_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LIST_PRIORITY_SGIX [

	<enum: #'GL_LIST_PRIORITY_SGIX'>
	<value: 16r8182>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#ListParameterName)>
	^ GL_LIST_PRIORITY_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOAD [

	<enum: #'GL_LOAD'>
	<value: 16r101>
	<vendor: #ARB>
	<groups: #(#AccumOp)>
	^ GL_LOAD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOCAL_CONSTANT_DATATYPE_EXT [

	<enum: #'GL_LOCAL_CONSTANT_DATATYPE_EXT'>
	<value: 16r87ED>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_LOCAL_CONSTANT_DATATYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOCAL_CONSTANT_EXT [

	<enum: #'GL_LOCAL_CONSTANT_EXT'>
	<value: 16r87C3>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderStorageTypeEXT)>
	^ GL_LOCAL_CONSTANT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOCAL_CONSTANT_VALUE_EXT [

	<enum: #'GL_LOCAL_CONSTANT_VALUE_EXT'>
	<value: 16r87EC>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_LOCAL_CONSTANT_VALUE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOCAL_EXT [

	<enum: #'GL_LOCAL_EXT'>
	<value: 16r87C4>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderStorageTypeEXT)>
	^ GL_LOCAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOCATION [

	<enum: #'GL_LOCATION'>
	<value: 16r930E>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_LOCATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOCATION_COMPONENT [

	<enum: #'GL_LOCATION_COMPONENT'>
	<value: 16r934A>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_LOCATION_COMPONENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOCATION_INDEX [

	<enum: #'GL_LOCATION_INDEX'>
	<value: 16r930F>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_LOCATION_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOCATION_INDEX_EXT [

	<enum: #'GL_LOCATION_INDEX_EXT'>
	<value: 16r930F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_LOCATION_INDEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOGIC_OP [

	<enum: #'GL_LOGIC_OP'>
	<value: 16rBF1>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LOGIC_OP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOGIC_OP_MODE [

	<enum: #'GL_LOGIC_OP_MODE'>
	<value: 16rBF0>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_LOGIC_OP_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOSE_CONTEXT_ON_RESET [

	<enum: #'GL_LOSE_CONTEXT_ON_RESET'>
	<value: 16r8252>
	<vendor: #ARB>
	^ GL_LOSE_CONTEXT_ON_RESET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOSE_CONTEXT_ON_RESET_ARB [

	<enum: #'GL_LOSE_CONTEXT_ON_RESET_ARB'>
	<value: 16r8252>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_LOSE_CONTEXT_ON_RESET_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOSE_CONTEXT_ON_RESET_EXT [

	<enum: #'GL_LOSE_CONTEXT_ON_RESET_EXT'>
	<value: 16r8252>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_LOSE_CONTEXT_ON_RESET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOSE_CONTEXT_ON_RESET_KHR [

	<enum: #'GL_LOSE_CONTEXT_ON_RESET_KHR'>
	<value: 16r8252>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_LOSE_CONTEXT_ON_RESET_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOWER_LEFT [

	<enum: #'GL_LOWER_LEFT'>
	<value: 16r8CA1>
	<vendor: #ARB>
	<groups: #(#ClipControlOrigin)>
	^ GL_LOWER_LEFT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOWER_LEFT_EXT [

	<enum: #'GL_LOWER_LEFT_EXT'>
	<value: 16r8CA1>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_LOWER_LEFT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOW_FLOAT [

	<enum: #'GL_LOW_FLOAT'>
	<value: 16r8DF0>
	<vendor: #OES>
	<groups: #(#PrecisionType)>
	^ GL_LOW_FLOAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LOW_INT [

	<enum: #'GL_LOW_INT'>
	<value: 16r8DF3>
	<vendor: #OES>
	<groups: #(#PrecisionType)>
	^ GL_LOW_INT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LO_BIAS_NV [

	<enum: #'GL_LO_BIAS_NV'>
	<value: 16r8715>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_LO_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LO_SCALE_NV [

	<enum: #'GL_LO_SCALE_NV'>
	<value: 16r870F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_LO_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUID_SIZE_EXT [

	<enum: #'GL_LUID_SIZE_EXT'>
	<value: 16r8>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SpecialNumbers)>
	^ GL_LUID_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE [

	<enum: #'GL_LUMINANCE'>
	<value: 16r1909>
	<vendor: #ARB>
	<groups: #(#PathColorFormat #PixelFormat #PixelTexGenMode)>
	^ GL_LUMINANCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE12 [

	<enum: #'GL_LUMINANCE12'>
	<value: 16r8041>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE12_ALPHA12 [

	<enum: #'GL_LUMINANCE12_ALPHA12'>
	<value: 16r8047>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE12_ALPHA12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE12_ALPHA12_EXT [

	<enum: #'GL_LUMINANCE12_ALPHA12_EXT'>
	<value: 16r8047>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE12_ALPHA12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE12_ALPHA4 [

	<enum: #'GL_LUMINANCE12_ALPHA4'>
	<value: 16r8046>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE12_ALPHA4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE12_ALPHA4_EXT [

	<enum: #'GL_LUMINANCE12_ALPHA4_EXT'>
	<value: 16r8046>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE12_ALPHA4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE12_EXT [

	<enum: #'GL_LUMINANCE12_EXT'>
	<value: 16r8041>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16 [

	<enum: #'GL_LUMINANCE16'>
	<value: 16r8042>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16F_ARB [

	<enum: #'GL_LUMINANCE16F_ARB'>
	<value: 16r881E>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_LUMINANCE16F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16F_EXT [

	<enum: #'GL_LUMINANCE16F_EXT'>
	<value: 16r881E>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_LUMINANCE16F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16I_EXT [

	<enum: #'GL_LUMINANCE16I_EXT'>
	<value: 16r8D8C>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE16I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16UI_EXT [

	<enum: #'GL_LUMINANCE16UI_EXT'>
	<value: 16r8D7A>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE16UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16_ALPHA16 [

	<enum: #'GL_LUMINANCE16_ALPHA16'>
	<value: 16r8048>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE16_ALPHA16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16_ALPHA16_EXT [

	<enum: #'GL_LUMINANCE16_ALPHA16_EXT'>
	<value: 16r8048>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE16_ALPHA16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16_ALPHA16_SNORM [

	<enum: #'GL_LUMINANCE16_ALPHA16_SNORM'>
	<value: 16r901A>
	<vendor: #AMD>
	^ GL_LUMINANCE16_ALPHA16_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16_EXT [

	<enum: #'GL_LUMINANCE16_EXT'>
	<value: 16r8042>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE16_SNORM [

	<enum: #'GL_LUMINANCE16_SNORM'>
	<value: 16r9019>
	<vendor: #AMD>
	^ GL_LUMINANCE16_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE32F_ARB [

	<enum: #'GL_LUMINANCE32F_ARB'>
	<value: 16r8818>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_LUMINANCE32F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE32F_EXT [

	<enum: #'GL_LUMINANCE32F_EXT'>
	<value: 16r8818>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_LUMINANCE32F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE32I_EXT [

	<enum: #'GL_LUMINANCE32I_EXT'>
	<value: 16r8D86>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE32I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE32UI_EXT [

	<enum: #'GL_LUMINANCE32UI_EXT'>
	<value: 16r8D74>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE32UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE4 [

	<enum: #'GL_LUMINANCE4'>
	<value: 16r803F>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE4_ALPHA4 [

	<enum: #'GL_LUMINANCE4_ALPHA4'>
	<value: 16r8043>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE4_ALPHA4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE4_ALPHA4_EXT [

	<enum: #'GL_LUMINANCE4_ALPHA4_EXT'>
	<value: 16r8043>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE4_ALPHA4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE4_ALPHA4_OES [

	<enum: #'GL_LUMINANCE4_ALPHA4_OES'>
	<value: 16r8043>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE4_ALPHA4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE4_EXT [

	<enum: #'GL_LUMINANCE4_EXT'>
	<value: 16r803F>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE6_ALPHA2 [

	<enum: #'GL_LUMINANCE6_ALPHA2'>
	<value: 16r8044>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE6_ALPHA2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE6_ALPHA2_EXT [

	<enum: #'GL_LUMINANCE6_ALPHA2_EXT'>
	<value: 16r8044>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE6_ALPHA2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8 [

	<enum: #'GL_LUMINANCE8'>
	<value: 16r8040>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8I_EXT [

	<enum: #'GL_LUMINANCE8I_EXT'>
	<value: 16r8D92>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE8I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8UI_EXT [

	<enum: #'GL_LUMINANCE8UI_EXT'>
	<value: 16r8D80>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE8UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8_ALPHA8 [

	<enum: #'GL_LUMINANCE8_ALPHA8'>
	<value: 16r8045>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE8_ALPHA8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8_ALPHA8_EXT [

	<enum: #'GL_LUMINANCE8_ALPHA8_EXT'>
	<value: 16r8045>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE8_ALPHA8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8_ALPHA8_OES [

	<enum: #'GL_LUMINANCE8_ALPHA8_OES'>
	<value: 16r8045>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE8_ALPHA8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8_ALPHA8_SNORM [

	<enum: #'GL_LUMINANCE8_ALPHA8_SNORM'>
	<value: 16r9016>
	<vendor: #AMD>
	^ GL_LUMINANCE8_ALPHA8_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8_EXT [

	<enum: #'GL_LUMINANCE8_EXT'>
	<value: 16r8040>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8_OES [

	<enum: #'GL_LUMINANCE8_OES'>
	<value: 16r8040>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE8_SNORM [

	<enum: #'GL_LUMINANCE8_SNORM'>
	<value: 16r9015>
	<vendor: #AMD>
	^ GL_LUMINANCE8_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA [

	<enum: #'GL_LUMINANCE_ALPHA'>
	<value: 16r190A>
	<vendor: #ARB>
	<groups: #(#PathColorFormat #PixelFormat #PixelTexGenMode)>
	^ GL_LUMINANCE_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA16F_ARB [

	<enum: #'GL_LUMINANCE_ALPHA16F_ARB'>
	<value: 16r881F>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_LUMINANCE_ALPHA16F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA16F_EXT [

	<enum: #'GL_LUMINANCE_ALPHA16F_EXT'>
	<value: 16r881F>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_LUMINANCE_ALPHA16F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA16I_EXT [

	<enum: #'GL_LUMINANCE_ALPHA16I_EXT'>
	<value: 16r8D8D>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE_ALPHA16I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA16UI_EXT [

	<enum: #'GL_LUMINANCE_ALPHA16UI_EXT'>
	<value: 16r8D7B>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE_ALPHA16UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA32F_ARB [

	<enum: #'GL_LUMINANCE_ALPHA32F_ARB'>
	<value: 16r8819>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_LUMINANCE_ALPHA32F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA32F_EXT [

	<enum: #'GL_LUMINANCE_ALPHA32F_EXT'>
	<value: 16r8819>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_LUMINANCE_ALPHA32F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA32I_EXT [

	<enum: #'GL_LUMINANCE_ALPHA32I_EXT'>
	<value: 16r8D87>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE_ALPHA32I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA32UI_EXT [

	<enum: #'GL_LUMINANCE_ALPHA32UI_EXT'>
	<value: 16r8D75>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE_ALPHA32UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA8I_EXT [

	<enum: #'GL_LUMINANCE_ALPHA8I_EXT'>
	<value: 16r8D93>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE_ALPHA8I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA8UI_EXT [

	<enum: #'GL_LUMINANCE_ALPHA8UI_EXT'>
	<value: 16r8D81>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_LUMINANCE_ALPHA8UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA_FLOAT16_APPLE [

	<enum: #'GL_LUMINANCE_ALPHA_FLOAT16_APPLE'>
	<value: 16r881F>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_LUMINANCE_ALPHA_FLOAT16_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA_FLOAT16_ATI [

	<enum: #'GL_LUMINANCE_ALPHA_FLOAT16_ATI'>
	<value: 16r881F>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_LUMINANCE_ALPHA_FLOAT16_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA_FLOAT32_APPLE [

	<enum: #'GL_LUMINANCE_ALPHA_FLOAT32_APPLE'>
	<value: 16r8819>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_LUMINANCE_ALPHA_FLOAT32_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA_FLOAT32_ATI [

	<enum: #'GL_LUMINANCE_ALPHA_FLOAT32_ATI'>
	<value: 16r8819>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_LUMINANCE_ALPHA_FLOAT32_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA_INTEGER_EXT [

	<enum: #'GL_LUMINANCE_ALPHA_INTEGER_EXT'>
	<value: 16r8D9D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_LUMINANCE_ALPHA_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_ALPHA_SNORM [

	<enum: #'GL_LUMINANCE_ALPHA_SNORM'>
	<value: 16r9012>
	<vendor: #AMD>
	^ GL_LUMINANCE_ALPHA_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_FLOAT16_APPLE [

	<enum: #'GL_LUMINANCE_FLOAT16_APPLE'>
	<value: 16r881E>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_LUMINANCE_FLOAT16_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_FLOAT16_ATI [

	<enum: #'GL_LUMINANCE_FLOAT16_ATI'>
	<value: 16r881E>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_LUMINANCE_FLOAT16_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_FLOAT32_APPLE [

	<enum: #'GL_LUMINANCE_FLOAT32_APPLE'>
	<value: 16r8818>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_LUMINANCE_FLOAT32_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_FLOAT32_ATI [

	<enum: #'GL_LUMINANCE_FLOAT32_ATI'>
	<value: 16r8818>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_LUMINANCE_FLOAT32_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_INTEGER_EXT [

	<enum: #'GL_LUMINANCE_INTEGER_EXT'>
	<value: 16r8D9C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_LUMINANCE_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> LUMINANCE_SNORM [

	<enum: #'GL_LUMINANCE_SNORM'>
	<value: 16r9011>
	<vendor: #AMD>
	^ GL_LUMINANCE_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAD_ATI [

	<enum: #'GL_MAD_ATI'>
	<value: 16r8968>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_MAD_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAGNITUDE_BIAS_NV [

	<enum: #'GL_MAGNITUDE_BIAS_NV'>
	<value: 16r8718>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAGNITUDE_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAGNITUDE_SCALE_NV [

	<enum: #'GL_MAGNITUDE_SCALE_NV'>
	<value: 16r8712>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAGNITUDE_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAJOR_VERSION [

	<enum: #'GL_MAJOR_VERSION'>
	<value: 16r821B>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAJOR_VERSION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MALI_PROGRAM_BINARY_ARM [

	<enum: #'GL_MALI_PROGRAM_BINARY_ARM'>
	<value: 16r8F61>
	<vendor: #ARM>
	<suffix: #ARM>
	^ GL_MALI_PROGRAM_BINARY_ARM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MALI_SHADER_BINARY_ARM [

	<enum: #'GL_MALI_SHADER_BINARY_ARM'>
	<value: 16r8F60>
	<vendor: #ARM>
	<suffix: #ARM>
	<groups: #(#ShaderBinaryFormat)>
	^ GL_MALI_SHADER_BINARY_ARM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MANUAL_GENERATE_MIPMAP [

	<enum: #'GL_MANUAL_GENERATE_MIPMAP'>
	<value: 16r8294>
	<vendor: #ARB>
	^ GL_MANUAL_GENERATE_MIPMAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_BINORMAL_EXT [

	<enum: #'GL_MAP1_BINORMAL_EXT'>
	<value: 16r8446>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_MAP1_BINORMAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_COLOR_4 [

	<enum: #'GL_MAP1_COLOR_4'>
	<value: 16rD90>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_COLOR_4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_GRID_DOMAIN [

	<enum: #'GL_MAP1_GRID_DOMAIN'>
	<value: 16rDD0>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAP1_GRID_DOMAIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_GRID_SEGMENTS [

	<enum: #'GL_MAP1_GRID_SEGMENTS'>
	<value: 16rDD1>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAP1_GRID_SEGMENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_INDEX [

	<enum: #'GL_MAP1_INDEX'>
	<value: 16rD91>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_NORMAL [

	<enum: #'GL_MAP1_NORMAL'>
	<value: 16rD92>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_NORMAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_TANGENT_EXT [

	<enum: #'GL_MAP1_TANGENT_EXT'>
	<value: 16r8444>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_MAP1_TANGENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_TEXTURE_COORD_1 [

	<enum: #'GL_MAP1_TEXTURE_COORD_1'>
	<value: 16rD93>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_TEXTURE_COORD_1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_TEXTURE_COORD_2 [

	<enum: #'GL_MAP1_TEXTURE_COORD_2'>
	<value: 16rD94>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_TEXTURE_COORD_2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_TEXTURE_COORD_3 [

	<enum: #'GL_MAP1_TEXTURE_COORD_3'>
	<value: 16rD95>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_TEXTURE_COORD_3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_TEXTURE_COORD_4 [

	<enum: #'GL_MAP1_TEXTURE_COORD_4'>
	<value: 16rD96>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_TEXTURE_COORD_4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_3 [

	<enum: #'GL_MAP1_VERTEX_3'>
	<value: 16rD97>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_VERTEX_3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_4 [

	<enum: #'GL_MAP1_VERTEX_4'>
	<value: 16rD98>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP1_VERTEX_4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB0_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB0_4_NV'>
	<value: 16r8660>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB0_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB10_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB10_4_NV'>
	<value: 16r866A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB10_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB11_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB11_4_NV'>
	<value: 16r866B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB11_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB12_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB12_4_NV'>
	<value: 16r866C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB12_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB13_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB13_4_NV'>
	<value: 16r866D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB13_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB14_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB14_4_NV'>
	<value: 16r866E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB14_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB15_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB15_4_NV'>
	<value: 16r866F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB15_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB1_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB1_4_NV'>
	<value: 16r8661>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB1_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB2_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB2_4_NV'>
	<value: 16r8662>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB2_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB3_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB3_4_NV'>
	<value: 16r8663>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB3_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB4_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB4_4_NV'>
	<value: 16r8664>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB4_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB5_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB5_4_NV'>
	<value: 16r8665>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB5_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB6_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB6_4_NV'>
	<value: 16r8666>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB6_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB7_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB7_4_NV'>
	<value: 16r8667>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB7_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB8_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB8_4_NV'>
	<value: 16r8668>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB8_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP1_VERTEX_ATTRIB9_4_NV [

	<enum: #'GL_MAP1_VERTEX_ATTRIB9_4_NV'>
	<value: 16r8669>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP1_VERTEX_ATTRIB9_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_BINORMAL_EXT [

	<enum: #'GL_MAP2_BINORMAL_EXT'>
	<value: 16r8447>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_MAP2_BINORMAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_COLOR_4 [

	<enum: #'GL_MAP2_COLOR_4'>
	<value: 16rDB0>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_COLOR_4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_GRID_DOMAIN [

	<enum: #'GL_MAP2_GRID_DOMAIN'>
	<value: 16rDD2>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAP2_GRID_DOMAIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_GRID_SEGMENTS [

	<enum: #'GL_MAP2_GRID_SEGMENTS'>
	<value: 16rDD3>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAP2_GRID_SEGMENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_INDEX [

	<enum: #'GL_MAP2_INDEX'>
	<value: 16rDB1>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_NORMAL [

	<enum: #'GL_MAP2_NORMAL'>
	<value: 16rDB2>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_NORMAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_TANGENT_EXT [

	<enum: #'GL_MAP2_TANGENT_EXT'>
	<value: 16r8445>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_MAP2_TANGENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_TEXTURE_COORD_1 [

	<enum: #'GL_MAP2_TEXTURE_COORD_1'>
	<value: 16rDB3>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_TEXTURE_COORD_1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_TEXTURE_COORD_2 [

	<enum: #'GL_MAP2_TEXTURE_COORD_2'>
	<value: 16rDB4>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_TEXTURE_COORD_2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_TEXTURE_COORD_3 [

	<enum: #'GL_MAP2_TEXTURE_COORD_3'>
	<value: 16rDB5>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_TEXTURE_COORD_3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_TEXTURE_COORD_4 [

	<enum: #'GL_MAP2_TEXTURE_COORD_4'>
	<value: 16rDB6>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_TEXTURE_COORD_4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_3 [

	<enum: #'GL_MAP2_VERTEX_3'>
	<value: 16rDB7>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_VERTEX_3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_4 [

	<enum: #'GL_MAP2_VERTEX_4'>
	<value: 16rDB8>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #MapTarget)>
	^ GL_MAP2_VERTEX_4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB0_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB0_4_NV'>
	<value: 16r8670>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB0_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB10_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB10_4_NV'>
	<value: 16r867A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB10_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB11_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB11_4_NV'>
	<value: 16r867B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB11_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB12_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB12_4_NV'>
	<value: 16r867C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB12_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB13_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB13_4_NV'>
	<value: 16r867D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB13_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB14_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB14_4_NV'>
	<value: 16r867E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB14_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB15_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB15_4_NV'>
	<value: 16r867F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB15_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB1_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB1_4_NV'>
	<value: 16r8671>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB1_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB2_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB2_4_NV'>
	<value: 16r8672>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB2_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB3_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB3_4_NV'>
	<value: 16r8673>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB3_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB4_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB4_4_NV'>
	<value: 16r8674>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB4_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB5_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB5_4_NV'>
	<value: 16r8675>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB5_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB6_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB6_4_NV'>
	<value: 16r8676>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB6_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB7_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB7_4_NV'>
	<value: 16r8677>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB7_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB8_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB8_4_NV'>
	<value: 16r8678>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB8_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP2_VERTEX_ATTRIB9_4_NV [

	<enum: #'GL_MAP2_VERTEX_ATTRIB9_4_NV'>
	<value: 16r8679>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAP2_VERTEX_ATTRIB9_4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_ATTRIB_U_ORDER_NV [

	<enum: #'GL_MAP_ATTRIB_U_ORDER_NV'>
	<value: 16r86C3>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#MapAttribParameterNV)>
	^ GL_MAP_ATTRIB_U_ORDER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_ATTRIB_V_ORDER_NV [

	<enum: #'GL_MAP_ATTRIB_V_ORDER_NV'>
	<value: 16r86C4>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#MapAttribParameterNV)>
	^ GL_MAP_ATTRIB_V_ORDER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_COHERENT_BIT [

	<enum: #'GL_MAP_COHERENT_BIT'>
	<value: 2r10000000>
	<bitmask>
	<groups: #(#BufferStorageMask #MapBufferAccessMask)>
	^ GL_MAP_COHERENT_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_COHERENT_BIT_EXT [

	<enum: #'GL_MAP_COHERENT_BIT_EXT'>
	<value: 2r10000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#BufferStorageMask #MapBufferAccessMask)>
	^ GL_MAP_COHERENT_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_COLOR [

	<enum: #'GL_MAP_COLOR'>
	<value: 16rD10>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_MAP_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_FLUSH_EXPLICIT_BIT [

	<enum: #'GL_MAP_FLUSH_EXPLICIT_BIT'>
	<value: 2r10000>
	<bitmask>
	<groups: #(#MapBufferAccessMask)>
	^ GL_MAP_FLUSH_EXPLICIT_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_FLUSH_EXPLICIT_BIT_EXT [

	<enum: #'GL_MAP_FLUSH_EXPLICIT_BIT_EXT'>
	<value: 2r10000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MapBufferAccessMask)>
	^ GL_MAP_FLUSH_EXPLICIT_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_INVALIDATE_BUFFER_BIT [

	<enum: #'GL_MAP_INVALIDATE_BUFFER_BIT'>
	<value: 2r1000>
	<bitmask>
	<groups: #(#MapBufferAccessMask)>
	^ GL_MAP_INVALIDATE_BUFFER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_INVALIDATE_BUFFER_BIT_EXT [

	<enum: #'GL_MAP_INVALIDATE_BUFFER_BIT_EXT'>
	<value: 2r1000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MapBufferAccessMask)>
	^ GL_MAP_INVALIDATE_BUFFER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_INVALIDATE_RANGE_BIT [

	<enum: #'GL_MAP_INVALIDATE_RANGE_BIT'>
	<value: 2r100>
	<bitmask>
	<groups: #(#MapBufferAccessMask)>
	^ GL_MAP_INVALIDATE_RANGE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_INVALIDATE_RANGE_BIT_EXT [

	<enum: #'GL_MAP_INVALIDATE_RANGE_BIT_EXT'>
	<value: 2r100>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MapBufferAccessMask)>
	^ GL_MAP_INVALIDATE_RANGE_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_PERSISTENT_BIT [

	<enum: #'GL_MAP_PERSISTENT_BIT'>
	<value: 2r1000000>
	<bitmask>
	<groups: #(#BufferStorageMask #MapBufferAccessMask)>
	^ GL_MAP_PERSISTENT_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_PERSISTENT_BIT_EXT [

	<enum: #'GL_MAP_PERSISTENT_BIT_EXT'>
	<value: 2r1000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#BufferStorageMask #MapBufferAccessMask)>
	^ GL_MAP_PERSISTENT_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_READ_BIT [

	<enum: #'GL_MAP_READ_BIT'>
	<value: 2r1>
	<bitmask>
	<groups: #(#BufferStorageMask #MapBufferAccessMask)>
	^ GL_MAP_READ_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_READ_BIT_EXT [

	<enum: #'GL_MAP_READ_BIT_EXT'>
	<value: 2r1>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#BufferStorageMask #MapBufferAccessMask)>
	^ GL_MAP_READ_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_STENCIL [

	<enum: #'GL_MAP_STENCIL'>
	<value: 16rD11>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_MAP_STENCIL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_TESSELLATION_NV [

	<enum: #'GL_MAP_TESSELLATION_NV'>
	<value: 16r86C2>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#MapParameterNV)>
	^ GL_MAP_TESSELLATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_UNSYNCHRONIZED_BIT [

	<enum: #'GL_MAP_UNSYNCHRONIZED_BIT'>
	<value: 2r100000>
	<bitmask>
	<groups: #(#MapBufferAccessMask)>
	^ GL_MAP_UNSYNCHRONIZED_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_UNSYNCHRONIZED_BIT_EXT [

	<enum: #'GL_MAP_UNSYNCHRONIZED_BIT_EXT'>
	<value: 2r100000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MapBufferAccessMask)>
	^ GL_MAP_UNSYNCHRONIZED_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_WRITE_BIT [

	<enum: #'GL_MAP_WRITE_BIT'>
	<value: 2r10>
	<bitmask>
	<groups: #(#BufferStorageMask #MapBufferAccessMask)>
	^ GL_MAP_WRITE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAP_WRITE_BIT_EXT [

	<enum: #'GL_MAP_WRITE_BIT_EXT'>
	<value: 2r10>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#BufferStorageMask #MapBufferAccessMask)>
	^ GL_MAP_WRITE_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATERIAL_SIDE_HINT_PGI [

	<enum: #'GL_MATERIAL_SIDE_HINT_PGI'>
	<value: 16r1A22C>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget #HintTargetPGI)>
	^ GL_MATERIAL_SIDE_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX0_ARB [

	<enum: #'GL_MATRIX0_ARB'>
	<value: 16r88C0>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX0_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX0_NV [

	<enum: #'GL_MATRIX0_NV'>
	<value: 16r8630>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MATRIX0_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX10_ARB [

	<enum: #'GL_MATRIX10_ARB'>
	<value: 16r88CA>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX10_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX11_ARB [

	<enum: #'GL_MATRIX11_ARB'>
	<value: 16r88CB>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX11_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX12_ARB [

	<enum: #'GL_MATRIX12_ARB'>
	<value: 16r88CC>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX12_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX13_ARB [

	<enum: #'GL_MATRIX13_ARB'>
	<value: 16r88CD>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX13_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX14_ARB [

	<enum: #'GL_MATRIX14_ARB'>
	<value: 16r88CE>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX14_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX15_ARB [

	<enum: #'GL_MATRIX15_ARB'>
	<value: 16r88CF>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX15_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX16_ARB [

	<enum: #'GL_MATRIX16_ARB'>
	<value: 16r88D0>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX16_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX17_ARB [

	<enum: #'GL_MATRIX17_ARB'>
	<value: 16r88D1>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX17_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX18_ARB [

	<enum: #'GL_MATRIX18_ARB'>
	<value: 16r88D2>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX18_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX19_ARB [

	<enum: #'GL_MATRIX19_ARB'>
	<value: 16r88D3>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX19_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX1_ARB [

	<enum: #'GL_MATRIX1_ARB'>
	<value: 16r88C1>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX1_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX1_NV [

	<enum: #'GL_MATRIX1_NV'>
	<value: 16r8631>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MATRIX1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX20_ARB [

	<enum: #'GL_MATRIX20_ARB'>
	<value: 16r88D4>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX20_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX21_ARB [

	<enum: #'GL_MATRIX21_ARB'>
	<value: 16r88D5>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX21_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX22_ARB [

	<enum: #'GL_MATRIX22_ARB'>
	<value: 16r88D6>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX22_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX23_ARB [

	<enum: #'GL_MATRIX23_ARB'>
	<value: 16r88D7>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX23_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX24_ARB [

	<enum: #'GL_MATRIX24_ARB'>
	<value: 16r88D8>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX24_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX25_ARB [

	<enum: #'GL_MATRIX25_ARB'>
	<value: 16r88D9>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX25_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX26_ARB [

	<enum: #'GL_MATRIX26_ARB'>
	<value: 16r88DA>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX26_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX27_ARB [

	<enum: #'GL_MATRIX27_ARB'>
	<value: 16r88DB>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX27_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX28_ARB [

	<enum: #'GL_MATRIX28_ARB'>
	<value: 16r88DC>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX28_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX29_ARB [

	<enum: #'GL_MATRIX29_ARB'>
	<value: 16r88DD>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX29_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX2_ARB [

	<enum: #'GL_MATRIX2_ARB'>
	<value: 16r88C2>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX2_NV [

	<enum: #'GL_MATRIX2_NV'>
	<value: 16r8632>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MATRIX2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX30_ARB [

	<enum: #'GL_MATRIX30_ARB'>
	<value: 16r88DE>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX30_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX31_ARB [

	<enum: #'GL_MATRIX31_ARB'>
	<value: 16r88DF>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX31_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX3_ARB [

	<enum: #'GL_MATRIX3_ARB'>
	<value: 16r88C3>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX3_NV [

	<enum: #'GL_MATRIX3_NV'>
	<value: 16r8633>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MATRIX3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX4_ARB [

	<enum: #'GL_MATRIX4_ARB'>
	<value: 16r88C4>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX4_NV [

	<enum: #'GL_MATRIX4_NV'>
	<value: 16r8634>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MATRIX4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX5_ARB [

	<enum: #'GL_MATRIX5_ARB'>
	<value: 16r88C5>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX5_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX5_NV [

	<enum: #'GL_MATRIX5_NV'>
	<value: 16r8635>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MATRIX5_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX6_ARB [

	<enum: #'GL_MATRIX6_ARB'>
	<value: 16r88C6>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX6_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX6_NV [

	<enum: #'GL_MATRIX6_NV'>
	<value: 16r8636>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MATRIX6_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX7_ARB [

	<enum: #'GL_MATRIX7_ARB'>
	<value: 16r88C7>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX7_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX7_NV [

	<enum: #'GL_MATRIX7_NV'>
	<value: 16r8637>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MATRIX7_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX8_ARB [

	<enum: #'GL_MATRIX8_ARB'>
	<value: 16r88C8>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX8_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX9_ARB [

	<enum: #'GL_MATRIX9_ARB'>
	<value: 16r88C9>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MATRIX9_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_EXT [

	<enum: #'GL_MATRIX_EXT'>
	<value: 16r87C0>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#DataTypeEXT)>
	^ GL_MATRIX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_ARB [

	<enum: #'GL_MATRIX_INDEX_ARRAY_ARB'>
	<value: 16r8844>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MATRIX_INDEX_ARRAY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES [

	<enum: #'GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES'>
	<value: 16r8B9E>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_OES [

	<enum: #'GL_MATRIX_INDEX_ARRAY_OES'>
	<value: 16r8844>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MATRIX_INDEX_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_POINTER_ARB [

	<enum: #'GL_MATRIX_INDEX_ARRAY_POINTER_ARB'>
	<value: 16r8849>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MATRIX_INDEX_ARRAY_POINTER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_POINTER_OES [

	<enum: #'GL_MATRIX_INDEX_ARRAY_POINTER_OES'>
	<value: 16r8849>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MATRIX_INDEX_ARRAY_POINTER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_SIZE_ARB [

	<enum: #'GL_MATRIX_INDEX_ARRAY_SIZE_ARB'>
	<value: 16r8846>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MATRIX_INDEX_ARRAY_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_SIZE_OES [

	<enum: #'GL_MATRIX_INDEX_ARRAY_SIZE_OES'>
	<value: 16r8846>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MATRIX_INDEX_ARRAY_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_STRIDE_ARB [

	<enum: #'GL_MATRIX_INDEX_ARRAY_STRIDE_ARB'>
	<value: 16r8848>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_STRIDE_OES [

	<enum: #'GL_MATRIX_INDEX_ARRAY_STRIDE_OES'>
	<value: 16r8848>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MATRIX_INDEX_ARRAY_STRIDE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_TYPE_ARB [

	<enum: #'GL_MATRIX_INDEX_ARRAY_TYPE_ARB'>
	<value: 16r8847>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MATRIX_INDEX_ARRAY_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_INDEX_ARRAY_TYPE_OES [

	<enum: #'GL_MATRIX_INDEX_ARRAY_TYPE_OES'>
	<value: 16r8847>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MATRIX_INDEX_ARRAY_TYPE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_MODE [

	<enum: #'GL_MATRIX_MODE'>
	<value: 16rBA0>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MATRIX_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_PALETTE_ARB [

	<enum: #'GL_MATRIX_PALETTE_ARB'>
	<value: 16r8840>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MATRIX_PALETTE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_PALETTE_OES [

	<enum: #'GL_MATRIX_PALETTE_OES'>
	<value: 16r8840>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MATRIX_PALETTE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MATRIX_STRIDE [

	<enum: #'GL_MATRIX_STRIDE'>
	<value: 16r92FF>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_MATRIX_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAT_AMBIENT_AND_DIFFUSE_BIT_PGI [

	<enum: #'GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI'>
	<value: 2r1000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAT_AMBIENT_BIT_PGI [

	<enum: #'GL_MAT_AMBIENT_BIT_PGI'>
	<value: 2r100000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_MAT_AMBIENT_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAT_COLOR_INDEXES_BIT_PGI [

	<enum: #'GL_MAT_COLOR_INDEXES_BIT_PGI'>
	<value: 2r1000000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_MAT_COLOR_INDEXES_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAT_DIFFUSE_BIT_PGI [

	<enum: #'GL_MAT_DIFFUSE_BIT_PGI'>
	<value: 2r10000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_MAT_DIFFUSE_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAT_EMISSION_BIT_PGI [

	<enum: #'GL_MAT_EMISSION_BIT_PGI'>
	<value: 2r100000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_MAT_EMISSION_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAT_SHININESS_BIT_PGI [

	<enum: #'GL_MAT_SHININESS_BIT_PGI'>
	<value: 2r10000000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_MAT_SHININESS_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAT_SPECULAR_BIT_PGI [

	<enum: #'GL_MAT_SPECULAR_BIT_PGI'>
	<value: 2r100000000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_MAT_SPECULAR_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX [

	<enum: #'GL_MAX'>
	<value: 16r8008>
	<vendor: #ARB>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_MAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_3D_TEXTURE_SIZE [

	<enum: #'GL_MAX_3D_TEXTURE_SIZE'>
	<value: 16r8073>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_3D_TEXTURE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_3D_TEXTURE_SIZE_EXT [

	<enum: #'GL_MAX_3D_TEXTURE_SIZE_EXT'>
	<value: 16r8073>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_MAX_3D_TEXTURE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_3D_TEXTURE_SIZE_OES [

	<enum: #'GL_MAX_3D_TEXTURE_SIZE_OES'>
	<value: 16r8073>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MAX_3D_TEXTURE_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_4D_TEXTURE_SIZE_SGIS [

	<enum: #'GL_MAX_4D_TEXTURE_SIZE_SGIS'>
	<value: 16r8138>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_MAX_4D_TEXTURE_SIZE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ACTIVE_LIGHTS_SGIX [

	<enum: #'GL_MAX_ACTIVE_LIGHTS_SGIX'>
	<value: 16r8405>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_ACTIVE_LIGHTS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ARRAY_TEXTURE_LAYERS [

	<enum: #'GL_MAX_ARRAY_TEXTURE_LAYERS'>
	<value: 16r88FF>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_ARRAY_TEXTURE_LAYERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ARRAY_TEXTURE_LAYERS_EXT [

	<enum: #'GL_MAX_ARRAY_TEXTURE_LAYERS_EXT'>
	<value: 16r88FF>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ASYNC_DRAW_PIXELS_SGIX [

	<enum: #'GL_MAX_ASYNC_DRAW_PIXELS_SGIX'>
	<value: 16r8360>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_ASYNC_DRAW_PIXELS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ASYNC_HISTOGRAM_SGIX [

	<enum: #'GL_MAX_ASYNC_HISTOGRAM_SGIX'>
	<value: 16r832D>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_ASYNC_HISTOGRAM_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ASYNC_READ_PIXELS_SGIX [

	<enum: #'GL_MAX_ASYNC_READ_PIXELS_SGIX'>
	<value: 16r8361>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_ASYNC_READ_PIXELS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ASYNC_TEX_IMAGE_SGIX [

	<enum: #'GL_MAX_ASYNC_TEX_IMAGE_SGIX'>
	<value: 16r835F>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_ASYNC_TEX_IMAGE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ATOMIC_COUNTER_BUFFER_BINDINGS [

	<enum: #'GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS'>
	<value: 16r92DC>
	<vendor: #NV>
	^ GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ATOMIC_COUNTER_BUFFER_SIZE [

	<enum: #'GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE'>
	<value: 16r92D8>
	<vendor: #NV>
	^ GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ATTRIB_STACK_DEPTH [

	<enum: #'GL_MAX_ATTRIB_STACK_DEPTH'>
	<value: 16rD35>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_ATTRIB_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_BINDABLE_UNIFORM_SIZE_EXT [

	<enum: #'GL_MAX_BINDABLE_UNIFORM_SIZE_EXT'>
	<value: 16r8DED>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CLIENT_ATTRIB_STACK_DEPTH [

	<enum: #'GL_MAX_CLIENT_ATTRIB_STACK_DEPTH'>
	<value: 16rD3B>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CLIPMAP_DEPTH_SGIX [

	<enum: #'GL_MAX_CLIPMAP_DEPTH_SGIX'>
	<value: 16r8177>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_CLIPMAP_DEPTH_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX [

	<enum: #'GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX'>
	<value: 16r8178>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CLIP_DISTANCES [

	<enum: #'GL_MAX_CLIP_DISTANCES'>
	<value: 16rD32>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_CLIP_DISTANCES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CLIP_DISTANCES_APPLE [

	<enum: #'GL_MAX_CLIP_DISTANCES_APPLE'>
	<value: 16rD32>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_MAX_CLIP_DISTANCES_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CLIP_DISTANCES_EXT [

	<enum: #'GL_MAX_CLIP_DISTANCES_EXT'>
	<value: 16rD32>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_CLIP_DISTANCES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CLIP_PLANES [

	<enum: #'GL_MAX_CLIP_PLANES'>
	<value: 16rD32>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_CLIP_PLANES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CLIP_PLANES_IMG [

	<enum: #'GL_MAX_CLIP_PLANES_IMG'>
	<value: 16rD32>
	<vendor: #ARB>
	<suffix: #IMG>
	^ GL_MAX_CLIP_PLANES_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COARSE_FRAGMENT_SAMPLES_NV [

	<enum: #'GL_MAX_COARSE_FRAGMENT_SAMPLES_NV'>
	<value: 16r955F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_COARSE_FRAGMENT_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COLOR_ATTACHMENTS [

	<enum: #'GL_MAX_COLOR_ATTACHMENTS'>
	<value: 16r8CDF>
	<vendor: #ARB>
	^ GL_MAX_COLOR_ATTACHMENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COLOR_ATTACHMENTS_EXT [

	<enum: #'GL_MAX_COLOR_ATTACHMENTS_EXT'>
	<value: 16r8CDF>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_COLOR_ATTACHMENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COLOR_ATTACHMENTS_NV [

	<enum: #'GL_MAX_COLOR_ATTACHMENTS_NV'>
	<value: 16r8CDF>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_MAX_COLOR_ATTACHMENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD [

	<enum: #'GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD'>
	<value: 16r91B3>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD [

	<enum: #'GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD'>
	<value: 16r91B4>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COLOR_MATRIX_STACK_DEPTH [

	<enum: #'GL_MAX_COLOR_MATRIX_STACK_DEPTH'>
	<value: 16r80B3>
	<vendor: #ARB>
	^ GL_MAX_COLOR_MATRIX_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COLOR_MATRIX_STACK_DEPTH_SGI [

	<enum: #'GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI'>
	<value: 16r80B3>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName)>
	^ GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COLOR_TEXTURE_SAMPLES [

	<enum: #'GL_MAX_COLOR_TEXTURE_SAMPLES'>
	<value: 16r910E>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_COLOR_TEXTURE_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_ATOMIC_COUNTERS [

	<enum: #'GL_MAX_COMBINED_ATOMIC_COUNTERS'>
	<value: 16r92D7>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_COMBINED_ATOMIC_COUNTERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_ATOMIC_COUNTER_BUFFERS [

	<enum: #'GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS'>
	<value: 16r92D1>
	<vendor: #NV>
	^ GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_CLIP_AND_CULL_DISTANCES [

	<enum: #'GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES'>
	<value: 16r82FA>
	<vendor: #ARB>
	^ GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT [

	<enum: #'GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT'>
	<value: 16r82FA>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS'>
	<value: 16r8266>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_DIMENSIONS [

	<enum: #'GL_MAX_COMBINED_DIMENSIONS'>
	<value: 16r8282>
	<vendor: #ARB>
	^ GL_MAX_COMBINED_DIMENSIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS'>
	<value: 16r8A33>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS'>
	<value: 16r8A32>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT [

	<enum: #'GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT'>
	<value: 16r8A32>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES [

	<enum: #'GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES'>
	<value: 16r8A32>
	<vendor: #APPLE>
	<suffix: #OES>
	^ GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_IMAGE_UNIFORMS [

	<enum: #'GL_MAX_COMBINED_IMAGE_UNIFORMS'>
	<value: 16r90CF>
	<vendor: #NV>
	^ GL_MAX_COMBINED_IMAGE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS [

	<enum: #'GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS'>
	<value: 16r8F39>
	<vendor: #NV>
	^ GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT [

	<enum: #'GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT'>
	<value: 16r8F39>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV [

	<enum: #'GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV'>
	<value: 16r8E67>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_SHADER_OUTPUT_RESOURCES [

	<enum: #'GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES'>
	<value: 16r8F39>
	<vendor: #NV>
	^ GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_SHADER_STORAGE_BLOCKS [

	<enum: #'GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS'>
	<value: 16r90DC>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV [

	<enum: #'GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV'>
	<value: 16r8E6F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS'>
	<value: 16r8E1E>
	<vendor: #NV>
	^ GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT [

	<enum: #'GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT'>
	<value: 16r8E1E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES [

	<enum: #'GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES'>
	<value: 16r8E1E>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS'>
	<value: 16r8E1F>
	<vendor: #NV>
	^ GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT [

	<enum: #'GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT'>
	<value: 16r8E1F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES [

	<enum: #'GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES'>
	<value: 16r8E1F>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TEXTURE_IMAGE_UNITS [

	<enum: #'GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS'>
	<value: 16r8B4D>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB [

	<enum: #'GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB'>
	<value: 16r8B4D>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_UNIFORM_BLOCKS [

	<enum: #'GL_MAX_COMBINED_UNIFORM_BLOCKS'>
	<value: 16r8A2E>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_COMBINED_UNIFORM_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS'>
	<value: 16r8A31>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_ATOMIC_COUNTERS [

	<enum: #'GL_MAX_COMPUTE_ATOMIC_COUNTERS'>
	<value: 16r8265>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_ATOMIC_COUNTERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS [

	<enum: #'GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS'>
	<value: 16r8264>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB [

	<enum: #'GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB'>
	<value: 16r90EB>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_FIXED_GROUP_SIZE_ARB [

	<enum: #'GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB'>
	<value: 16r91BF>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_IMAGE_UNIFORMS [

	<enum: #'GL_MAX_COMPUTE_IMAGE_UNIFORMS'>
	<value: 16r91BD>
	<vendor: #AMD>
	^ GL_MAX_COMPUTE_IMAGE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_SHADER_STORAGE_BLOCKS [

	<enum: #'GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS'>
	<value: 16r90DB>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_SHARED_MEMORY_SIZE [

	<enum: #'GL_MAX_COMPUTE_SHARED_MEMORY_SIZE'>
	<value: 16r8262>
	<vendor: #ARB>
	^ GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_TEXTURE_IMAGE_UNITS [

	<enum: #'GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS'>
	<value: 16r91BC>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_UNIFORM_BLOCKS [

	<enum: #'GL_MAX_COMPUTE_UNIFORM_BLOCKS'>
	<value: 16r91BB>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_UNIFORM_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_COMPUTE_UNIFORM_COMPONENTS'>
	<value: 16r8263>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB [

	<enum: #'GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB'>
	<value: 16r9344>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB [

	<enum: #'GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB'>
	<value: 16r9345>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_WORK_GROUP_COUNT [

	<enum: #'GL_MAX_COMPUTE_WORK_GROUP_COUNT'>
	<value: 16r91BE>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_WORK_GROUP_COUNT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_WORK_GROUP_INVOCATIONS [

	<enum: #'GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS'>
	<value: 16r90EB>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_COMPUTE_WORK_GROUP_SIZE [

	<enum: #'GL_MAX_COMPUTE_WORK_GROUP_SIZE'>
	<value: 16r91BF>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_MAX_COMPUTE_WORK_GROUP_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CONVOLUTION_HEIGHT [

	<enum: #'GL_MAX_CONVOLUTION_HEIGHT'>
	<value: 16r801B>
	<vendor: #ARB>
	<groups: #(#GetConvolutionParameter)>
	^ GL_MAX_CONVOLUTION_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CONVOLUTION_HEIGHT_EXT [

	<enum: #'GL_MAX_CONVOLUTION_HEIGHT_EXT'>
	<value: 16r801B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetConvolutionParameter)>
	^ GL_MAX_CONVOLUTION_HEIGHT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CONVOLUTION_WIDTH [

	<enum: #'GL_MAX_CONVOLUTION_WIDTH'>
	<value: 16r801A>
	<vendor: #ARB>
	<groups: #(#GetConvolutionParameter)>
	^ GL_MAX_CONVOLUTION_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CONVOLUTION_WIDTH_EXT [

	<enum: #'GL_MAX_CONVOLUTION_WIDTH_EXT'>
	<value: 16r801A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetConvolutionParameter)>
	^ GL_MAX_CONVOLUTION_WIDTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CUBE_MAP_TEXTURE_SIZE [

	<enum: #'GL_MAX_CUBE_MAP_TEXTURE_SIZE'>
	<value: 16r851C>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_CUBE_MAP_TEXTURE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CUBE_MAP_TEXTURE_SIZE_ARB [

	<enum: #'GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB'>
	<value: 16r851C>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CUBE_MAP_TEXTURE_SIZE_EXT [

	<enum: #'GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT'>
	<value: 16r851C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CUBE_MAP_TEXTURE_SIZE_OES [

	<enum: #'GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES'>
	<value: 16r851C>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CULL_DISTANCES [

	<enum: #'GL_MAX_CULL_DISTANCES'>
	<value: 16r82F9>
	<vendor: #ARB>
	^ GL_MAX_CULL_DISTANCES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_CULL_DISTANCES_EXT [

	<enum: #'GL_MAX_CULL_DISTANCES_EXT'>
	<value: 16r82F9>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_CULL_DISTANCES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_GROUP_STACK_DEPTH [

	<enum: #'GL_MAX_DEBUG_GROUP_STACK_DEPTH'>
	<value: 16r826C>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_DEBUG_GROUP_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_GROUP_STACK_DEPTH_KHR [

	<enum: #'GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR'>
	<value: 16r826C>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_LOGGED_MESSAGES [

	<enum: #'GL_MAX_DEBUG_LOGGED_MESSAGES'>
	<value: 16r9144>
	<vendor: #AMD>
	^ GL_MAX_DEBUG_LOGGED_MESSAGES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_LOGGED_MESSAGES_AMD [

	<enum: #'GL_MAX_DEBUG_LOGGED_MESSAGES_AMD'>
	<value: 16r9144>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_LOGGED_MESSAGES_ARB [

	<enum: #'GL_MAX_DEBUG_LOGGED_MESSAGES_ARB'>
	<value: 16r9144>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_DEBUG_LOGGED_MESSAGES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_LOGGED_MESSAGES_KHR [

	<enum: #'GL_MAX_DEBUG_LOGGED_MESSAGES_KHR'>
	<value: 16r9144>
	<vendor: #AMD>
	<suffix: #KHR>
	^ GL_MAX_DEBUG_LOGGED_MESSAGES_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_MESSAGE_LENGTH [

	<enum: #'GL_MAX_DEBUG_MESSAGE_LENGTH'>
	<value: 16r9143>
	<vendor: #AMD>
	^ GL_MAX_DEBUG_MESSAGE_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_MESSAGE_LENGTH_AMD [

	<enum: #'GL_MAX_DEBUG_MESSAGE_LENGTH_AMD'>
	<value: 16r9143>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_MESSAGE_LENGTH_ARB [

	<enum: #'GL_MAX_DEBUG_MESSAGE_LENGTH_ARB'>
	<value: 16r9143>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_DEBUG_MESSAGE_LENGTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEBUG_MESSAGE_LENGTH_KHR [

	<enum: #'GL_MAX_DEBUG_MESSAGE_LENGTH_KHR'>
	<value: 16r9143>
	<vendor: #AMD>
	<suffix: #KHR>
	^ GL_MAX_DEBUG_MESSAGE_LENGTH_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEEP_3D_TEXTURE_DEPTH_NV [

	<enum: #'GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV'>
	<value: 16r90D1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV [

	<enum: #'GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV'>
	<value: 16r90D0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEFORMATION_ORDER_SGIX [

	<enum: #'GL_MAX_DEFORMATION_ORDER_SGIX'>
	<value: 16r8197>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_MAX_DEFORMATION_ORDER_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEPTH [

	<enum: #'GL_MAX_DEPTH'>
	<value: 16r8280>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_MAX_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD [

	<enum: #'GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD'>
	<value: 16r91B5>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DEPTH_TEXTURE_SAMPLES [

	<enum: #'GL_MAX_DEPTH_TEXTURE_SAMPLES'>
	<value: 16r910F>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_DEPTH_TEXTURE_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DETACHED_BUFFERS_NV [

	<enum: #'GL_MAX_DETACHED_BUFFERS_NV'>
	<value: 16r95AD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_DETACHED_BUFFERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DETACHED_TEXTURES_NV [

	<enum: #'GL_MAX_DETACHED_TEXTURES_NV'>
	<value: 16r95AC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_DETACHED_TEXTURES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DRAW_BUFFERS [

	<enum: #'GL_MAX_DRAW_BUFFERS'>
	<value: 16r8824>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_MAX_DRAW_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DRAW_BUFFERS_ARB [

	<enum: #'GL_MAX_DRAW_BUFFERS_ARB'>
	<value: 16r8824>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_DRAW_BUFFERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DRAW_BUFFERS_ATI [

	<enum: #'GL_MAX_DRAW_BUFFERS_ATI'>
	<value: 16r8824>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_MAX_DRAW_BUFFERS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DRAW_BUFFERS_EXT [

	<enum: #'GL_MAX_DRAW_BUFFERS_EXT'>
	<value: 16r8824>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_DRAW_BUFFERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DRAW_BUFFERS_NV [

	<enum: #'GL_MAX_DRAW_BUFFERS_NV'>
	<value: 16r8824>
	<vendor: #AMD>
	<suffix: #NV>
	^ GL_MAX_DRAW_BUFFERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DRAW_MESH_TASKS_COUNT_NV [

	<enum: #'GL_MAX_DRAW_MESH_TASKS_COUNT_NV'>
	<value: 16r953D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_DRAW_MESH_TASKS_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DUAL_SOURCE_DRAW_BUFFERS [

	<enum: #'GL_MAX_DUAL_SOURCE_DRAW_BUFFERS'>
	<value: 16r88FC>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT [

	<enum: #'GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT'>
	<value: 16r88FC>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ELEMENTS_INDICES [

	<enum: #'GL_MAX_ELEMENTS_INDICES'>
	<value: 16r80E9>
	<vendor: #MS>
	<groups: #(#GetPName)>
	^ GL_MAX_ELEMENTS_INDICES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ELEMENTS_INDICES_EXT [

	<enum: #'GL_MAX_ELEMENTS_INDICES_EXT'>
	<value: 16r80E9>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_MAX_ELEMENTS_INDICES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ELEMENTS_VERTICES [

	<enum: #'GL_MAX_ELEMENTS_VERTICES'>
	<value: 16r80E8>
	<vendor: #MS>
	<groups: #(#GetPName)>
	^ GL_MAX_ELEMENTS_VERTICES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ELEMENTS_VERTICES_EXT [

	<enum: #'GL_MAX_ELEMENTS_VERTICES_EXT'>
	<value: 16r80E8>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_MAX_ELEMENTS_VERTICES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_ELEMENT_INDEX [

	<enum: #'GL_MAX_ELEMENT_INDEX'>
	<value: 16r8D6B>
	<vendor: #OES>
	<groups: #(#GetPName)>
	^ GL_MAX_ELEMENT_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_EVAL_ORDER [

	<enum: #'GL_MAX_EVAL_ORDER'>
	<value: 16rD30>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_EVAL_ORDER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_EXT [

	<enum: #'GL_MAX_EXT'>
	<value: 16r8008>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_MAX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FOG_FUNC_POINTS_SGIS [

	<enum: #'GL_MAX_FOG_FUNC_POINTS_SGIS'>
	<value: 16r812C>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_MAX_FOG_FUNC_POINTS_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_ATOMIC_COUNTERS [

	<enum: #'GL_MAX_FRAGMENT_ATOMIC_COUNTERS'>
	<value: 16r92D6>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAGMENT_ATOMIC_COUNTERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS [

	<enum: #'GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS'>
	<value: 16r92D0>
	<vendor: #NV>
	^ GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT [

	<enum: #'GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT'>
	<value: 16r8DE3>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_IMAGE_UNIFORMS [

	<enum: #'GL_MAX_FRAGMENT_IMAGE_UNIFORMS'>
	<value: 16r90CE>
	<vendor: #NV>
	^ GL_MAX_FRAGMENT_IMAGE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_INPUT_COMPONENTS [

	<enum: #'GL_MAX_FRAGMENT_INPUT_COMPONENTS'>
	<value: 16r9125>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAGMENT_INPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_INTERPOLATION_OFFSET [

	<enum: #'GL_MAX_FRAGMENT_INTERPOLATION_OFFSET'>
	<value: 16r8E5C>
	<vendor: #NV>
	^ GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_INTERPOLATION_OFFSET_NV [

	<enum: #'GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV'>
	<value: 16r8E5C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_INTERPOLATION_OFFSET_OES [

	<enum: #'GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES'>
	<value: 16r8E5C>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_LIGHTS_SGIX [

	<enum: #'GL_MAX_FRAGMENT_LIGHTS_SGIX'>
	<value: 16r8404>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAGMENT_LIGHTS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV [

	<enum: #'GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV'>
	<value: 16r8868>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_SHADER_STORAGE_BLOCKS [

	<enum: #'GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS'>
	<value: 16r90DA>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_UNIFORM_BLOCKS [

	<enum: #'GL_MAX_FRAGMENT_UNIFORM_BLOCKS'>
	<value: 16r8A2D>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAGMENT_UNIFORM_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_FRAGMENT_UNIFORM_COMPONENTS'>
	<value: 16r8B49>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB [

	<enum: #'GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB'>
	<value: 16r8B49>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAGMENT_UNIFORM_VECTORS [

	<enum: #'GL_MAX_FRAGMENT_UNIFORM_VECTORS'>
	<value: 16r8DFD>
	<vendor: #OES>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAGMENT_UNIFORM_VECTORS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAMEBUFFER_HEIGHT [

	<enum: #'GL_MAX_FRAMEBUFFER_HEIGHT'>
	<value: 16r9316>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAMEBUFFER_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAMEBUFFER_LAYERS [

	<enum: #'GL_MAX_FRAMEBUFFER_LAYERS'>
	<value: 16r9317>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAMEBUFFER_LAYERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAMEBUFFER_LAYERS_EXT [

	<enum: #'GL_MAX_FRAMEBUFFER_LAYERS_EXT'>
	<value: 16r9317>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_FRAMEBUFFER_LAYERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAMEBUFFER_LAYERS_OES [

	<enum: #'GL_MAX_FRAMEBUFFER_LAYERS_OES'>
	<value: 16r9317>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_FRAMEBUFFER_LAYERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAMEBUFFER_SAMPLES [

	<enum: #'GL_MAX_FRAMEBUFFER_SAMPLES'>
	<value: 16r9318>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAMEBUFFER_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAMEBUFFER_WIDTH [

	<enum: #'GL_MAX_FRAMEBUFFER_WIDTH'>
	<value: 16r9315>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAMEBUFFER_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_FRAMEZOOM_FACTOR_SGIX [

	<enum: #'GL_MAX_FRAMEZOOM_FACTOR_SGIX'>
	<value: 16r818D>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_MAX_FRAMEZOOM_FACTOR_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GENERAL_COMBINERS_NV [

	<enum: #'GL_MAX_GENERAL_COMBINERS_NV'>
	<value: 16r854D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_GENERAL_COMBINERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_ATOMIC_COUNTERS [

	<enum: #'GL_MAX_GEOMETRY_ATOMIC_COUNTERS'>
	<value: 16r92D5>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_GEOMETRY_ATOMIC_COUNTERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_ATOMIC_COUNTERS_EXT [

	<enum: #'GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT'>
	<value: 16r92D5>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_ATOMIC_COUNTERS_OES [

	<enum: #'GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES'>
	<value: 16r92D5>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS [

	<enum: #'GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS'>
	<value: 16r92CF>
	<vendor: #NV>
	^ GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT [

	<enum: #'GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT'>
	<value: 16r92CF>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES [

	<enum: #'GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES'>
	<value: 16r92CF>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT [

	<enum: #'GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT'>
	<value: 16r8DE4>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_IMAGE_UNIFORMS [

	<enum: #'GL_MAX_GEOMETRY_IMAGE_UNIFORMS'>
	<value: 16r90CD>
	<vendor: #NV>
	^ GL_MAX_GEOMETRY_IMAGE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_IMAGE_UNIFORMS_EXT [

	<enum: #'GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT'>
	<value: 16r90CD>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_IMAGE_UNIFORMS_OES [

	<enum: #'GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES'>
	<value: 16r90CD>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_INPUT_COMPONENTS [

	<enum: #'GL_MAX_GEOMETRY_INPUT_COMPONENTS'>
	<value: 16r9123>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_GEOMETRY_INPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_INPUT_COMPONENTS_EXT [

	<enum: #'GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT'>
	<value: 16r9123>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_INPUT_COMPONENTS_OES [

	<enum: #'GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES'>
	<value: 16r9123>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_OUTPUT_COMPONENTS [

	<enum: #'GL_MAX_GEOMETRY_OUTPUT_COMPONENTS'>
	<value: 16r9124>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT [

	<enum: #'GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT'>
	<value: 16r9124>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_OUTPUT_COMPONENTS_OES [

	<enum: #'GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES'>
	<value: 16r9124>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_OUTPUT_VERTICES [

	<enum: #'GL_MAX_GEOMETRY_OUTPUT_VERTICES'>
	<value: 16r8DE0>
	<vendor: #NV>
	^ GL_MAX_GEOMETRY_OUTPUT_VERTICES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_OUTPUT_VERTICES_ARB [

	<enum: #'GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB'>
	<value: 16r8DE0>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_OUTPUT_VERTICES_EXT [

	<enum: #'GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT'>
	<value: 16r8DE0>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_OUTPUT_VERTICES_OES [

	<enum: #'GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES'>
	<value: 16r8DE0>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV [

	<enum: #'GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV'>
	<value: 16r8E5A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_SHADER_INVOCATIONS [

	<enum: #'GL_MAX_GEOMETRY_SHADER_INVOCATIONS'>
	<value: 16r8E5A>
	<vendor: #NV>
	^ GL_MAX_GEOMETRY_SHADER_INVOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_SHADER_INVOCATIONS_EXT [

	<enum: #'GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT'>
	<value: 16r8E5A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_SHADER_INVOCATIONS_OES [

	<enum: #'GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES'>
	<value: 16r8E5A>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_SHADER_STORAGE_BLOCKS [

	<enum: #'GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS'>
	<value: 16r90D7>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT [

	<enum: #'GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT'>
	<value: 16r90D7>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES [

	<enum: #'GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES'>
	<value: 16r90D7>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_TEXTURE_IMAGE_UNITS [

	<enum: #'GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS'>
	<value: 16r8C29>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB [

	<enum: #'GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB'>
	<value: 16r8C29>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT [

	<enum: #'GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT'>
	<value: 16r8C29>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES [

	<enum: #'GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES'>
	<value: 16r8C29>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS [

	<enum: #'GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS'>
	<value: 16r8DE1>
	<vendor: #NV>
	^ GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB [

	<enum: #'GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB'>
	<value: 16r8DE1>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT [

	<enum: #'GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT'>
	<value: 16r8DE1>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES [

	<enum: #'GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES'>
	<value: 16r8DE1>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_UNIFORM_BLOCKS [

	<enum: #'GL_MAX_GEOMETRY_UNIFORM_BLOCKS'>
	<value: 16r8A2C>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_GEOMETRY_UNIFORM_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_UNIFORM_BLOCKS_EXT [

	<enum: #'GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT'>
	<value: 16r8A2C>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_UNIFORM_BLOCKS_OES [

	<enum: #'GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES'>
	<value: 16r8A2C>
	<vendor: #APPLE>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_GEOMETRY_UNIFORM_COMPONENTS'>
	<value: 16r8DDF>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB [

	<enum: #'GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB'>
	<value: 16r8DDF>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT [

	<enum: #'GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT'>
	<value: 16r8DDF>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_UNIFORM_COMPONENTS_OES [

	<enum: #'GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES'>
	<value: 16r8DDF>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_VARYING_COMPONENTS_ARB [

	<enum: #'GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB'>
	<value: 16r8DDD>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_GEOMETRY_VARYING_COMPONENTS_EXT [

	<enum: #'GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT'>
	<value: 16r8DDD>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_HEIGHT [

	<enum: #'GL_MAX_HEIGHT'>
	<value: 16r827F>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_MAX_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_IMAGE_SAMPLES [

	<enum: #'GL_MAX_IMAGE_SAMPLES'>
	<value: 16r906D>
	<vendor: #NV>
	^ GL_MAX_IMAGE_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_IMAGE_SAMPLES_EXT [

	<enum: #'GL_MAX_IMAGE_SAMPLES_EXT'>
	<value: 16r906D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_IMAGE_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_IMAGE_UNITS [

	<enum: #'GL_MAX_IMAGE_UNITS'>
	<value: 16r8F38>
	<vendor: #NV>
	^ GL_MAX_IMAGE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_IMAGE_UNITS_EXT [

	<enum: #'GL_MAX_IMAGE_UNITS_EXT'>
	<value: 16r8F38>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_IMAGE_UNITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_INTEGER_SAMPLES [

	<enum: #'GL_MAX_INTEGER_SAMPLES'>
	<value: 16r9110>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_INTEGER_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_LABEL_LENGTH [

	<enum: #'GL_MAX_LABEL_LENGTH'>
	<value: 16r82E8>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_LABEL_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_LABEL_LENGTH_KHR [

	<enum: #'GL_MAX_LABEL_LENGTH_KHR'>
	<value: 16r82E8>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_MAX_LABEL_LENGTH_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_LAYERS [

	<enum: #'GL_MAX_LAYERS'>
	<value: 16r8281>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_MAX_LAYERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_LGPU_GPUS_NVX [

	<enum: #'GL_MAX_LGPU_GPUS_NVX'>
	<value: 16r92BA>
	<vendor: #NV>
	<suffix: #NVX>
	^ GL_MAX_LGPU_GPUS_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_LIGHTS [

	<enum: #'GL_MAX_LIGHTS'>
	<value: 16rD31>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_LIGHTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_LIST_NESTING [

	<enum: #'GL_MAX_LIST_NESTING'>
	<value: 16rB31>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_LIST_NESTING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MAP_TESSELLATION_NV [

	<enum: #'GL_MAX_MAP_TESSELLATION_NV'>
	<value: 16r86D6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MAP_TESSELLATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MATRIX_PALETTE_STACK_DEPTH_ARB [

	<enum: #'GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB'>
	<value: 16r8841>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_ATOMIC_COUNTERS_NV [

	<enum: #'GL_MAX_MESH_ATOMIC_COUNTERS_NV'>
	<value: 16r8E65>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_ATOMIC_COUNTERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV [

	<enum: #'GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV'>
	<value: 16r8E64>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_IMAGE_UNIFORMS_NV [

	<enum: #'GL_MAX_MESH_IMAGE_UNIFORMS_NV'>
	<value: 16r8E62>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_IMAGE_UNIFORMS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_OUTPUT_PRIMITIVES_NV [

	<enum: #'GL_MAX_MESH_OUTPUT_PRIMITIVES_NV'>
	<value: 16r9539>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_OUTPUT_PRIMITIVES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_OUTPUT_VERTICES_NV [

	<enum: #'GL_MAX_MESH_OUTPUT_VERTICES_NV'>
	<value: 16r9538>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_OUTPUT_VERTICES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_SHADER_STORAGE_BLOCKS_NV [

	<enum: #'GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV'>
	<value: 16r8E66>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_TEXTURE_IMAGE_UNITS_NV [

	<enum: #'GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV'>
	<value: 16r8E61>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_TOTAL_MEMORY_SIZE_NV [

	<enum: #'GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV'>
	<value: 16r9536>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_UNIFORM_BLOCKS_NV [

	<enum: #'GL_MAX_MESH_UNIFORM_BLOCKS_NV'>
	<value: 16r8E60>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_UNIFORM_BLOCKS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_UNIFORM_COMPONENTS_NV [

	<enum: #'GL_MAX_MESH_UNIFORM_COMPONENTS_NV'>
	<value: 16r8E63>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_UNIFORM_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_VIEWS_NV [

	<enum: #'GL_MAX_MESH_VIEWS_NV'>
	<value: 16r9557>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_VIEWS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_WORK_GROUP_INVOCATIONS_NV [

	<enum: #'GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV'>
	<value: 16r95A2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MESH_WORK_GROUP_SIZE_NV [

	<enum: #'GL_MAX_MESH_WORK_GROUP_SIZE_NV'>
	<value: 16r953B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MESH_WORK_GROUP_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MODELVIEW_STACK_DEPTH [

	<enum: #'GL_MAX_MODELVIEW_STACK_DEPTH'>
	<value: 16rD36>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_MODELVIEW_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MULTISAMPLE_COVERAGE_MODES_NV [

	<enum: #'GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV'>
	<value: 16r8E11>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_MULTIVIEW_BUFFERS_EXT [

	<enum: #'GL_MAX_MULTIVIEW_BUFFERS_EXT'>
	<value: 16r90F2>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_MULTIVIEW_BUFFERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_NAME_LENGTH [

	<enum: #'GL_MAX_NAME_LENGTH'>
	<value: 16r92F6>
	<vendor: #NV>
	<groups: #(#ProgramInterfacePName)>
	^ GL_MAX_NAME_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_NAME_STACK_DEPTH [

	<enum: #'GL_MAX_NAME_STACK_DEPTH'>
	<value: 16rD37>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_NAME_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_NUM_ACTIVE_VARIABLES [

	<enum: #'GL_MAX_NUM_ACTIVE_VARIABLES'>
	<value: 16r92F7>
	<vendor: #NV>
	<groups: #(#ProgramInterfacePName)>
	^ GL_MAX_NUM_ACTIVE_VARIABLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_NUM_COMPATIBLE_SUBROUTINES [

	<enum: #'GL_MAX_NUM_COMPATIBLE_SUBROUTINES'>
	<value: 16r92F8>
	<vendor: #NV>
	<groups: #(#ProgramInterfacePName)>
	^ GL_MAX_NUM_COMPATIBLE_SUBROUTINES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT [

	<enum: #'GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT'>
	<value: 16r87CA>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT [

	<enum: #'GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT'>
	<value: 16r87CD>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT [

	<enum: #'GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT'>
	<value: 16r87CE>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT [

	<enum: #'GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT'>
	<value: 16r87CC>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT [

	<enum: #'GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT'>
	<value: 16r87CB>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PALETTE_MATRICES_ARB [

	<enum: #'GL_MAX_PALETTE_MATRICES_ARB'>
	<value: 16r8842>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_PALETTE_MATRICES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PALETTE_MATRICES_OES [

	<enum: #'GL_MAX_PALETTE_MATRICES_OES'>
	<value: 16r8842>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MAX_PALETTE_MATRICES_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PATCH_VERTICES [

	<enum: #'GL_MAX_PATCH_VERTICES'>
	<value: 16r8E7D>
	<vendor: #NV>
	^ GL_MAX_PATCH_VERTICES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PATCH_VERTICES_EXT [

	<enum: #'GL_MAX_PATCH_VERTICES_EXT'>
	<value: 16r8E7D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_PATCH_VERTICES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PATCH_VERTICES_OES [

	<enum: #'GL_MAX_PATCH_VERTICES_OES'>
	<value: 16r8E7D>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_PATCH_VERTICES_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PIXEL_MAP_TABLE [

	<enum: #'GL_MAX_PIXEL_MAP_TABLE'>
	<value: 16rD34>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_PIXEL_MAP_TABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT [

	<enum: #'GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT'>
	<value: 16r8337>
	<vendor: #SUN>
	<suffix: #EXT>
	^ GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI [

	<enum: #'GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI'>
	<value: 16r87F1>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_ADDRESS_REGISTERS_ARB [

	<enum: #'GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB'>
	<value: 16r88B1>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_ALU_INSTRUCTIONS_ARB [

	<enum: #'GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB'>
	<value: 16r880B>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_ATTRIBS_ARB [

	<enum: #'GL_MAX_PROGRAM_ATTRIBS_ARB'>
	<value: 16r88AD>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_ATTRIBS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_ATTRIB_COMPONENTS_NV [

	<enum: #'GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV'>
	<value: 16r8908>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_CALL_DEPTH_NV [

	<enum: #'GL_MAX_PROGRAM_CALL_DEPTH_NV'>
	<value: 16r88F5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_CALL_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_ENV_PARAMETERS_ARB [

	<enum: #'GL_MAX_PROGRAM_ENV_PARAMETERS_ARB'>
	<value: 16r88B5>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_EXEC_INSTRUCTIONS_NV [

	<enum: #'GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV'>
	<value: 16r88F4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_GENERIC_ATTRIBS_NV [

	<enum: #'GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV'>
	<value: 16r8DA5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_GENERIC_RESULTS_NV [

	<enum: #'GL_MAX_PROGRAM_GENERIC_RESULTS_NV'>
	<value: 16r8DA6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_GENERIC_RESULTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_IF_DEPTH_NV [

	<enum: #'GL_MAX_PROGRAM_IF_DEPTH_NV'>
	<value: 16r88F6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_IF_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_INSTRUCTIONS_ARB [

	<enum: #'GL_MAX_PROGRAM_INSTRUCTIONS_ARB'>
	<value: 16r88A1>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_LOCAL_PARAMETERS_ARB [

	<enum: #'GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB'>
	<value: 16r88B4>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_LOOP_COUNT_NV [

	<enum: #'GL_MAX_PROGRAM_LOOP_COUNT_NV'>
	<value: 16r88F8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_LOOP_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_LOOP_DEPTH_NV [

	<enum: #'GL_MAX_PROGRAM_LOOP_DEPTH_NV'>
	<value: 16r88F7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_LOOP_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_MATRICES_ARB [

	<enum: #'GL_MAX_PROGRAM_MATRICES_ARB'>
	<value: 16r862F>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_MATRICES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB [

	<enum: #'GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB'>
	<value: 16r862E>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB [

	<enum: #'GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB'>
	<value: 16r88B3>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB [

	<enum: #'GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB'>
	<value: 16r880E>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_NATIVE_ATTRIBS_ARB [

	<enum: #'GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB'>
	<value: 16r88AF>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB [

	<enum: #'GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB'>
	<value: 16r88A3>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_NATIVE_PARAMETERS_ARB [

	<enum: #'GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB'>
	<value: 16r88AB>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_NATIVE_TEMPORARIES_ARB [

	<enum: #'GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB'>
	<value: 16r88A7>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB [

	<enum: #'GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB'>
	<value: 16r8810>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB [

	<enum: #'GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB'>
	<value: 16r880F>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_OUTPUT_VERTICES_NV [

	<enum: #'GL_MAX_PROGRAM_OUTPUT_VERTICES_NV'>
	<value: 16r8C27>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_PARAMETERS_ARB [

	<enum: #'GL_MAX_PROGRAM_PARAMETERS_ARB'>
	<value: 16r88A9>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_PARAMETERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV [

	<enum: #'GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV'>
	<value: 16r8DA0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV [

	<enum: #'GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV'>
	<value: 16r8DA1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_PATCH_ATTRIBS_NV [

	<enum: #'GL_MAX_PROGRAM_PATCH_ATTRIBS_NV'>
	<value: 16r86D8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_PATCH_ATTRIBS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_RESULT_COMPONENTS_NV [

	<enum: #'GL_MAX_PROGRAM_RESULT_COMPONENTS_NV'>
	<value: 16r8909>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_SUBROUTINE_NUM_NV [

	<enum: #'GL_MAX_PROGRAM_SUBROUTINE_NUM_NV'>
	<value: 16r8F45>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_SUBROUTINE_NUM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV [

	<enum: #'GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV'>
	<value: 16r8F44>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEMPORARIES_ARB [

	<enum: #'GL_MAX_PROGRAM_TEMPORARIES_ARB'>
	<value: 16r88A5>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_TEMPORARIES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEXEL_OFFSET [

	<enum: #'GL_MAX_PROGRAM_TEXEL_OFFSET'>
	<value: 16r8905>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_PROGRAM_TEXEL_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEXEL_OFFSET_EXT [

	<enum: #'GL_MAX_PROGRAM_TEXEL_OFFSET_EXT'>
	<value: 16r8905>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_PROGRAM_TEXEL_OFFSET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEXEL_OFFSET_NV [

	<enum: #'GL_MAX_PROGRAM_TEXEL_OFFSET_NV'>
	<value: 16r8905>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_TEXEL_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB [

	<enum: #'GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB'>
	<value: 16r8F9F>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEXTURE_GATHER_OFFSET [

	<enum: #'GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET'>
	<value: 16r8E5F>
	<vendor: #NV>
	^ GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB [

	<enum: #'GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB'>
	<value: 16r8E5F>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV [

	<enum: #'GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV'>
	<value: 16r8E5F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEX_INDIRECTIONS_ARB [

	<enum: #'GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB'>
	<value: 16r880D>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TEX_INSTRUCTIONS_ARB [

	<enum: #'GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB'>
	<value: 16r880C>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV [

	<enum: #'GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV'>
	<value: 16r8C28>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_PROJECTION_STACK_DEPTH [

	<enum: #'GL_MAX_PROJECTION_STACK_DEPTH'>
	<value: 16rD38>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_PROJECTION_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_RASTER_SAMPLES_EXT [

	<enum: #'GL_MAX_RASTER_SAMPLES_EXT'>
	<value: 16r9329>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_RASTER_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_RATIONAL_EVAL_ORDER_NV [

	<enum: #'GL_MAX_RATIONAL_EVAL_ORDER_NV'>
	<value: 16r86D7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_RATIONAL_EVAL_ORDER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_RECTANGLE_TEXTURE_SIZE [

	<enum: #'GL_MAX_RECTANGLE_TEXTURE_SIZE'>
	<value: 16r84F8>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_RECTANGLE_TEXTURE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_RECTANGLE_TEXTURE_SIZE_ARB [

	<enum: #'GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB'>
	<value: 16r84F8>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_RECTANGLE_TEXTURE_SIZE_NV [

	<enum: #'GL_MAX_RECTANGLE_TEXTURE_SIZE_NV'>
	<value: 16r84F8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_RENDERBUFFER_SIZE [

	<enum: #'GL_MAX_RENDERBUFFER_SIZE'>
	<value: 16r84E8>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_RENDERBUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_RENDERBUFFER_SIZE_EXT [

	<enum: #'GL_MAX_RENDERBUFFER_SIZE_EXT'>
	<value: 16r84E8>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_RENDERBUFFER_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_RENDERBUFFER_SIZE_OES [

	<enum: #'GL_MAX_RENDERBUFFER_SIZE_OES'>
	<value: 16r84E8>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MAX_RENDERBUFFER_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SAMPLES [

	<enum: #'GL_MAX_SAMPLES'>
	<value: 16r8D57>
	<vendor: #ARB>
	^ GL_MAX_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SAMPLES_ANGLE [

	<enum: #'GL_MAX_SAMPLES_ANGLE'>
	<value: 16r8D57>
	<vendor: #ARB>
	^ GL_MAX_SAMPLES_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SAMPLES_APPLE [

	<enum: #'GL_MAX_SAMPLES_APPLE'>
	<value: 16r8D57>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_MAX_SAMPLES_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SAMPLES_EXT [

	<enum: #'GL_MAX_SAMPLES_EXT'>
	<value: 16r8D57>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SAMPLES_IMG [

	<enum: #'GL_MAX_SAMPLES_IMG'>
	<value: 16r9135>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_MAX_SAMPLES_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SAMPLES_NV [

	<enum: #'GL_MAX_SAMPLES_NV'>
	<value: 16r8D57>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_MAX_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SAMPLE_MASK_WORDS [

	<enum: #'GL_MAX_SAMPLE_MASK_WORDS'>
	<value: 16r8E59>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_SAMPLE_MASK_WORDS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SAMPLE_MASK_WORDS_NV [

	<enum: #'GL_MAX_SAMPLE_MASK_WORDS_NV'>
	<value: 16r8E59>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_SAMPLE_MASK_WORDS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SERVER_WAIT_TIMEOUT [

	<enum: #'GL_MAX_SERVER_WAIT_TIMEOUT'>
	<value: 16r9111>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_SERVER_WAIT_TIMEOUT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SERVER_WAIT_TIMEOUT_APPLE [

	<enum: #'GL_MAX_SERVER_WAIT_TIMEOUT_APPLE'>
	<value: 16r9111>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_MAX_SERVER_WAIT_TIMEOUT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_BUFFER_ADDRESS_NV [

	<enum: #'GL_MAX_SHADER_BUFFER_ADDRESS_NV'>
	<value: 16r8F35>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_SHADER_BUFFER_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT [

	<enum: #'GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT'>
	<value: 16r9650>
	<vendor: #IMG>
	<suffix: #EXT>
	^ GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT [

	<enum: #'GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT'>
	<value: 16r9651>
	<vendor: #IMG>
	<suffix: #EXT>
	^ GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_COMPILER_THREADS_ARB [

	<enum: #'GL_MAX_SHADER_COMPILER_THREADS_ARB'>
	<value: 16r91B0>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_SHADER_COMPILER_THREADS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_COMPILER_THREADS_KHR [

	<enum: #'GL_MAX_SHADER_COMPILER_THREADS_KHR'>
	<value: 16r91B0>
	<vendor: #AMD>
	<suffix: #KHR>
	^ GL_MAX_SHADER_COMPILER_THREADS_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT [

	<enum: #'GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT'>
	<value: 16r8F63>
	<vendor: #ARM>
	<suffix: #EXT>
	^ GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT [

	<enum: #'GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT'>
	<value: 16r8F67>
	<vendor: #ARM>
	<suffix: #EXT>
	^ GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_STORAGE_BLOCK_SIZE [

	<enum: #'GL_MAX_SHADER_STORAGE_BLOCK_SIZE'>
	<value: 16r90DE>
	<vendor: #NV>
	^ GL_MAX_SHADER_STORAGE_BLOCK_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_STORAGE_BUFFER_BINDINGS [

	<enum: #'GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS'>
	<value: 16r90DD>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM [

	<enum: #'GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM'>
	<value: 16r8FA1>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SHININESS_NV [

	<enum: #'GL_MAX_SHININESS_NV'>
	<value: 16r8504>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_SHININESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_3D_TEXTURE_SIZE_AMD [

	<enum: #'GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD'>
	<value: 16r9199>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_3D_TEXTURE_SIZE_ARB [

	<enum: #'GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB'>
	<value: 16r9199>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_3D_TEXTURE_SIZE_EXT [

	<enum: #'GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT'>
	<value: 16r9199>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_ARRAY_TEXTURE_LAYERS [

	<enum: #'GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS'>
	<value: 16r919A>
	<vendor: #AMD>
	^ GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB [

	<enum: #'GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB'>
	<value: 16r919A>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT [

	<enum: #'GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT'>
	<value: 16r919A>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_TEXTURE_SIZE_AMD [

	<enum: #'GL_MAX_SPARSE_TEXTURE_SIZE_AMD'>
	<value: 16r9198>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MAX_SPARSE_TEXTURE_SIZE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_TEXTURE_SIZE_ARB [

	<enum: #'GL_MAX_SPARSE_TEXTURE_SIZE_ARB'>
	<value: 16r9198>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_MAX_SPARSE_TEXTURE_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPARSE_TEXTURE_SIZE_EXT [

	<enum: #'GL_MAX_SPARSE_TEXTURE_SIZE_EXT'>
	<value: 16r9198>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_SPARSE_TEXTURE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SPOT_EXPONENT_NV [

	<enum: #'GL_MAX_SPOT_EXPONENT_NV'>
	<value: 16r8505>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_SPOT_EXPONENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV [

	<enum: #'GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV'>
	<value: 16r9349>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SUBROUTINES [

	<enum: #'GL_MAX_SUBROUTINES'>
	<value: 16r8DE7>
	<vendor: #NV>
	^ GL_MAX_SUBROUTINES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_SUBROUTINE_UNIFORM_LOCATIONS [

	<enum: #'GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS'>
	<value: 16r8DE8>
	<vendor: #NV>
	^ GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_ATOMIC_COUNTERS_NV [

	<enum: #'GL_MAX_TASK_ATOMIC_COUNTERS_NV'>
	<value: 16r8E6D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_ATOMIC_COUNTERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV [

	<enum: #'GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV'>
	<value: 16r8E6C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_IMAGE_UNIFORMS_NV [

	<enum: #'GL_MAX_TASK_IMAGE_UNIFORMS_NV'>
	<value: 16r8E6A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_IMAGE_UNIFORMS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_OUTPUT_COUNT_NV [

	<enum: #'GL_MAX_TASK_OUTPUT_COUNT_NV'>
	<value: 16r953A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_OUTPUT_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_SHADER_STORAGE_BLOCKS_NV [

	<enum: #'GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV'>
	<value: 16r8E6E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_TEXTURE_IMAGE_UNITS_NV [

	<enum: #'GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV'>
	<value: 16r8E69>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_TOTAL_MEMORY_SIZE_NV [

	<enum: #'GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV'>
	<value: 16r9537>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_UNIFORM_BLOCKS_NV [

	<enum: #'GL_MAX_TASK_UNIFORM_BLOCKS_NV'>
	<value: 16r8E68>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_UNIFORM_BLOCKS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_UNIFORM_COMPONENTS_NV [

	<enum: #'GL_MAX_TASK_UNIFORM_COMPONENTS_NV'>
	<value: 16r8E6B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_UNIFORM_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_WORK_GROUP_INVOCATIONS_NV [

	<enum: #'GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV'>
	<value: 16r95A3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TASK_WORK_GROUP_SIZE_NV [

	<enum: #'GL_MAX_TASK_WORK_GROUP_SIZE_NV'>
	<value: 16r953C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TASK_WORK_GROUP_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_ATOMIC_COUNTERS [

	<enum: #'GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS'>
	<value: 16r92D3>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT'>
	<value: 16r92D3>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES'>
	<value: 16r92D3>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS [

	<enum: #'GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS'>
	<value: 16r92CD>
	<vendor: #NV>
	^ GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT'>
	<value: 16r92CD>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES'>
	<value: 16r92CD>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_IMAGE_UNIFORMS [

	<enum: #'GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS'>
	<value: 16r90CB>
	<vendor: #NV>
	^ GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT'>
	<value: 16r90CB>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES'>
	<value: 16r90CB>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_INPUT_COMPONENTS [

	<enum: #'GL_MAX_TESS_CONTROL_INPUT_COMPONENTS'>
	<value: 16r886C>
	<vendor: #NV>
	^ GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT'>
	<value: 16r886C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_INPUT_COMPONENTS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES'>
	<value: 16r886C>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_OUTPUT_COMPONENTS [

	<enum: #'GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS'>
	<value: 16r8E83>
	<vendor: #NV>
	^ GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT'>
	<value: 16r8E83>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES'>
	<value: 16r8E83>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS [

	<enum: #'GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS'>
	<value: 16r90D8>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT'>
	<value: 16r90D8>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES'>
	<value: 16r90D8>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS [

	<enum: #'GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS'>
	<value: 16r8E81>
	<vendor: #NV>
	^ GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT'>
	<value: 16r8E81>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES'>
	<value: 16r8E81>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS [

	<enum: #'GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS'>
	<value: 16r8E85>
	<vendor: #NV>
	^ GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT'>
	<value: 16r8E85>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES'>
	<value: 16r8E85>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_UNIFORM_BLOCKS [

	<enum: #'GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS'>
	<value: 16r8E89>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT'>
	<value: 16r8E89>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES'>
	<value: 16r8E89>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS'>
	<value: 16r8E7F>
	<vendor: #NV>
	^ GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT [

	<enum: #'GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT'>
	<value: 16r8E7F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES [

	<enum: #'GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES'>
	<value: 16r8E7F>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_ATOMIC_COUNTERS [

	<enum: #'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS'>
	<value: 16r92D4>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT'>
	<value: 16r92D4>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES'>
	<value: 16r92D4>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS [

	<enum: #'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS'>
	<value: 16r92CE>
	<vendor: #NV>
	^ GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT'>
	<value: 16r92CE>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES'>
	<value: 16r92CE>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_IMAGE_UNIFORMS [

	<enum: #'GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS'>
	<value: 16r90CC>
	<vendor: #NV>
	^ GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT'>
	<value: 16r90CC>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES'>
	<value: 16r90CC>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_INPUT_COMPONENTS [

	<enum: #'GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS'>
	<value: 16r886D>
	<vendor: #NV>
	^ GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT'>
	<value: 16r886D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES'>
	<value: 16r886D>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_OUTPUT_COMPONENTS [

	<enum: #'GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS'>
	<value: 16r8E86>
	<vendor: #NV>
	^ GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT'>
	<value: 16r8E86>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES'>
	<value: 16r8E86>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS [

	<enum: #'GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS'>
	<value: 16r90D9>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT'>
	<value: 16r90D9>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES'>
	<value: 16r90D9>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS [

	<enum: #'GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS'>
	<value: 16r8E82>
	<vendor: #NV>
	^ GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT'>
	<value: 16r8E82>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES'>
	<value: 16r8E82>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_UNIFORM_BLOCKS [

	<enum: #'GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS'>
	<value: 16r8E8A>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT'>
	<value: 16r8E8A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES'>
	<value: 16r8E8A>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS'>
	<value: 16r8E80>
	<vendor: #NV>
	^ GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT [

	<enum: #'GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT'>
	<value: 16r8E80>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES [

	<enum: #'GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES'>
	<value: 16r8E80>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_GEN_LEVEL [

	<enum: #'GL_MAX_TESS_GEN_LEVEL'>
	<value: 16r8E7E>
	<vendor: #NV>
	^ GL_MAX_TESS_GEN_LEVEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_GEN_LEVEL_EXT [

	<enum: #'GL_MAX_TESS_GEN_LEVEL_EXT'>
	<value: 16r8E7E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_GEN_LEVEL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_GEN_LEVEL_OES [

	<enum: #'GL_MAX_TESS_GEN_LEVEL_OES'>
	<value: 16r8E7E>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_GEN_LEVEL_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_PATCH_COMPONENTS [

	<enum: #'GL_MAX_TESS_PATCH_COMPONENTS'>
	<value: 16r8E84>
	<vendor: #NV>
	^ GL_MAX_TESS_PATCH_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_PATCH_COMPONENTS_EXT [

	<enum: #'GL_MAX_TESS_PATCH_COMPONENTS_EXT'>
	<value: 16r8E84>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TESS_PATCH_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TESS_PATCH_COMPONENTS_OES [

	<enum: #'GL_MAX_TESS_PATCH_COMPONENTS_OES'>
	<value: 16r8E84>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TESS_PATCH_COMPONENTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_BUFFER_SIZE [

	<enum: #'GL_MAX_TEXTURE_BUFFER_SIZE'>
	<value: 16r8C2B>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TEXTURE_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_BUFFER_SIZE_ARB [

	<enum: #'GL_MAX_TEXTURE_BUFFER_SIZE_ARB'>
	<value: 16r8C2B>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_TEXTURE_BUFFER_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_BUFFER_SIZE_EXT [

	<enum: #'GL_MAX_TEXTURE_BUFFER_SIZE_EXT'>
	<value: 16r8C2B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TEXTURE_BUFFER_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_BUFFER_SIZE_OES [

	<enum: #'GL_MAX_TEXTURE_BUFFER_SIZE_OES'>
	<value: 16r8C2B>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MAX_TEXTURE_BUFFER_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_COORDS [

	<enum: #'GL_MAX_TEXTURE_COORDS'>
	<value: 16r8871>
	<vendor: #NV>
	^ GL_MAX_TEXTURE_COORDS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_COORDS_ARB [

	<enum: #'GL_MAX_TEXTURE_COORDS_ARB'>
	<value: 16r8871>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_TEXTURE_COORDS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_COORDS_NV [

	<enum: #'GL_MAX_TEXTURE_COORDS_NV'>
	<value: 16r8871>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TEXTURE_COORDS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_IMAGE_UNITS [

	<enum: #'GL_MAX_TEXTURE_IMAGE_UNITS'>
	<value: 16r8872>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TEXTURE_IMAGE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_IMAGE_UNITS_ARB [

	<enum: #'GL_MAX_TEXTURE_IMAGE_UNITS_ARB'>
	<value: 16r8872>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_TEXTURE_IMAGE_UNITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_IMAGE_UNITS_NV [

	<enum: #'GL_MAX_TEXTURE_IMAGE_UNITS_NV'>
	<value: 16r8872>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TEXTURE_IMAGE_UNITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_LOD_BIAS [

	<enum: #'GL_MAX_TEXTURE_LOD_BIAS'>
	<value: 16r84FD>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TEXTURE_LOD_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_LOD_BIAS_EXT [

	<enum: #'GL_MAX_TEXTURE_LOD_BIAS_EXT'>
	<value: 16r84FD>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TEXTURE_LOD_BIAS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_MAX_ANISOTROPY [

	<enum: #'GL_MAX_TEXTURE_MAX_ANISOTROPY'>
	<value: 16r84FF>
	<vendor: #NV>
	^ GL_MAX_TEXTURE_MAX_ANISOTROPY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_MAX_ANISOTROPY_EXT [

	<enum: #'GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT'>
	<value: 16r84FF>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_SIZE [

	<enum: #'GL_MAX_TEXTURE_SIZE'>
	<value: 16rD33>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_TEXTURE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_STACK_DEPTH [

	<enum: #'GL_MAX_TEXTURE_STACK_DEPTH'>
	<value: 16rD39>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_TEXTURE_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_UNITS [

	<enum: #'GL_MAX_TEXTURE_UNITS'>
	<value: 16r84E2>
	<vendor: #ARB>
	^ GL_MAX_TEXTURE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TEXTURE_UNITS_ARB [

	<enum: #'GL_MAX_TEXTURE_UNITS_ARB'>
	<value: 16r84E2>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_TEXTURE_UNITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV [

	<enum: #'GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV'>
	<value: 16r95B6>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRACK_MATRICES_NV [

	<enum: #'GL_MAX_TRACK_MATRICES_NV'>
	<value: 16r862F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TRACK_MATRICES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRACK_MATRIX_STACK_DEPTH_NV [

	<enum: #'GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV'>
	<value: 16r862E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_BUFFERS [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_BUFFERS'>
	<value: 16r8E70>
	<vendor: #NV>
	^ GL_MAX_TRANSFORM_FEEDBACK_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS'>
	<value: 16r8C8A>
	<vendor: #NV>
	^ GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT'>
	<value: 16r8C8A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV'>
	<value: 16r8C8A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS'>
	<value: 16r8C8B>
	<vendor: #NV>
	^ GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT'>
	<value: 16r8C8B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV'>
	<value: 16r8C8B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS'>
	<value: 16r8C80>
	<vendor: #NV>
	^ GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT'>
	<value: 16r8C80>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV [

	<enum: #'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV'>
	<value: 16r8C80>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_UNIFORM_BLOCK_SIZE [

	<enum: #'GL_MAX_UNIFORM_BLOCK_SIZE'>
	<value: 16r8A30>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_UNIFORM_BLOCK_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_UNIFORM_BUFFER_BINDINGS [

	<enum: #'GL_MAX_UNIFORM_BUFFER_BINDINGS'>
	<value: 16r8A2F>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_UNIFORM_BUFFER_BINDINGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_UNIFORM_LOCATIONS [

	<enum: #'GL_MAX_UNIFORM_LOCATIONS'>
	<value: 16r826E>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_UNIFORM_LOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VARYING_COMPONENTS [

	<enum: #'GL_MAX_VARYING_COMPONENTS'>
	<value: 16r8B4B>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VARYING_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VARYING_COMPONENTS_EXT [

	<enum: #'GL_MAX_VARYING_COMPONENTS_EXT'>
	<value: 16r8B4B>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MAX_VARYING_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VARYING_FLOATS [

	<enum: #'GL_MAX_VARYING_FLOATS'>
	<value: 16r8B4B>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VARYING_FLOATS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VARYING_FLOATS_ARB [

	<enum: #'GL_MAX_VARYING_FLOATS_ARB'>
	<value: 16r8B4B>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_VARYING_FLOATS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VARYING_VECTORS [

	<enum: #'GL_MAX_VARYING_VECTORS'>
	<value: 16r8DFC>
	<vendor: #OES>
	<groups: #(#GetPName)>
	^ GL_MAX_VARYING_VECTORS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV [

	<enum: #'GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV'>
	<value: 16r8520>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_ATOMIC_COUNTERS [

	<enum: #'GL_MAX_VERTEX_ATOMIC_COUNTERS'>
	<value: 16r92D2>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_ATOMIC_COUNTERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_ATOMIC_COUNTER_BUFFERS [

	<enum: #'GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS'>
	<value: 16r92CC>
	<vendor: #NV>
	^ GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_ATTRIBS [

	<enum: #'GL_MAX_VERTEX_ATTRIBS'>
	<value: 16r8869>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_ATTRIBS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_ATTRIBS_ARB [

	<enum: #'GL_MAX_VERTEX_ATTRIBS_ARB'>
	<value: 16r8869>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_VERTEX_ATTRIBS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_ATTRIB_BINDINGS [

	<enum: #'GL_MAX_VERTEX_ATTRIB_BINDINGS'>
	<value: 16r82DA>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_ATTRIB_BINDINGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_ATTRIB_RELATIVE_OFFSET [

	<enum: #'GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET'>
	<value: 16r82D9>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_ATTRIB_STRIDE [

	<enum: #'GL_MAX_VERTEX_ATTRIB_STRIDE'>
	<value: 16r82E5>
	<vendor: #ARB>
	^ GL_MAX_VERTEX_ATTRIB_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_BINDABLE_UNIFORMS_EXT [

	<enum: #'GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT'>
	<value: 16r8DE2>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_HINT_PGI [

	<enum: #'GL_MAX_VERTEX_HINT_PGI'>
	<value: 16r1A22D>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget #HintTargetPGI)>
	^ GL_MAX_VERTEX_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_IMAGE_UNIFORMS [

	<enum: #'GL_MAX_VERTEX_IMAGE_UNIFORMS'>
	<value: 16r90CA>
	<vendor: #NV>
	^ GL_MAX_VERTEX_IMAGE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_OUTPUT_COMPONENTS [

	<enum: #'GL_MAX_VERTEX_OUTPUT_COMPONENTS'>
	<value: 16r9122>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_OUTPUT_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_SHADER_INSTRUCTIONS_EXT [

	<enum: #'GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT'>
	<value: 16r87C5>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_SHADER_INVARIANTS_EXT [

	<enum: #'GL_MAX_VERTEX_SHADER_INVARIANTS_EXT'>
	<value: 16r87C7>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_SHADER_LOCALS_EXT [

	<enum: #'GL_MAX_VERTEX_SHADER_LOCALS_EXT'>
	<value: 16r87C9>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_VERTEX_SHADER_LOCALS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT [

	<enum: #'GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT'>
	<value: 16r87C8>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_SHADER_STORAGE_BLOCKS [

	<enum: #'GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS'>
	<value: 16r90D6>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_SHADER_VARIANTS_EXT [

	<enum: #'GL_MAX_VERTEX_SHADER_VARIANTS_EXT'>
	<value: 16r87C6>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MAX_VERTEX_SHADER_VARIANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_STREAMS [

	<enum: #'GL_MAX_VERTEX_STREAMS'>
	<value: 16r8E71>
	<vendor: #NV>
	^ GL_MAX_VERTEX_STREAMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_STREAMS_ATI [

	<enum: #'GL_MAX_VERTEX_STREAMS_ATI'>
	<value: 16r876B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_MAX_VERTEX_STREAMS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_TEXTURE_IMAGE_UNITS [

	<enum: #'GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS'>
	<value: 16r8B4C>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB [

	<enum: #'GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB'>
	<value: 16r8B4C>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_UNIFORM_BLOCKS [

	<enum: #'GL_MAX_VERTEX_UNIFORM_BLOCKS'>
	<value: 16r8A2B>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_UNIFORM_BLOCKS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_UNIFORM_COMPONENTS [

	<enum: #'GL_MAX_VERTEX_UNIFORM_COMPONENTS'>
	<value: 16r8B4A>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_UNIFORM_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_UNIFORM_COMPONENTS_ARB [

	<enum: #'GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB'>
	<value: 16r8B4A>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_UNIFORM_VECTORS [

	<enum: #'GL_MAX_VERTEX_UNIFORM_VECTORS'>
	<value: 16r8DFB>
	<vendor: #OES>
	<groups: #(#GetPName)>
	^ GL_MAX_VERTEX_UNIFORM_VECTORS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_UNITS_ARB [

	<enum: #'GL_MAX_VERTEX_UNITS_ARB'>
	<value: 16r86A4>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MAX_VERTEX_UNITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_UNITS_OES [

	<enum: #'GL_MAX_VERTEX_UNITS_OES'>
	<value: 16r86A4>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MAX_VERTEX_UNITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_VARYING_COMPONENTS_ARB [

	<enum: #'GL_MAX_VERTEX_VARYING_COMPONENTS_ARB'>
	<value: 16r8DDE>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VERTEX_VARYING_COMPONENTS_EXT [

	<enum: #'GL_MAX_VERTEX_VARYING_COMPONENTS_EXT'>
	<value: 16r8DDE>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VIEWPORTS [

	<enum: #'GL_MAX_VIEWPORTS'>
	<value: 16r825B>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VIEWPORTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VIEWPORTS_NV [

	<enum: #'GL_MAX_VIEWPORTS_NV'>
	<value: 16r825B>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_MAX_VIEWPORTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VIEWPORTS_OES [

	<enum: #'GL_MAX_VIEWPORTS_OES'>
	<value: 16r825B>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_MAX_VIEWPORTS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VIEWPORT_DIMS [

	<enum: #'GL_MAX_VIEWPORT_DIMS'>
	<value: 16rD3A>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MAX_VIEWPORT_DIMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_VIEWS_OVR [

	<enum: #'GL_MAX_VIEWS_OVR'>
	<value: 16r9631>
	<vendor: #Oculus>
	<suffix: #OVR>
	^ GL_MAX_VIEWS_OVR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_WIDTH [

	<enum: #'GL_MAX_WIDTH'>
	<value: 16r827E>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_MAX_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MAX_WINDOW_RECTANGLES_EXT [

	<enum: #'GL_MAX_WINDOW_RECTANGLES_EXT'>
	<value: 16r8F14>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MAX_WINDOW_RECTANGLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MEDIUM_FLOAT [

	<enum: #'GL_MEDIUM_FLOAT'>
	<value: 16r8DF1>
	<vendor: #OES>
	<groups: #(#PrecisionType)>
	^ GL_MEDIUM_FLOAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MEDIUM_INT [

	<enum: #'GL_MEDIUM_INT'>
	<value: 16r8DF4>
	<vendor: #OES>
	<groups: #(#PrecisionType)>
	^ GL_MEDIUM_INT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MEMORY_ATTACHABLE_ALIGNMENT_NV [

	<enum: #'GL_MEMORY_ATTACHABLE_ALIGNMENT_NV'>
	<value: 16r95A6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MEMORY_ATTACHABLE_ALIGNMENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MEMORY_ATTACHABLE_NV [

	<enum: #'GL_MEMORY_ATTACHABLE_NV'>
	<value: 16r95A8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MEMORY_ATTACHABLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MEMORY_ATTACHABLE_SIZE_NV [

	<enum: #'GL_MEMORY_ATTACHABLE_SIZE_NV'>
	<value: 16r95A7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MEMORY_ATTACHABLE_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV [

	<enum: #'GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV'>
	<value: 16r9543>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV [

	<enum: #'GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV'>
	<value: 16r92DF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_OUTPUT_TYPE_NV [

	<enum: #'GL_MESH_OUTPUT_TYPE_NV'>
	<value: 16r957B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_OUTPUT_TYPE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_PRIMITIVES_OUT_NV [

	<enum: #'GL_MESH_PRIMITIVES_OUT_NV'>
	<value: 16r957A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_PRIMITIVES_OUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_SHADER_BIT_NV [

	<enum: #'GL_MESH_SHADER_BIT_NV'>
	<value: 2r1000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_MESH_SHADER_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_SHADER_NV [

	<enum: #'GL_MESH_SHADER_NV'>
	<value: 16r9559>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_SUBROUTINE_NV [

	<enum: #'GL_MESH_SUBROUTINE_NV'>
	<value: 16r957C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_SUBROUTINE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_SUBROUTINE_UNIFORM_NV [

	<enum: #'GL_MESH_SUBROUTINE_UNIFORM_NV'>
	<value: 16r957E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_SUBROUTINE_UNIFORM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_VERTICES_OUT_NV [

	<enum: #'GL_MESH_VERTICES_OUT_NV'>
	<value: 16r9579>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_VERTICES_OUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MESH_WORK_GROUP_SIZE_NV [

	<enum: #'GL_MESH_WORK_GROUP_SIZE_NV'>
	<value: 16r953E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MESH_WORK_GROUP_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN [

	<enum: #'GL_MIN'>
	<value: 16r8007>
	<vendor: #ARB>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_MIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINMAX [

	<enum: #'GL_MINMAX'>
	<value: 16r802E>
	<vendor: #ARB>
	<groups: #(#MinmaxTarget #MinmaxTargetEXT)>
	^ GL_MINMAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINMAX_EXT [

	<enum: #'GL_MINMAX_EXT'>
	<value: 16r802E>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#EnableCap #GetPName #MinmaxTargetEXT)>
	^ GL_MINMAX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINMAX_FORMAT [

	<enum: #'GL_MINMAX_FORMAT'>
	<value: 16r802F>
	<vendor: #ARB>
	<groups: #(#GetMinmaxParameterPNameEXT)>
	^ GL_MINMAX_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINMAX_FORMAT_EXT [

	<enum: #'GL_MINMAX_FORMAT_EXT'>
	<value: 16r802F>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetMinmaxParameterPNameEXT)>
	^ GL_MINMAX_FORMAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINMAX_SINK [

	<enum: #'GL_MINMAX_SINK'>
	<value: 16r8030>
	<vendor: #ARB>
	<groups: #(#GetMinmaxParameterPNameEXT)>
	^ GL_MINMAX_SINK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINMAX_SINK_EXT [

	<enum: #'GL_MINMAX_SINK_EXT'>
	<value: 16r8030>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetMinmaxParameterPNameEXT)>
	^ GL_MINMAX_SINK_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINOR_VERSION [

	<enum: #'GL_MINOR_VERSION'>
	<value: 16r821C>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MINOR_VERSION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINUS_CLAMPED_NV [

	<enum: #'GL_MINUS_CLAMPED_NV'>
	<value: 16r92B3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MINUS_CLAMPED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MINUS_NV [

	<enum: #'GL_MINUS_NV'>
	<value: 16r929F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MINUS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_EXT [

	<enum: #'GL_MIN_EXT'>
	<value: 16r8007>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#BlendEquationModeEXT)>
	^ GL_MIN_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_FRAGMENT_INTERPOLATION_OFFSET [

	<enum: #'GL_MIN_FRAGMENT_INTERPOLATION_OFFSET'>
	<value: 16r8E5B>
	<vendor: #NV>
	^ GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_FRAGMENT_INTERPOLATION_OFFSET_NV [

	<enum: #'GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV'>
	<value: 16r8E5B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_FRAGMENT_INTERPOLATION_OFFSET_OES [

	<enum: #'GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES'>
	<value: 16r8E5B>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_LOD_WARNING_AMD [

	<enum: #'GL_MIN_LOD_WARNING_AMD'>
	<value: 16r919C>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MIN_LOD_WARNING_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_MAP_BUFFER_ALIGNMENT [

	<enum: #'GL_MIN_MAP_BUFFER_ALIGNMENT'>
	<value: 16r90BC>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MIN_MAP_BUFFER_ALIGNMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_PROGRAM_TEXEL_OFFSET [

	<enum: #'GL_MIN_PROGRAM_TEXEL_OFFSET'>
	<value: 16r8904>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_MIN_PROGRAM_TEXEL_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_PROGRAM_TEXEL_OFFSET_EXT [

	<enum: #'GL_MIN_PROGRAM_TEXEL_OFFSET_EXT'>
	<value: 16r8904>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MIN_PROGRAM_TEXEL_OFFSET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_PROGRAM_TEXEL_OFFSET_NV [

	<enum: #'GL_MIN_PROGRAM_TEXEL_OFFSET_NV'>
	<value: 16r8904>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MIN_PROGRAM_TEXEL_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_PROGRAM_TEXTURE_GATHER_OFFSET [

	<enum: #'GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET'>
	<value: 16r8E5E>
	<vendor: #NV>
	^ GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB [

	<enum: #'GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB'>
	<value: 16r8E5E>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV [

	<enum: #'GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV'>
	<value: 16r8E5E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_SAMPLE_SHADING_VALUE [

	<enum: #'GL_MIN_SAMPLE_SHADING_VALUE'>
	<value: 16r8C37>
	<vendor: #NV>
	^ GL_MIN_SAMPLE_SHADING_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_SAMPLE_SHADING_VALUE_ARB [

	<enum: #'GL_MIN_SAMPLE_SHADING_VALUE_ARB'>
	<value: 16r8C37>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MIN_SAMPLE_SHADING_VALUE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_SAMPLE_SHADING_VALUE_OES [

	<enum: #'GL_MIN_SAMPLE_SHADING_VALUE_OES'>
	<value: 16r8C37>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_MIN_SAMPLE_SHADING_VALUE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIN_SPARSE_LEVEL_AMD [

	<enum: #'GL_MIN_SPARSE_LEVEL_AMD'>
	<value: 16r919B>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_MIN_SPARSE_LEVEL_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIPMAP [

	<enum: #'GL_MIPMAP'>
	<value: 16r8293>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_MIPMAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRRORED_REPEAT [

	<enum: #'GL_MIRRORED_REPEAT'>
	<value: 16r8370>
	<vendor: #HP>
	<groups: #(#TextureWrapMode)>
	^ GL_MIRRORED_REPEAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRRORED_REPEAT_ARB [

	<enum: #'GL_MIRRORED_REPEAT_ARB'>
	<value: 16r8370>
	<vendor: #HP>
	<suffix: #ARB>
	^ GL_MIRRORED_REPEAT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRRORED_REPEAT_IBM [

	<enum: #'GL_MIRRORED_REPEAT_IBM'>
	<value: 16r8370>
	<vendor: #HP>
	<suffix: #IBM>
	^ GL_MIRRORED_REPEAT_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRRORED_REPEAT_OES [

	<enum: #'GL_MIRRORED_REPEAT_OES'>
	<value: 16r8370>
	<vendor: #HP>
	<suffix: #OES>
	^ GL_MIRRORED_REPEAT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRROR_CLAMP_ATI [

	<enum: #'GL_MIRROR_CLAMP_ATI'>
	<value: 16r8742>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_MIRROR_CLAMP_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRROR_CLAMP_EXT [

	<enum: #'GL_MIRROR_CLAMP_EXT'>
	<value: 16r8742>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MIRROR_CLAMP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRROR_CLAMP_TO_BORDER_EXT [

	<enum: #'GL_MIRROR_CLAMP_TO_BORDER_EXT'>
	<value: 16r8912>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MIRROR_CLAMP_TO_BORDER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRROR_CLAMP_TO_EDGE [

	<enum: #'GL_MIRROR_CLAMP_TO_EDGE'>
	<value: 16r8743>
	<vendor: #AMD>
	^ GL_MIRROR_CLAMP_TO_EDGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRROR_CLAMP_TO_EDGE_ATI [

	<enum: #'GL_MIRROR_CLAMP_TO_EDGE_ATI'>
	<value: 16r8743>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_MIRROR_CLAMP_TO_EDGE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIRROR_CLAMP_TO_EDGE_EXT [

	<enum: #'GL_MIRROR_CLAMP_TO_EDGE_EXT'>
	<value: 16r8743>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_MIRROR_CLAMP_TO_EDGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MITER_REVERT_NV [

	<enum: #'GL_MITER_REVERT_NV'>
	<value: 16r90A7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MITER_REVERT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MITER_TRUNCATE_NV [

	<enum: #'GL_MITER_TRUNCATE_NV'>
	<value: 16r90A8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MITER_TRUNCATE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIXED_DEPTH_SAMPLES_SUPPORTED_NV [

	<enum: #'GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV'>
	<value: 16r932F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MIXED_STENCIL_SAMPLES_SUPPORTED_NV [

	<enum: #'GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV'>
	<value: 16r9330>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW [

	<enum: #'GL_MODELVIEW'>
	<value: 16r1700>
	<vendor: #ARB>
	<groups: #(#MatrixMode)>
	^ GL_MODELVIEW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW0_ARB [

	<enum: #'GL_MODELVIEW0_ARB'>
	<value: 16r1700>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW0_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW0_EXT [

	<enum: #'GL_MODELVIEW0_EXT'>
	<value: 16r1700>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#MatrixMode)>
	^ GL_MODELVIEW0_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW0_MATRIX_EXT [

	<enum: #'GL_MODELVIEW0_MATRIX_EXT'>
	<value: 16rBA6>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_MODELVIEW0_MATRIX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW0_STACK_DEPTH_EXT [

	<enum: #'GL_MODELVIEW0_STACK_DEPTH_EXT'>
	<value: 16rBA3>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_MODELVIEW0_STACK_DEPTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW10_ARB [

	<enum: #'GL_MODELVIEW10_ARB'>
	<value: 16r872A>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW10_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW11_ARB [

	<enum: #'GL_MODELVIEW11_ARB'>
	<value: 16r872B>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW11_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW12_ARB [

	<enum: #'GL_MODELVIEW12_ARB'>
	<value: 16r872C>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW12_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW13_ARB [

	<enum: #'GL_MODELVIEW13_ARB'>
	<value: 16r872D>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW13_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW14_ARB [

	<enum: #'GL_MODELVIEW14_ARB'>
	<value: 16r872E>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW14_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW15_ARB [

	<enum: #'GL_MODELVIEW15_ARB'>
	<value: 16r872F>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW15_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW16_ARB [

	<enum: #'GL_MODELVIEW16_ARB'>
	<value: 16r8730>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW16_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW17_ARB [

	<enum: #'GL_MODELVIEW17_ARB'>
	<value: 16r8731>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW17_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW18_ARB [

	<enum: #'GL_MODELVIEW18_ARB'>
	<value: 16r8732>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW18_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW19_ARB [

	<enum: #'GL_MODELVIEW19_ARB'>
	<value: 16r8733>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW19_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW1_ARB [

	<enum: #'GL_MODELVIEW1_ARB'>
	<value: 16r850A>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_MODELVIEW1_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW1_EXT [

	<enum: #'GL_MODELVIEW1_EXT'>
	<value: 16r850A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MODELVIEW1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW1_MATRIX_EXT [

	<enum: #'GL_MODELVIEW1_MATRIX_EXT'>
	<value: 16r8506>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MODELVIEW1_MATRIX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW1_STACK_DEPTH_EXT [

	<enum: #'GL_MODELVIEW1_STACK_DEPTH_EXT'>
	<value: 16r8502>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MODELVIEW1_STACK_DEPTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW20_ARB [

	<enum: #'GL_MODELVIEW20_ARB'>
	<value: 16r8734>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW20_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW21_ARB [

	<enum: #'GL_MODELVIEW21_ARB'>
	<value: 16r8735>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW21_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW22_ARB [

	<enum: #'GL_MODELVIEW22_ARB'>
	<value: 16r8736>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW22_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW23_ARB [

	<enum: #'GL_MODELVIEW23_ARB'>
	<value: 16r8737>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW23_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW24_ARB [

	<enum: #'GL_MODELVIEW24_ARB'>
	<value: 16r8738>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW24_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW25_ARB [

	<enum: #'GL_MODELVIEW25_ARB'>
	<value: 16r8739>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW25_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW26_ARB [

	<enum: #'GL_MODELVIEW26_ARB'>
	<value: 16r873A>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW26_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW27_ARB [

	<enum: #'GL_MODELVIEW27_ARB'>
	<value: 16r873B>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW27_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW28_ARB [

	<enum: #'GL_MODELVIEW28_ARB'>
	<value: 16r873C>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW28_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW29_ARB [

	<enum: #'GL_MODELVIEW29_ARB'>
	<value: 16r873D>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW29_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW2_ARB [

	<enum: #'GL_MODELVIEW2_ARB'>
	<value: 16r8722>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW30_ARB [

	<enum: #'GL_MODELVIEW30_ARB'>
	<value: 16r873E>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW30_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW31_ARB [

	<enum: #'GL_MODELVIEW31_ARB'>
	<value: 16r873F>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW31_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW3_ARB [

	<enum: #'GL_MODELVIEW3_ARB'>
	<value: 16r8723>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW4_ARB [

	<enum: #'GL_MODELVIEW4_ARB'>
	<value: 16r8724>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW5_ARB [

	<enum: #'GL_MODELVIEW5_ARB'>
	<value: 16r8725>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW5_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW6_ARB [

	<enum: #'GL_MODELVIEW6_ARB'>
	<value: 16r8726>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW6_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW7_ARB [

	<enum: #'GL_MODELVIEW7_ARB'>
	<value: 16r8727>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW7_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW8_ARB [

	<enum: #'GL_MODELVIEW8_ARB'>
	<value: 16r8728>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW8_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW9_ARB [

	<enum: #'GL_MODELVIEW9_ARB'>
	<value: 16r8729>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MODELVIEW9_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW_MATRIX [

	<enum: #'GL_MODELVIEW_MATRIX'>
	<value: 16rBA6>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MODELVIEW_MATRIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES [

	<enum: #'GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES'>
	<value: 16r898D>
	<vendor: #OML>
	<suffix: #OES>
	^ GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW_PROJECTION_NV [

	<enum: #'GL_MODELVIEW_PROJECTION_NV'>
	<value: 16r8629>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MODELVIEW_PROJECTION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODELVIEW_STACK_DEPTH [

	<enum: #'GL_MODELVIEW_STACK_DEPTH'>
	<value: 16rBA3>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_MODELVIEW_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODULATE [

	<enum: #'GL_MODULATE'>
	<value: 16r2100>
	<vendor: #ARB>
	<groups: #(#LightEnvModeSGIX #TextureEnvMode)>
	^ GL_MODULATE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODULATE_ADD_ATI [

	<enum: #'GL_MODULATE_ADD_ATI'>
	<value: 16r8744>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_MODULATE_ADD_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODULATE_COLOR_IMG [

	<enum: #'GL_MODULATE_COLOR_IMG'>
	<value: 16r8C04>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_MODULATE_COLOR_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODULATE_SIGNED_ADD_ATI [

	<enum: #'GL_MODULATE_SIGNED_ADD_ATI'>
	<value: 16r8745>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_MODULATE_SIGNED_ADD_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MODULATE_SUBTRACT_ATI [

	<enum: #'GL_MODULATE_SUBTRACT_ATI'>
	<value: 16r8746>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_MODULATE_SUBTRACT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM [

	<enum: #'GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM'>
	<value: 16r8C90>
	<vendor: #QCOM>
	<suffix: #QCOM>
	<groups: #(#GetPName)>
	^ GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM [

	<enum: #'GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM'>
	<value: 16r8C91>
	<vendor: #QCOM>
	<suffix: #QCOM>
	<groups: #(#GetPName)>
	^ GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MOVE_TO_CONTINUES_NV [

	<enum: #'GL_MOVE_TO_CONTINUES_NV'>
	<value: 16r90B6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MOVE_TO_CONTINUES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MOVE_TO_NV [

	<enum: #'GL_MOVE_TO_NV'>
	<value: 16r2>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_MOVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MOVE_TO_RESETS_NV [

	<enum: #'GL_MOVE_TO_RESETS_NV'>
	<value: 16r90B5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MOVE_TO_RESETS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MOV_ATI [

	<enum: #'GL_MOV_ATI'>
	<value: 16r8961>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_MOV_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULT [

	<enum: #'GL_MULT'>
	<value: 16r103>
	<vendor: #ARB>
	<groups: #(#AccumOp)>
	^ GL_MULT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTICAST_GPUS_NV [

	<enum: #'GL_MULTICAST_GPUS_NV'>
	<value: 16r92BA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MULTICAST_GPUS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV [

	<enum: #'GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV'>
	<value: 16r9549>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTIPLY [

	<enum: #'GL_MULTIPLY'>
	<value: 16r9294>
	<vendor: #NV>
	^ GL_MULTIPLY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTIPLY_KHR [

	<enum: #'GL_MULTIPLY_KHR'>
	<value: 16r9294>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_MULTIPLY_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTIPLY_NV [

	<enum: #'GL_MULTIPLY_NV'>
	<value: 16r9294>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MULTIPLY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE [

	<enum: #'GL_MULTISAMPLE'>
	<value: 16r809D>
	<vendor: #ARB>
	<groups: #(#EnableCap)>
	^ GL_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLES_NV [

	<enum: #'GL_MULTISAMPLES_NV'>
	<value: 16r9371>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MULTISAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_3DFX [

	<enum: #'GL_MULTISAMPLE_3DFX'>
	<value: 16r86B2>
	<vendor: #'3DFX'>
	<suffix: #'3DFX'>
	^ GL_MULTISAMPLE_3DFX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_ARB [

	<enum: #'GL_MULTISAMPLE_ARB'>
	<value: 16r809D>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MULTISAMPLE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BIT [

	<enum: #'GL_MULTISAMPLE_BIT'>
	<value: 2r100000000000000000000000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_MULTISAMPLE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BIT_3DFX [

	<enum: #'GL_MULTISAMPLE_BIT_3DFX'>
	<value: 2r100000000000000000000000000000>
	<suffix: #'3DFX'>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_MULTISAMPLE_BIT_3DFX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BIT_ARB [

	<enum: #'GL_MULTISAMPLE_BIT_ARB'>
	<value: 2r100000000000000000000000000000>
	<suffix: #ARB>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_MULTISAMPLE_BIT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BIT_EXT [

	<enum: #'GL_MULTISAMPLE_BIT_EXT'>
	<value: 2r100000000000000000000000000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_MULTISAMPLE_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BUFFER_BIT0_QCOM [

	<enum: #'GL_MULTISAMPLE_BUFFER_BIT0_QCOM'>
	<value: 2r1000000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_MULTISAMPLE_BUFFER_BIT0_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BUFFER_BIT1_QCOM [

	<enum: #'GL_MULTISAMPLE_BUFFER_BIT1_QCOM'>
	<value: 2r10000000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_MULTISAMPLE_BUFFER_BIT1_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BUFFER_BIT2_QCOM [

	<enum: #'GL_MULTISAMPLE_BUFFER_BIT2_QCOM'>
	<value: 2r100000000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_MULTISAMPLE_BUFFER_BIT2_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BUFFER_BIT3_QCOM [

	<enum: #'GL_MULTISAMPLE_BUFFER_BIT3_QCOM'>
	<value: 2r1000000000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_MULTISAMPLE_BUFFER_BIT3_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BUFFER_BIT4_QCOM [

	<enum: #'GL_MULTISAMPLE_BUFFER_BIT4_QCOM'>
	<value: 2r10000000000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_MULTISAMPLE_BUFFER_BIT4_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BUFFER_BIT5_QCOM [

	<enum: #'GL_MULTISAMPLE_BUFFER_BIT5_QCOM'>
	<value: 2r100000000000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_MULTISAMPLE_BUFFER_BIT5_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BUFFER_BIT6_QCOM [

	<enum: #'GL_MULTISAMPLE_BUFFER_BIT6_QCOM'>
	<value: 2r1000000000000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_MULTISAMPLE_BUFFER_BIT6_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_BUFFER_BIT7_QCOM [

	<enum: #'GL_MULTISAMPLE_BUFFER_BIT7_QCOM'>
	<value: 2r10000000000000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_MULTISAMPLE_BUFFER_BIT7_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_COVERAGE_MODES_NV [

	<enum: #'GL_MULTISAMPLE_COVERAGE_MODES_NV'>
	<value: 16r8E12>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_MULTISAMPLE_COVERAGE_MODES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_EXT [

	<enum: #'GL_MULTISAMPLE_EXT'>
	<value: 16r809D>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_MULTISAMPLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_FILTER_HINT_NV [

	<enum: #'GL_MULTISAMPLE_FILTER_HINT_NV'>
	<value: 16r8534>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#HintTarget)>
	^ GL_MULTISAMPLE_FILTER_HINT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_LINE_WIDTH_GRANULARITY [

	<enum: #'GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY'>
	<value: 16r9382>
	<vendor: #ARB>
	^ GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB [

	<enum: #'GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB'>
	<value: 16r9382>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_LINE_WIDTH_RANGE [

	<enum: #'GL_MULTISAMPLE_LINE_WIDTH_RANGE'>
	<value: 16r9381>
	<vendor: #ARB>
	^ GL_MULTISAMPLE_LINE_WIDTH_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_LINE_WIDTH_RANGE_ARB [

	<enum: #'GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB'>
	<value: 16r9381>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_RASTERIZATION_ALLOWED_EXT [

	<enum: #'GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT'>
	<value: 16r932B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTISAMPLE_SGIS [

	<enum: #'GL_MULTISAMPLE_SGIS'>
	<value: 16r809D>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#EnableCap #GetPName)>
	^ GL_MULTISAMPLE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MULTIVIEW_EXT [

	<enum: #'GL_MULTIVIEW_EXT'>
	<value: 16r90F1>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_MULTIVIEW_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MUL_ATI [

	<enum: #'GL_MUL_ATI'>
	<value: 16r8964>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_MUL_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> MVP_MATRIX_EXT [

	<enum: #'GL_MVP_MATRIX_EXT'>
	<value: 16r87E3>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderParameterEXT)>
	^ GL_MVP_MATRIX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> N3F_V3F [

	<enum: #'GL_N3F_V3F'>
	<value: 16r2A25>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_N3F_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NAMED_STRING_LENGTH_ARB [

	<enum: #'GL_NAMED_STRING_LENGTH_ARB'>
	<value: 16r8DE9>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_NAMED_STRING_LENGTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NAMED_STRING_TYPE_ARB [

	<enum: #'GL_NAMED_STRING_TYPE_ARB'>
	<value: 16r8DEA>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_NAMED_STRING_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NAME_LENGTH [

	<enum: #'GL_NAME_LENGTH'>
	<value: 16r92F9>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_NAME_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NAME_STACK_DEPTH [

	<enum: #'GL_NAME_STACK_DEPTH'>
	<value: 16rD70>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_NAME_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NAND [

	<enum: #'GL_NAND'>
	<value: 16r150E>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_NAND
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NATIVE_GRAPHICS_BEGIN_HINT_PGI [

	<enum: #'GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI'>
	<value: 16r1A203>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NATIVE_GRAPHICS_END_HINT_PGI [

	<enum: #'GL_NATIVE_GRAPHICS_END_HINT_PGI'>
	<value: 16r1A204>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_NATIVE_GRAPHICS_END_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NATIVE_GRAPHICS_HANDLE_PGI [

	<enum: #'GL_NATIVE_GRAPHICS_HANDLE_PGI'>
	<value: 16r1A202>
	<vendor: #PGI>
	<suffix: #PGI>
	^ GL_NATIVE_GRAPHICS_HANDLE_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEAREST [

	<enum: #'GL_NEAREST'>
	<value: 16r2600>
	<vendor: #ARB>
	<groups: #(#BlitFramebufferFilter #TextureMagFilter #TextureMinFilter)>
	^ GL_NEAREST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEAREST_CLIPMAP_LINEAR_SGIX [

	<enum: #'GL_NEAREST_CLIPMAP_LINEAR_SGIX'>
	<value: 16r844E>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#TextureMinFilter)>
	^ GL_NEAREST_CLIPMAP_LINEAR_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEAREST_CLIPMAP_NEAREST_SGIX [

	<enum: #'GL_NEAREST_CLIPMAP_NEAREST_SGIX'>
	<value: 16r844D>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#TextureMinFilter)>
	^ GL_NEAREST_CLIPMAP_NEAREST_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEAREST_MIPMAP_LINEAR [

	<enum: #'GL_NEAREST_MIPMAP_LINEAR'>
	<value: 16r2702>
	<vendor: #ARB>
	<groups: #(#TextureMinFilter)>
	^ GL_NEAREST_MIPMAP_LINEAR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEAREST_MIPMAP_NEAREST [

	<enum: #'GL_NEAREST_MIPMAP_NEAREST'>
	<value: 16r2700>
	<vendor: #ARB>
	<groups: #(#TextureMinFilter)>
	^ GL_NEAREST_MIPMAP_NEAREST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEGATE_BIT_ATI [

	<enum: #'GL_NEGATE_BIT_ATI'>
	<value: 2r100>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderColorModMaskATI)>
	^ GL_NEGATE_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEGATIVE_ONE_EXT [

	<enum: #'GL_NEGATIVE_ONE_EXT'>
	<value: 16r87DF>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_NEGATIVE_ONE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEGATIVE_ONE_TO_ONE [

	<enum: #'GL_NEGATIVE_ONE_TO_ONE'>
	<value: 16r935E>
	<vendor: #NV>
	<groups: #(#ClipControlDepth)>
	^ GL_NEGATIVE_ONE_TO_ONE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEGATIVE_ONE_TO_ONE_EXT [

	<enum: #'GL_NEGATIVE_ONE_TO_ONE_EXT'>
	<value: 16r935E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_NEGATIVE_ONE_TO_ONE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEGATIVE_W_EXT [

	<enum: #'GL_NEGATIVE_W_EXT'>
	<value: 16r87DC>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_NEGATIVE_W_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEGATIVE_X_EXT [

	<enum: #'GL_NEGATIVE_X_EXT'>
	<value: 16r87D9>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_NEGATIVE_X_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEGATIVE_Y_EXT [

	<enum: #'GL_NEGATIVE_Y_EXT'>
	<value: 16r87DA>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_NEGATIVE_Y_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEGATIVE_Z_EXT [

	<enum: #'GL_NEGATIVE_Z_EXT'>
	<value: 16r87DB>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_NEGATIVE_Z_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEVER [

	<enum: #'GL_NEVER'>
	<value: 16r200>
	<vendor: #ARB>
	<groups: #(#AlphaFunction #DepthFunction #IndexFunctionEXT #StencilFunction)>
	^ GL_NEVER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEXT_BUFFER_NV [

	<enum: #'GL_NEXT_BUFFER_NV'>
	<value: -16r2>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#TransformFeedbackTokenNV)>
	^ GL_NEXT_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV [

	<enum: #'GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV'>
	<value: 16r9025>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NICEST [

	<enum: #'GL_NICEST'>
	<value: 16r1102>
	<vendor: #ARB>
	<groups: #(#HintMode)>
	^ GL_NICEST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NONE [

	<enum: #'GL_NONE'>
	<value: 16r0>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #CombinerBiasNV #CombinerScaleNV #DrawBufferMode #PathColorFormat #PathFontStyle #PathGenMode #PathTransformType #PixelTexGenMode #ReadBufferMode #SpecialNumbers #SyncBehaviorFlags #TextureCompareMode)>
	^ GL_NONE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NONE_OES [

	<enum: #'GL_NONE_OES'>
	<value: 16r0>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#DrawBufferMode #ReadBufferMode #SpecialNumbers)>
	^ GL_NONE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NOOP [

	<enum: #'GL_NOOP'>
	<value: 16r1505>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_NOOP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NOP_COMMAND_NV [

	<enum: #'GL_NOP_COMMAND_NV'>
	<value: 16r1>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_NOP_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NOR [

	<enum: #'GL_NOR'>
	<value: 16r1508>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_NOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMALIZE [

	<enum: #'GL_NORMALIZE'>
	<value: 16rBA1>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_NORMALIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMALIZED_RANGE_EXT [

	<enum: #'GL_NORMALIZED_RANGE_EXT'>
	<value: 16r87E0>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#ParameterRangeEXT)>
	^ GL_NORMALIZED_RANGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY [

	<enum: #'GL_NORMAL_ARRAY'>
	<value: 16r8075>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_NORMAL_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_ADDRESS_NV [

	<enum: #'GL_NORMAL_ARRAY_ADDRESS_NV'>
	<value: 16r8F22>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_NORMAL_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_BUFFER_BINDING [

	<enum: #'GL_NORMAL_ARRAY_BUFFER_BINDING'>
	<value: 16r8897>
	<vendor: #NV>
	^ GL_NORMAL_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_NORMAL_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r8897>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_COUNT_EXT [

	<enum: #'GL_NORMAL_ARRAY_COUNT_EXT'>
	<value: 16r8080>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_NORMAL_ARRAY_COUNT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_EXT [

	<enum: #'GL_NORMAL_ARRAY_EXT'>
	<value: 16r8075>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_NORMAL_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_LENGTH_NV [

	<enum: #'GL_NORMAL_ARRAY_LENGTH_NV'>
	<value: 16r8F2C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_NORMAL_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_LIST_IBM [

	<enum: #'GL_NORMAL_ARRAY_LIST_IBM'>
	<value: 16r1929F>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_NORMAL_ARRAY_LIST_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_LIST_STRIDE_IBM [

	<enum: #'GL_NORMAL_ARRAY_LIST_STRIDE_IBM'>
	<value: 16r192A9>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_NORMAL_ARRAY_LIST_STRIDE_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_PARALLEL_POINTERS_INTEL [

	<enum: #'GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL'>
	<value: 16r83F6>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_POINTER [

	<enum: #'GL_NORMAL_ARRAY_POINTER'>
	<value: 16r808F>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_NORMAL_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_POINTER_EXT [

	<enum: #'GL_NORMAL_ARRAY_POINTER_EXT'>
	<value: 16r808F>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPointervPName)>
	^ GL_NORMAL_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_STRIDE [

	<enum: #'GL_NORMAL_ARRAY_STRIDE'>
	<value: 16r807F>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_NORMAL_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_STRIDE_EXT [

	<enum: #'GL_NORMAL_ARRAY_STRIDE_EXT'>
	<value: 16r807F>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_NORMAL_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_TYPE [

	<enum: #'GL_NORMAL_ARRAY_TYPE'>
	<value: 16r807E>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_NORMAL_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_ARRAY_TYPE_EXT [

	<enum: #'GL_NORMAL_ARRAY_TYPE_EXT'>
	<value: 16r807E>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_NORMAL_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_BIT_PGI [

	<enum: #'GL_NORMAL_BIT_PGI'>
	<value: 2r1000000000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_NORMAL_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_MAP [

	<enum: #'GL_NORMAL_MAP'>
	<value: 16r8511>
	<vendor: #NV>
	^ GL_NORMAL_MAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_MAP_ARB [

	<enum: #'GL_NORMAL_MAP_ARB'>
	<value: 16r8511>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_NORMAL_MAP_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_MAP_EXT [

	<enum: #'GL_NORMAL_MAP_EXT'>
	<value: 16r8511>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_NORMAL_MAP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_MAP_NV [

	<enum: #'GL_NORMAL_MAP_NV'>
	<value: 16r8511>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_NORMAL_MAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NORMAL_MAP_OES [

	<enum: #'GL_NORMAL_MAP_OES'>
	<value: 16r8511>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_NORMAL_MAP_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NOTEQUAL [

	<enum: #'GL_NOTEQUAL'>
	<value: 16r205>
	<vendor: #ARB>
	<groups: #(#AlphaFunction #DepthFunction #IndexFunctionEXT #StencilFunction)>
	^ GL_NOTEQUAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NO_ERROR [

	<enum: #'GL_NO_ERROR'>
	<value: 16r0>
	<vendor: #ARB>
	<groups: #(#ErrorCode #GraphicsResetStatus #SpecialNumbers)>
	^ GL_NO_ERROR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NO_RESET_NOTIFICATION [

	<enum: #'GL_NO_RESET_NOTIFICATION'>
	<value: 16r8261>
	<vendor: #ARB>
	^ GL_NO_RESET_NOTIFICATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NO_RESET_NOTIFICATION_ARB [

	<enum: #'GL_NO_RESET_NOTIFICATION_ARB'>
	<value: 16r8261>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_NO_RESET_NOTIFICATION_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NO_RESET_NOTIFICATION_EXT [

	<enum: #'GL_NO_RESET_NOTIFICATION_EXT'>
	<value: 16r8261>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_NO_RESET_NOTIFICATION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NO_RESET_NOTIFICATION_KHR [

	<enum: #'GL_NO_RESET_NOTIFICATION_KHR'>
	<value: 16r8261>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_NO_RESET_NOTIFICATION_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_ACTIVE_VARIABLES [

	<enum: #'GL_NUM_ACTIVE_VARIABLES'>
	<value: 16r9304>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_NUM_ACTIVE_VARIABLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_COMPATIBLE_SUBROUTINES [

	<enum: #'GL_NUM_COMPATIBLE_SUBROUTINES'>
	<value: 16r8E4A>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty #SubroutineParameterName)>
	^ GL_NUM_COMPATIBLE_SUBROUTINES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_COMPRESSED_TEXTURE_FORMATS [

	<enum: #'GL_NUM_COMPRESSED_TEXTURE_FORMATS'>
	<value: 16r86A2>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_NUM_COMPRESSED_TEXTURE_FORMATS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_COMPRESSED_TEXTURE_FORMATS_ARB [

	<enum: #'GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB'>
	<value: 16r86A2>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_DEVICE_UUIDS_EXT [

	<enum: #'GL_NUM_DEVICE_UUIDS_EXT'>
	<value: 16r9596>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_NUM_DEVICE_UUIDS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_DOWNSAMPLE_SCALES_IMG [

	<enum: #'GL_NUM_DOWNSAMPLE_SCALES_IMG'>
	<value: 16r913D>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_NUM_DOWNSAMPLE_SCALES_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_EXTENSIONS [

	<enum: #'GL_NUM_EXTENSIONS'>
	<value: 16r821D>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_NUM_EXTENSIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_FILL_STREAMS_NV [

	<enum: #'GL_NUM_FILL_STREAMS_NV'>
	<value: 16r8E29>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_NUM_FILL_STREAMS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_FRAGMENT_CONSTANTS_ATI [

	<enum: #'GL_NUM_FRAGMENT_CONSTANTS_ATI'>
	<value: 16r896F>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_NUM_FRAGMENT_CONSTANTS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_FRAGMENT_REGISTERS_ATI [

	<enum: #'GL_NUM_FRAGMENT_REGISTERS_ATI'>
	<value: 16r896E>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_NUM_FRAGMENT_REGISTERS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_GENERAL_COMBINERS_NV [

	<enum: #'GL_NUM_GENERAL_COMBINERS_NV'>
	<value: 16r854E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_NUM_GENERAL_COMBINERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI [

	<enum: #'GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI'>
	<value: 16r8973>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_INSTRUCTIONS_PER_PASS_ATI [

	<enum: #'GL_NUM_INSTRUCTIONS_PER_PASS_ATI'>
	<value: 16r8971>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_NUM_INSTRUCTIONS_PER_PASS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_INSTRUCTIONS_TOTAL_ATI [

	<enum: #'GL_NUM_INSTRUCTIONS_TOTAL_ATI'>
	<value: 16r8972>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_NUM_INSTRUCTIONS_TOTAL_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_LOOPBACK_COMPONENTS_ATI [

	<enum: #'GL_NUM_LOOPBACK_COMPONENTS_ATI'>
	<value: 16r8974>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_NUM_LOOPBACK_COMPONENTS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_PASSES_ATI [

	<enum: #'GL_NUM_PASSES_ATI'>
	<value: 16r8970>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_NUM_PASSES_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_PROGRAM_BINARY_FORMATS [

	<enum: #'GL_NUM_PROGRAM_BINARY_FORMATS'>
	<value: 16r87FE>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_NUM_PROGRAM_BINARY_FORMATS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_PROGRAM_BINARY_FORMATS_OES [

	<enum: #'GL_NUM_PROGRAM_BINARY_FORMATS_OES'>
	<value: 16r87FE>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_NUM_PROGRAM_BINARY_FORMATS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_SAMPLE_COUNTS [

	<enum: #'GL_NUM_SAMPLE_COUNTS'>
	<value: 16r9380>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_NUM_SAMPLE_COUNTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_SHADER_BINARY_FORMATS [

	<enum: #'GL_NUM_SHADER_BINARY_FORMATS'>
	<value: 16r8DF9>
	<vendor: #OES>
	<groups: #(#GetPName)>
	^ GL_NUM_SHADER_BINARY_FORMATS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_SHADING_LANGUAGE_VERSIONS [

	<enum: #'GL_NUM_SHADING_LANGUAGE_VERSIONS'>
	<value: 16r82E9>
	<vendor: #ARB>
	^ GL_NUM_SHADING_LANGUAGE_VERSIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_SPARSE_LEVELS_ARB [

	<enum: #'GL_NUM_SPARSE_LEVELS_ARB'>
	<value: 16r91AA>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_NUM_SPARSE_LEVELS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_SPARSE_LEVELS_EXT [

	<enum: #'GL_NUM_SPARSE_LEVELS_EXT'>
	<value: 16r91AA>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_NUM_SPARSE_LEVELS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_SPIR_V_EXTENSIONS [

	<enum: #'GL_NUM_SPIR_V_EXTENSIONS'>
	<value: 16r9554>
	<vendor: #NV>
	^ GL_NUM_SPIR_V_EXTENSIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_SUPPORTED_MULTISAMPLE_MODES_AMD [

	<enum: #'GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD'>
	<value: 16r91B6>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_TILING_TYPES_EXT [

	<enum: #'GL_NUM_TILING_TYPES_EXT'>
	<value: 16r9582>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_NUM_TILING_TYPES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_VIDEO_CAPTURE_STREAMS_NV [

	<enum: #'GL_NUM_VIDEO_CAPTURE_STREAMS_NV'>
	<value: 16r9024>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_NUM_VIDEO_CAPTURE_STREAMS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_VIRTUAL_PAGE_SIZES_ARB [

	<enum: #'GL_NUM_VIRTUAL_PAGE_SIZES_ARB'>
	<value: 16r91A8>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_NUM_VIRTUAL_PAGE_SIZES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_VIRTUAL_PAGE_SIZES_EXT [

	<enum: #'GL_NUM_VIRTUAL_PAGE_SIZES_EXT'>
	<value: 16r91A8>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_NUM_VIRTUAL_PAGE_SIZES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> NUM_WINDOW_RECTANGLES_EXT [

	<enum: #'GL_NUM_WINDOW_RECTANGLES_EXT'>
	<value: 16r8F15>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_NUM_WINDOW_RECTANGLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_ACTIVE_ATTRIBUTES_ARB [

	<enum: #'GL_OBJECT_ACTIVE_ATTRIBUTES_ARB'>
	<value: 16r8B89>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB [

	<enum: #'GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB'>
	<value: 16r8B8A>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_ACTIVE_UNIFORMS_ARB [

	<enum: #'GL_OBJECT_ACTIVE_UNIFORMS_ARB'>
	<value: 16r8B86>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_ACTIVE_UNIFORMS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB [

	<enum: #'GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB'>
	<value: 16r8B87>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_ATTACHED_OBJECTS_ARB [

	<enum: #'GL_OBJECT_ATTACHED_OBJECTS_ARB'>
	<value: 16r8B85>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_ATTACHED_OBJECTS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_BUFFER_SIZE_ATI [

	<enum: #'GL_OBJECT_BUFFER_SIZE_ATI'>
	<value: 16r8764>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#ArrayObjectPNameATI)>
	^ GL_OBJECT_BUFFER_SIZE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_BUFFER_USAGE_ATI [

	<enum: #'GL_OBJECT_BUFFER_USAGE_ATI'>
	<value: 16r8765>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#ArrayObjectPNameATI)>
	^ GL_OBJECT_BUFFER_USAGE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_COMPILE_STATUS_ARB [

	<enum: #'GL_OBJECT_COMPILE_STATUS_ARB'>
	<value: 16r8B81>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_COMPILE_STATUS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_DELETE_STATUS_ARB [

	<enum: #'GL_OBJECT_DELETE_STATUS_ARB'>
	<value: 16r8B80>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_DELETE_STATUS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_DISTANCE_TO_LINE_SGIS [

	<enum: #'GL_OBJECT_DISTANCE_TO_LINE_SGIS'>
	<value: 16r81F3>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureGenMode)>
	^ GL_OBJECT_DISTANCE_TO_LINE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_DISTANCE_TO_POINT_SGIS [

	<enum: #'GL_OBJECT_DISTANCE_TO_POINT_SGIS'>
	<value: 16r81F1>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureGenMode)>
	^ GL_OBJECT_DISTANCE_TO_POINT_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_INFO_LOG_LENGTH_ARB [

	<enum: #'GL_OBJECT_INFO_LOG_LENGTH_ARB'>
	<value: 16r8B84>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_INFO_LOG_LENGTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_LINEAR [

	<enum: #'GL_OBJECT_LINEAR'>
	<value: 16r2401>
	<vendor: #ARB>
	<groups: #(#PathGenMode #TextureGenMode)>
	^ GL_OBJECT_LINEAR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_LINEAR_NV [

	<enum: #'GL_OBJECT_LINEAR_NV'>
	<value: 16r2401>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_OBJECT_LINEAR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_LINE_SGIS [

	<enum: #'GL_OBJECT_LINE_SGIS'>
	<value: 16r81F7>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureGenParameter)>
	^ GL_OBJECT_LINE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_LINK_STATUS_ARB [

	<enum: #'GL_OBJECT_LINK_STATUS_ARB'>
	<value: 16r8B82>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_LINK_STATUS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_PLANE [

	<enum: #'GL_OBJECT_PLANE'>
	<value: 16r2501>
	<vendor: #ARB>
	<groups: #(#TextureGenParameter)>
	^ GL_OBJECT_PLANE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_POINT_SGIS [

	<enum: #'GL_OBJECT_POINT_SGIS'>
	<value: 16r81F5>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureGenParameter)>
	^ GL_OBJECT_POINT_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_SHADER_SOURCE_LENGTH_ARB [

	<enum: #'GL_OBJECT_SHADER_SOURCE_LENGTH_ARB'>
	<value: 16r8B88>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_SUBTYPE_ARB [

	<enum: #'GL_OBJECT_SUBTYPE_ARB'>
	<value: 16r8B4F>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_SUBTYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_TYPE [

	<enum: #'GL_OBJECT_TYPE'>
	<value: 16r9112>
	<vendor: #ARB>
	<groups: #(#SyncParameterName)>
	^ GL_OBJECT_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_TYPE_APPLE [

	<enum: #'GL_OBJECT_TYPE_APPLE'>
	<value: 16r9112>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_OBJECT_TYPE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_TYPE_ARB [

	<enum: #'GL_OBJECT_TYPE_ARB'>
	<value: 16r8B4E>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OBJECT_VALIDATE_STATUS_ARB [

	<enum: #'GL_OBJECT_VALIDATE_STATUS_ARB'>
	<value: 16r8B83>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_OBJECT_VALIDATE_STATUS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OCCLUSION_QUERY_EVENT_MASK_AMD [

	<enum: #'GL_OCCLUSION_QUERY_EVENT_MASK_AMD'>
	<value: 16r874F>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_OCCLUSION_QUERY_EVENT_MASK_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OCCLUSION_TEST_HP [

	<enum: #'GL_OCCLUSION_TEST_HP'>
	<value: 16r8165>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_OCCLUSION_TEST_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OCCLUSION_TEST_RESULT_HP [

	<enum: #'GL_OCCLUSION_TEST_RESULT_HP'>
	<value: 16r8166>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_OCCLUSION_TEST_RESULT_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET [

	<enum: #'GL_OFFSET'>
	<value: 16r92FC>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV [

	<enum: #'GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV'>
	<value: 16r8856>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV [

	<enum: #'GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV'>
	<value: 16r8857>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_HILO_TEXTURE_2D_NV [

	<enum: #'GL_OFFSET_HILO_TEXTURE_2D_NV'>
	<value: 16r8854>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_HILO_TEXTURE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_HILO_TEXTURE_RECTANGLE_NV [

	<enum: #'GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV'>
	<value: 16r8855>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_PROJECTIVE_TEXTURE_2D_NV [

	<enum: #'GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV'>
	<value: 16r8850>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV [

	<enum: #'GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV'>
	<value: 16r8851>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV [

	<enum: #'GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV'>
	<value: 16r8852>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV [

	<enum: #'GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV'>
	<value: 16r8853>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_2D_BIAS_NV [

	<enum: #'GL_OFFSET_TEXTURE_2D_BIAS_NV'>
	<value: 16r86E3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_2D_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_2D_MATRIX_NV [

	<enum: #'GL_OFFSET_TEXTURE_2D_MATRIX_NV'>
	<value: 16r86E1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_2D_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_2D_NV [

	<enum: #'GL_OFFSET_TEXTURE_2D_NV'>
	<value: 16r86E8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_2D_SCALE_NV [

	<enum: #'GL_OFFSET_TEXTURE_2D_SCALE_NV'>
	<value: 16r86E2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_2D_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_BIAS_NV [

	<enum: #'GL_OFFSET_TEXTURE_BIAS_NV'>
	<value: 16r86E3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_MATRIX_NV [

	<enum: #'GL_OFFSET_TEXTURE_MATRIX_NV'>
	<value: 16r86E1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_RECTANGLE_NV [

	<enum: #'GL_OFFSET_TEXTURE_RECTANGLE_NV'>
	<value: 16r864C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_RECTANGLE_SCALE_NV [

	<enum: #'GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV'>
	<value: 16r864D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OFFSET_TEXTURE_SCALE_NV [

	<enum: #'GL_OFFSET_TEXTURE_SCALE_NV'>
	<value: 16r86E2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OFFSET_TEXTURE_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE [

	<enum: #'GL_ONE'>
	<value: 16r1>
	<vendor: #ARB>
	<groups: #(#BlendingFactor #SpecialNumbers #TextureSwizzle)>
	^ GL_ONE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_EXT [

	<enum: #'GL_ONE_EXT'>
	<value: 16r87DE>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_ONE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_CONSTANT_ALPHA [

	<enum: #'GL_ONE_MINUS_CONSTANT_ALPHA'>
	<value: 16r8004>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_ONE_MINUS_CONSTANT_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_CONSTANT_ALPHA_EXT [

	<enum: #'GL_ONE_MINUS_CONSTANT_ALPHA_EXT'>
	<value: 16r8004>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_ONE_MINUS_CONSTANT_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_CONSTANT_COLOR [

	<enum: #'GL_ONE_MINUS_CONSTANT_COLOR'>
	<value: 16r8002>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_ONE_MINUS_CONSTANT_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_CONSTANT_COLOR_EXT [

	<enum: #'GL_ONE_MINUS_CONSTANT_COLOR_EXT'>
	<value: 16r8002>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_ONE_MINUS_CONSTANT_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_DST_ALPHA [

	<enum: #'GL_ONE_MINUS_DST_ALPHA'>
	<value: 16r305>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_ONE_MINUS_DST_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_DST_COLOR [

	<enum: #'GL_ONE_MINUS_DST_COLOR'>
	<value: 16r307>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_ONE_MINUS_DST_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_SRC1_ALPHA [

	<enum: #'GL_ONE_MINUS_SRC1_ALPHA'>
	<value: 16r88FB>
	<vendor: #NV>
	<groups: #(#BlendingFactor)>
	^ GL_ONE_MINUS_SRC1_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_SRC1_ALPHA_EXT [

	<enum: #'GL_ONE_MINUS_SRC1_ALPHA_EXT'>
	<value: 16r88FB>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_ONE_MINUS_SRC1_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_SRC1_COLOR [

	<enum: #'GL_ONE_MINUS_SRC1_COLOR'>
	<value: 16r88FA>
	<vendor: #NV>
	<groups: #(#BlendingFactor)>
	^ GL_ONE_MINUS_SRC1_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_SRC1_COLOR_EXT [

	<enum: #'GL_ONE_MINUS_SRC1_COLOR_EXT'>
	<value: 16r88FA>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_ONE_MINUS_SRC1_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_SRC_ALPHA [

	<enum: #'GL_ONE_MINUS_SRC_ALPHA'>
	<value: 16r303>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_ONE_MINUS_SRC_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ONE_MINUS_SRC_COLOR [

	<enum: #'GL_ONE_MINUS_SRC_COLOR'>
	<value: 16r301>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_ONE_MINUS_SRC_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND0_ALPHA [

	<enum: #'GL_OPERAND0_ALPHA'>
	<value: 16r8598>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND0_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND0_ALPHA_ARB [

	<enum: #'GL_OPERAND0_ALPHA_ARB'>
	<value: 16r8598>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND0_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND0_ALPHA_EXT [

	<enum: #'GL_OPERAND0_ALPHA_EXT'>
	<value: 16r8598>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND0_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND0_RGB [

	<enum: #'GL_OPERAND0_RGB'>
	<value: 16r8590>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND0_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND0_RGB_ARB [

	<enum: #'GL_OPERAND0_RGB_ARB'>
	<value: 16r8590>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND0_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND0_RGB_EXT [

	<enum: #'GL_OPERAND0_RGB_EXT'>
	<value: 16r8590>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND0_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND1_ALPHA [

	<enum: #'GL_OPERAND1_ALPHA'>
	<value: 16r8599>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND1_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND1_ALPHA_ARB [

	<enum: #'GL_OPERAND1_ALPHA_ARB'>
	<value: 16r8599>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND1_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND1_ALPHA_EXT [

	<enum: #'GL_OPERAND1_ALPHA_EXT'>
	<value: 16r8599>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND1_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND1_RGB [

	<enum: #'GL_OPERAND1_RGB'>
	<value: 16r8591>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND1_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND1_RGB_ARB [

	<enum: #'GL_OPERAND1_RGB_ARB'>
	<value: 16r8591>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND1_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND1_RGB_EXT [

	<enum: #'GL_OPERAND1_RGB_EXT'>
	<value: 16r8591>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND1_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND2_ALPHA [

	<enum: #'GL_OPERAND2_ALPHA'>
	<value: 16r859A>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND2_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND2_ALPHA_ARB [

	<enum: #'GL_OPERAND2_ALPHA_ARB'>
	<value: 16r859A>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND2_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND2_ALPHA_EXT [

	<enum: #'GL_OPERAND2_ALPHA_EXT'>
	<value: 16r859A>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND2_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND2_RGB [

	<enum: #'GL_OPERAND2_RGB'>
	<value: 16r8592>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND2_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND2_RGB_ARB [

	<enum: #'GL_OPERAND2_RGB_ARB'>
	<value: 16r8592>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND2_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND2_RGB_EXT [

	<enum: #'GL_OPERAND2_RGB_EXT'>
	<value: 16r8592>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND2_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND3_ALPHA_NV [

	<enum: #'GL_OPERAND3_ALPHA_NV'>
	<value: 16r859B>
	<vendor: #'AMD/NV'>
	<suffix: #NV>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND3_ALPHA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPERAND3_RGB_NV [

	<enum: #'GL_OPERAND3_RGB_NV'>
	<value: 16r8593>
	<vendor: #'AMD/NV'>
	<suffix: #NV>
	<groups: #(#RegisterCombinerPname)>
	^ GL_OPERAND3_RGB_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OPTIMAL_TILING_EXT [

	<enum: #'GL_OPTIMAL_TILING_EXT'>
	<value: 16r9584>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_OPTIMAL_TILING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_ADD_EXT [

	<enum: #'GL_OP_ADD_EXT'>
	<value: 16r8787>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_ADD_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_CLAMP_EXT [

	<enum: #'GL_OP_CLAMP_EXT'>
	<value: 16r878E>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_CLAMP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_CROSS_PRODUCT_EXT [

	<enum: #'GL_OP_CROSS_PRODUCT_EXT'>
	<value: 16r8797>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_CROSS_PRODUCT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_DOT3_EXT [

	<enum: #'GL_OP_DOT3_EXT'>
	<value: 16r8784>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_DOT3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_DOT4_EXT [

	<enum: #'GL_OP_DOT4_EXT'>
	<value: 16r8785>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_DOT4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_EXP_BASE_2_EXT [

	<enum: #'GL_OP_EXP_BASE_2_EXT'>
	<value: 16r8791>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_EXP_BASE_2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_FLOOR_EXT [

	<enum: #'GL_OP_FLOOR_EXT'>
	<value: 16r878F>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_FLOOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_FRAC_EXT [

	<enum: #'GL_OP_FRAC_EXT'>
	<value: 16r8789>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_FRAC_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_INDEX_EXT [

	<enum: #'GL_OP_INDEX_EXT'>
	<value: 16r8782>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_INDEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_LOG_BASE_2_EXT [

	<enum: #'GL_OP_LOG_BASE_2_EXT'>
	<value: 16r8792>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_LOG_BASE_2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_MADD_EXT [

	<enum: #'GL_OP_MADD_EXT'>
	<value: 16r8788>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_MADD_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_MAX_EXT [

	<enum: #'GL_OP_MAX_EXT'>
	<value: 16r878A>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_MAX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_MIN_EXT [

	<enum: #'GL_OP_MIN_EXT'>
	<value: 16r878B>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_MIN_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_MOV_EXT [

	<enum: #'GL_OP_MOV_EXT'>
	<value: 16r8799>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_MOV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_MULTIPLY_MATRIX_EXT [

	<enum: #'GL_OP_MULTIPLY_MATRIX_EXT'>
	<value: 16r8798>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_MULTIPLY_MATRIX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_MUL_EXT [

	<enum: #'GL_OP_MUL_EXT'>
	<value: 16r8786>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_MUL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_NEGATE_EXT [

	<enum: #'GL_OP_NEGATE_EXT'>
	<value: 16r8783>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_NEGATE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_POWER_EXT [

	<enum: #'GL_OP_POWER_EXT'>
	<value: 16r8793>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_POWER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_RECIP_EXT [

	<enum: #'GL_OP_RECIP_EXT'>
	<value: 16r8794>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_RECIP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_RECIP_SQRT_EXT [

	<enum: #'GL_OP_RECIP_SQRT_EXT'>
	<value: 16r8795>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_RECIP_SQRT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_ROUND_EXT [

	<enum: #'GL_OP_ROUND_EXT'>
	<value: 16r8790>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_ROUND_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_SET_GE_EXT [

	<enum: #'GL_OP_SET_GE_EXT'>
	<value: 16r878C>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_SET_GE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_SET_LT_EXT [

	<enum: #'GL_OP_SET_LT_EXT'>
	<value: 16r878D>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_SET_LT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OP_SUB_EXT [

	<enum: #'GL_OP_SUB_EXT'>
	<value: 16r8796>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderOpEXT)>
	^ GL_OP_SUB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OR [

	<enum: #'GL_OR'>
	<value: 16r1507>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_OR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ORDER [

	<enum: #'GL_ORDER'>
	<value: 16rA01>
	<vendor: #ARB>
	<groups: #(#GetMapQuery #MapQuery)>
	^ GL_ORDER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OR_INVERTED [

	<enum: #'GL_OR_INVERTED'>
	<value: 16r150D>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_OR_INVERTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OR_REVERSE [

	<enum: #'GL_OR_REVERSE'>
	<value: 16r150B>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_OR_REVERSE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_COLOR0_EXT [

	<enum: #'GL_OUTPUT_COLOR0_EXT'>
	<value: 16r879B>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_COLOR0_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_COLOR1_EXT [

	<enum: #'GL_OUTPUT_COLOR1_EXT'>
	<value: 16r879C>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_COLOR1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_FOG_EXT [

	<enum: #'GL_OUTPUT_FOG_EXT'>
	<value: 16r87BD>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_FOG_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD0_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD0_EXT'>
	<value: 16r879D>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD0_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD10_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD10_EXT'>
	<value: 16r87A7>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD10_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD11_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD11_EXT'>
	<value: 16r87A8>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD11_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD12_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD12_EXT'>
	<value: 16r87A9>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD13_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD13_EXT'>
	<value: 16r87AA>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD13_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD14_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD14_EXT'>
	<value: 16r87AB>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD14_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD15_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD15_EXT'>
	<value: 16r87AC>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD15_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD16_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD16_EXT'>
	<value: 16r87AD>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD17_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD17_EXT'>
	<value: 16r87AE>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD17_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD18_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD18_EXT'>
	<value: 16r87AF>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD18_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD19_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD19_EXT'>
	<value: 16r87B0>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD19_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD1_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD1_EXT'>
	<value: 16r879E>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD20_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD20_EXT'>
	<value: 16r87B1>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD20_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD21_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD21_EXT'>
	<value: 16r87B2>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD21_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD22_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD22_EXT'>
	<value: 16r87B3>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD22_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD23_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD23_EXT'>
	<value: 16r87B4>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD23_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD24_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD24_EXT'>
	<value: 16r87B5>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD24_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD25_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD25_EXT'>
	<value: 16r87B6>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD25_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD26_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD26_EXT'>
	<value: 16r87B7>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD26_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD27_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD27_EXT'>
	<value: 16r87B8>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD27_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD28_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD28_EXT'>
	<value: 16r87B9>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD28_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD29_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD29_EXT'>
	<value: 16r87BA>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD29_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD2_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD2_EXT'>
	<value: 16r879F>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD30_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD30_EXT'>
	<value: 16r87BB>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD30_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD31_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD31_EXT'>
	<value: 16r87BC>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD31_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD3_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD3_EXT'>
	<value: 16r87A0>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD4_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD4_EXT'>
	<value: 16r87A1>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD5_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD5_EXT'>
	<value: 16r87A2>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD6_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD6_EXT'>
	<value: 16r87A3>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD6_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD7_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD7_EXT'>
	<value: 16r87A4>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD7_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD8_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD8_EXT'>
	<value: 16r87A5>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_TEXTURE_COORD9_EXT [

	<enum: #'GL_OUTPUT_TEXTURE_COORD9_EXT'>
	<value: 16r87A6>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_TEXTURE_COORD9_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUTPUT_VERTEX_EXT [

	<enum: #'GL_OUTPUT_VERTEX_EXT'>
	<value: 16r879A>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_OUTPUT_VERTEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OUT_OF_MEMORY [

	<enum: #'GL_OUT_OF_MEMORY'>
	<value: 16r505>
	<vendor: #ARB>
	<groups: #(#ErrorCode)>
	^ GL_OUT_OF_MEMORY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OVERLAY [

	<enum: #'GL_OVERLAY'>
	<value: 16r9296>
	<vendor: #NV>
	^ GL_OVERLAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OVERLAY_KHR [

	<enum: #'GL_OVERLAY_KHR'>
	<value: 16r9296>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_OVERLAY_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> OVERLAY_NV [

	<enum: #'GL_OVERLAY_NV'>
	<value: 16r9296>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_OVERLAY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_ALIGNMENT [

	<enum: #'GL_PACK_ALIGNMENT'>
	<value: 16rD05>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_ALIGNMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_CMYK_HINT_EXT [

	<enum: #'GL_PACK_CMYK_HINT_EXT'>
	<value: 16r800E>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #HintTarget)>
	^ GL_PACK_CMYK_HINT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_COMPRESSED_BLOCK_DEPTH [

	<enum: #'GL_PACK_COMPRESSED_BLOCK_DEPTH'>
	<value: 16r912D>
	<vendor: #ARB>
	^ GL_PACK_COMPRESSED_BLOCK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_COMPRESSED_BLOCK_HEIGHT [

	<enum: #'GL_PACK_COMPRESSED_BLOCK_HEIGHT'>
	<value: 16r912C>
	<vendor: #ARB>
	^ GL_PACK_COMPRESSED_BLOCK_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_COMPRESSED_BLOCK_SIZE [

	<enum: #'GL_PACK_COMPRESSED_BLOCK_SIZE'>
	<value: 16r912E>
	<vendor: #ARB>
	^ GL_PACK_COMPRESSED_BLOCK_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_COMPRESSED_BLOCK_WIDTH [

	<enum: #'GL_PACK_COMPRESSED_BLOCK_WIDTH'>
	<value: 16r912B>
	<vendor: #ARB>
	^ GL_PACK_COMPRESSED_BLOCK_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_COMPRESSED_SIZE_SGIX [

	<enum: #'GL_PACK_COMPRESSED_SIZE_SGIX'>
	<value: 16r831C>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_PACK_COMPRESSED_SIZE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_IMAGE_DEPTH_SGIS [

	<enum: #'GL_PACK_IMAGE_DEPTH_SGIS'>
	<value: 16r8131>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_IMAGE_DEPTH_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_IMAGE_HEIGHT [

	<enum: #'GL_PACK_IMAGE_HEIGHT'>
	<value: 16r806C>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_IMAGE_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_IMAGE_HEIGHT_EXT [

	<enum: #'GL_PACK_IMAGE_HEIGHT_EXT'>
	<value: 16r806C>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_IMAGE_HEIGHT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_INVERT_MESA [

	<enum: #'GL_PACK_INVERT_MESA'>
	<value: 16r8758>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_PACK_INVERT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_LSB_FIRST [

	<enum: #'GL_PACK_LSB_FIRST'>
	<value: 16rD01>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_LSB_FIRST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_MAX_COMPRESSED_SIZE_SGIX [

	<enum: #'GL_PACK_MAX_COMPRESSED_SIZE_SGIX'>
	<value: 16r831B>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_PACK_MAX_COMPRESSED_SIZE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_RESAMPLE_OML [

	<enum: #'GL_PACK_RESAMPLE_OML'>
	<value: 16r8984>
	<vendor: #OML>
	<suffix: #OML>
	<groups: #(#PixelStoreParameter)>
	^ GL_PACK_RESAMPLE_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_RESAMPLE_SGIX [

	<enum: #'GL_PACK_RESAMPLE_SGIX'>
	<value: 16r842E>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_RESAMPLE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_REVERSE_ROW_ORDER_ANGLE [

	<enum: #'GL_PACK_REVERSE_ROW_ORDER_ANGLE'>
	<value: 16r93A4>
	<vendor: #ANGLE>
	^ GL_PACK_REVERSE_ROW_ORDER_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_ROW_BYTES_APPLE [

	<enum: #'GL_PACK_ROW_BYTES_APPLE'>
	<value: 16r8A15>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_PACK_ROW_BYTES_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_ROW_LENGTH [

	<enum: #'GL_PACK_ROW_LENGTH'>
	<value: 16rD02>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_ROW_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_SKIP_IMAGES [

	<enum: #'GL_PACK_SKIP_IMAGES'>
	<value: 16r806B>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_SKIP_IMAGES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_SKIP_IMAGES_EXT [

	<enum: #'GL_PACK_SKIP_IMAGES_EXT'>
	<value: 16r806B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_SKIP_IMAGES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_SKIP_PIXELS [

	<enum: #'GL_PACK_SKIP_PIXELS'>
	<value: 16rD04>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_SKIP_PIXELS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_SKIP_ROWS [

	<enum: #'GL_PACK_SKIP_ROWS'>
	<value: 16rD03>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_SKIP_ROWS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_SKIP_VOLUMES_SGIS [

	<enum: #'GL_PACK_SKIP_VOLUMES_SGIS'>
	<value: 16r8130>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_SKIP_VOLUMES_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_SUBSAMPLE_RATE_SGIX [

	<enum: #'GL_PACK_SUBSAMPLE_RATE_SGIX'>
	<value: 16r85A0>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_SUBSAMPLE_RATE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PACK_SWAP_BYTES [

	<enum: #'GL_PACK_SWAP_BYTES'>
	<value: 16rD00>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PACK_SWAP_BYTES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE4_R5_G6_B5_OES [

	<enum: #'GL_PALETTE4_R5_G6_B5_OES'>
	<value: 16r8B92>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE4_R5_G6_B5_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE4_RGB5_A1_OES [

	<enum: #'GL_PALETTE4_RGB5_A1_OES'>
	<value: 16r8B94>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE4_RGB5_A1_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE4_RGB8_OES [

	<enum: #'GL_PALETTE4_RGB8_OES'>
	<value: 16r8B90>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE4_RGB8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE4_RGBA4_OES [

	<enum: #'GL_PALETTE4_RGBA4_OES'>
	<value: 16r8B93>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE4_RGBA4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE4_RGBA8_OES [

	<enum: #'GL_PALETTE4_RGBA8_OES'>
	<value: 16r8B91>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE4_RGBA8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE8_R5_G6_B5_OES [

	<enum: #'GL_PALETTE8_R5_G6_B5_OES'>
	<value: 16r8B97>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE8_R5_G6_B5_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE8_RGB5_A1_OES [

	<enum: #'GL_PALETTE8_RGB5_A1_OES'>
	<value: 16r8B99>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE8_RGB5_A1_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE8_RGB8_OES [

	<enum: #'GL_PALETTE8_RGB8_OES'>
	<value: 16r8B95>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE8_RGB8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE8_RGBA4_OES [

	<enum: #'GL_PALETTE8_RGBA4_OES'>
	<value: 16r8B98>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE8_RGBA4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PALETTE8_RGBA8_OES [

	<enum: #'GL_PALETTE8_RGBA8_OES'>
	<value: 16r8B96>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_PALETTE8_RGBA8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PARALLEL_ARRAYS_INTEL [

	<enum: #'GL_PARALLEL_ARRAYS_INTEL'>
	<value: 16r83F4>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PARALLEL_ARRAYS_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PARAMETER_BUFFER [

	<enum: #'GL_PARAMETER_BUFFER'>
	<value: 16r80EE>
	<vendor: #MS>
	<groups: #(#BufferTargetARB)>
	^ GL_PARAMETER_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PARAMETER_BUFFER_ARB [

	<enum: #'GL_PARAMETER_BUFFER_ARB'>
	<value: 16r80EE>
	<vendor: #MS>
	<suffix: #ARB>
	^ GL_PARAMETER_BUFFER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PARAMETER_BUFFER_BINDING [

	<enum: #'GL_PARAMETER_BUFFER_BINDING'>
	<value: 16r80EF>
	<vendor: #MS>
	^ GL_PARAMETER_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PARAMETER_BUFFER_BINDING_ARB [

	<enum: #'GL_PARAMETER_BUFFER_BINDING_ARB'>
	<value: 16r80EF>
	<vendor: #MS>
	<suffix: #ARB>
	^ GL_PARAMETER_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PARTIAL_SUCCESS_NV [

	<enum: #'GL_PARTIAL_SUCCESS_NV'>
	<value: 16r902E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PARTIAL_SUCCESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PASS_THROUGH_NV [

	<enum: #'GL_PASS_THROUGH_NV'>
	<value: 16r86E6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PASS_THROUGH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PASS_THROUGH_TOKEN [

	<enum: #'GL_PASS_THROUGH_TOKEN'>
	<value: 16r700>
	<vendor: #ARB>
	<groups: #(#FeedBackToken)>
	^ GL_PASS_THROUGH_TOKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCHES [

	<enum: #'GL_PATCHES'>
	<value: 16rE>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_PATCHES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCHES_EXT [

	<enum: #'GL_PATCHES_EXT'>
	<value: 16rE>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PrimitiveType)>
	^ GL_PATCHES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCHES_OES [

	<enum: #'GL_PATCHES_OES'>
	<value: 16rE>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_PATCHES_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCH_DEFAULT_INNER_LEVEL [

	<enum: #'GL_PATCH_DEFAULT_INNER_LEVEL'>
	<value: 16r8E73>
	<vendor: #NV>
	<groups: #(#PatchParameterName)>
	^ GL_PATCH_DEFAULT_INNER_LEVEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCH_DEFAULT_INNER_LEVEL_EXT [

	<enum: #'GL_PATCH_DEFAULT_INNER_LEVEL_EXT'>
	<value: 16r8E73>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PATCH_DEFAULT_INNER_LEVEL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCH_DEFAULT_OUTER_LEVEL [

	<enum: #'GL_PATCH_DEFAULT_OUTER_LEVEL'>
	<value: 16r8E74>
	<vendor: #NV>
	<groups: #(#PatchParameterName)>
	^ GL_PATCH_DEFAULT_OUTER_LEVEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCH_DEFAULT_OUTER_LEVEL_EXT [

	<enum: #'GL_PATCH_DEFAULT_OUTER_LEVEL_EXT'>
	<value: 16r8E74>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PATCH_DEFAULT_OUTER_LEVEL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCH_VERTICES [

	<enum: #'GL_PATCH_VERTICES'>
	<value: 16r8E72>
	<vendor: #NV>
	<groups: #(#PatchParameterName)>
	^ GL_PATCH_VERTICES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCH_VERTICES_EXT [

	<enum: #'GL_PATCH_VERTICES_EXT'>
	<value: 16r8E72>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PATCH_VERTICES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATCH_VERTICES_OES [

	<enum: #'GL_PATCH_VERTICES_OES'>
	<value: 16r8E72>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_PATCH_VERTICES_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_CLIENT_LENGTH_NV [

	<enum: #'GL_PATH_CLIENT_LENGTH_NV'>
	<value: 16r907F>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_CLIENT_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_COMMAND_COUNT_NV [

	<enum: #'GL_PATH_COMMAND_COUNT_NV'>
	<value: 16r909D>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_COMMAND_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_COMPUTED_LENGTH_NV [

	<enum: #'GL_PATH_COMPUTED_LENGTH_NV'>
	<value: 16r90A0>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_COMPUTED_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_COORD_COUNT_NV [

	<enum: #'GL_PATH_COORD_COUNT_NV'>
	<value: 16r909E>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_COORD_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_COVER_DEPTH_FUNC_NV [

	<enum: #'GL_PATH_COVER_DEPTH_FUNC_NV'>
	<value: 16r90BF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_COVER_DEPTH_FUNC_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_DASH_ARRAY_COUNT_NV [

	<enum: #'GL_PATH_DASH_ARRAY_COUNT_NV'>
	<value: 16r909F>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_DASH_ARRAY_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_DASH_CAPS_NV [

	<enum: #'GL_PATH_DASH_CAPS_NV'>
	<value: 16r907B>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_DASH_CAPS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_DASH_OFFSET_NV [

	<enum: #'GL_PATH_DASH_OFFSET_NV'>
	<value: 16r907E>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_DASH_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_DASH_OFFSET_RESET_NV [

	<enum: #'GL_PATH_DASH_OFFSET_RESET_NV'>
	<value: 16r90B4>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_DASH_OFFSET_RESET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_END_CAPS_NV [

	<enum: #'GL_PATH_END_CAPS_NV'>
	<value: 16r9076>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_END_CAPS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_ERROR_POSITION_NV [

	<enum: #'GL_PATH_ERROR_POSITION_NV'>
	<value: 16r90AB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_ERROR_POSITION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_FILL_BOUNDING_BOX_NV [

	<enum: #'GL_PATH_FILL_BOUNDING_BOX_NV'>
	<value: 16r90A1>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_FILL_BOUNDING_BOX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_FILL_COVER_MODE_NV [

	<enum: #'GL_PATH_FILL_COVER_MODE_NV'>
	<value: 16r9082>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoverMode #PathParameter)>
	^ GL_PATH_FILL_COVER_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_FILL_MASK_NV [

	<enum: #'GL_PATH_FILL_MASK_NV'>
	<value: 16r9081>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_FILL_MASK_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_FILL_MODE_NV [

	<enum: #'GL_PATH_FILL_MODE_NV'>
	<value: 16r9080>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathFillMode #PathParameter)>
	^ GL_PATH_FILL_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_FOG_GEN_MODE_NV [

	<enum: #'GL_PATH_FOG_GEN_MODE_NV'>
	<value: 16r90AC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_FOG_GEN_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_FORMAT_PS_NV [

	<enum: #'GL_PATH_FORMAT_PS_NV'>
	<value: 16r9071>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathStringFormat)>
	^ GL_PATH_FORMAT_PS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_FORMAT_SVG_NV [

	<enum: #'GL_PATH_FORMAT_SVG_NV'>
	<value: 16r9070>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathStringFormat)>
	^ GL_PATH_FORMAT_SVG_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_GEN_COEFF_NV [

	<enum: #'GL_PATH_GEN_COEFF_NV'>
	<value: 16r90B1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_GEN_COEFF_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_GEN_COLOR_FORMAT_NV [

	<enum: #'GL_PATH_GEN_COLOR_FORMAT_NV'>
	<value: 16r90B2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_GEN_COLOR_FORMAT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_GEN_COMPONENTS_NV [

	<enum: #'GL_PATH_GEN_COMPONENTS_NV'>
	<value: 16r90B3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_GEN_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_GEN_MODE_NV [

	<enum: #'GL_PATH_GEN_MODE_NV'>
	<value: 16r90B0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_GEN_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_INITIAL_DASH_CAP_NV [

	<enum: #'GL_PATH_INITIAL_DASH_CAP_NV'>
	<value: 16r907C>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_INITIAL_DASH_CAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_INITIAL_END_CAP_NV [

	<enum: #'GL_PATH_INITIAL_END_CAP_NV'>
	<value: 16r9077>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_INITIAL_END_CAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_JOIN_STYLE_NV [

	<enum: #'GL_PATH_JOIN_STYLE_NV'>
	<value: 16r9079>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_JOIN_STYLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_MAX_MODELVIEW_STACK_DEPTH_NV [

	<enum: #'GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV'>
	<value: 16rD36>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_MAX_PROJECTION_STACK_DEPTH_NV [

	<enum: #'GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV'>
	<value: 16rD38>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_MITER_LIMIT_NV [

	<enum: #'GL_PATH_MITER_LIMIT_NV'>
	<value: 16r907A>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_MITER_LIMIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_MODELVIEW_MATRIX_NV [

	<enum: #'GL_PATH_MODELVIEW_MATRIX_NV'>
	<value: 16rBA6>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_MODELVIEW_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_MODELVIEW_NV [

	<enum: #'GL_PATH_MODELVIEW_NV'>
	<value: 16r1700>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_MODELVIEW_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_MODELVIEW_STACK_DEPTH_NV [

	<enum: #'GL_PATH_MODELVIEW_STACK_DEPTH_NV'>
	<value: 16rBA3>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_MODELVIEW_STACK_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_OBJECT_BOUNDING_BOX_NV [

	<enum: #'GL_PATH_OBJECT_BOUNDING_BOX_NV'>
	<value: 16r908A>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathGenMode #PathParameter)>
	^ GL_PATH_OBJECT_BOUNDING_BOX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_PROJECTION_MATRIX_NV [

	<enum: #'GL_PATH_PROJECTION_MATRIX_NV'>
	<value: 16rBA7>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_PROJECTION_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_PROJECTION_NV [

	<enum: #'GL_PATH_PROJECTION_NV'>
	<value: 16r1701>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_PROJECTION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_PROJECTION_STACK_DEPTH_NV [

	<enum: #'GL_PATH_PROJECTION_STACK_DEPTH_NV'>
	<value: 16rBA4>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_PROJECTION_STACK_DEPTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV [

	<enum: #'GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV'>
	<value: 16r90BD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STENCIL_DEPTH_OFFSET_UNITS_NV [

	<enum: #'GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV'>
	<value: 16r90BE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STENCIL_FUNC_NV [

	<enum: #'GL_PATH_STENCIL_FUNC_NV'>
	<value: 16r90B7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_STENCIL_FUNC_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STENCIL_REF_NV [

	<enum: #'GL_PATH_STENCIL_REF_NV'>
	<value: 16r90B8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_STENCIL_REF_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STENCIL_VALUE_MASK_NV [

	<enum: #'GL_PATH_STENCIL_VALUE_MASK_NV'>
	<value: 16r90B9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PATH_STENCIL_VALUE_MASK_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STROKE_BOUNDING_BOX_NV [

	<enum: #'GL_PATH_STROKE_BOUNDING_BOX_NV'>
	<value: 16r90A2>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_STROKE_BOUNDING_BOX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STROKE_COVER_MODE_NV [

	<enum: #'GL_PATH_STROKE_COVER_MODE_NV'>
	<value: 16r9083>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_STROKE_COVER_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STROKE_MASK_NV [

	<enum: #'GL_PATH_STROKE_MASK_NV'>
	<value: 16r9084>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_STROKE_MASK_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_STROKE_WIDTH_NV [

	<enum: #'GL_PATH_STROKE_WIDTH_NV'>
	<value: 16r9075>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_STROKE_WIDTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_TERMINAL_DASH_CAP_NV [

	<enum: #'GL_PATH_TERMINAL_DASH_CAP_NV'>
	<value: 16r907D>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_TERMINAL_DASH_CAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_TERMINAL_END_CAP_NV [

	<enum: #'GL_PATH_TERMINAL_END_CAP_NV'>
	<value: 16r9078>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathParameter)>
	^ GL_PATH_TERMINAL_END_CAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_TRANSPOSE_MODELVIEW_MATRIX_NV [

	<enum: #'GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV'>
	<value: 16r84E3>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PATH_TRANSPOSE_PROJECTION_MATRIX_NV [

	<enum: #'GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV'>
	<value: 16r84E4>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERCENTAGE_AMD [

	<enum: #'GL_PERCENTAGE_AMD'>
	<value: 16r8BC3>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_PERCENTAGE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFMON_GLOBAL_MODE_QCOM [

	<enum: #'GL_PERFMON_GLOBAL_MODE_QCOM'>
	<value: 16r8FA0>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_PERFMON_GLOBAL_MODE_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFMON_RESULT_AMD [

	<enum: #'GL_PERFMON_RESULT_AMD'>
	<value: 16r8BC6>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_PERFMON_RESULT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFMON_RESULT_AVAILABLE_AMD [

	<enum: #'GL_PERFMON_RESULT_AVAILABLE_AMD'>
	<value: 16r8BC4>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_PERFMON_RESULT_AVAILABLE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFMON_RESULT_SIZE_AMD [

	<enum: #'GL_PERFMON_RESULT_SIZE_AMD'>
	<value: 16r8BC5>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_PERFMON_RESULT_SIZE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFORMANCE_MONITOR_AMD [

	<enum: #'GL_PERFORMANCE_MONITOR_AMD'>
	<value: 16r9152>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_PERFORMANCE_MONITOR_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_DATA_BOOL32_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL'>
	<value: 16r94FC>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_DATA_DOUBLE_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL'>
	<value: 16r94FB>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_DATA_FLOAT_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL'>
	<value: 16r94FA>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_DATA_UINT32_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL'>
	<value: 16r94F8>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_DATA_UINT64_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL'>
	<value: 16r94F9>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL'>
	<value: 16r94FF>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_DURATION_NORM_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL'>
	<value: 16r94F1>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_DURATION_RAW_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL'>
	<value: 16r94F2>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_EVENT_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_EVENT_INTEL'>
	<value: 16r94F0>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_EVENT_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL'>
	<value: 16r94FE>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_RAW_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_RAW_INTEL'>
	<value: 16r94F4>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_RAW_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_THROUGHPUT_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL'>
	<value: 16r94F3>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_COUNTER_TIMESTAMP_INTEL [

	<enum: #'GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL'>
	<value: 16r94F5>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_DONOT_FLUSH_INTEL [

	<enum: #'GL_PERFQUERY_DONOT_FLUSH_INTEL'>
	<value: 16r83F9>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_DONOT_FLUSH_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_FLUSH_INTEL [

	<enum: #'GL_PERFQUERY_FLUSH_INTEL'>
	<value: 16r83FA>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_FLUSH_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_GLOBAL_CONTEXT_INTEL [

	<enum: #'GL_PERFQUERY_GLOBAL_CONTEXT_INTEL'>
	<value: 2r1>
	<suffix: #INTEL>
	<bitmask>
	<groups: #(#PerformanceQueryCapsMaskINTEL)>
	^ GL_PERFQUERY_GLOBAL_CONTEXT_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL [

	<enum: #'GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL'>
	<value: 16r9500>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL [

	<enum: #'GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL'>
	<value: 16r94FD>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_SINGLE_CONTEXT_INTEL [

	<enum: #'GL_PERFQUERY_SINGLE_CONTEXT_INTEL'>
	<value: 2r0>
	<suffix: #INTEL>
	<bitmask>
	<groups: #(#PerformanceQueryCapsMaskINTEL)>
	^ GL_PERFQUERY_SINGLE_CONTEXT_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERFQUERY_WAIT_INTEL [

	<enum: #'GL_PERFQUERY_WAIT_INTEL'>
	<value: 16r83FB>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_PERFQUERY_WAIT_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERSPECTIVE_CORRECTION_HINT [

	<enum: #'GL_PERSPECTIVE_CORRECTION_HINT'>
	<value: 16rC50>
	<vendor: #ARB>
	<groups: #(#GetPName #HintTarget)>
	^ GL_PERSPECTIVE_CORRECTION_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PERTURB_EXT [

	<enum: #'GL_PERTURB_EXT'>
	<value: 16r85AE>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#TextureNormalModeEXT)>
	^ GL_PERTURB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PER_GPU_STORAGE_BIT_NV [

	<enum: #'GL_PER_GPU_STORAGE_BIT_NV'>
	<value: 2r100000000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#BufferStorageMask)>
	^ GL_PER_GPU_STORAGE_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PER_GPU_STORAGE_NV [

	<enum: #'GL_PER_GPU_STORAGE_NV'>
	<value: 16r9548>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PER_GPU_STORAGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PER_STAGE_CONSTANTS_NV [

	<enum: #'GL_PER_STAGE_CONSTANTS_NV'>
	<value: 16r8535>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PER_STAGE_CONSTANTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PHONG_HINT_WIN [

	<enum: #'GL_PHONG_HINT_WIN'>
	<value: 16r80EB>
	<vendor: #MS>
	<suffix: #WIN>
	<groups: #(#HintTarget)>
	^ GL_PHONG_HINT_WIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PHONG_WIN [

	<enum: #'GL_PHONG_WIN'>
	<value: 16r80EA>
	<vendor: #MS>
	<suffix: #WIN>
	^ GL_PHONG_WIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PINLIGHT_NV [

	<enum: #'GL_PINLIGHT_NV'>
	<value: 16r92A8>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PINLIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXELS_PER_SAMPLE_PATTERN_X_AMD [

	<enum: #'GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD'>
	<value: 16r91AE>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXELS_PER_SAMPLE_PATTERN_Y_AMD [

	<enum: #'GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD'>
	<value: 16r91AF>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_BUFFER_BARRIER_BIT [

	<enum: #'GL_PIXEL_BUFFER_BARRIER_BIT'>
	<value: 2r10000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_PIXEL_BUFFER_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_BUFFER_BARRIER_BIT_EXT [

	<enum: #'GL_PIXEL_BUFFER_BARRIER_BIT_EXT'>
	<value: 2r10000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_PIXEL_BUFFER_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_COUNTER_BITS_NV [

	<enum: #'GL_PIXEL_COUNTER_BITS_NV'>
	<value: 16r8864>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PIXEL_COUNTER_BITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_COUNT_AVAILABLE_NV [

	<enum: #'GL_PIXEL_COUNT_AVAILABLE_NV'>
	<value: 16r8867>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#OcclusionQueryParameterNameNV)>
	^ GL_PIXEL_COUNT_AVAILABLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_COUNT_NV [

	<enum: #'GL_PIXEL_COUNT_NV'>
	<value: 16r8866>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#OcclusionQueryParameterNameNV)>
	^ GL_PIXEL_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_CUBIC_WEIGHT_EXT [

	<enum: #'GL_PIXEL_CUBIC_WEIGHT_EXT'>
	<value: 16r8333>
	<vendor: #SUN>
	<suffix: #EXT>
	<groups: #(#PixelTransformPNameEXT)>
	^ GL_PIXEL_CUBIC_WEIGHT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS [

	<enum: #'GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS'>
	<value: 16r8355>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#PixelTexGenParameterNameSGIS)>
	^ GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_FRAGMENT_RGB_SOURCE_SGIS [

	<enum: #'GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS'>
	<value: 16r8354>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#PixelTexGenParameterNameSGIS)>
	^ GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_GROUP_COLOR_SGIS [

	<enum: #'GL_PIXEL_GROUP_COLOR_SGIS'>
	<value: 16r8356>
	<vendor: #SGI>
	<suffix: #SGIS>
	^ GL_PIXEL_GROUP_COLOR_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAG_FILTER_EXT [

	<enum: #'GL_PIXEL_MAG_FILTER_EXT'>
	<value: 16r8331>
	<vendor: #SUN>
	<suffix: #EXT>
	<groups: #(#PixelTransformPNameEXT)>
	^ GL_PIXEL_MAG_FILTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_A_TO_A [

	<enum: #'GL_PIXEL_MAP_A_TO_A'>
	<value: 16rC79>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_A_TO_A
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_A_TO_A_SIZE [

	<enum: #'GL_PIXEL_MAP_A_TO_A_SIZE'>
	<value: 16rCB9>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_A_TO_A_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_B_TO_B [

	<enum: #'GL_PIXEL_MAP_B_TO_B'>
	<value: 16rC78>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_B_TO_B
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_B_TO_B_SIZE [

	<enum: #'GL_PIXEL_MAP_B_TO_B_SIZE'>
	<value: 16rCB8>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_B_TO_B_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_G_TO_G [

	<enum: #'GL_PIXEL_MAP_G_TO_G'>
	<value: 16rC77>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_G_TO_G
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_G_TO_G_SIZE [

	<enum: #'GL_PIXEL_MAP_G_TO_G_SIZE'>
	<value: 16rCB7>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_G_TO_G_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_A [

	<enum: #'GL_PIXEL_MAP_I_TO_A'>
	<value: 16rC75>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_I_TO_A
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_A_SIZE [

	<enum: #'GL_PIXEL_MAP_I_TO_A_SIZE'>
	<value: 16rCB5>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_I_TO_A_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_B [

	<enum: #'GL_PIXEL_MAP_I_TO_B'>
	<value: 16rC74>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_I_TO_B
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_B_SIZE [

	<enum: #'GL_PIXEL_MAP_I_TO_B_SIZE'>
	<value: 16rCB4>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_I_TO_B_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_G [

	<enum: #'GL_PIXEL_MAP_I_TO_G'>
	<value: 16rC73>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_I_TO_G
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_G_SIZE [

	<enum: #'GL_PIXEL_MAP_I_TO_G_SIZE'>
	<value: 16rCB3>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_I_TO_G_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_I [

	<enum: #'GL_PIXEL_MAP_I_TO_I'>
	<value: 16rC70>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_I_TO_I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_I_SIZE [

	<enum: #'GL_PIXEL_MAP_I_TO_I_SIZE'>
	<value: 16rCB0>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_I_TO_I_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_R [

	<enum: #'GL_PIXEL_MAP_I_TO_R'>
	<value: 16rC72>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_I_TO_R
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_I_TO_R_SIZE [

	<enum: #'GL_PIXEL_MAP_I_TO_R_SIZE'>
	<value: 16rCB2>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_I_TO_R_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_R_TO_R [

	<enum: #'GL_PIXEL_MAP_R_TO_R'>
	<value: 16rC76>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_R_TO_R
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_R_TO_R_SIZE [

	<enum: #'GL_PIXEL_MAP_R_TO_R_SIZE'>
	<value: 16rCB6>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_R_TO_R_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_S_TO_S [

	<enum: #'GL_PIXEL_MAP_S_TO_S'>
	<value: 16rC71>
	<vendor: #ARB>
	<groups: #(#GetPixelMap #PixelMap)>
	^ GL_PIXEL_MAP_S_TO_S
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MAP_S_TO_S_SIZE [

	<enum: #'GL_PIXEL_MAP_S_TO_S_SIZE'>
	<value: 16rCB1>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PIXEL_MAP_S_TO_S_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MIN_FILTER_EXT [

	<enum: #'GL_PIXEL_MIN_FILTER_EXT'>
	<value: 16r8332>
	<vendor: #SUN>
	<suffix: #EXT>
	<groups: #(#PixelTransformPNameEXT)>
	^ GL_PIXEL_MIN_FILTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_MODE_BIT [

	<enum: #'GL_PIXEL_MODE_BIT'>
	<value: 2r100000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_PIXEL_MODE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_PACK_BUFFER [

	<enum: #'GL_PIXEL_PACK_BUFFER'>
	<value: 16r88EB>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_PIXEL_PACK_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_PACK_BUFFER_ARB [

	<enum: #'GL_PIXEL_PACK_BUFFER_ARB'>
	<value: 16r88EB>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PIXEL_PACK_BUFFER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_PACK_BUFFER_BINDING [

	<enum: #'GL_PIXEL_PACK_BUFFER_BINDING'>
	<value: 16r88ED>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_PIXEL_PACK_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_PACK_BUFFER_BINDING_ARB [

	<enum: #'GL_PIXEL_PACK_BUFFER_BINDING_ARB'>
	<value: 16r88ED>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PIXEL_PACK_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_PACK_BUFFER_BINDING_EXT [

	<enum: #'GL_PIXEL_PACK_BUFFER_BINDING_EXT'>
	<value: 16r88ED>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PIXEL_PACK_BUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_PACK_BUFFER_BINDING_NV [

	<enum: #'GL_PIXEL_PACK_BUFFER_BINDING_NV'>
	<value: 16r88ED>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PIXEL_PACK_BUFFER_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_PACK_BUFFER_EXT [

	<enum: #'GL_PIXEL_PACK_BUFFER_EXT'>
	<value: 16r88EB>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PIXEL_PACK_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_PACK_BUFFER_NV [

	<enum: #'GL_PIXEL_PACK_BUFFER_NV'>
	<value: 16r88EB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PIXEL_PACK_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_SUBSAMPLE_2424_SGIX [

	<enum: #'GL_PIXEL_SUBSAMPLE_2424_SGIX'>
	<value: 16r85A3>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelStoreSubsampleRate)>
	^ GL_PIXEL_SUBSAMPLE_2424_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_SUBSAMPLE_4242_SGIX [

	<enum: #'GL_PIXEL_SUBSAMPLE_4242_SGIX'>
	<value: 16r85A4>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelStoreSubsampleRate)>
	^ GL_PIXEL_SUBSAMPLE_4242_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_SUBSAMPLE_4444_SGIX [

	<enum: #'GL_PIXEL_SUBSAMPLE_4444_SGIX'>
	<value: 16r85A2>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelStoreSubsampleRate)>
	^ GL_PIXEL_SUBSAMPLE_4444_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEXTURE_SGIS [

	<enum: #'GL_PIXEL_TEXTURE_SGIS'>
	<value: 16r8353>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#EnableCap #GetPName)>
	^ GL_PIXEL_TEXTURE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_ALPHA_LS_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX'>
	<value: 16r8189>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelTexGenMode #PixelTexGenModeSGIX)>
	^ GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_ALPHA_MS_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX'>
	<value: 16r818A>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelTexGenMode #PixelTexGenModeSGIX)>
	^ GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX'>
	<value: 16r8188>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelTexGenMode)>
	^ GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX'>
	<value: 16r8187>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelTexGenMode)>
	^ GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_MODE_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_MODE_SGIX'>
	<value: 16r832B>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_PIXEL_TEX_GEN_MODE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_Q_CEILING_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_Q_CEILING_SGIX'>
	<value: 16r8184>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelTexGenModeSGIX #TextureMagFilter #TextureMinFilter)>
	^ GL_PIXEL_TEX_GEN_Q_CEILING_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_Q_FLOOR_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX'>
	<value: 16r8186>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelTexGenModeSGIX #TextureMagFilter #TextureMinFilter)>
	^ GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_Q_ROUND_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_Q_ROUND_SGIX'>
	<value: 16r8185>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelTexGenModeSGIX #TextureMagFilter #TextureMinFilter)>
	^ GL_PIXEL_TEX_GEN_Q_ROUND_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TEX_GEN_SGIX [

	<enum: #'GL_PIXEL_TEX_GEN_SGIX'>
	<value: 16r8139>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_PIXEL_TEX_GEN_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TILE_BEST_ALIGNMENT_SGIX [

	<enum: #'GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX'>
	<value: 16r813E>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TILE_CACHE_INCREMENT_SGIX [

	<enum: #'GL_PIXEL_TILE_CACHE_INCREMENT_SGIX'>
	<value: 16r813F>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TILE_CACHE_SIZE_SGIX [

	<enum: #'GL_PIXEL_TILE_CACHE_SIZE_SGIX'>
	<value: 16r8145>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PIXEL_TILE_CACHE_SIZE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TILE_GRID_DEPTH_SGIX [

	<enum: #'GL_PIXEL_TILE_GRID_DEPTH_SGIX'>
	<value: 16r8144>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PIXEL_TILE_GRID_DEPTH_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TILE_GRID_HEIGHT_SGIX [

	<enum: #'GL_PIXEL_TILE_GRID_HEIGHT_SGIX'>
	<value: 16r8143>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PIXEL_TILE_GRID_HEIGHT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TILE_GRID_WIDTH_SGIX [

	<enum: #'GL_PIXEL_TILE_GRID_WIDTH_SGIX'>
	<value: 16r8142>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PIXEL_TILE_GRID_WIDTH_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TILE_HEIGHT_SGIX [

	<enum: #'GL_PIXEL_TILE_HEIGHT_SGIX'>
	<value: 16r8141>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PIXEL_TILE_HEIGHT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TILE_WIDTH_SGIX [

	<enum: #'GL_PIXEL_TILE_WIDTH_SGIX'>
	<value: 16r8140>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_PIXEL_TILE_WIDTH_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TRANSFORM_2D_EXT [

	<enum: #'GL_PIXEL_TRANSFORM_2D_EXT'>
	<value: 16r8330>
	<vendor: #SUN>
	<suffix: #EXT>
	<groups: #(#PixelTransformTargetEXT)>
	^ GL_PIXEL_TRANSFORM_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TRANSFORM_2D_MATRIX_EXT [

	<enum: #'GL_PIXEL_TRANSFORM_2D_MATRIX_EXT'>
	<value: 16r8338>
	<vendor: #SUN>
	<suffix: #EXT>
	^ GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT [

	<enum: #'GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT'>
	<value: 16r8336>
	<vendor: #SUN>
	<suffix: #EXT>
	^ GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_UNPACK_BUFFER [

	<enum: #'GL_PIXEL_UNPACK_BUFFER'>
	<value: 16r88EC>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_PIXEL_UNPACK_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_UNPACK_BUFFER_ARB [

	<enum: #'GL_PIXEL_UNPACK_BUFFER_ARB'>
	<value: 16r88EC>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PIXEL_UNPACK_BUFFER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_UNPACK_BUFFER_BINDING [

	<enum: #'GL_PIXEL_UNPACK_BUFFER_BINDING'>
	<value: 16r88EF>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_PIXEL_UNPACK_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_UNPACK_BUFFER_BINDING_ARB [

	<enum: #'GL_PIXEL_UNPACK_BUFFER_BINDING_ARB'>
	<value: 16r88EF>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_UNPACK_BUFFER_BINDING_EXT [

	<enum: #'GL_PIXEL_UNPACK_BUFFER_BINDING_EXT'>
	<value: 16r88EF>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_UNPACK_BUFFER_BINDING_NV [

	<enum: #'GL_PIXEL_UNPACK_BUFFER_BINDING_NV'>
	<value: 16r88EF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PIXEL_UNPACK_BUFFER_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_UNPACK_BUFFER_EXT [

	<enum: #'GL_PIXEL_UNPACK_BUFFER_EXT'>
	<value: 16r88EC>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PIXEL_UNPACK_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PIXEL_UNPACK_BUFFER_NV [

	<enum: #'GL_PIXEL_UNPACK_BUFFER_NV'>
	<value: 16r88EC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PIXEL_UNPACK_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PLUS_CLAMPED_ALPHA_NV [

	<enum: #'GL_PLUS_CLAMPED_ALPHA_NV'>
	<value: 16r92B2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PLUS_CLAMPED_ALPHA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PLUS_CLAMPED_NV [

	<enum: #'GL_PLUS_CLAMPED_NV'>
	<value: 16r92B1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PLUS_CLAMPED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PLUS_DARKER_NV [

	<enum: #'GL_PLUS_DARKER_NV'>
	<value: 16r9292>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PLUS_DARKER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PLUS_NV [

	<enum: #'GL_PLUS_NV'>
	<value: 16r9291>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PLUS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PN_TRIANGLES_ATI [

	<enum: #'GL_PN_TRIANGLES_ATI'>
	<value: 16r87F0>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_PN_TRIANGLES_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PN_TRIANGLES_NORMAL_MODE_ATI [

	<enum: #'GL_PN_TRIANGLES_NORMAL_MODE_ATI'>
	<value: 16r87F3>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#PNTrianglesPNameATI)>
	^ GL_PN_TRIANGLES_NORMAL_MODE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI [

	<enum: #'GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI'>
	<value: 16r87F7>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI [

	<enum: #'GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI'>
	<value: 16r87F8>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PN_TRIANGLES_POINT_MODE_ATI [

	<enum: #'GL_PN_TRIANGLES_POINT_MODE_ATI'>
	<value: 16r87F2>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#PNTrianglesPNameATI)>
	^ GL_PN_TRIANGLES_POINT_MODE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PN_TRIANGLES_POINT_MODE_CUBIC_ATI [

	<enum: #'GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI'>
	<value: 16r87F6>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PN_TRIANGLES_POINT_MODE_LINEAR_ATI [

	<enum: #'GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI'>
	<value: 16r87F5>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PN_TRIANGLES_TESSELATION_LEVEL_ATI [

	<enum: #'GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI'>
	<value: 16r87F4>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#PNTrianglesPNameATI)>
	^ GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT [

	<enum: #'GL_POINT'>
	<value: 16r1B00>
	<vendor: #ARB>
	<groups: #(#MeshMode1 #MeshMode2 #PolygonMode)>
	^ GL_POINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINTS [

	<enum: #'GL_POINTS'>
	<value: 16r0>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_POINTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_BIT [

	<enum: #'GL_POINT_BIT'>
	<value: 2r10>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_POINT_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_DISTANCE_ATTENUATION [

	<enum: #'GL_POINT_DISTANCE_ATTENUATION'>
	<value: 16r8129>
	<vendor: #SGI>
	<groups: #(#PointParameterNameSGIS)>
	^ GL_POINT_DISTANCE_ATTENUATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_DISTANCE_ATTENUATION_ARB [

	<enum: #'GL_POINT_DISTANCE_ATTENUATION_ARB'>
	<value: 16r8129>
	<vendor: #SGI>
	<suffix: #ARB>
	<groups: #(#PointParameterNameSGIS)>
	^ GL_POINT_DISTANCE_ATTENUATION_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_FADE_THRESHOLD_SIZE [

	<enum: #'GL_POINT_FADE_THRESHOLD_SIZE'>
	<value: 16r8128>
	<vendor: #SGI>
	<groups: #(#GetPName #PointParameterNameARB #PointParameterNameSGIS)>
	^ GL_POINT_FADE_THRESHOLD_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_FADE_THRESHOLD_SIZE_ARB [

	<enum: #'GL_POINT_FADE_THRESHOLD_SIZE_ARB'>
	<value: 16r8128>
	<vendor: #SGI>
	<suffix: #ARB>
	<groups: #(#PointParameterNameSGIS)>
	^ GL_POINT_FADE_THRESHOLD_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_FADE_THRESHOLD_SIZE_EXT [

	<enum: #'GL_POINT_FADE_THRESHOLD_SIZE_EXT'>
	<value: 16r8128>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#PointParameterNameARB #PointParameterNameSGIS)>
	^ GL_POINT_FADE_THRESHOLD_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_FADE_THRESHOLD_SIZE_SGIS [

	<enum: #'GL_POINT_FADE_THRESHOLD_SIZE_SGIS'>
	<value: 16r8128>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #PointParameterNameSGIS)>
	^ GL_POINT_FADE_THRESHOLD_SIZE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_NV [

	<enum: #'GL_POINT_NV'>
	<value: 16r1B00>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_POINT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE [

	<enum: #'GL_POINT_SIZE'>
	<value: 16rB11>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_POINT_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_ARRAY_BUFFER_BINDING_OES [

	<enum: #'GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES'>
	<value: 16r8B9F>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_ARRAY_OES [

	<enum: #'GL_POINT_SIZE_ARRAY_OES'>
	<value: 16r8B9C>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_POINT_SIZE_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_ARRAY_POINTER_OES [

	<enum: #'GL_POINT_SIZE_ARRAY_POINTER_OES'>
	<value: 16r898C>
	<vendor: #OML>
	<suffix: #OES>
	^ GL_POINT_SIZE_ARRAY_POINTER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_ARRAY_STRIDE_OES [

	<enum: #'GL_POINT_SIZE_ARRAY_STRIDE_OES'>
	<value: 16r898B>
	<vendor: #OML>
	<suffix: #OES>
	^ GL_POINT_SIZE_ARRAY_STRIDE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_ARRAY_TYPE_OES [

	<enum: #'GL_POINT_SIZE_ARRAY_TYPE_OES'>
	<value: 16r898A>
	<vendor: #OML>
	<suffix: #OES>
	^ GL_POINT_SIZE_ARRAY_TYPE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_GRANULARITY [

	<enum: #'GL_POINT_SIZE_GRANULARITY'>
	<value: 16rB13>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_POINT_SIZE_GRANULARITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_MAX [

	<enum: #'GL_POINT_SIZE_MAX'>
	<value: 16r8127>
	<vendor: #SGI>
	<groups: #(#PointParameterNameSGIS)>
	^ GL_POINT_SIZE_MAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_MAX_ARB [

	<enum: #'GL_POINT_SIZE_MAX_ARB'>
	<value: 16r8127>
	<vendor: #SGI>
	<suffix: #ARB>
	<groups: #(#PointParameterNameSGIS)>
	^ GL_POINT_SIZE_MAX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_MAX_EXT [

	<enum: #'GL_POINT_SIZE_MAX_EXT'>
	<value: 16r8127>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#PointParameterNameARB #PointParameterNameSGIS)>
	^ GL_POINT_SIZE_MAX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_MAX_SGIS [

	<enum: #'GL_POINT_SIZE_MAX_SGIS'>
	<value: 16r8127>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #PointParameterNameSGIS)>
	^ GL_POINT_SIZE_MAX_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_MIN [

	<enum: #'GL_POINT_SIZE_MIN'>
	<value: 16r8126>
	<vendor: #SGI>
	<groups: #(#PointParameterNameSGIS)>
	^ GL_POINT_SIZE_MIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_MIN_ARB [

	<enum: #'GL_POINT_SIZE_MIN_ARB'>
	<value: 16r8126>
	<vendor: #SGI>
	<suffix: #ARB>
	<groups: #(#PointParameterNameSGIS)>
	^ GL_POINT_SIZE_MIN_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_MIN_EXT [

	<enum: #'GL_POINT_SIZE_MIN_EXT'>
	<value: 16r8126>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#PointParameterNameARB #PointParameterNameSGIS)>
	^ GL_POINT_SIZE_MIN_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_MIN_SGIS [

	<enum: #'GL_POINT_SIZE_MIN_SGIS'>
	<value: 16r8126>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #PointParameterNameSGIS)>
	^ GL_POINT_SIZE_MIN_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SIZE_RANGE [

	<enum: #'GL_POINT_SIZE_RANGE'>
	<value: 16rB12>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_POINT_SIZE_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SMOOTH [

	<enum: #'GL_POINT_SMOOTH'>
	<value: 16rB10>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_POINT_SMOOTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SMOOTH_HINT [

	<enum: #'GL_POINT_SMOOTH_HINT'>
	<value: 16rC51>
	<vendor: #ARB>
	<groups: #(#GetPName #HintTarget)>
	^ GL_POINT_SMOOTH_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SPRITE [

	<enum: #'GL_POINT_SPRITE'>
	<value: 16r8861>
	<vendor: #NV>
	^ GL_POINT_SPRITE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SPRITE_ARB [

	<enum: #'GL_POINT_SPRITE_ARB'>
	<value: 16r8861>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_POINT_SPRITE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SPRITE_COORD_ORIGIN [

	<enum: #'GL_POINT_SPRITE_COORD_ORIGIN'>
	<value: 16r8CA0>
	<vendor: #ARB>
	^ GL_POINT_SPRITE_COORD_ORIGIN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SPRITE_NV [

	<enum: #'GL_POINT_SPRITE_NV'>
	<value: 16r8861>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_POINT_SPRITE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SPRITE_OES [

	<enum: #'GL_POINT_SPRITE_OES'>
	<value: 16r8861>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_POINT_SPRITE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_SPRITE_R_MODE_NV [

	<enum: #'GL_POINT_SPRITE_R_MODE_NV'>
	<value: 16r8863>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_POINT_SPRITE_R_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POINT_TOKEN [

	<enum: #'GL_POINT_TOKEN'>
	<value: 16r701>
	<vendor: #ARB>
	<groups: #(#FeedBackToken)>
	^ GL_POINT_TOKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON [

	<enum: #'GL_POLYGON'>
	<value: 16r9>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_POLYGON
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_BIT [

	<enum: #'GL_POLYGON_BIT'>
	<value: 2r1000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_POLYGON_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_MODE [

	<enum: #'GL_POLYGON_MODE'>
	<value: 16rB40>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_POLYGON_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_MODE_NV [

	<enum: #'GL_POLYGON_MODE_NV'>
	<value: 16rB40>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_POLYGON_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_BIAS_EXT [

	<enum: #'GL_POLYGON_OFFSET_BIAS_EXT'>
	<value: 16r8039>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_POLYGON_OFFSET_BIAS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_CLAMP [

	<enum: #'GL_POLYGON_OFFSET_CLAMP'>
	<value: 16r8E1B>
	<vendor: #NV>
	^ GL_POLYGON_OFFSET_CLAMP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_CLAMP_EXT [

	<enum: #'GL_POLYGON_OFFSET_CLAMP_EXT'>
	<value: 16r8E1B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_POLYGON_OFFSET_CLAMP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_COMMAND_NV [

	<enum: #'GL_POLYGON_OFFSET_COMMAND_NV'>
	<value: 16rE>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_POLYGON_OFFSET_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_EXT [

	<enum: #'GL_POLYGON_OFFSET_EXT'>
	<value: 16r8037>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_POLYGON_OFFSET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_FACTOR [

	<enum: #'GL_POLYGON_OFFSET_FACTOR'>
	<value: 16r8038>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_POLYGON_OFFSET_FACTOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_FACTOR_EXT [

	<enum: #'GL_POLYGON_OFFSET_FACTOR_EXT'>
	<value: 16r8038>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_POLYGON_OFFSET_FACTOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_FILL [

	<enum: #'GL_POLYGON_OFFSET_FILL'>
	<value: 16r8037>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_POLYGON_OFFSET_FILL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_LINE [

	<enum: #'GL_POLYGON_OFFSET_LINE'>
	<value: 16r2A02>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_POLYGON_OFFSET_LINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_LINE_NV [

	<enum: #'GL_POLYGON_OFFSET_LINE_NV'>
	<value: 16r2A02>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_POLYGON_OFFSET_LINE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_POINT [

	<enum: #'GL_POLYGON_OFFSET_POINT'>
	<value: 16r2A01>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_POLYGON_OFFSET_POINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_POINT_NV [

	<enum: #'GL_POLYGON_OFFSET_POINT_NV'>
	<value: 16r2A01>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_POLYGON_OFFSET_POINT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_OFFSET_UNITS [

	<enum: #'GL_POLYGON_OFFSET_UNITS'>
	<value: 16r2A00>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_POLYGON_OFFSET_UNITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_SMOOTH [

	<enum: #'GL_POLYGON_SMOOTH'>
	<value: 16rB41>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_POLYGON_SMOOTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_SMOOTH_HINT [

	<enum: #'GL_POLYGON_SMOOTH_HINT'>
	<value: 16rC53>
	<vendor: #ARB>
	<groups: #(#GetPName #HintTarget)>
	^ GL_POLYGON_SMOOTH_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_STIPPLE [

	<enum: #'GL_POLYGON_STIPPLE'>
	<value: 16rB42>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_POLYGON_STIPPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_STIPPLE_BIT [

	<enum: #'GL_POLYGON_STIPPLE_BIT'>
	<value: 2r10000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_POLYGON_STIPPLE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POLYGON_TOKEN [

	<enum: #'GL_POLYGON_TOKEN'>
	<value: 16r703>
	<vendor: #ARB>
	<groups: #(#FeedBackToken)>
	^ GL_POLYGON_TOKEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POSITION [

	<enum: #'GL_POSITION'>
	<value: 16r1203>
	<vendor: #ARB>
	<groups: #(#FragmentLightParameterSGIX #LightParameter)>
	^ GL_POSITION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_ALPHA_BIAS [

	<enum: #'GL_POST_COLOR_MATRIX_ALPHA_BIAS'>
	<value: 16r80BB>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_ALPHA_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_ALPHA_BIAS_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI'>
	<value: 16r80BB>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_ALPHA_SCALE [

	<enum: #'GL_POST_COLOR_MATRIX_ALPHA_SCALE'>
	<value: 16r80B7>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_ALPHA_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_ALPHA_SCALE_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI'>
	<value: 16r80B7>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_BLUE_BIAS [

	<enum: #'GL_POST_COLOR_MATRIX_BLUE_BIAS'>
	<value: 16r80BA>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_BLUE_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_BLUE_BIAS_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI'>
	<value: 16r80BA>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_BLUE_SCALE [

	<enum: #'GL_POST_COLOR_MATRIX_BLUE_SCALE'>
	<value: 16r80B6>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_BLUE_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_BLUE_SCALE_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI'>
	<value: 16r80B6>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_COLOR_TABLE [

	<enum: #'GL_POST_COLOR_MATRIX_COLOR_TABLE'>
	<value: 16r80D2>
	<vendor: #SGI>
	<groups: #(#ColorTableTarget #ColorTableTargetSGI #EnableCap)>
	^ GL_POST_COLOR_MATRIX_COLOR_TABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_COLOR_TABLE_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI'>
	<value: 16r80D2>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableTargetSGI #EnableCap #GetPName)>
	^ GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_GREEN_BIAS [

	<enum: #'GL_POST_COLOR_MATRIX_GREEN_BIAS'>
	<value: 16r80B9>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_GREEN_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_GREEN_BIAS_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI'>
	<value: 16r80B9>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_GREEN_SCALE [

	<enum: #'GL_POST_COLOR_MATRIX_GREEN_SCALE'>
	<value: 16r80B5>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_GREEN_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_GREEN_SCALE_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI'>
	<value: 16r80B5>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_RED_BIAS [

	<enum: #'GL_POST_COLOR_MATRIX_RED_BIAS'>
	<value: 16r80B8>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_RED_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_RED_BIAS_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_RED_BIAS_SGI'>
	<value: 16r80B8>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_RED_BIAS_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_RED_SCALE [

	<enum: #'GL_POST_COLOR_MATRIX_RED_SCALE'>
	<value: 16r80B4>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_RED_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_COLOR_MATRIX_RED_SCALE_SGI [

	<enum: #'GL_POST_COLOR_MATRIX_RED_SCALE_SGI'>
	<value: 16r80B4>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_COLOR_MATRIX_RED_SCALE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_ALPHA_BIAS [

	<enum: #'GL_POST_CONVOLUTION_ALPHA_BIAS'>
	<value: 16r8023>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_ALPHA_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_ALPHA_BIAS_EXT [

	<enum: #'GL_POST_CONVOLUTION_ALPHA_BIAS_EXT'>
	<value: 16r8023>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_ALPHA_SCALE [

	<enum: #'GL_POST_CONVOLUTION_ALPHA_SCALE'>
	<value: 16r801F>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_ALPHA_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_ALPHA_SCALE_EXT [

	<enum: #'GL_POST_CONVOLUTION_ALPHA_SCALE_EXT'>
	<value: 16r801F>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_BLUE_BIAS [

	<enum: #'GL_POST_CONVOLUTION_BLUE_BIAS'>
	<value: 16r8022>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_BLUE_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_BLUE_BIAS_EXT [

	<enum: #'GL_POST_CONVOLUTION_BLUE_BIAS_EXT'>
	<value: 16r8022>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_BLUE_BIAS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_BLUE_SCALE [

	<enum: #'GL_POST_CONVOLUTION_BLUE_SCALE'>
	<value: 16r801E>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_BLUE_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_BLUE_SCALE_EXT [

	<enum: #'GL_POST_CONVOLUTION_BLUE_SCALE_EXT'>
	<value: 16r801E>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_BLUE_SCALE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_COLOR_TABLE [

	<enum: #'GL_POST_CONVOLUTION_COLOR_TABLE'>
	<value: 16r80D1>
	<vendor: #SGI>
	<groups: #(#ColorTableTarget #ColorTableTargetSGI #EnableCap)>
	^ GL_POST_CONVOLUTION_COLOR_TABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_COLOR_TABLE_SGI [

	<enum: #'GL_POST_CONVOLUTION_COLOR_TABLE_SGI'>
	<value: 16r80D1>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableTargetSGI #EnableCap #GetPName)>
	^ GL_POST_CONVOLUTION_COLOR_TABLE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_GREEN_BIAS [

	<enum: #'GL_POST_CONVOLUTION_GREEN_BIAS'>
	<value: 16r8021>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_GREEN_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_GREEN_BIAS_EXT [

	<enum: #'GL_POST_CONVOLUTION_GREEN_BIAS_EXT'>
	<value: 16r8021>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_GREEN_BIAS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_GREEN_SCALE [

	<enum: #'GL_POST_CONVOLUTION_GREEN_SCALE'>
	<value: 16r801D>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_GREEN_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_GREEN_SCALE_EXT [

	<enum: #'GL_POST_CONVOLUTION_GREEN_SCALE_EXT'>
	<value: 16r801D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_GREEN_SCALE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_RED_BIAS [

	<enum: #'GL_POST_CONVOLUTION_RED_BIAS'>
	<value: 16r8020>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_RED_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_RED_BIAS_EXT [

	<enum: #'GL_POST_CONVOLUTION_RED_BIAS_EXT'>
	<value: 16r8020>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_RED_BIAS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_RED_SCALE [

	<enum: #'GL_POST_CONVOLUTION_RED_SCALE'>
	<value: 16r801C>
	<vendor: #ARB>
	<groups: #(#PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_RED_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_CONVOLUTION_RED_SCALE_EXT [

	<enum: #'GL_POST_CONVOLUTION_RED_SCALE_EXT'>
	<value: 16r801C>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_POST_CONVOLUTION_RED_SCALE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_IMAGE_TRANSFORM_COLOR_TABLE_HP [

	<enum: #'GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP'>
	<value: 16r8162>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_TEXTURE_FILTER_BIAS_RANGE_SGIX [

	<enum: #'GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX'>
	<value: 16r817B>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_TEXTURE_FILTER_BIAS_SGIX [

	<enum: #'GL_POST_TEXTURE_FILTER_BIAS_SGIX'>
	<value: 16r8179>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_POST_TEXTURE_FILTER_BIAS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_TEXTURE_FILTER_SCALE_RANGE_SGIX [

	<enum: #'GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX'>
	<value: 16r817C>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> POST_TEXTURE_FILTER_SCALE_SGIX [

	<enum: #'GL_POST_TEXTURE_FILTER_SCALE_SGIX'>
	<value: 16r817A>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_POST_TEXTURE_FILTER_SCALE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PREFER_DOUBLEBUFFER_HINT_PGI [

	<enum: #'GL_PREFER_DOUBLEBUFFER_HINT_PGI'>
	<value: 16r1A1F8>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_PREFER_DOUBLEBUFFER_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRESENT_DURATION_NV [

	<enum: #'GL_PRESENT_DURATION_NV'>
	<value: 16r8E2B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PRESENT_DURATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRESENT_TIME_NV [

	<enum: #'GL_PRESENT_TIME_NV'>
	<value: 16r8E2A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PRESENT_TIME_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRESERVE_ATI [

	<enum: #'GL_PRESERVE_ATI'>
	<value: 16r8762>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#PreserveModeATI)>
	^ GL_PRESERVE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PREVIOUS [

	<enum: #'GL_PREVIOUS'>
	<value: 16r8578>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_PREVIOUS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PREVIOUS_ARB [

	<enum: #'GL_PREVIOUS_ARB'>
	<value: 16r8578>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_PREVIOUS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PREVIOUS_EXT [

	<enum: #'GL_PREVIOUS_EXT'>
	<value: 16r8578>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_PREVIOUS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PREVIOUS_TEXTURE_INPUT_NV [

	<enum: #'GL_PREVIOUS_TEXTURE_INPUT_NV'>
	<value: 16r86E4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PREVIOUS_TEXTURE_INPUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMARY_COLOR [

	<enum: #'GL_PRIMARY_COLOR'>
	<value: 16r8577>
	<vendor: #'AMD/NV'>
	<groups: #(#PathColor #RegisterCombinerPname)>
	^ GL_PRIMARY_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMARY_COLOR_ARB [

	<enum: #'GL_PRIMARY_COLOR_ARB'>
	<value: 16r8577>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_PRIMARY_COLOR_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMARY_COLOR_EXT [

	<enum: #'GL_PRIMARY_COLOR_EXT'>
	<value: 16r8577>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_PRIMARY_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMARY_COLOR_NV [

	<enum: #'GL_PRIMARY_COLOR_NV'>
	<value: 16r852C>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerRegisterNV #PathColor)>
	^ GL_PRIMARY_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVES_GENERATED [

	<enum: #'GL_PRIMITIVES_GENERATED'>
	<value: 16r8C87>
	<vendor: #NV>
	<groups: #(#QueryTarget)>
	^ GL_PRIMITIVES_GENERATED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVES_GENERATED_EXT [

	<enum: #'GL_PRIMITIVES_GENERATED_EXT'>
	<value: 16r8C87>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PRIMITIVES_GENERATED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVES_GENERATED_NV [

	<enum: #'GL_PRIMITIVES_GENERATED_NV'>
	<value: 16r8C87>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PRIMITIVES_GENERATED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVES_GENERATED_OES [

	<enum: #'GL_PRIMITIVES_GENERATED_OES'>
	<value: 16r8C87>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_PRIMITIVES_GENERATED_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVES_SUBMITTED [

	<enum: #'GL_PRIMITIVES_SUBMITTED'>
	<value: 16r82EF>
	<vendor: #ARB>
	<groups: #(#QueryTarget)>
	^ GL_PRIMITIVES_SUBMITTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVES_SUBMITTED_ARB [

	<enum: #'GL_PRIMITIVES_SUBMITTED_ARB'>
	<value: 16r82EF>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_PRIMITIVES_SUBMITTED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_BOUNDING_BOX [

	<enum: #'GL_PRIMITIVE_BOUNDING_BOX'>
	<value: 16r92BE>
	<vendor: #NV>
	^ GL_PRIMITIVE_BOUNDING_BOX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_BOUNDING_BOX_ARB [

	<enum: #'GL_PRIMITIVE_BOUNDING_BOX_ARB'>
	<value: 16r92BE>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PRIMITIVE_BOUNDING_BOX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_BOUNDING_BOX_EXT [

	<enum: #'GL_PRIMITIVE_BOUNDING_BOX_EXT'>
	<value: 16r92BE>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PRIMITIVE_BOUNDING_BOX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_BOUNDING_BOX_OES [

	<enum: #'GL_PRIMITIVE_BOUNDING_BOX_OES'>
	<value: 16r92BE>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_PRIMITIVE_BOUNDING_BOX_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_ID_NV [

	<enum: #'GL_PRIMITIVE_ID_NV'>
	<value: 16r8C7C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PRIMITIVE_ID_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_RESTART [

	<enum: #'GL_PRIMITIVE_RESTART'>
	<value: 16r8F9D>
	<vendor: #ARB>
	<groups: #(#EnableCap)>
	^ GL_PRIMITIVE_RESTART
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_RESTART_FIXED_INDEX [

	<enum: #'GL_PRIMITIVE_RESTART_FIXED_INDEX'>
	<value: 16r8D69>
	<vendor: #OES>
	<groups: #(#EnableCap)>
	^ GL_PRIMITIVE_RESTART_FIXED_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED [

	<enum: #'GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED'>
	<value: 16r8221>
	<vendor: #ARB>
	^ GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES [

	<enum: #'GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES'>
	<value: 16r8221>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_RESTART_INDEX [

	<enum: #'GL_PRIMITIVE_RESTART_INDEX'>
	<value: 16r8F9E>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PRIMITIVE_RESTART_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_RESTART_INDEX_NV [

	<enum: #'GL_PRIMITIVE_RESTART_INDEX_NV'>
	<value: 16r8559>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PRIMITIVE_RESTART_INDEX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PRIMITIVE_RESTART_NV [

	<enum: #'GL_PRIMITIVE_RESTART_NV'>
	<value: 16r8558>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PRIMITIVE_RESTART_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM [

	<enum: #'GL_PROGRAM'>
	<value: 16r82E2>
	<vendor: #ARB>
	<groups: #(#ObjectIdentifier)>
	^ GL_PROGRAM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAMMABLE_SAMPLE_LOCATION_ARB [

	<enum: #'GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB'>
	<value: 16r9341>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#GetMultisamplePNameNV)>
	^ GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAMMABLE_SAMPLE_LOCATION_NV [

	<enum: #'GL_PROGRAMMABLE_SAMPLE_LOCATION_NV'>
	<value: 16r9341>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAMMABLE_SAMPLE_LOCATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB [

	<enum: #'GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB'>
	<value: 16r9340>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV [

	<enum: #'GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV'>
	<value: 16r9340>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_ADDRESS_REGISTERS_ARB [

	<enum: #'GL_PROGRAM_ADDRESS_REGISTERS_ARB'>
	<value: 16r88B0>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_ADDRESS_REGISTERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_ALU_INSTRUCTIONS_ARB [

	<enum: #'GL_PROGRAM_ALU_INSTRUCTIONS_ARB'>
	<value: 16r8805>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_PROGRAM_ALU_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_ATTRIBS_ARB [

	<enum: #'GL_PROGRAM_ATTRIBS_ARB'>
	<value: 16r88AC>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_ATTRIBS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_ATTRIB_COMPONENTS_NV [

	<enum: #'GL_PROGRAM_ATTRIB_COMPONENTS_NV'>
	<value: 16r8906>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAM_ATTRIB_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_BINARY_ANGLE [

	<enum: #'GL_PROGRAM_BINARY_ANGLE'>
	<value: 16r93A6>
	<vendor: #ANGLE>
	^ GL_PROGRAM_BINARY_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_BINARY_FORMATS [

	<enum: #'GL_PROGRAM_BINARY_FORMATS'>
	<value: 16r87FF>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_PROGRAM_BINARY_FORMATS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_BINARY_FORMATS_OES [

	<enum: #'GL_PROGRAM_BINARY_FORMATS_OES'>
	<value: 16r87FF>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_PROGRAM_BINARY_FORMATS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_BINARY_FORMAT_MESA [

	<enum: #'GL_PROGRAM_BINARY_FORMAT_MESA'>
	<value: 16r875F>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_PROGRAM_BINARY_FORMAT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_BINARY_LENGTH [

	<enum: #'GL_PROGRAM_BINARY_LENGTH'>
	<value: 16r8741>
	<vendor: #AMD>
	<groups: #(#ProgramPropertyARB)>
	^ GL_PROGRAM_BINARY_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_BINARY_LENGTH_OES [

	<enum: #'GL_PROGRAM_BINARY_LENGTH_OES'>
	<value: 16r8741>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_PROGRAM_BINARY_LENGTH_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_BINARY_RETRIEVABLE_HINT [

	<enum: #'GL_PROGRAM_BINARY_RETRIEVABLE_HINT'>
	<value: 16r8257>
	<vendor: #ARB>
	<groups: #(#HintTarget #ProgramParameterPName)>
	^ GL_PROGRAM_BINARY_RETRIEVABLE_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_BINDING_ARB [

	<enum: #'GL_PROGRAM_BINDING_ARB'>
	<value: 16r8677>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_ERROR_POSITION_ARB [

	<enum: #'GL_PROGRAM_ERROR_POSITION_ARB'>
	<value: 16r864B>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_ERROR_POSITION_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_ERROR_POSITION_NV [

	<enum: #'GL_PROGRAM_ERROR_POSITION_NV'>
	<value: 16r864B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAM_ERROR_POSITION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_ERROR_STRING_ARB [

	<enum: #'GL_PROGRAM_ERROR_STRING_ARB'>
	<value: 16r8874>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_ERROR_STRING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_ERROR_STRING_NV [

	<enum: #'GL_PROGRAM_ERROR_STRING_NV'>
	<value: 16r8874>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAM_ERROR_STRING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_FORMAT_ARB [

	<enum: #'GL_PROGRAM_FORMAT_ARB'>
	<value: 16r8876>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_FORMAT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_FORMAT_ASCII_ARB [

	<enum: #'GL_PROGRAM_FORMAT_ASCII_ARB'>
	<value: 16r8875>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#ProgramFormat)>
	^ GL_PROGRAM_FORMAT_ASCII_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_INPUT [

	<enum: #'GL_PROGRAM_INPUT'>
	<value: 16r92E3>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_PROGRAM_INPUT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_INSTRUCTIONS_ARB [

	<enum: #'GL_PROGRAM_INSTRUCTIONS_ARB'>
	<value: 16r88A0>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_KHR [

	<enum: #'GL_PROGRAM_KHR'>
	<value: 16r82E2>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_PROGRAM_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_LENGTH_ARB [

	<enum: #'GL_PROGRAM_LENGTH_ARB'>
	<value: 16r8627>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_LENGTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_LENGTH_NV [

	<enum: #'GL_PROGRAM_LENGTH_NV'>
	<value: 16r8627>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAM_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_MATRIX_EXT [

	<enum: #'GL_PROGRAM_MATRIX_EXT'>
	<value: 16r8E2D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PROGRAM_MATRIX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_MATRIX_STACK_DEPTH_EXT [

	<enum: #'GL_PROGRAM_MATRIX_STACK_DEPTH_EXT'>
	<value: 16r8E2F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB [

	<enum: #'GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB'>
	<value: 16r88B2>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB [

	<enum: #'GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB'>
	<value: 16r8808>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_NATIVE_ATTRIBS_ARB [

	<enum: #'GL_PROGRAM_NATIVE_ATTRIBS_ARB'>
	<value: 16r88AE>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_NATIVE_ATTRIBS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_NATIVE_INSTRUCTIONS_ARB [

	<enum: #'GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB'>
	<value: 16r88A2>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_NATIVE_PARAMETERS_ARB [

	<enum: #'GL_PROGRAM_NATIVE_PARAMETERS_ARB'>
	<value: 16r88AA>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_NATIVE_PARAMETERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_NATIVE_TEMPORARIES_ARB [

	<enum: #'GL_PROGRAM_NATIVE_TEMPORARIES_ARB'>
	<value: 16r88A6>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_NATIVE_TEMPORARIES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB [

	<enum: #'GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB'>
	<value: 16r880A>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB [

	<enum: #'GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB'>
	<value: 16r8809>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_OBJECT_ARB [

	<enum: #'GL_PROGRAM_OBJECT_ARB'>
	<value: 16r8B40>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#ContainerType)>
	^ GL_PROGRAM_OBJECT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_OBJECT_EXT [

	<enum: #'GL_PROGRAM_OBJECT_EXT'>
	<value: 16r8B40>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ContainerType)>
	^ GL_PROGRAM_OBJECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_OUTPUT [

	<enum: #'GL_PROGRAM_OUTPUT'>
	<value: 16r92E4>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_PROGRAM_OUTPUT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_PARAMETERS_ARB [

	<enum: #'GL_PROGRAM_PARAMETERS_ARB'>
	<value: 16r88A8>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_PARAMETERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_PARAMETER_NV [

	<enum: #'GL_PROGRAM_PARAMETER_NV'>
	<value: 16r8644>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#VertexAttribEnumNV)>
	^ GL_PROGRAM_PARAMETER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_PIPELINE [

	<enum: #'GL_PROGRAM_PIPELINE'>
	<value: 16r82E4>
	<vendor: #ARB>
	<groups: #(#ObjectIdentifier)>
	^ GL_PROGRAM_PIPELINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_PIPELINE_BINDING [

	<enum: #'GL_PROGRAM_PIPELINE_BINDING'>
	<value: 16r825A>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PROGRAM_PIPELINE_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_PIPELINE_BINDING_EXT [

	<enum: #'GL_PROGRAM_PIPELINE_BINDING_EXT'>
	<value: 16r825A>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_PROGRAM_PIPELINE_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_PIPELINE_KHR [

	<enum: #'GL_PROGRAM_PIPELINE_KHR'>
	<value: 16r82E4>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_PROGRAM_PIPELINE_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_PIPELINE_OBJECT_EXT [

	<enum: #'GL_PROGRAM_PIPELINE_OBJECT_EXT'>
	<value: 16r8A4F>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_PROGRAM_PIPELINE_OBJECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_POINT_SIZE [

	<enum: #'GL_PROGRAM_POINT_SIZE'>
	<value: 16r8642>
	<vendor: #NV>
	<groups: #(#EnableCap #GetPName)>
	^ GL_PROGRAM_POINT_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_POINT_SIZE_ARB [

	<enum: #'GL_PROGRAM_POINT_SIZE_ARB'>
	<value: 16r8642>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_POINT_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_POINT_SIZE_EXT [

	<enum: #'GL_PROGRAM_POINT_SIZE_EXT'>
	<value: 16r8642>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PROGRAM_POINT_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_RESIDENT_NV [

	<enum: #'GL_PROGRAM_RESIDENT_NV'>
	<value: 16r8647>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAM_RESIDENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_RESULT_COMPONENTS_NV [

	<enum: #'GL_PROGRAM_RESULT_COMPONENTS_NV'>
	<value: 16r8907>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAM_RESULT_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_SEPARABLE [

	<enum: #'GL_PROGRAM_SEPARABLE'>
	<value: 16r8258>
	<vendor: #ARB>
	<groups: #(#ProgramParameterPName)>
	^ GL_PROGRAM_SEPARABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_SEPARABLE_EXT [

	<enum: #'GL_PROGRAM_SEPARABLE_EXT'>
	<value: 16r8258>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_PROGRAM_SEPARABLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_STRING_ARB [

	<enum: #'GL_PROGRAM_STRING_ARB'>
	<value: 16r8628>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#ProgramStringProperty)>
	^ GL_PROGRAM_STRING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_STRING_NV [

	<enum: #'GL_PROGRAM_STRING_NV'>
	<value: 16r8628>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAM_STRING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_TARGET_NV [

	<enum: #'GL_PROGRAM_TARGET_NV'>
	<value: 16r8646>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PROGRAM_TARGET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_TEMPORARIES_ARB [

	<enum: #'GL_PROGRAM_TEMPORARIES_ARB'>
	<value: 16r88A4>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_TEMPORARIES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_TEX_INDIRECTIONS_ARB [

	<enum: #'GL_PROGRAM_TEX_INDIRECTIONS_ARB'>
	<value: 16r8807>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_PROGRAM_TEX_INDIRECTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_TEX_INSTRUCTIONS_ARB [

	<enum: #'GL_PROGRAM_TEX_INSTRUCTIONS_ARB'>
	<value: 16r8806>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_PROGRAM_TEX_INSTRUCTIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROGRAM_UNDER_NATIVE_LIMITS_ARB [

	<enum: #'GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB'>
	<value: 16r88B6>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROJECTION [

	<enum: #'GL_PROJECTION'>
	<value: 16r1701>
	<vendor: #ARB>
	<groups: #(#MatrixMode)>
	^ GL_PROJECTION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROJECTION_MATRIX [

	<enum: #'GL_PROJECTION_MATRIX'>
	<value: 16rBA7>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PROJECTION_MATRIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES [

	<enum: #'GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES'>
	<value: 16r898E>
	<vendor: #OML>
	<suffix: #OES>
	^ GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROJECTION_STACK_DEPTH [

	<enum: #'GL_PROJECTION_STACK_DEPTH'>
	<value: 16rBA4>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_PROJECTION_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROTECTED_MEMORY_OBJECT_EXT [

	<enum: #'GL_PROTECTED_MEMORY_OBJECT_EXT'>
	<value: 16r959B>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#MemoryObjectParameterName)>
	^ GL_PROTECTED_MEMORY_OBJECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROVOKING_VERTEX [

	<enum: #'GL_PROVOKING_VERTEX'>
	<value: 16r8E4F>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_PROVOKING_VERTEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROVOKING_VERTEX_EXT [

	<enum: #'GL_PROVOKING_VERTEX_EXT'>
	<value: 16r8E4F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_PROVOKING_VERTEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_COLOR_TABLE [

	<enum: #'GL_PROXY_COLOR_TABLE'>
	<value: 16r80D3>
	<vendor: #SGI>
	<groups: #(#ColorTableTarget #ColorTableTargetSGI)>
	^ GL_PROXY_COLOR_TABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_COLOR_TABLE_SGI [

	<enum: #'GL_PROXY_COLOR_TABLE_SGI'>
	<value: 16r80D3>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableTargetSGI)>
	^ GL_PROXY_COLOR_TABLE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_HISTOGRAM [

	<enum: #'GL_PROXY_HISTOGRAM'>
	<value: 16r8025>
	<vendor: #ARB>
	<groups: #(#HistogramTarget #HistogramTargetEXT)>
	^ GL_PROXY_HISTOGRAM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_HISTOGRAM_EXT [

	<enum: #'GL_PROXY_HISTOGRAM_EXT'>
	<value: 16r8025>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#HistogramTargetEXT)>
	^ GL_PROXY_HISTOGRAM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_POST_COLOR_MATRIX_COLOR_TABLE [

	<enum: #'GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE'>
	<value: 16r80D5>
	<vendor: #SGI>
	<groups: #(#ColorTableTarget #ColorTableTargetSGI)>
	^ GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI [

	<enum: #'GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI'>
	<value: 16r80D5>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableTargetSGI)>
	^ GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_POST_CONVOLUTION_COLOR_TABLE [

	<enum: #'GL_PROXY_POST_CONVOLUTION_COLOR_TABLE'>
	<value: 16r80D4>
	<vendor: #SGI>
	<groups: #(#ColorTableTarget #ColorTableTargetSGI)>
	^ GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI [

	<enum: #'GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI'>
	<value: 16r80D4>
	<vendor: #SGI>
	<suffix: #SGI>
	<groups: #(#ColorTableTargetSGI)>
	^ GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP [

	<enum: #'GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP'>
	<value: 16r8163>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_1D [

	<enum: #'GL_PROXY_TEXTURE_1D'>
	<value: 16r8063>
	<vendor: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_1D_ARRAY [

	<enum: #'GL_PROXY_TEXTURE_1D_ARRAY'>
	<value: 16r8C19>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_1D_ARRAY_EXT [

	<enum: #'GL_PROXY_TEXTURE_1D_ARRAY_EXT'>
	<value: 16r8C19>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_1D_EXT [

	<enum: #'GL_PROXY_TEXTURE_1D_EXT'>
	<value: 16r8063>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_1D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_1D_STACK_MESAX [

	<enum: #'GL_PROXY_TEXTURE_1D_STACK_MESAX'>
	<value: 16r875B>
	<vendor: #MESA>
	<suffix: #MESAX>
	^ GL_PROXY_TEXTURE_1D_STACK_MESAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_2D [

	<enum: #'GL_PROXY_TEXTURE_2D'>
	<value: 16r8064>
	<vendor: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_2D_ARRAY [

	<enum: #'GL_PROXY_TEXTURE_2D_ARRAY'>
	<value: 16r8C1B>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_2D_ARRAY_EXT [

	<enum: #'GL_PROXY_TEXTURE_2D_ARRAY_EXT'>
	<value: 16r8C1B>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_2D_EXT [

	<enum: #'GL_PROXY_TEXTURE_2D_EXT'>
	<value: 16r8064>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_2D_MULTISAMPLE [

	<enum: #'GL_PROXY_TEXTURE_2D_MULTISAMPLE'>
	<value: 16r9101>
	<vendor: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY'>
	<value: 16r9103>
	<vendor: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_2D_STACK_MESAX [

	<enum: #'GL_PROXY_TEXTURE_2D_STACK_MESAX'>
	<value: 16r875C>
	<vendor: #MESA>
	<suffix: #MESAX>
	^ GL_PROXY_TEXTURE_2D_STACK_MESAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_3D [

	<enum: #'GL_PROXY_TEXTURE_3D'>
	<value: 16r8070>
	<vendor: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_3D_EXT [

	<enum: #'GL_PROXY_TEXTURE_3D_EXT'>
	<value: 16r8070>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_3D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_4D_SGIS [

	<enum: #'GL_PROXY_TEXTURE_4D_SGIS'>
	<value: 16r8135>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_4D_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_COLOR_TABLE_SGI [

	<enum: #'GL_PROXY_TEXTURE_COLOR_TABLE_SGI'>
	<value: 16r80BD>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#ColorTableTargetSGI)>
	^ GL_PROXY_TEXTURE_COLOR_TABLE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_CUBE_MAP [

	<enum: #'GL_PROXY_TEXTURE_CUBE_MAP'>
	<value: 16r851B>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_CUBE_MAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_CUBE_MAP_ARB [

	<enum: #'GL_PROXY_TEXTURE_CUBE_MAP_ARB'>
	<value: 16r851B>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_CUBE_MAP_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_CUBE_MAP_ARRAY [

	<enum: #'GL_PROXY_TEXTURE_CUBE_MAP_ARRAY'>
	<value: 16r900B>
	<vendor: #AMD>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB [

	<enum: #'GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB'>
	<value: 16r900B>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_CUBE_MAP_EXT [

	<enum: #'GL_PROXY_TEXTURE_CUBE_MAP_EXT'>
	<value: 16r851B>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_CUBE_MAP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_RECTANGLE [

	<enum: #'GL_PROXY_TEXTURE_RECTANGLE'>
	<value: 16r84F7>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_RECTANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_RECTANGLE_ARB [

	<enum: #'GL_PROXY_TEXTURE_RECTANGLE_ARB'>
	<value: 16r84F7>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_RECTANGLE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PROXY_TEXTURE_RECTANGLE_NV [

	<enum: #'GL_PROXY_TEXTURE_RECTANGLE_NV'>
	<value: 16r84F7>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#TextureTarget)>
	^ GL_PROXY_TEXTURE_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PURGEABLE_APPLE [

	<enum: #'GL_PURGEABLE_APPLE'>
	<value: 16r8A1D>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_PURGEABLE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> PURGED_CONTEXT_RESET_NV [

	<enum: #'GL_PURGED_CONTEXT_RESET_NV'>
	<value: 16r92BB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_PURGED_CONTEXT_RESET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Q [

	<enum: #'GL_Q'>
	<value: 16r2003>
	<vendor: #ARB>
	<groups: #(#TextureCoordName)>
	^ GL_Q
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUADRATIC_ATTENUATION [

	<enum: #'GL_QUADRATIC_ATTENUATION'>
	<value: 16r1209>
	<vendor: #ARB>
	<groups: #(#FragmentLightParameterSGIX #LightParameter)>
	^ GL_QUADRATIC_ATTENUATION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUADRATIC_CURVE_TO_NV [

	<enum: #'GL_QUADRATIC_CURVE_TO_NV'>
	<value: 16rA>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_QUADRATIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUADS [

	<enum: #'GL_QUADS'>
	<value: 16r7>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_QUADS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUADS_EXT [

	<enum: #'GL_QUADS_EXT'>
	<value: 16r7>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PrimitiveType)>
	^ GL_QUADS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION [

	<enum: #'GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION'>
	<value: 16r8E4C>
	<vendor: #NV>
	^ GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT [

	<enum: #'GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT'>
	<value: 16r8E4C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUADS_OES [

	<enum: #'GL_QUADS_OES'>
	<value: 16r7>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_QUADS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_ALPHA4_SGIS [

	<enum: #'GL_QUAD_ALPHA4_SGIS'>
	<value: 16r811E>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_QUAD_ALPHA4_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_ALPHA8_SGIS [

	<enum: #'GL_QUAD_ALPHA8_SGIS'>
	<value: 16r811F>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_QUAD_ALPHA8_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_INTENSITY4_SGIS [

	<enum: #'GL_QUAD_INTENSITY4_SGIS'>
	<value: 16r8122>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_QUAD_INTENSITY4_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_INTENSITY8_SGIS [

	<enum: #'GL_QUAD_INTENSITY8_SGIS'>
	<value: 16r8123>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_QUAD_INTENSITY8_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_LUMINANCE4_SGIS [

	<enum: #'GL_QUAD_LUMINANCE4_SGIS'>
	<value: 16r8120>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_QUAD_LUMINANCE4_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_LUMINANCE8_SGIS [

	<enum: #'GL_QUAD_LUMINANCE8_SGIS'>
	<value: 16r8121>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#InternalFormat)>
	^ GL_QUAD_LUMINANCE8_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_MESH_SUN [

	<enum: #'GL_QUAD_MESH_SUN'>
	<value: 16r8614>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_QUAD_MESH_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_STRIP [

	<enum: #'GL_QUAD_STRIP'>
	<value: 16r8>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_QUAD_STRIP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUAD_TEXTURE_SELECT_SGIS [

	<enum: #'GL_QUAD_TEXTURE_SELECT_SGIS'>
	<value: 16r8125>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_QUAD_TEXTURE_SELECT_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUARTER_BIT_ATI [

	<enum: #'GL_QUARTER_BIT_ATI'>
	<value: 2r10000>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestModMaskATI)>
	^ GL_QUARTER_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY [

	<enum: #'GL_QUERY'>
	<value: 16r82E3>
	<vendor: #ARB>
	<groups: #(#ObjectIdentifier)>
	^ GL_QUERY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_ALL_EVENT_BITS_AMD [

	<enum: #'GL_QUERY_ALL_EVENT_BITS_AMD'>
	<value: 2r11111111111111111111111111111111>
	<suffix: #AMD>
	<bitmask>
	<groups: #(#OcclusionQueryEventMaskAMD)>
	^ GL_QUERY_ALL_EVENT_BITS_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BUFFER [

	<enum: #'GL_QUERY_BUFFER'>
	<value: 16r9192>
	<vendor: #AMD>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_QUERY_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BUFFER_AMD [

	<enum: #'GL_QUERY_BUFFER_AMD'>
	<value: 16r9192>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_QUERY_BUFFER_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BUFFER_BARRIER_BIT [

	<enum: #'GL_QUERY_BUFFER_BARRIER_BIT'>
	<value: 2r1000000000000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_QUERY_BUFFER_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BUFFER_BINDING [

	<enum: #'GL_QUERY_BUFFER_BINDING'>
	<value: 16r9193>
	<vendor: #AMD>
	^ GL_QUERY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BUFFER_BINDING_AMD [

	<enum: #'GL_QUERY_BUFFER_BINDING_AMD'>
	<value: 16r9193>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_QUERY_BUFFER_BINDING_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BY_REGION_NO_WAIT [

	<enum: #'GL_QUERY_BY_REGION_NO_WAIT'>
	<value: 16r8E16>
	<vendor: #NV>
	<groups: #(#ConditionalRenderMode)>
	^ GL_QUERY_BY_REGION_NO_WAIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BY_REGION_NO_WAIT_INVERTED [

	<enum: #'GL_QUERY_BY_REGION_NO_WAIT_INVERTED'>
	<value: 16r8E1A>
	<vendor: #NV>
	<groups: #(#ConditionalRenderMode)>
	^ GL_QUERY_BY_REGION_NO_WAIT_INVERTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BY_REGION_NO_WAIT_NV [

	<enum: #'GL_QUERY_BY_REGION_NO_WAIT_NV'>
	<value: 16r8E16>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_BY_REGION_NO_WAIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BY_REGION_WAIT [

	<enum: #'GL_QUERY_BY_REGION_WAIT'>
	<value: 16r8E15>
	<vendor: #NV>
	<groups: #(#ConditionalRenderMode)>
	^ GL_QUERY_BY_REGION_WAIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BY_REGION_WAIT_INVERTED [

	<enum: #'GL_QUERY_BY_REGION_WAIT_INVERTED'>
	<value: 16r8E19>
	<vendor: #NV>
	<groups: #(#ConditionalRenderMode)>
	^ GL_QUERY_BY_REGION_WAIT_INVERTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_BY_REGION_WAIT_NV [

	<enum: #'GL_QUERY_BY_REGION_WAIT_NV'>
	<value: 16r8E15>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_BY_REGION_WAIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_COUNTER_BITS [

	<enum: #'GL_QUERY_COUNTER_BITS'>
	<value: 16r8864>
	<vendor: #NV>
	<groups: #(#QueryParameterName)>
	^ GL_QUERY_COUNTER_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_COUNTER_BITS_ARB [

	<enum: #'GL_QUERY_COUNTER_BITS_ARB'>
	<value: 16r8864>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_QUERY_COUNTER_BITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_COUNTER_BITS_EXT [

	<enum: #'GL_QUERY_COUNTER_BITS_EXT'>
	<value: 16r8864>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_QUERY_COUNTER_BITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD [

	<enum: #'GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD'>
	<value: 2r1000>
	<suffix: #AMD>
	<bitmask>
	<groups: #(#OcclusionQueryEventMaskAMD)>
	^ GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_DEPTH_FAIL_EVENT_BIT_AMD [

	<enum: #'GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD'>
	<value: 2r10>
	<suffix: #AMD>
	<bitmask>
	<groups: #(#OcclusionQueryEventMaskAMD)>
	^ GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_DEPTH_PASS_EVENT_BIT_AMD [

	<enum: #'GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD'>
	<value: 2r1>
	<suffix: #AMD>
	<bitmask>
	<groups: #(#OcclusionQueryEventMaskAMD)>
	^ GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_KHR [

	<enum: #'GL_QUERY_KHR'>
	<value: 16r82E3>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_QUERY_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_NO_WAIT [

	<enum: #'GL_QUERY_NO_WAIT'>
	<value: 16r8E14>
	<vendor: #NV>
	<groups: #(#ConditionalRenderMode)>
	^ GL_QUERY_NO_WAIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_NO_WAIT_INVERTED [

	<enum: #'GL_QUERY_NO_WAIT_INVERTED'>
	<value: 16r8E18>
	<vendor: #NV>
	<groups: #(#ConditionalRenderMode)>
	^ GL_QUERY_NO_WAIT_INVERTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_NO_WAIT_NV [

	<enum: #'GL_QUERY_NO_WAIT_NV'>
	<value: 16r8E14>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_NO_WAIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_OBJECT_AMD [

	<enum: #'GL_QUERY_OBJECT_AMD'>
	<value: 16r9153>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_QUERY_OBJECT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_OBJECT_EXT [

	<enum: #'GL_QUERY_OBJECT_EXT'>
	<value: 16r9153>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_QUERY_OBJECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESOURCE_BUFFEROBJECT_NV [

	<enum: #'GL_QUERY_RESOURCE_BUFFEROBJECT_NV'>
	<value: 16r9547>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_RESOURCE_BUFFEROBJECT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESOURCE_MEMTYPE_VIDMEM_NV [

	<enum: #'GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV'>
	<value: 16r9542>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESOURCE_RENDERBUFFER_NV [

	<enum: #'GL_QUERY_RESOURCE_RENDERBUFFER_NV'>
	<value: 16r9546>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_RESOURCE_RENDERBUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESOURCE_SYS_RESERVED_NV [

	<enum: #'GL_QUERY_RESOURCE_SYS_RESERVED_NV'>
	<value: 16r9544>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_RESOURCE_SYS_RESERVED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESOURCE_TEXTURE_NV [

	<enum: #'GL_QUERY_RESOURCE_TEXTURE_NV'>
	<value: 16r9545>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_RESOURCE_TEXTURE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV [

	<enum: #'GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV'>
	<value: 16r9540>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESULT [

	<enum: #'GL_QUERY_RESULT'>
	<value: 16r8866>
	<vendor: #NV>
	<groups: #(#QueryObjectParameterName)>
	^ GL_QUERY_RESULT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESULT_ARB [

	<enum: #'GL_QUERY_RESULT_ARB'>
	<value: 16r8866>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_QUERY_RESULT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESULT_AVAILABLE [

	<enum: #'GL_QUERY_RESULT_AVAILABLE'>
	<value: 16r8867>
	<vendor: #NV>
	<groups: #(#QueryObjectParameterName)>
	^ GL_QUERY_RESULT_AVAILABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESULT_AVAILABLE_ARB [

	<enum: #'GL_QUERY_RESULT_AVAILABLE_ARB'>
	<value: 16r8867>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_QUERY_RESULT_AVAILABLE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESULT_AVAILABLE_EXT [

	<enum: #'GL_QUERY_RESULT_AVAILABLE_EXT'>
	<value: 16r8867>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_QUERY_RESULT_AVAILABLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESULT_EXT [

	<enum: #'GL_QUERY_RESULT_EXT'>
	<value: 16r8866>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_QUERY_RESULT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESULT_NO_WAIT [

	<enum: #'GL_QUERY_RESULT_NO_WAIT'>
	<value: 16r9194>
	<vendor: #AMD>
	<groups: #(#QueryObjectParameterName)>
	^ GL_QUERY_RESULT_NO_WAIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_RESULT_NO_WAIT_AMD [

	<enum: #'GL_QUERY_RESULT_NO_WAIT_AMD'>
	<value: 16r9194>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_QUERY_RESULT_NO_WAIT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_STENCIL_FAIL_EVENT_BIT_AMD [

	<enum: #'GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD'>
	<value: 2r100>
	<suffix: #AMD>
	<bitmask>
	<groups: #(#OcclusionQueryEventMaskAMD)>
	^ GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_TARGET [

	<enum: #'GL_QUERY_TARGET'>
	<value: 16r82EA>
	<vendor: #ARB>
	<groups: #(#QueryObjectParameterName)>
	^ GL_QUERY_TARGET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_WAIT [

	<enum: #'GL_QUERY_WAIT'>
	<value: 16r8E13>
	<vendor: #NV>
	<groups: #(#ConditionalRenderMode)>
	^ GL_QUERY_WAIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_WAIT_INVERTED [

	<enum: #'GL_QUERY_WAIT_INVERTED'>
	<value: 16r8E17>
	<vendor: #NV>
	<groups: #(#ConditionalRenderMode)>
	^ GL_QUERY_WAIT_INVERTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> QUERY_WAIT_NV [

	<enum: #'GL_QUERY_WAIT_NV'>
	<value: 16r8E13>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_QUERY_WAIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R [

	<enum: #'GL_R'>
	<value: 16r2002>
	<vendor: #ARB>
	<groups: #(#TextureCoordName)>
	^ GL_R
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R11F_G11F_B10F [

	<enum: #'GL_R11F_G11F_B10F'>
	<value: 16r8C3A>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R11F_G11F_B10F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R11F_G11F_B10F_APPLE [

	<enum: #'GL_R11F_G11F_B10F_APPLE'>
	<value: 16r8C3A>
	<vendor: #NV>
	<suffix: #APPLE>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R11F_G11F_B10F_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R11F_G11F_B10F_EXT [

	<enum: #'GL_R11F_G11F_B10F_EXT'>
	<value: 16r8C3A>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R11F_G11F_B10F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R16 [

	<enum: #'GL_R16'>
	<value: 16r822A>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R16F [

	<enum: #'GL_R16F'>
	<value: 16r822D>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R16F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R16F_EXT [

	<enum: #'GL_R16F_EXT'>
	<value: 16r822D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R16F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R16I [

	<enum: #'GL_R16I'>
	<value: 16r8233>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R16I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R16UI [

	<enum: #'GL_R16UI'>
	<value: 16r8234>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R16UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R16_EXT [

	<enum: #'GL_R16_EXT'>
	<value: 16r822A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R16_SNORM [

	<enum: #'GL_R16_SNORM'>
	<value: 16r8F98>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R16_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R16_SNORM_EXT [

	<enum: #'GL_R16_SNORM_EXT'>
	<value: 16r8F98>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R16_SNORM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R1UI_C3F_V3F_SUN [

	<enum: #'GL_R1UI_C3F_V3F_SUN'>
	<value: 16r85C6>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_R1UI_C3F_V3F_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R1UI_C4F_N3F_V3F_SUN [

	<enum: #'GL_R1UI_C4F_N3F_V3F_SUN'>
	<value: 16r85C8>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_R1UI_C4F_N3F_V3F_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R1UI_C4UB_V3F_SUN [

	<enum: #'GL_R1UI_C4UB_V3F_SUN'>
	<value: 16r85C5>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_R1UI_C4UB_V3F_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R1UI_N3F_V3F_SUN [

	<enum: #'GL_R1UI_N3F_V3F_SUN'>
	<value: 16r85C7>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_R1UI_N3F_V3F_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R1UI_T2F_C4F_N3F_V3F_SUN [

	<enum: #'GL_R1UI_T2F_C4F_N3F_V3F_SUN'>
	<value: 16r85CB>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_R1UI_T2F_C4F_N3F_V3F_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R1UI_T2F_N3F_V3F_SUN [

	<enum: #'GL_R1UI_T2F_N3F_V3F_SUN'>
	<value: 16r85CA>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_R1UI_T2F_N3F_V3F_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R1UI_T2F_V3F_SUN [

	<enum: #'GL_R1UI_T2F_V3F_SUN'>
	<value: 16r85C9>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_R1UI_T2F_V3F_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R1UI_V3F_SUN [

	<enum: #'GL_R1UI_V3F_SUN'>
	<value: 16r85C4>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_R1UI_V3F_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R32F [

	<enum: #'GL_R32F'>
	<value: 16r822E>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R32F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R32F_EXT [

	<enum: #'GL_R32F_EXT'>
	<value: 16r822E>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R32F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R32I [

	<enum: #'GL_R32I'>
	<value: 16r8235>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R32I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R32UI [

	<enum: #'GL_R32UI'>
	<value: 16r8236>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R32UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R3_G3_B2 [

	<enum: #'GL_R3_G3_B2'>
	<value: 16r2A10>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R3_G3_B2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R8 [

	<enum: #'GL_R8'>
	<value: 16r8229>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R8I [

	<enum: #'GL_R8I'>
	<value: 16r8231>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R8I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R8UI [

	<enum: #'GL_R8UI'>
	<value: 16r8232>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R8UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R8_EXT [

	<enum: #'GL_R8_EXT'>
	<value: 16r8229>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> R8_SNORM [

	<enum: #'GL_R8_SNORM'>
	<value: 16r8F94>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_R8_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RASTERIZER_DISCARD [

	<enum: #'GL_RASTERIZER_DISCARD'>
	<value: 16r8C89>
	<vendor: #NV>
	<groups: #(#EnableCap)>
	^ GL_RASTERIZER_DISCARD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RASTERIZER_DISCARD_EXT [

	<enum: #'GL_RASTERIZER_DISCARD_EXT'>
	<value: 16r8C89>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RASTERIZER_DISCARD_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RASTERIZER_DISCARD_NV [

	<enum: #'GL_RASTERIZER_DISCARD_NV'>
	<value: 16r8C89>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_RASTERIZER_DISCARD_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RASTER_FIXED_SAMPLE_LOCATIONS_EXT [

	<enum: #'GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT'>
	<value: 16r932A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RASTER_MULTISAMPLE_EXT [

	<enum: #'GL_RASTER_MULTISAMPLE_EXT'>
	<value: 16r9327>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RASTER_MULTISAMPLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RASTER_POSITION_UNCLIPPED_IBM [

	<enum: #'GL_RASTER_POSITION_UNCLIPPED_IBM'>
	<value: 16r19262>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_RASTER_POSITION_UNCLIPPED_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RASTER_SAMPLES_EXT [

	<enum: #'GL_RASTER_SAMPLES_EXT'>
	<value: 16r9328>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RASTER_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_BUFFER [

	<enum: #'GL_READ_BUFFER'>
	<value: 16rC02>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_READ_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_BUFFER_EXT [

	<enum: #'GL_READ_BUFFER_EXT'>
	<value: 16rC02>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_READ_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_BUFFER_NV [

	<enum: #'GL_READ_BUFFER_NV'>
	<value: 16rC02>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#GetPName)>
	^ GL_READ_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER [

	<enum: #'GL_READ_FRAMEBUFFER'>
	<value: 16r8CA8>
	<vendor: #ARB>
	<groups: #(#CheckFramebufferStatusTarget #FramebufferTarget)>
	^ GL_READ_FRAMEBUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_ANGLE [

	<enum: #'GL_READ_FRAMEBUFFER_ANGLE'>
	<value: 16r8CA8>
	<vendor: #ARB>
	^ GL_READ_FRAMEBUFFER_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_APPLE [

	<enum: #'GL_READ_FRAMEBUFFER_APPLE'>
	<value: 16r8CA8>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_READ_FRAMEBUFFER_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_BINDING [

	<enum: #'GL_READ_FRAMEBUFFER_BINDING'>
	<value: 16r8CAA>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_READ_FRAMEBUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_BINDING_ANGLE [

	<enum: #'GL_READ_FRAMEBUFFER_BINDING_ANGLE'>
	<value: 16r8CAA>
	<vendor: #ARB>
	^ GL_READ_FRAMEBUFFER_BINDING_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_BINDING_APPLE [

	<enum: #'GL_READ_FRAMEBUFFER_BINDING_APPLE'>
	<value: 16r8CAA>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_READ_FRAMEBUFFER_BINDING_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_BINDING_EXT [

	<enum: #'GL_READ_FRAMEBUFFER_BINDING_EXT'>
	<value: 16r8CAA>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_READ_FRAMEBUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_BINDING_NV [

	<enum: #'GL_READ_FRAMEBUFFER_BINDING_NV'>
	<value: 16r8CAA>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_READ_FRAMEBUFFER_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_EXT [

	<enum: #'GL_READ_FRAMEBUFFER_EXT'>
	<value: 16r8CA8>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_READ_FRAMEBUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_FRAMEBUFFER_NV [

	<enum: #'GL_READ_FRAMEBUFFER_NV'>
	<value: 16r8CA8>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_READ_FRAMEBUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_ONLY [

	<enum: #'GL_READ_ONLY'>
	<value: 16r88B8>
	<vendor: #NV>
	<groups: #(#BufferAccessARB)>
	^ GL_READ_ONLY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_ONLY_ARB [

	<enum: #'GL_READ_ONLY_ARB'>
	<value: 16r88B8>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_READ_ONLY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_PIXELS [

	<enum: #'GL_READ_PIXELS'>
	<value: 16r828C>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_READ_PIXELS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_PIXELS_FORMAT [

	<enum: #'GL_READ_PIXELS_FORMAT'>
	<value: 16r828D>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_READ_PIXELS_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_PIXELS_TYPE [

	<enum: #'GL_READ_PIXELS_TYPE'>
	<value: 16r828E>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_READ_PIXELS_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_PIXEL_DATA_RANGE_LENGTH_NV [

	<enum: #'GL_READ_PIXEL_DATA_RANGE_LENGTH_NV'>
	<value: 16r887B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_PIXEL_DATA_RANGE_NV [

	<enum: #'GL_READ_PIXEL_DATA_RANGE_NV'>
	<value: 16r8879>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PixelDataRangeTargetNV)>
	^ GL_READ_PIXEL_DATA_RANGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_PIXEL_DATA_RANGE_POINTER_NV [

	<enum: #'GL_READ_PIXEL_DATA_RANGE_POINTER_NV'>
	<value: 16r887D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_READ_PIXEL_DATA_RANGE_POINTER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_WRITE [

	<enum: #'GL_READ_WRITE'>
	<value: 16r88BA>
	<vendor: #NV>
	<groups: #(#BufferAccessARB)>
	^ GL_READ_WRITE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> READ_WRITE_ARB [

	<enum: #'GL_READ_WRITE_ARB'>
	<value: 16r88BA>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_READ_WRITE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RECIP_ADD_SIGNED_ALPHA_IMG [

	<enum: #'GL_RECIP_ADD_SIGNED_ALPHA_IMG'>
	<value: 16r8C05>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_RECIP_ADD_SIGNED_ALPHA_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RECLAIM_MEMORY_HINT_PGI [

	<enum: #'GL_RECLAIM_MEMORY_HINT_PGI'>
	<value: 16r1A1FE>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_RECLAIM_MEMORY_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RECT_NV [

	<enum: #'GL_RECT_NV'>
	<value: 16rF6>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RECT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED [

	<enum: #'GL_RED'>
	<value: 16r1903>
	<vendor: #ARB>
	<groups: #(#InternalFormat #PixelFormat #TextureSwizzle)>
	^ GL_RED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REDUCE [

	<enum: #'GL_REDUCE'>
	<value: 16r8016>
	<vendor: #ARB>
	<groups: #(#ConvolutionBorderModeEXT)>
	^ GL_REDUCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REDUCE_EXT [

	<enum: #'GL_REDUCE_EXT'>
	<value: 16r8016>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ConvolutionBorderModeEXT)>
	^ GL_REDUCE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_BIAS [

	<enum: #'GL_RED_BIAS'>
	<value: 16rD15>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_RED_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_BITS [

	<enum: #'GL_RED_BITS'>
	<value: 16rD52>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_RED_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_BIT_ATI [

	<enum: #'GL_RED_BIT_ATI'>
	<value: 2r1>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestMaskATI)>
	^ GL_RED_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_EXT [

	<enum: #'GL_RED_EXT'>
	<value: 16r1903>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #PixelFormat)>
	^ GL_RED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_INTEGER [

	<enum: #'GL_RED_INTEGER'>
	<value: 16r8D94>
	<vendor: #NV>
	<groups: #(#PixelFormat)>
	^ GL_RED_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_INTEGER_EXT [

	<enum: #'GL_RED_INTEGER_EXT'>
	<value: 16r8D94>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RED_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_MAX_CLAMP_INGR [

	<enum: #'GL_RED_MAX_CLAMP_INGR'>
	<value: 16r8564>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_RED_MAX_CLAMP_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_MIN_CLAMP_INGR [

	<enum: #'GL_RED_MIN_CLAMP_INGR'>
	<value: 16r8560>
	<vendor: #ZiiLabs>
	<suffix: #INGR>
	^ GL_RED_MIN_CLAMP_INGR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_NV [

	<enum: #'GL_RED_NV'>
	<value: 16r1903>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_RED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_SCALE [

	<enum: #'GL_RED_SCALE'>
	<value: 16rD14>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelTransferParameter)>
	^ GL_RED_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RED_SNORM [

	<enum: #'GL_RED_SNORM'>
	<value: 16r8F90>
	<vendor: #ARB>
	^ GL_RED_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_COMPUTE_SHADER [

	<enum: #'GL_REFERENCED_BY_COMPUTE_SHADER'>
	<value: 16r930B>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_REFERENCED_BY_COMPUTE_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_FRAGMENT_SHADER [

	<enum: #'GL_REFERENCED_BY_FRAGMENT_SHADER'>
	<value: 16r930A>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_REFERENCED_BY_FRAGMENT_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_GEOMETRY_SHADER [

	<enum: #'GL_REFERENCED_BY_GEOMETRY_SHADER'>
	<value: 16r9309>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_REFERENCED_BY_GEOMETRY_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_GEOMETRY_SHADER_EXT [

	<enum: #'GL_REFERENCED_BY_GEOMETRY_SHADER_EXT'>
	<value: 16r9309>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_REFERENCED_BY_GEOMETRY_SHADER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_GEOMETRY_SHADER_OES [

	<enum: #'GL_REFERENCED_BY_GEOMETRY_SHADER_OES'>
	<value: 16r9309>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_REFERENCED_BY_GEOMETRY_SHADER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_MESH_SHADER_NV [

	<enum: #'GL_REFERENCED_BY_MESH_SHADER_NV'>
	<value: 16r95A0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_REFERENCED_BY_MESH_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_TASK_SHADER_NV [

	<enum: #'GL_REFERENCED_BY_TASK_SHADER_NV'>
	<value: 16r95A1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_REFERENCED_BY_TASK_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_TESS_CONTROL_SHADER [

	<enum: #'GL_REFERENCED_BY_TESS_CONTROL_SHADER'>
	<value: 16r9307>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_REFERENCED_BY_TESS_CONTROL_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_TESS_CONTROL_SHADER_EXT [

	<enum: #'GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT'>
	<value: 16r9307>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_TESS_CONTROL_SHADER_OES [

	<enum: #'GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES'>
	<value: 16r9307>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_TESS_EVALUATION_SHADER [

	<enum: #'GL_REFERENCED_BY_TESS_EVALUATION_SHADER'>
	<value: 16r9308>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_REFERENCED_BY_TESS_EVALUATION_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_TESS_EVALUATION_SHADER_EXT [

	<enum: #'GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT'>
	<value: 16r9308>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_TESS_EVALUATION_SHADER_OES [

	<enum: #'GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES'>
	<value: 16r9308>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCED_BY_VERTEX_SHADER [

	<enum: #'GL_REFERENCED_BY_VERTEX_SHADER'>
	<value: 16r9306>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_REFERENCED_BY_VERTEX_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCE_PLANE_EQUATION_SGIX [

	<enum: #'GL_REFERENCE_PLANE_EQUATION_SGIX'>
	<value: 16r817E>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_REFERENCE_PLANE_EQUATION_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFERENCE_PLANE_SGIX [

	<enum: #'GL_REFERENCE_PLANE_SGIX'>
	<value: 16r817D>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_REFERENCE_PLANE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFLECTION_MAP [

	<enum: #'GL_REFLECTION_MAP'>
	<value: 16r8512>
	<vendor: #NV>
	^ GL_REFLECTION_MAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFLECTION_MAP_ARB [

	<enum: #'GL_REFLECTION_MAP_ARB'>
	<value: 16r8512>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_REFLECTION_MAP_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFLECTION_MAP_EXT [

	<enum: #'GL_REFLECTION_MAP_EXT'>
	<value: 16r8512>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_REFLECTION_MAP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFLECTION_MAP_NV [

	<enum: #'GL_REFLECTION_MAP_NV'>
	<value: 16r8512>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_REFLECTION_MAP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REFLECTION_MAP_OES [

	<enum: #'GL_REFLECTION_MAP_OES'>
	<value: 16r8512>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_REFLECTION_MAP_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REGISTER_COMBINERS_NV [

	<enum: #'GL_REGISTER_COMBINERS_NV'>
	<value: 16r8522>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_REGISTER_COMBINERS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_0_ATI [

	<enum: #'GL_REG_0_ATI'>
	<value: 16r8921>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_0_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_10_ATI [

	<enum: #'GL_REG_10_ATI'>
	<value: 16r892B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_10_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_11_ATI [

	<enum: #'GL_REG_11_ATI'>
	<value: 16r892C>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_11_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_12_ATI [

	<enum: #'GL_REG_12_ATI'>
	<value: 16r892D>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_12_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_13_ATI [

	<enum: #'GL_REG_13_ATI'>
	<value: 16r892E>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_13_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_14_ATI [

	<enum: #'GL_REG_14_ATI'>
	<value: 16r892F>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_14_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_15_ATI [

	<enum: #'GL_REG_15_ATI'>
	<value: 16r8930>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_15_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_16_ATI [

	<enum: #'GL_REG_16_ATI'>
	<value: 16r8931>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_16_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_17_ATI [

	<enum: #'GL_REG_17_ATI'>
	<value: 16r8932>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_17_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_18_ATI [

	<enum: #'GL_REG_18_ATI'>
	<value: 16r8933>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_18_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_19_ATI [

	<enum: #'GL_REG_19_ATI'>
	<value: 16r8934>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_19_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_1_ATI [

	<enum: #'GL_REG_1_ATI'>
	<value: 16r8922>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_1_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_20_ATI [

	<enum: #'GL_REG_20_ATI'>
	<value: 16r8935>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_20_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_21_ATI [

	<enum: #'GL_REG_21_ATI'>
	<value: 16r8936>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_21_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_22_ATI [

	<enum: #'GL_REG_22_ATI'>
	<value: 16r8937>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_22_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_23_ATI [

	<enum: #'GL_REG_23_ATI'>
	<value: 16r8938>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_23_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_24_ATI [

	<enum: #'GL_REG_24_ATI'>
	<value: 16r8939>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_24_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_25_ATI [

	<enum: #'GL_REG_25_ATI'>
	<value: 16r893A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_25_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_26_ATI [

	<enum: #'GL_REG_26_ATI'>
	<value: 16r893B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_26_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_27_ATI [

	<enum: #'GL_REG_27_ATI'>
	<value: 16r893C>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_27_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_28_ATI [

	<enum: #'GL_REG_28_ATI'>
	<value: 16r893D>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_28_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_29_ATI [

	<enum: #'GL_REG_29_ATI'>
	<value: 16r893E>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_29_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_2_ATI [

	<enum: #'GL_REG_2_ATI'>
	<value: 16r8923>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_2_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_30_ATI [

	<enum: #'GL_REG_30_ATI'>
	<value: 16r893F>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_30_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_31_ATI [

	<enum: #'GL_REG_31_ATI'>
	<value: 16r8940>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_31_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_3_ATI [

	<enum: #'GL_REG_3_ATI'>
	<value: 16r8924>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_3_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_4_ATI [

	<enum: #'GL_REG_4_ATI'>
	<value: 16r8925>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_4_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_5_ATI [

	<enum: #'GL_REG_5_ATI'>
	<value: 16r8926>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_5_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_6_ATI [

	<enum: #'GL_REG_6_ATI'>
	<value: 16r8927>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_6_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_7_ATI [

	<enum: #'GL_REG_7_ATI'>
	<value: 16r8928>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_7_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_8_ATI [

	<enum: #'GL_REG_8_ATI'>
	<value: 16r8929>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_8_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REG_9_ATI [

	<enum: #'GL_REG_9_ATI'>
	<value: 16r892A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_REG_9_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_ARC_TO_NV [

	<enum: #'GL_RELATIVE_ARC_TO_NV'>
	<value: 16rFF>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_CONIC_CURVE_TO_NV [

	<enum: #'GL_RELATIVE_CONIC_CURVE_TO_NV'>
	<value: 16r1B>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_CONIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_CUBIC_CURVE_TO_NV [

	<enum: #'GL_RELATIVE_CUBIC_CURVE_TO_NV'>
	<value: 16rD>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_CUBIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_HORIZONTAL_LINE_TO_NV [

	<enum: #'GL_RELATIVE_HORIZONTAL_LINE_TO_NV'>
	<value: 16r7>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_HORIZONTAL_LINE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_LARGE_CCW_ARC_TO_NV [

	<enum: #'GL_RELATIVE_LARGE_CCW_ARC_TO_NV'>
	<value: 16r17>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_LARGE_CCW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_LARGE_CW_ARC_TO_NV [

	<enum: #'GL_RELATIVE_LARGE_CW_ARC_TO_NV'>
	<value: 16r19>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_LARGE_CW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_LINE_TO_NV [

	<enum: #'GL_RELATIVE_LINE_TO_NV'>
	<value: 16r5>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_LINE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_MOVE_TO_NV [

	<enum: #'GL_RELATIVE_MOVE_TO_NV'>
	<value: 16r3>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_MOVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_QUADRATIC_CURVE_TO_NV [

	<enum: #'GL_RELATIVE_QUADRATIC_CURVE_TO_NV'>
	<value: 16rB>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_QUADRATIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_RECT_NV [

	<enum: #'GL_RELATIVE_RECT_NV'>
	<value: 16rF7>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_RECT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_ROUNDED_RECT2_NV [

	<enum: #'GL_RELATIVE_ROUNDED_RECT2_NV'>
	<value: 16rEB>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_ROUNDED_RECT2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_ROUNDED_RECT4_NV [

	<enum: #'GL_RELATIVE_ROUNDED_RECT4_NV'>
	<value: 16rED>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_ROUNDED_RECT4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_ROUNDED_RECT8_NV [

	<enum: #'GL_RELATIVE_ROUNDED_RECT8_NV'>
	<value: 16rEF>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_ROUNDED_RECT8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_ROUNDED_RECT_NV [

	<enum: #'GL_RELATIVE_ROUNDED_RECT_NV'>
	<value: 16rE9>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_ROUNDED_RECT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_SMALL_CCW_ARC_TO_NV [

	<enum: #'GL_RELATIVE_SMALL_CCW_ARC_TO_NV'>
	<value: 16r13>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_SMALL_CCW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_SMALL_CW_ARC_TO_NV [

	<enum: #'GL_RELATIVE_SMALL_CW_ARC_TO_NV'>
	<value: 16r15>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_SMALL_CW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV [

	<enum: #'GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV'>
	<value: 16r11>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV [

	<enum: #'GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV'>
	<value: 16rF>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELATIVE_VERTICAL_LINE_TO_NV [

	<enum: #'GL_RELATIVE_VERTICAL_LINE_TO_NV'>
	<value: 16r9>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RELATIVE_VERTICAL_LINE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RELEASED_APPLE [

	<enum: #'GL_RELEASED_APPLE'>
	<value: 16r8A19>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_RELEASED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDER [

	<enum: #'GL_RENDER'>
	<value: 16r1C00>
	<vendor: #ARB>
	<groups: #(#RenderingMode)>
	^ GL_RENDER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER [

	<enum: #'GL_RENDERBUFFER'>
	<value: 16r8D41>
	<vendor: #ARB>
	<groups: #(#CopyImageSubDataTarget #ObjectIdentifier #RenderbufferTarget)>
	^ GL_RENDERBUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_ALPHA_SIZE [

	<enum: #'GL_RENDERBUFFER_ALPHA_SIZE'>
	<value: 16r8D53>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_ALPHA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_ALPHA_SIZE_EXT [

	<enum: #'GL_RENDERBUFFER_ALPHA_SIZE_EXT'>
	<value: 16r8D53>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_ALPHA_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_ALPHA_SIZE_OES [

	<enum: #'GL_RENDERBUFFER_ALPHA_SIZE_OES'>
	<value: 16r8D53>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_ALPHA_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_BINDING [

	<enum: #'GL_RENDERBUFFER_BINDING'>
	<value: 16r8CA7>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_RENDERBUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_BINDING_ANGLE [

	<enum: #'GL_RENDERBUFFER_BINDING_ANGLE'>
	<value: 16r8CA7>
	<vendor: #ARB>
	^ GL_RENDERBUFFER_BINDING_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_BINDING_EXT [

	<enum: #'GL_RENDERBUFFER_BINDING_EXT'>
	<value: 16r8CA7>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_RENDERBUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_BINDING_OES [

	<enum: #'GL_RENDERBUFFER_BINDING_OES'>
	<value: 16r8CA7>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_RENDERBUFFER_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_BLUE_SIZE [

	<enum: #'GL_RENDERBUFFER_BLUE_SIZE'>
	<value: 16r8D52>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_BLUE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_BLUE_SIZE_EXT [

	<enum: #'GL_RENDERBUFFER_BLUE_SIZE_EXT'>
	<value: 16r8D52>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_BLUE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_BLUE_SIZE_OES [

	<enum: #'GL_RENDERBUFFER_BLUE_SIZE_OES'>
	<value: 16r8D52>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_BLUE_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_COLOR_SAMPLES_NV [

	<enum: #'GL_RENDERBUFFER_COLOR_SAMPLES_NV'>
	<value: 16r8E10>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_COLOR_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_COVERAGE_SAMPLES_NV [

	<enum: #'GL_RENDERBUFFER_COVERAGE_SAMPLES_NV'>
	<value: 16r8CAB>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_DEPTH_SIZE [

	<enum: #'GL_RENDERBUFFER_DEPTH_SIZE'>
	<value: 16r8D54>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_DEPTH_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_DEPTH_SIZE_EXT [

	<enum: #'GL_RENDERBUFFER_DEPTH_SIZE_EXT'>
	<value: 16r8D54>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_DEPTH_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_DEPTH_SIZE_OES [

	<enum: #'GL_RENDERBUFFER_DEPTH_SIZE_OES'>
	<value: 16r8D54>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_DEPTH_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_EXT [

	<enum: #'GL_RENDERBUFFER_EXT'>
	<value: 16r8D41>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_RENDERBUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_FREE_MEMORY_ATI [

	<enum: #'GL_RENDERBUFFER_FREE_MEMORY_ATI'>
	<value: 16r87FD>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_RENDERBUFFER_FREE_MEMORY_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_GREEN_SIZE [

	<enum: #'GL_RENDERBUFFER_GREEN_SIZE'>
	<value: 16r8D51>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_GREEN_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_GREEN_SIZE_EXT [

	<enum: #'GL_RENDERBUFFER_GREEN_SIZE_EXT'>
	<value: 16r8D51>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_GREEN_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_GREEN_SIZE_OES [

	<enum: #'GL_RENDERBUFFER_GREEN_SIZE_OES'>
	<value: 16r8D51>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_GREEN_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_HEIGHT [

	<enum: #'GL_RENDERBUFFER_HEIGHT'>
	<value: 16r8D43>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_HEIGHT_EXT [

	<enum: #'GL_RENDERBUFFER_HEIGHT_EXT'>
	<value: 16r8D43>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_HEIGHT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_HEIGHT_OES [

	<enum: #'GL_RENDERBUFFER_HEIGHT_OES'>
	<value: 16r8D43>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_HEIGHT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_INTERNAL_FORMAT [

	<enum: #'GL_RENDERBUFFER_INTERNAL_FORMAT'>
	<value: 16r8D44>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_INTERNAL_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_INTERNAL_FORMAT_EXT [

	<enum: #'GL_RENDERBUFFER_INTERNAL_FORMAT_EXT'>
	<value: 16r8D44>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_INTERNAL_FORMAT_OES [

	<enum: #'GL_RENDERBUFFER_INTERNAL_FORMAT_OES'>
	<value: 16r8D44>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_INTERNAL_FORMAT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_OES [

	<enum: #'GL_RENDERBUFFER_OES'>
	<value: 16r8D41>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferTarget)>
	^ GL_RENDERBUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_RED_SIZE [

	<enum: #'GL_RENDERBUFFER_RED_SIZE'>
	<value: 16r8D50>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_RED_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_RED_SIZE_EXT [

	<enum: #'GL_RENDERBUFFER_RED_SIZE_EXT'>
	<value: 16r8D50>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_RED_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_RED_SIZE_OES [

	<enum: #'GL_RENDERBUFFER_RED_SIZE_OES'>
	<value: 16r8D50>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_RED_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_SAMPLES [

	<enum: #'GL_RENDERBUFFER_SAMPLES'>
	<value: 16r8CAB>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_SAMPLES_ANGLE [

	<enum: #'GL_RENDERBUFFER_SAMPLES_ANGLE'>
	<value: 16r8CAB>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_SAMPLES_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_SAMPLES_APPLE [

	<enum: #'GL_RENDERBUFFER_SAMPLES_APPLE'>
	<value: 16r8CAB>
	<vendor: #ARB>
	<suffix: #APPLE>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_SAMPLES_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_SAMPLES_EXT [

	<enum: #'GL_RENDERBUFFER_SAMPLES_EXT'>
	<value: 16r8CAB>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_SAMPLES_IMG [

	<enum: #'GL_RENDERBUFFER_SAMPLES_IMG'>
	<value: 16r9133>
	<vendor: #IMG>
	<suffix: #IMG>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_SAMPLES_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_SAMPLES_NV [

	<enum: #'GL_RENDERBUFFER_SAMPLES_NV'>
	<value: 16r8CAB>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_STENCIL_SIZE [

	<enum: #'GL_RENDERBUFFER_STENCIL_SIZE'>
	<value: 16r8D55>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_STENCIL_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_STENCIL_SIZE_EXT [

	<enum: #'GL_RENDERBUFFER_STENCIL_SIZE_EXT'>
	<value: 16r8D55>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_STENCIL_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_STENCIL_SIZE_OES [

	<enum: #'GL_RENDERBUFFER_STENCIL_SIZE_OES'>
	<value: 16r8D55>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_STENCIL_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_STORAGE_SAMPLES_AMD [

	<enum: #'GL_RENDERBUFFER_STORAGE_SAMPLES_AMD'>
	<value: 16r91B2>
	<vendor: #AMD>
	<suffix: #AMD>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_STORAGE_SAMPLES_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_WIDTH [

	<enum: #'GL_RENDERBUFFER_WIDTH'>
	<value: 16r8D42>
	<vendor: #ARB>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_WIDTH_EXT [

	<enum: #'GL_RENDERBUFFER_WIDTH_EXT'>
	<value: 16r8D42>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_WIDTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERBUFFER_WIDTH_OES [

	<enum: #'GL_RENDERBUFFER_WIDTH_OES'>
	<value: 16r8D42>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#RenderbufferParameterName)>
	^ GL_RENDERBUFFER_WIDTH_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDERER [

	<enum: #'GL_RENDERER'>
	<value: 16r1F01>
	<vendor: #ARB>
	<groups: #(#StringName)>
	^ GL_RENDERER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDER_DIRECT_TO_FRAMEBUFFER_QCOM [

	<enum: #'GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM'>
	<value: 16r8FB3>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDER_GPU_MASK_NV [

	<enum: #'GL_RENDER_GPU_MASK_NV'>
	<value: 16r9558>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_RENDER_GPU_MASK_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RENDER_MODE [

	<enum: #'GL_RENDER_MODE'>
	<value: 16rC40>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_RENDER_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPEAT [

	<enum: #'GL_REPEAT'>
	<value: 16r2901>
	<vendor: #ARB>
	<groups: #(#TextureWrapMode)>
	^ GL_REPEAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACE [

	<enum: #'GL_REPLACE'>
	<value: 16r1E01>
	<vendor: #ARB>
	<groups: #(#LightEnvModeSGIX #StencilOp)>
	^ GL_REPLACE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACEMENT_CODE_ARRAY_POINTER_SUN [

	<enum: #'GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN'>
	<value: 16r85C3>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACEMENT_CODE_ARRAY_STRIDE_SUN [

	<enum: #'GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN'>
	<value: 16r85C2>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACEMENT_CODE_ARRAY_SUN [

	<enum: #'GL_REPLACEMENT_CODE_ARRAY_SUN'>
	<value: 16r85C0>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_REPLACEMENT_CODE_ARRAY_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACEMENT_CODE_ARRAY_TYPE_SUN [

	<enum: #'GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN'>
	<value: 16r85C1>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACEMENT_CODE_SUN [

	<enum: #'GL_REPLACEMENT_CODE_SUN'>
	<value: 16r81D8>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_REPLACEMENT_CODE_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACE_EXT [

	<enum: #'GL_REPLACE_EXT'>
	<value: 16r8062>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#TextureEnvMode)>
	^ GL_REPLACE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACE_MIDDLE_SUN [

	<enum: #'GL_REPLACE_MIDDLE_SUN'>
	<value: 16r2>
	<vendor: #SUN>
	<suffix: #SUN>
	<groups: #(#TriangleListSUN)>
	^ GL_REPLACE_MIDDLE_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACE_OLDEST_SUN [

	<enum: #'GL_REPLACE_OLDEST_SUN'>
	<value: 16r3>
	<vendor: #SUN>
	<suffix: #SUN>
	<groups: #(#TriangleListSUN)>
	^ GL_REPLACE_OLDEST_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLACE_VALUE_AMD [

	<enum: #'GL_REPLACE_VALUE_AMD'>
	<value: 16r874B>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_REPLACE_VALUE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLICATE_BORDER [

	<enum: #'GL_REPLICATE_BORDER'>
	<value: 16r8153>
	<vendor: #HP>
	^ GL_REPLICATE_BORDER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPLICATE_BORDER_HP [

	<enum: #'GL_REPLICATE_BORDER_HP'>
	<value: 16r8153>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_REPLICATE_BORDER_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REPRESENTATIVE_FRAGMENT_TEST_NV [

	<enum: #'GL_REPRESENTATIVE_FRAGMENT_TEST_NV'>
	<value: 16r937F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_REPRESENTATIVE_FRAGMENT_TEST_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> REQUIRED_TEXTURE_IMAGE_UNITS_OES [

	<enum: #'GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES'>
	<value: 16r8D68>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESAMPLE_AVERAGE_OML [

	<enum: #'GL_RESAMPLE_AVERAGE_OML'>
	<value: 16r8988>
	<vendor: #OML>
	<suffix: #OML>
	^ GL_RESAMPLE_AVERAGE_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESAMPLE_DECIMATE_OML [

	<enum: #'GL_RESAMPLE_DECIMATE_OML'>
	<value: 16r8989>
	<vendor: #OML>
	<suffix: #OML>
	^ GL_RESAMPLE_DECIMATE_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESAMPLE_DECIMATE_SGIX [

	<enum: #'GL_RESAMPLE_DECIMATE_SGIX'>
	<value: 16r8430>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelStoreResampleMode)>
	^ GL_RESAMPLE_DECIMATE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESAMPLE_REPLICATE_OML [

	<enum: #'GL_RESAMPLE_REPLICATE_OML'>
	<value: 16r8986>
	<vendor: #OML>
	<suffix: #OML>
	^ GL_RESAMPLE_REPLICATE_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESAMPLE_REPLICATE_SGIX [

	<enum: #'GL_RESAMPLE_REPLICATE_SGIX'>
	<value: 16r8433>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelStoreResampleMode)>
	^ GL_RESAMPLE_REPLICATE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESAMPLE_ZERO_FILL_OML [

	<enum: #'GL_RESAMPLE_ZERO_FILL_OML'>
	<value: 16r8987>
	<vendor: #OML>
	<suffix: #OML>
	^ GL_RESAMPLE_ZERO_FILL_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESAMPLE_ZERO_FILL_SGIX [

	<enum: #'GL_RESAMPLE_ZERO_FILL_SGIX'>
	<value: 16r8434>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelStoreResampleMode)>
	^ GL_RESAMPLE_ZERO_FILL_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESCALE_NORMAL [

	<enum: #'GL_RESCALE_NORMAL'>
	<value: 16r803A>
	<vendor: #ARB>
	^ GL_RESCALE_NORMAL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESCALE_NORMAL_EXT [

	<enum: #'GL_RESCALE_NORMAL_EXT'>
	<value: 16r803A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#EnableCap #GetPName)>
	^ GL_RESCALE_NORMAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESET_NOTIFICATION_STRATEGY [

	<enum: #'GL_RESET_NOTIFICATION_STRATEGY'>
	<value: 16r8256>
	<vendor: #ARB>
	^ GL_RESET_NOTIFICATION_STRATEGY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESET_NOTIFICATION_STRATEGY_ARB [

	<enum: #'GL_RESET_NOTIFICATION_STRATEGY_ARB'>
	<value: 16r8256>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_RESET_NOTIFICATION_STRATEGY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESET_NOTIFICATION_STRATEGY_EXT [

	<enum: #'GL_RESET_NOTIFICATION_STRATEGY_EXT'>
	<value: 16r8256>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_RESET_NOTIFICATION_STRATEGY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESET_NOTIFICATION_STRATEGY_KHR [

	<enum: #'GL_RESET_NOTIFICATION_STRATEGY_KHR'>
	<value: 16r8256>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_RESET_NOTIFICATION_STRATEGY_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESTART_PATH_NV [

	<enum: #'GL_RESTART_PATH_NV'>
	<value: 16rF0>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_RESTART_PATH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RESTART_SUN [

	<enum: #'GL_RESTART_SUN'>
	<value: 16r1>
	<vendor: #SUN>
	<suffix: #SUN>
	<groups: #(#TriangleListSUN)>
	^ GL_RESTART_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RETAINED_APPLE [

	<enum: #'GL_RETAINED_APPLE'>
	<value: 16r8A1B>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_RETAINED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RETURN [

	<enum: #'GL_RETURN'>
	<value: 16r102>
	<vendor: #ARB>
	<groups: #(#AccumOp)>
	^ GL_RETURN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG [

	<enum: #'GL_RG'>
	<value: 16r8227>
	<vendor: #ARB>
	<groups: #(#InternalFormat #PixelFormat)>
	^ GL_RG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG16 [

	<enum: #'GL_RG16'>
	<value: 16r822C>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG16F [

	<enum: #'GL_RG16F'>
	<value: 16r822F>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG16F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG16F_EXT [

	<enum: #'GL_RG16F_EXT'>
	<value: 16r822F>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG16F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG16I [

	<enum: #'GL_RG16I'>
	<value: 16r8239>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG16I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG16UI [

	<enum: #'GL_RG16UI'>
	<value: 16r823A>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG16UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG16_EXT [

	<enum: #'GL_RG16_EXT'>
	<value: 16r822C>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG16_SNORM [

	<enum: #'GL_RG16_SNORM'>
	<value: 16r8F99>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG16_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG16_SNORM_EXT [

	<enum: #'GL_RG16_SNORM_EXT'>
	<value: 16r8F99>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG16_SNORM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG32F [

	<enum: #'GL_RG32F'>
	<value: 16r8230>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG32F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG32F_EXT [

	<enum: #'GL_RG32F_EXT'>
	<value: 16r8230>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG32F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG32I [

	<enum: #'GL_RG32I'>
	<value: 16r823B>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG32I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG32UI [

	<enum: #'GL_RG32UI'>
	<value: 16r823C>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG32UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG8 [

	<enum: #'GL_RG8'>
	<value: 16r822B>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG8I [

	<enum: #'GL_RG8I'>
	<value: 16r8237>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG8I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG8UI [

	<enum: #'GL_RG8UI'>
	<value: 16r8238>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG8UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG8_EXT [

	<enum: #'GL_RG8_EXT'>
	<value: 16r822B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG8_SNORM [

	<enum: #'GL_RG8_SNORM'>
	<value: 16r8F95>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RG8_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB [

	<enum: #'GL_RGB'>
	<value: 16r1907>
	<vendor: #ARB>
	<groups: #(#CombinerComponentUsageNV #CombinerPortionNV #InternalFormat #PathColorFormat #PixelFormat #PixelTexGenMode)>
	^ GL_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB10 [

	<enum: #'GL_RGB10'>
	<value: 16r8052>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB10_A2 [

	<enum: #'GL_RGB10_A2'>
	<value: 16r8059>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB10_A2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB10_A2UI [

	<enum: #'GL_RGB10_A2UI'>
	<value: 16r906F>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB10_A2UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB10_A2_EXT [

	<enum: #'GL_RGB10_A2_EXT'>
	<value: 16r8059>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB10_A2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB10_EXT [

	<enum: #'GL_RGB10_EXT'>
	<value: 16r8052>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB10_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB12 [

	<enum: #'GL_RGB12'>
	<value: 16r8053>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB12_EXT [

	<enum: #'GL_RGB12_EXT'>
	<value: 16r8053>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16 [

	<enum: #'GL_RGB16'>
	<value: 16r8054>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16F [

	<enum: #'GL_RGB16F'>
	<value: 16r881B>
	<vendor: #AMD>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16F_ARB [

	<enum: #'GL_RGB16F_ARB'>
	<value: 16r881B>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16F_EXT [

	<enum: #'GL_RGB16F_EXT'>
	<value: 16r881B>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16I [

	<enum: #'GL_RGB16I'>
	<value: 16r8D89>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16I_EXT [

	<enum: #'GL_RGB16I_EXT'>
	<value: 16r8D89>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16UI [

	<enum: #'GL_RGB16UI'>
	<value: 16r8D77>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16UI_EXT [

	<enum: #'GL_RGB16UI_EXT'>
	<value: 16r8D77>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16_EXT [

	<enum: #'GL_RGB16_EXT'>
	<value: 16r8054>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16_SNORM [

	<enum: #'GL_RGB16_SNORM'>
	<value: 16r8F9A>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB16_SNORM_EXT [

	<enum: #'GL_RGB16_SNORM_EXT'>
	<value: 16r8F9A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB16_SNORM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB2_EXT [

	<enum: #'GL_RGB2_EXT'>
	<value: 16r804E>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB32F [

	<enum: #'GL_RGB32F'>
	<value: 16r8815>
	<vendor: #AMD>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB32F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB32F_ARB [

	<enum: #'GL_RGB32F_ARB'>
	<value: 16r8815>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB32F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB32F_EXT [

	<enum: #'GL_RGB32F_EXT'>
	<value: 16r8815>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB32F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB32I [

	<enum: #'GL_RGB32I'>
	<value: 16r8D83>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB32I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB32I_EXT [

	<enum: #'GL_RGB32I_EXT'>
	<value: 16r8D83>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB32I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB32UI [

	<enum: #'GL_RGB32UI'>
	<value: 16r8D71>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB32UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB32UI_EXT [

	<enum: #'GL_RGB32UI_EXT'>
	<value: 16r8D71>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB32UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB4 [

	<enum: #'GL_RGB4'>
	<value: 16r804F>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB4_EXT [

	<enum: #'GL_RGB4_EXT'>
	<value: 16r804F>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB4_S3TC [

	<enum: #'GL_RGB4_S3TC'>
	<value: 16r83A1>
	<vendor: #S3>
	<suffix: #S3TC>
	^ GL_RGB4_S3TC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB5 [

	<enum: #'GL_RGB5'>
	<value: 16r8050>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB565 [

	<enum: #'GL_RGB565'>
	<value: 16r8D62>
	<vendor: #OES>
	^ GL_RGB565
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB565_OES [

	<enum: #'GL_RGB565_OES'>
	<value: 16r8D62>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_RGB565_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB5_A1 [

	<enum: #'GL_RGB5_A1'>
	<value: 16r8057>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB5_A1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB5_A1_EXT [

	<enum: #'GL_RGB5_A1_EXT'>
	<value: 16r8057>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB5_A1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB5_A1_OES [

	<enum: #'GL_RGB5_A1_OES'>
	<value: 16r8057>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB5_A1_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB5_EXT [

	<enum: #'GL_RGB5_EXT'>
	<value: 16r8050>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB8 [

	<enum: #'GL_RGB8'>
	<value: 16r8051>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB8I [

	<enum: #'GL_RGB8I'>
	<value: 16r8D8F>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB8I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB8I_EXT [

	<enum: #'GL_RGB8I_EXT'>
	<value: 16r8D8F>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB8I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB8UI [

	<enum: #'GL_RGB8UI'>
	<value: 16r8D7D>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB8UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB8UI_EXT [

	<enum: #'GL_RGB8UI_EXT'>
	<value: 16r8D7D>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB8UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB8_EXT [

	<enum: #'GL_RGB8_EXT'>
	<value: 16r8051>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB8_OES [

	<enum: #'GL_RGB8_OES'>
	<value: 16r8051>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB8_SNORM [

	<enum: #'GL_RGB8_SNORM'>
	<value: 16r8F96>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB8_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB9_E5 [

	<enum: #'GL_RGB9_E5'>
	<value: 16r8C3D>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB9_E5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB9_E5_APPLE [

	<enum: #'GL_RGB9_E5_APPLE'>
	<value: 16r8C3D>
	<vendor: #NV>
	<suffix: #APPLE>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB9_E5_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB9_E5_EXT [

	<enum: #'GL_RGB9_E5_EXT'>
	<value: 16r8C3D>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGB9_E5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA [

	<enum: #'GL_RGBA'>
	<value: 16r1908>
	<vendor: #ARB>
	<groups: #(#InternalFormat #PathColorFormat #PixelFormat #PixelTexGenMode)>
	^ GL_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA12 [

	<enum: #'GL_RGBA12'>
	<value: 16r805A>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA12_EXT [

	<enum: #'GL_RGBA12_EXT'>
	<value: 16r805A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA12_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16 [

	<enum: #'GL_RGBA16'>
	<value: 16r805B>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16F [

	<enum: #'GL_RGBA16F'>
	<value: 16r881A>
	<vendor: #AMD>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16F_ARB [

	<enum: #'GL_RGBA16F_ARB'>
	<value: 16r881A>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16F_EXT [

	<enum: #'GL_RGBA16F_EXT'>
	<value: 16r881A>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16I [

	<enum: #'GL_RGBA16I'>
	<value: 16r8D88>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16I_EXT [

	<enum: #'GL_RGBA16I_EXT'>
	<value: 16r8D88>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16UI [

	<enum: #'GL_RGBA16UI'>
	<value: 16r8D76>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16UI_EXT [

	<enum: #'GL_RGBA16UI_EXT'>
	<value: 16r8D76>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16_EXT [

	<enum: #'GL_RGBA16_EXT'>
	<value: 16r805B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16_SNORM [

	<enum: #'GL_RGBA16_SNORM'>
	<value: 16r8F9B>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA16_SNORM_EXT [

	<enum: #'GL_RGBA16_SNORM_EXT'>
	<value: 16r8F9B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA16_SNORM_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA2 [

	<enum: #'GL_RGBA2'>
	<value: 16r8055>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA2_EXT [

	<enum: #'GL_RGBA2_EXT'>
	<value: 16r8055>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA32F [

	<enum: #'GL_RGBA32F'>
	<value: 16r8814>
	<vendor: #AMD>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA32F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA32F_ARB [

	<enum: #'GL_RGBA32F_ARB'>
	<value: 16r8814>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA32F_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA32F_EXT [

	<enum: #'GL_RGBA32F_EXT'>
	<value: 16r8814>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA32F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA32I [

	<enum: #'GL_RGBA32I'>
	<value: 16r8D82>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA32I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA32I_EXT [

	<enum: #'GL_RGBA32I_EXT'>
	<value: 16r8D82>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA32I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA32UI [

	<enum: #'GL_RGBA32UI'>
	<value: 16r8D70>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA32UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA32UI_EXT [

	<enum: #'GL_RGBA32UI_EXT'>
	<value: 16r8D70>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA32UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA4 [

	<enum: #'GL_RGBA4'>
	<value: 16r8056>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA4_DXT5_S3TC [

	<enum: #'GL_RGBA4_DXT5_S3TC'>
	<value: 16r83A5>
	<vendor: #S3>
	<suffix: #S3TC>
	^ GL_RGBA4_DXT5_S3TC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA4_EXT [

	<enum: #'GL_RGBA4_EXT'>
	<value: 16r8056>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA4_OES [

	<enum: #'GL_RGBA4_OES'>
	<value: 16r8056>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA4_S3TC [

	<enum: #'GL_RGBA4_S3TC'>
	<value: 16r83A3>
	<vendor: #S3>
	<suffix: #S3TC>
	^ GL_RGBA4_S3TC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA8 [

	<enum: #'GL_RGBA8'>
	<value: 16r8058>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA8I [

	<enum: #'GL_RGBA8I'>
	<value: 16r8D8E>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA8I
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA8I_EXT [

	<enum: #'GL_RGBA8I_EXT'>
	<value: 16r8D8E>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA8I_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA8UI [

	<enum: #'GL_RGBA8UI'>
	<value: 16r8D7C>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA8UI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA8UI_EXT [

	<enum: #'GL_RGBA8UI_EXT'>
	<value: 16r8D7C>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA8UI_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA8_EXT [

	<enum: #'GL_RGBA8_EXT'>
	<value: 16r8058>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA8_OES [

	<enum: #'GL_RGBA8_OES'>
	<value: 16r8058>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA8_SNORM [

	<enum: #'GL_RGBA8_SNORM'>
	<value: 16r8F97>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_RGBA8_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_DXT5_S3TC [

	<enum: #'GL_RGBA_DXT5_S3TC'>
	<value: 16r83A4>
	<vendor: #S3>
	<suffix: #S3TC>
	^ GL_RGBA_DXT5_S3TC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_FLOAT16_APPLE [

	<enum: #'GL_RGBA_FLOAT16_APPLE'>
	<value: 16r881A>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_RGBA_FLOAT16_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_FLOAT16_ATI [

	<enum: #'GL_RGBA_FLOAT16_ATI'>
	<value: 16r881A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_RGBA_FLOAT16_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_FLOAT32_APPLE [

	<enum: #'GL_RGBA_FLOAT32_APPLE'>
	<value: 16r8814>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_RGBA_FLOAT32_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_FLOAT32_ATI [

	<enum: #'GL_RGBA_FLOAT32_ATI'>
	<value: 16r8814>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_RGBA_FLOAT32_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_FLOAT_MODE_ARB [

	<enum: #'GL_RGBA_FLOAT_MODE_ARB'>
	<value: 16r8820>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_RGBA_FLOAT_MODE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_FLOAT_MODE_ATI [

	<enum: #'GL_RGBA_FLOAT_MODE_ATI'>
	<value: 16r8820>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_RGBA_FLOAT_MODE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_INTEGER [

	<enum: #'GL_RGBA_INTEGER'>
	<value: 16r8D99>
	<vendor: #NV>
	<groups: #(#PixelFormat)>
	^ GL_RGBA_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_INTEGER_EXT [

	<enum: #'GL_RGBA_INTEGER_EXT'>
	<value: 16r8D99>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RGBA_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_INTEGER_MODE_EXT [

	<enum: #'GL_RGBA_INTEGER_MODE_EXT'>
	<value: 16r8D9E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RGBA_INTEGER_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_MODE [

	<enum: #'GL_RGBA_MODE'>
	<value: 16rC31>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_RGBA_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_S3TC [

	<enum: #'GL_RGBA_S3TC'>
	<value: 16r83A2>
	<vendor: #S3>
	<suffix: #S3TC>
	^ GL_RGBA_S3TC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_SIGNED_COMPONENTS_EXT [

	<enum: #'GL_RGBA_SIGNED_COMPONENTS_EXT'>
	<value: 16r8C3C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RGBA_SIGNED_COMPONENTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_SNORM [

	<enum: #'GL_RGBA_SNORM'>
	<value: 16r8F93>
	<vendor: #ARB>
	^ GL_RGBA_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV [

	<enum: #'GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV'>
	<value: 16r86D9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_422_APPLE [

	<enum: #'GL_RGB_422_APPLE'>
	<value: 16r8A1F>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_RGB_422_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_FLOAT16_APPLE [

	<enum: #'GL_RGB_FLOAT16_APPLE'>
	<value: 16r881B>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_RGB_FLOAT16_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_FLOAT16_ATI [

	<enum: #'GL_RGB_FLOAT16_ATI'>
	<value: 16r881B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_RGB_FLOAT16_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_FLOAT32_APPLE [

	<enum: #'GL_RGB_FLOAT32_APPLE'>
	<value: 16r8815>
	<vendor: #AMD>
	<suffix: #APPLE>
	^ GL_RGB_FLOAT32_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_FLOAT32_ATI [

	<enum: #'GL_RGB_FLOAT32_ATI'>
	<value: 16r8815>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_RGB_FLOAT32_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_INTEGER [

	<enum: #'GL_RGB_INTEGER'>
	<value: 16r8D98>
	<vendor: #NV>
	<groups: #(#PixelFormat)>
	^ GL_RGB_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_INTEGER_EXT [

	<enum: #'GL_RGB_INTEGER_EXT'>
	<value: 16r8D98>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_RGB_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_RAW_422_APPLE [

	<enum: #'GL_RGB_RAW_422_APPLE'>
	<value: 16r8A51>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_RGB_RAW_422_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_S3TC [

	<enum: #'GL_RGB_S3TC'>
	<value: 16r83A0>
	<vendor: #S3>
	<suffix: #S3TC>
	^ GL_RGB_S3TC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_SCALE [

	<enum: #'GL_RGB_SCALE'>
	<value: 16r8573>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_RGB_SCALE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_SCALE_ARB [

	<enum: #'GL_RGB_SCALE_ARB'>
	<value: 16r8573>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_RGB_SCALE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_SCALE_EXT [

	<enum: #'GL_RGB_SCALE_EXT'>
	<value: 16r8573>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_RGB_SCALE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RGB_SNORM [

	<enum: #'GL_RGB_SNORM'>
	<value: 16r8F92>
	<vendor: #ARB>
	^ GL_RGB_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG_EXT [

	<enum: #'GL_RG_EXT'>
	<value: 16r8227>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_RG_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG_INTEGER [

	<enum: #'GL_RG_INTEGER'>
	<value: 16r8228>
	<vendor: #ARB>
	<groups: #(#PixelFormat)>
	^ GL_RG_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RG_SNORM [

	<enum: #'GL_RG_SNORM'>
	<value: 16r8F91>
	<vendor: #ARB>
	^ GL_RG_SNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> RIGHT [

	<enum: #'GL_RIGHT'>
	<value: 16r407>
	<vendor: #ARB>
	<groups: #(#ColorBuffer #DrawBufferMode #ReadBufferMode)>
	^ GL_RIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ROBUST_GPU_TIMEOUT_MS_KHR [

	<enum: #'GL_ROBUST_GPU_TIMEOUT_MS_KHR'>
	<value: 16r82FD>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_ROBUST_GPU_TIMEOUT_MS_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ROUNDED_RECT2_NV [

	<enum: #'GL_ROUNDED_RECT2_NV'>
	<value: 16rEA>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_ROUNDED_RECT2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ROUNDED_RECT4_NV [

	<enum: #'GL_ROUNDED_RECT4_NV'>
	<value: 16rEC>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_ROUNDED_RECT4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ROUNDED_RECT8_NV [

	<enum: #'GL_ROUNDED_RECT8_NV'>
	<value: 16rEE>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_ROUNDED_RECT8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ROUNDED_RECT_NV [

	<enum: #'GL_ROUNDED_RECT_NV'>
	<value: 16rE8>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_ROUNDED_RECT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ROUND_NV [

	<enum: #'GL_ROUND_NV'>
	<value: 16r90A4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_ROUND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> S [

	<enum: #'GL_S'>
	<value: 16r2000>
	<vendor: #ARB>
	<groups: #(#TextureCoordName)>
	^ GL_S
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER [

	<enum: #'GL_SAMPLER'>
	<value: 16r82E6>
	<vendor: #ARB>
	<groups: #(#ObjectIdentifier)>
	^ GL_SAMPLER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_1D [

	<enum: #'GL_SAMPLER_1D'>
	<value: 16r8B5D>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_1D_ARB [

	<enum: #'GL_SAMPLER_1D_ARB'>
	<value: 16r8B5D>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_1D_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_1D_ARRAY [

	<enum: #'GL_SAMPLER_1D_ARRAY'>
	<value: 16r8DC0>
	<vendor: #NV>
	<groups: #(#GlslTypeToken #UniformType)>
	^ GL_SAMPLER_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_1D_ARRAY_EXT [

	<enum: #'GL_SAMPLER_1D_ARRAY_EXT'>
	<value: 16r8DC0>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SAMPLER_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_1D_ARRAY_SHADOW [

	<enum: #'GL_SAMPLER_1D_ARRAY_SHADOW'>
	<value: 16r8DC3>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_1D_ARRAY_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_1D_ARRAY_SHADOW_EXT [

	<enum: #'GL_SAMPLER_1D_ARRAY_SHADOW_EXT'>
	<value: 16r8DC3>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SAMPLER_1D_ARRAY_SHADOW_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_1D_SHADOW [

	<enum: #'GL_SAMPLER_1D_SHADOW'>
	<value: 16r8B61>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_1D_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_1D_SHADOW_ARB [

	<enum: #'GL_SAMPLER_1D_SHADOW_ARB'>
	<value: 16r8B61>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_1D_SHADOW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D [

	<enum: #'GL_SAMPLER_2D'>
	<value: 16r8B5E>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_ARB [

	<enum: #'GL_SAMPLER_2D_ARB'>
	<value: 16r8B5E>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_2D_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_ARRAY [

	<enum: #'GL_SAMPLER_2D_ARRAY'>
	<value: 16r8DC1>
	<vendor: #NV>
	<groups: #(#GlslTypeToken #UniformType)>
	^ GL_SAMPLER_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_ARRAY_EXT [

	<enum: #'GL_SAMPLER_2D_ARRAY_EXT'>
	<value: 16r8DC1>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SAMPLER_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_ARRAY_SHADOW [

	<enum: #'GL_SAMPLER_2D_ARRAY_SHADOW'>
	<value: 16r8DC4>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_2D_ARRAY_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_ARRAY_SHADOW_EXT [

	<enum: #'GL_SAMPLER_2D_ARRAY_SHADOW_EXT'>
	<value: 16r8DC4>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SAMPLER_2D_ARRAY_SHADOW_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_ARRAY_SHADOW_NV [

	<enum: #'GL_SAMPLER_2D_ARRAY_SHADOW_NV'>
	<value: 16r8DC4>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLER_2D_ARRAY_SHADOW_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_MULTISAMPLE [

	<enum: #'GL_SAMPLER_2D_MULTISAMPLE'>
	<value: 16r9108>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_SAMPLER_2D_MULTISAMPLE_ARRAY'>
	<value: 16r910B>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_MULTISAMPLE_ARRAY_OES [

	<enum: #'GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES'>
	<value: 16r910B>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_RECT [

	<enum: #'GL_SAMPLER_2D_RECT'>
	<value: 16r8B63>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_2D_RECT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_RECT_ARB [

	<enum: #'GL_SAMPLER_2D_RECT_ARB'>
	<value: 16r8B63>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_2D_RECT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_RECT_SHADOW [

	<enum: #'GL_SAMPLER_2D_RECT_SHADOW'>
	<value: 16r8B64>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_2D_RECT_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_RECT_SHADOW_ARB [

	<enum: #'GL_SAMPLER_2D_RECT_SHADOW_ARB'>
	<value: 16r8B64>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_2D_RECT_SHADOW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_SHADOW [

	<enum: #'GL_SAMPLER_2D_SHADOW'>
	<value: 16r8B62>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_2D_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_SHADOW_ARB [

	<enum: #'GL_SAMPLER_2D_SHADOW_ARB'>
	<value: 16r8B62>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_2D_SHADOW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_2D_SHADOW_EXT [

	<enum: #'GL_SAMPLER_2D_SHADOW_EXT'>
	<value: 16r8B62>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_2D_SHADOW_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_3D [

	<enum: #'GL_SAMPLER_3D'>
	<value: 16r8B5F>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_3D_ARB [

	<enum: #'GL_SAMPLER_3D_ARB'>
	<value: 16r8B5F>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_3D_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_3D_OES [

	<enum: #'GL_SAMPLER_3D_OES'>
	<value: 16r8B5F>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_3D_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_BINDING [

	<enum: #'GL_SAMPLER_BINDING'>
	<value: 16r8919>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_SAMPLER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_BUFFER [

	<enum: #'GL_SAMPLER_BUFFER'>
	<value: 16r8DC2>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_BUFFER_AMD [

	<enum: #'GL_SAMPLER_BUFFER_AMD'>
	<value: 16r9001>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_SAMPLER_BUFFER_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_BUFFER_EXT [

	<enum: #'GL_SAMPLER_BUFFER_EXT'>
	<value: 16r8DC2>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SAMPLER_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_BUFFER_OES [

	<enum: #'GL_SAMPLER_BUFFER_OES'>
	<value: 16r8DC2>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_SAMPLER_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE [

	<enum: #'GL_SAMPLER_CUBE'>
	<value: 16r8B60>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_CUBE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_ARB [

	<enum: #'GL_SAMPLER_CUBE_ARB'>
	<value: 16r8B60>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_SAMPLER_CUBE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_MAP_ARRAY [

	<enum: #'GL_SAMPLER_CUBE_MAP_ARRAY'>
	<value: 16r900C>
	<vendor: #AMD>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_MAP_ARRAY_ARB [

	<enum: #'GL_SAMPLER_CUBE_MAP_ARRAY_ARB'>
	<value: 16r900C>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_SAMPLER_CUBE_MAP_ARRAY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_MAP_ARRAY_EXT [

	<enum: #'GL_SAMPLER_CUBE_MAP_ARRAY_EXT'>
	<value: 16r900C>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_SAMPLER_CUBE_MAP_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_MAP_ARRAY_OES [

	<enum: #'GL_SAMPLER_CUBE_MAP_ARRAY_OES'>
	<value: 16r900C>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_SAMPLER_CUBE_MAP_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_MAP_ARRAY_SHADOW [

	<enum: #'GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW'>
	<value: 16r900D>
	<vendor: #AMD>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB [

	<enum: #'GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB'>
	<value: 16r900D>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT [

	<enum: #'GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT'>
	<value: 16r900D>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES [

	<enum: #'GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES'>
	<value: 16r900D>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_SHADOW [

	<enum: #'GL_SAMPLER_CUBE_SHADOW'>
	<value: 16r8DC5>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_SAMPLER_CUBE_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_SHADOW_EXT [

	<enum: #'GL_SAMPLER_CUBE_SHADOW_EXT'>
	<value: 16r8DC5>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SAMPLER_CUBE_SHADOW_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_CUBE_SHADOW_NV [

	<enum: #'GL_SAMPLER_CUBE_SHADOW_NV'>
	<value: 16r8DC5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLER_CUBE_SHADOW_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_EXTERNAL_2D_Y2Y_EXT [

	<enum: #'GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT'>
	<value: 16r8BE7>
	<vendor: #QCOM>
	<suffix: #EXT>
	^ GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_EXTERNAL_OES [

	<enum: #'GL_SAMPLER_EXTERNAL_OES'>
	<value: 16r8D66>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_SAMPLER_EXTERNAL_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_KHR [

	<enum: #'GL_SAMPLER_KHR'>
	<value: 16r82E6>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_SAMPLER_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_OBJECT_AMD [

	<enum: #'GL_SAMPLER_OBJECT_AMD'>
	<value: 16r9155>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_SAMPLER_OBJECT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLER_RENDERBUFFER_NV [

	<enum: #'GL_SAMPLER_RENDERBUFFER_NV'>
	<value: 16r8E56>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLER_RENDERBUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLES [

	<enum: #'GL_SAMPLES'>
	<value: 16r80A9>
	<vendor: #ARB>
	<groups: #(#GetFramebufferParameter #GetPName #InternalFormatPName)>
	^ GL_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLES_3DFX [

	<enum: #'GL_SAMPLES_3DFX'>
	<value: 16r86B4>
	<vendor: #'3DFX'>
	<suffix: #'3DFX'>
	^ GL_SAMPLES_3DFX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLES_ARB [

	<enum: #'GL_SAMPLES_ARB'>
	<value: 16r80A9>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SAMPLES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLES_EXT [

	<enum: #'GL_SAMPLES_EXT'>
	<value: 16r80A9>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SAMPLES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLES_PASSED [

	<enum: #'GL_SAMPLES_PASSED'>
	<value: 16r8914>
	<vendor: #NV>
	<groups: #(#QueryTarget)>
	^ GL_SAMPLES_PASSED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLES_PASSED_ARB [

	<enum: #'GL_SAMPLES_PASSED_ARB'>
	<value: 16r8914>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SAMPLES_PASSED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLES_SGIS [

	<enum: #'GL_SAMPLES_SGIS'>
	<value: 16r80A9>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_SAMPLES_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_ALPHA_TO_COVERAGE [

	<enum: #'GL_SAMPLE_ALPHA_TO_COVERAGE'>
	<value: 16r809E>
	<vendor: #ARB>
	<groups: #(#EnableCap)>
	^ GL_SAMPLE_ALPHA_TO_COVERAGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_ALPHA_TO_COVERAGE_ARB [

	<enum: #'GL_SAMPLE_ALPHA_TO_COVERAGE_ARB'>
	<value: 16r809E>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_ALPHA_TO_MASK_EXT [

	<enum: #'GL_SAMPLE_ALPHA_TO_MASK_EXT'>
	<value: 16r809E>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SAMPLE_ALPHA_TO_MASK_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_ALPHA_TO_MASK_SGIS [

	<enum: #'GL_SAMPLE_ALPHA_TO_MASK_SGIS'>
	<value: 16r809E>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#EnableCap #GetPName)>
	^ GL_SAMPLE_ALPHA_TO_MASK_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_ALPHA_TO_ONE [

	<enum: #'GL_SAMPLE_ALPHA_TO_ONE'>
	<value: 16r809F>
	<vendor: #ARB>
	<groups: #(#EnableCap)>
	^ GL_SAMPLE_ALPHA_TO_ONE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_ALPHA_TO_ONE_ARB [

	<enum: #'GL_SAMPLE_ALPHA_TO_ONE_ARB'>
	<value: 16r809F>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SAMPLE_ALPHA_TO_ONE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_ALPHA_TO_ONE_EXT [

	<enum: #'GL_SAMPLE_ALPHA_TO_ONE_EXT'>
	<value: 16r809F>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SAMPLE_ALPHA_TO_ONE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_ALPHA_TO_ONE_SGIS [

	<enum: #'GL_SAMPLE_ALPHA_TO_ONE_SGIS'>
	<value: 16r809F>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#EnableCap #GetPName)>
	^ GL_SAMPLE_ALPHA_TO_ONE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_BUFFERS [

	<enum: #'GL_SAMPLE_BUFFERS'>
	<value: 16r80A8>
	<vendor: #ARB>
	<groups: #(#GetFramebufferParameter #GetPName)>
	^ GL_SAMPLE_BUFFERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_BUFFERS_3DFX [

	<enum: #'GL_SAMPLE_BUFFERS_3DFX'>
	<value: 16r86B3>
	<vendor: #'3DFX'>
	<suffix: #'3DFX'>
	^ GL_SAMPLE_BUFFERS_3DFX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_BUFFERS_ARB [

	<enum: #'GL_SAMPLE_BUFFERS_ARB'>
	<value: 16r80A8>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SAMPLE_BUFFERS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_BUFFERS_EXT [

	<enum: #'GL_SAMPLE_BUFFERS_EXT'>
	<value: 16r80A8>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SAMPLE_BUFFERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_BUFFERS_SGIS [

	<enum: #'GL_SAMPLE_BUFFERS_SGIS'>
	<value: 16r80A8>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_SAMPLE_BUFFERS_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_COVERAGE [

	<enum: #'GL_SAMPLE_COVERAGE'>
	<value: 16r80A0>
	<vendor: #ARB>
	<groups: #(#EnableCap)>
	^ GL_SAMPLE_COVERAGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_COVERAGE_ARB [

	<enum: #'GL_SAMPLE_COVERAGE_ARB'>
	<value: 16r80A0>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SAMPLE_COVERAGE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_COVERAGE_INVERT [

	<enum: #'GL_SAMPLE_COVERAGE_INVERT'>
	<value: 16r80AB>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SAMPLE_COVERAGE_INVERT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_COVERAGE_INVERT_ARB [

	<enum: #'GL_SAMPLE_COVERAGE_INVERT_ARB'>
	<value: 16r80AB>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SAMPLE_COVERAGE_INVERT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_COVERAGE_VALUE [

	<enum: #'GL_SAMPLE_COVERAGE_VALUE'>
	<value: 16r80AA>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SAMPLE_COVERAGE_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_COVERAGE_VALUE_ARB [

	<enum: #'GL_SAMPLE_COVERAGE_VALUE_ARB'>
	<value: 16r80AA>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SAMPLE_COVERAGE_VALUE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_LOCATION_ARB [

	<enum: #'GL_SAMPLE_LOCATION_ARB'>
	<value: 16r8E50>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#GetMultisamplePNameNV)>
	^ GL_SAMPLE_LOCATION_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_LOCATION_NV [

	<enum: #'GL_SAMPLE_LOCATION_NV'>
	<value: 16r8E50>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLE_LOCATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB [

	<enum: #'GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB'>
	<value: 16r933F>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV [

	<enum: #'GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV'>
	<value: 16r933F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB [

	<enum: #'GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB'>
	<value: 16r933E>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV [

	<enum: #'GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV'>
	<value: 16r933E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_LOCATION_SUBPIXEL_BITS_ARB [

	<enum: #'GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB'>
	<value: 16r933D>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_LOCATION_SUBPIXEL_BITS_NV [

	<enum: #'GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV'>
	<value: 16r933D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK [

	<enum: #'GL_SAMPLE_MASK'>
	<value: 16r8E51>
	<vendor: #NV>
	<groups: #(#EnableCap)>
	^ GL_SAMPLE_MASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_EXT [

	<enum: #'GL_SAMPLE_MASK_EXT'>
	<value: 16r80A0>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SAMPLE_MASK_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_INVERT_EXT [

	<enum: #'GL_SAMPLE_MASK_INVERT_EXT'>
	<value: 16r80AB>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SAMPLE_MASK_INVERT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_INVERT_SGIS [

	<enum: #'GL_SAMPLE_MASK_INVERT_SGIS'>
	<value: 16r80AB>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_SAMPLE_MASK_INVERT_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_NV [

	<enum: #'GL_SAMPLE_MASK_NV'>
	<value: 16r8E51>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLE_MASK_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_SGIS [

	<enum: #'GL_SAMPLE_MASK_SGIS'>
	<value: 16r80A0>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#EnableCap #GetPName)>
	^ GL_SAMPLE_MASK_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_VALUE [

	<enum: #'GL_SAMPLE_MASK_VALUE'>
	<value: 16r8E52>
	<vendor: #NV>
	^ GL_SAMPLE_MASK_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_VALUE_EXT [

	<enum: #'GL_SAMPLE_MASK_VALUE_EXT'>
	<value: 16r80AA>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SAMPLE_MASK_VALUE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_VALUE_NV [

	<enum: #'GL_SAMPLE_MASK_VALUE_NV'>
	<value: 16r8E52>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLE_MASK_VALUE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_MASK_VALUE_SGIS [

	<enum: #'GL_SAMPLE_MASK_VALUE_SGIS'>
	<value: 16r80AA>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_SAMPLE_MASK_VALUE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_PATTERN_EXT [

	<enum: #'GL_SAMPLE_PATTERN_EXT'>
	<value: 16r80AC>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SAMPLE_PATTERN_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_PATTERN_SGIS [

	<enum: #'GL_SAMPLE_PATTERN_SGIS'>
	<value: 16r80AC>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_SAMPLE_PATTERN_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_POSITION [

	<enum: #'GL_SAMPLE_POSITION'>
	<value: 16r8E50>
	<vendor: #NV>
	<groups: #(#GetMultisamplePNameNV)>
	^ GL_SAMPLE_POSITION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_POSITION_NV [

	<enum: #'GL_SAMPLE_POSITION_NV'>
	<value: 16r8E50>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SAMPLE_POSITION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_SHADING [

	<enum: #'GL_SAMPLE_SHADING'>
	<value: 16r8C36>
	<vendor: #NV>
	<groups: #(#EnableCap)>
	^ GL_SAMPLE_SHADING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_SHADING_ARB [

	<enum: #'GL_SAMPLE_SHADING_ARB'>
	<value: 16r8C36>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SAMPLE_SHADING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SAMPLE_SHADING_OES [

	<enum: #'GL_SAMPLE_SHADING_OES'>
	<value: 16r8C36>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_SAMPLE_SHADING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SATURATE_BIT_ATI [

	<enum: #'GL_SATURATE_BIT_ATI'>
	<value: 2r1000000>
	<suffix: #ATI>
	<bitmask>
	<groups: #(#FragmentShaderDestModMaskATI)>
	^ GL_SATURATE_BIT_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCALAR_EXT [

	<enum: #'GL_SCALAR_EXT'>
	<value: 16r87BE>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#DataTypeEXT)>
	^ GL_SCALAR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCALEBIAS_HINT_SGIX [

	<enum: #'GL_SCALEBIAS_HINT_SGIX'>
	<value: 16r8322>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#HintTarget)>
	^ GL_SCALEBIAS_HINT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCALED_RESOLVE_FASTEST_EXT [

	<enum: #'GL_SCALED_RESOLVE_FASTEST_EXT'>
	<value: 16r90BA>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SCALED_RESOLVE_FASTEST_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCALED_RESOLVE_NICEST_EXT [

	<enum: #'GL_SCALED_RESOLVE_NICEST_EXT'>
	<value: 16r90BB>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SCALED_RESOLVE_NICEST_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCALE_BY_FOUR_NV [

	<enum: #'GL_SCALE_BY_FOUR_NV'>
	<value: 16r853F>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerScaleNV)>
	^ GL_SCALE_BY_FOUR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCALE_BY_ONE_HALF_NV [

	<enum: #'GL_SCALE_BY_ONE_HALF_NV'>
	<value: 16r8540>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerScaleNV)>
	^ GL_SCALE_BY_ONE_HALF_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCALE_BY_TWO_NV [

	<enum: #'GL_SCALE_BY_TWO_NV'>
	<value: 16r853E>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerScaleNV)>
	^ GL_SCALE_BY_TWO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCISSOR_BIT [

	<enum: #'GL_SCISSOR_BIT'>
	<value: 2r10000000000000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_SCISSOR_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCISSOR_BOX [

	<enum: #'GL_SCISSOR_BOX'>
	<value: 16rC10>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SCISSOR_BOX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCISSOR_BOX_EXCLUSIVE_NV [

	<enum: #'GL_SCISSOR_BOX_EXCLUSIVE_NV'>
	<value: 16r9556>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SCISSOR_BOX_EXCLUSIVE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCISSOR_COMMAND_NV [

	<enum: #'GL_SCISSOR_COMMAND_NV'>
	<value: 16r11>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_SCISSOR_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCISSOR_TEST [

	<enum: #'GL_SCISSOR_TEST'>
	<value: 16rC11>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_SCISSOR_TEST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCISSOR_TEST_EXCLUSIVE_NV [

	<enum: #'GL_SCISSOR_TEST_EXCLUSIVE_NV'>
	<value: 16r9555>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SCISSOR_TEST_EXCLUSIVE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCREEN [

	<enum: #'GL_SCREEN'>
	<value: 16r9295>
	<vendor: #NV>
	^ GL_SCREEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCREEN_COORDINATES_REND [

	<enum: #'GL_SCREEN_COORDINATES_REND'>
	<value: 16r8490>
	<vendor: #REND>
	<suffix: #REND>
	^ GL_SCREEN_COORDINATES_REND
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCREEN_KHR [

	<enum: #'GL_SCREEN_KHR'>
	<value: 16r9295>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_SCREEN_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SCREEN_NV [

	<enum: #'GL_SCREEN_NV'>
	<value: 16r9295>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SCREEN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY [

	<enum: #'GL_SECONDARY_COLOR_ARRAY'>
	<value: 16r845E>
	<vendor: #SGI>
	^ GL_SECONDARY_COLOR_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_ADDRESS_NV [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV'>
	<value: 16r8F27>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_BUFFER_BINDING [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING'>
	<value: 16r889C>
	<vendor: #NV>
	^ GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r889C>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_EXT [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_EXT'>
	<value: 16r845E>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_SECONDARY_COLOR_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_LENGTH_NV [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_LENGTH_NV'>
	<value: 16r8F31>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_LIST_IBM [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_LIST_IBM'>
	<value: 16r192A5>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_SECONDARY_COLOR_ARRAY_LIST_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM'>
	<value: 16r192AF>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_POINTER [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_POINTER'>
	<value: 16r845D>
	<vendor: #SGI>
	^ GL_SECONDARY_COLOR_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_POINTER_EXT [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_POINTER_EXT'>
	<value: 16r845D>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_SIZE [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_SIZE'>
	<value: 16r845A>
	<vendor: #SGI>
	^ GL_SECONDARY_COLOR_ARRAY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_SIZE_EXT [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_SIZE_EXT'>
	<value: 16r845A>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_STRIDE [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_STRIDE'>
	<value: 16r845C>
	<vendor: #SGI>
	^ GL_SECONDARY_COLOR_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_STRIDE_EXT [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT'>
	<value: 16r845C>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_TYPE [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_TYPE'>
	<value: 16r845B>
	<vendor: #SGI>
	^ GL_SECONDARY_COLOR_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_ARRAY_TYPE_EXT [

	<enum: #'GL_SECONDARY_COLOR_ARRAY_TYPE_EXT'>
	<value: 16r845B>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_COLOR_NV [

	<enum: #'GL_SECONDARY_COLOR_NV'>
	<value: 16r852D>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerRegisterNV #PathColor)>
	^ GL_SECONDARY_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SECONDARY_INTERPOLATOR_ATI [

	<enum: #'GL_SECONDARY_INTERPOLATOR_ATI'>
	<value: 16r896D>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_SECONDARY_INTERPOLATOR_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SELECT [

	<enum: #'GL_SELECT'>
	<value: 16r1C02>
	<vendor: #ARB>
	<groups: #(#RenderingMode)>
	^ GL_SELECT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SELECTION_BUFFER_POINTER [

	<enum: #'GL_SELECTION_BUFFER_POINTER'>
	<value: 16rDF3>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_SELECTION_BUFFER_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SELECTION_BUFFER_SIZE [

	<enum: #'GL_SELECTION_BUFFER_SIZE'>
	<value: 16rDF4>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SELECTION_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEMAPHORE_TYPE_BINARY_NV [

	<enum: #'GL_SEMAPHORE_TYPE_BINARY_NV'>
	<value: 16r95B4>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#SemaphoreParameterName)>
	^ GL_SEMAPHORE_TYPE_BINARY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEMAPHORE_TYPE_NV [

	<enum: #'GL_SEMAPHORE_TYPE_NV'>
	<value: 16r95B3>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#SemaphoreParameterName)>
	^ GL_SEMAPHORE_TYPE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEMAPHORE_TYPE_TIMELINE_NV [

	<enum: #'GL_SEMAPHORE_TYPE_TIMELINE_NV'>
	<value: 16r95B5>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#SemaphoreParameterName)>
	^ GL_SEMAPHORE_TYPE_TIMELINE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEPARABLE_2D [

	<enum: #'GL_SEPARABLE_2D'>
	<value: 16r8012>
	<vendor: #ARB>
	<groups: #(#SeparableTarget #SeparableTargetEXT)>
	^ GL_SEPARABLE_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEPARABLE_2D_EXT [

	<enum: #'GL_SEPARABLE_2D_EXT'>
	<value: 16r8012>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#EnableCap #GetPName #SeparableTargetEXT)>
	^ GL_SEPARABLE_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEPARATE_ATTRIBS [

	<enum: #'GL_SEPARATE_ATTRIBS'>
	<value: 16r8C8D>
	<vendor: #NV>
	<groups: #(#TransformFeedbackBufferMode)>
	^ GL_SEPARATE_ATTRIBS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEPARATE_ATTRIBS_EXT [

	<enum: #'GL_SEPARATE_ATTRIBS_EXT'>
	<value: 16r8C8D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SEPARATE_ATTRIBS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEPARATE_ATTRIBS_NV [

	<enum: #'GL_SEPARATE_ATTRIBS_NV'>
	<value: 16r8C8D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SEPARATE_ATTRIBS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEPARATE_SPECULAR_COLOR [

	<enum: #'GL_SEPARATE_SPECULAR_COLOR'>
	<value: 16r81FA>
	<vendor: #SGI>
	<groups: #(#LightModelColorControl)>
	^ GL_SEPARATE_SPECULAR_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SEPARATE_SPECULAR_COLOR_EXT [

	<enum: #'GL_SEPARATE_SPECULAR_COLOR_EXT'>
	<value: 16r81FA>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightModelColorControl)>
	^ GL_SEPARATE_SPECULAR_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SET [

	<enum: #'GL_SET'>
	<value: 16r150F>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_SET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SET_AMD [

	<enum: #'GL_SET_AMD'>
	<value: 16r874A>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_SET_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SGX_BINARY_IMG [

	<enum: #'GL_SGX_BINARY_IMG'>
	<value: 16r8C0A>
	<vendor: #IMG>
	<suffix: #IMG>
	<groups: #(#ShaderBinaryFormat)>
	^ GL_SGX_BINARY_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SGX_PROGRAM_BINARY_IMG [

	<enum: #'GL_SGX_PROGRAM_BINARY_IMG'>
	<value: 16r9130>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_SGX_PROGRAM_BINARY_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER [

	<enum: #'GL_SHADER'>
	<value: 16r82E1>
	<vendor: #ARB>
	<groups: #(#ObjectIdentifier)>
	^ GL_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_BINARY_DMP [

	<enum: #'GL_SHADER_BINARY_DMP'>
	<value: 16r9250>
	<vendor: #DMP>
	<suffix: #DMP>
	<groups: #(#ShaderBinaryFormat)>
	^ GL_SHADER_BINARY_DMP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_BINARY_FORMATS [

	<enum: #'GL_SHADER_BINARY_FORMATS'>
	<value: 16r8DF8>
	<vendor: #OES>
	<groups: #(#GetPName)>
	^ GL_SHADER_BINARY_FORMATS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_BINARY_FORMAT_SPIR_V [

	<enum: #'GL_SHADER_BINARY_FORMAT_SPIR_V'>
	<value: 16r9551>
	<vendor: #NV>
	<groups: #(#ShaderBinaryFormat)>
	^ GL_SHADER_BINARY_FORMAT_SPIR_V
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_BINARY_FORMAT_SPIR_V_ARB [

	<enum: #'GL_SHADER_BINARY_FORMAT_SPIR_V_ARB'>
	<value: 16r9551>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SHADER_BINARY_FORMAT_SPIR_V_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_BINARY_VIV [

	<enum: #'GL_SHADER_BINARY_VIV'>
	<value: 16r8FC4>
	<vendor: #VIV>
	<groups: #(#ShaderBinaryFormat)>
	^ GL_SHADER_BINARY_VIV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_COMPILER [

	<enum: #'GL_SHADER_COMPILER'>
	<value: 16r8DFA>
	<vendor: #OES>
	<groups: #(#GetPName)>
	^ GL_SHADER_COMPILER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_CONSISTENT_NV [

	<enum: #'GL_SHADER_CONSISTENT_NV'>
	<value: 16r86DD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADER_CONSISTENT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV [

	<enum: #'GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV'>
	<value: 2r10000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_IMAGE_ACCESS_BARRIER_BIT [

	<enum: #'GL_SHADER_IMAGE_ACCESS_BARRIER_BIT'>
	<value: 2r100000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT [

	<enum: #'GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT'>
	<value: 2r100000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_IMAGE_ATOMIC [

	<enum: #'GL_SHADER_IMAGE_ATOMIC'>
	<value: 16r82A6>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SHADER_IMAGE_ATOMIC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_IMAGE_LOAD [

	<enum: #'GL_SHADER_IMAGE_LOAD'>
	<value: 16r82A4>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SHADER_IMAGE_LOAD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_IMAGE_STORE [

	<enum: #'GL_SHADER_IMAGE_STORE'>
	<value: 16r82A5>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SHADER_IMAGE_STORE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_INCLUDE_ARB [

	<enum: #'GL_SHADER_INCLUDE_ARB'>
	<value: 16r8DAE>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SHADER_INCLUDE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_KHR [

	<enum: #'GL_SHADER_KHR'>
	<value: 16r82E1>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_SHADER_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_OBJECT_ARB [

	<enum: #'GL_SHADER_OBJECT_ARB'>
	<value: 16r8B48>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SHADER_OBJECT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_OBJECT_EXT [

	<enum: #'GL_SHADER_OBJECT_EXT'>
	<value: 16r8B48>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SHADER_OBJECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_OPERATION_NV [

	<enum: #'GL_SHADER_OPERATION_NV'>
	<value: 16r86DF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADER_OPERATION_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_PIXEL_LOCAL_STORAGE_EXT [

	<enum: #'GL_SHADER_PIXEL_LOCAL_STORAGE_EXT'>
	<value: 16r8F64>
	<vendor: #ARM>
	<suffix: #EXT>
	^ GL_SHADER_PIXEL_LOCAL_STORAGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_SOURCE_LENGTH [

	<enum: #'GL_SHADER_SOURCE_LENGTH'>
	<value: 16r8B88>
	<vendor: #ARB>
	<groups: #(#ShaderParameterName)>
	^ GL_SHADER_SOURCE_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_STORAGE_BARRIER_BIT [

	<enum: #'GL_SHADER_STORAGE_BARRIER_BIT'>
	<value: 2r10000000000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_SHADER_STORAGE_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_STORAGE_BLOCK [

	<enum: #'GL_SHADER_STORAGE_BLOCK'>
	<value: 16r92E6>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_SHADER_STORAGE_BLOCK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_STORAGE_BUFFER [

	<enum: #'GL_SHADER_STORAGE_BUFFER'>
	<value: 16r90D2>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_SHADER_STORAGE_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_STORAGE_BUFFER_BINDING [

	<enum: #'GL_SHADER_STORAGE_BUFFER_BINDING'>
	<value: 16r90D3>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_SHADER_STORAGE_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT [

	<enum: #'GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT'>
	<value: 16r90DF>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_STORAGE_BUFFER_SIZE [

	<enum: #'GL_SHADER_STORAGE_BUFFER_SIZE'>
	<value: 16r90D5>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_SHADER_STORAGE_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_STORAGE_BUFFER_START [

	<enum: #'GL_SHADER_STORAGE_BUFFER_START'>
	<value: 16r90D4>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_SHADER_STORAGE_BUFFER_START
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADER_TYPE [

	<enum: #'GL_SHADER_TYPE'>
	<value: 16r8B4F>
	<vendor: #ARB>
	<groups: #(#ShaderParameterName)>
	^ GL_SHADER_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADE_MODEL [

	<enum: #'GL_SHADE_MODEL'>
	<value: 16rB54>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SHADE_MODEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_LANGUAGE_VERSION [

	<enum: #'GL_SHADING_LANGUAGE_VERSION'>
	<value: 16r8B8C>
	<vendor: #ARB>
	<groups: #(#StringName)>
	^ GL_SHADING_LANGUAGE_VERSION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_LANGUAGE_VERSION_ARB [

	<enum: #'GL_SHADING_LANGUAGE_VERSION_ARB'>
	<value: 16r8B8C>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SHADING_LANGUAGE_VERSION_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV [

	<enum: #'GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV'>
	<value: 16r956F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1X1_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_1X1_PIXELS_QCOM'>
	<value: 16r96A6>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_1X1_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1X2_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_1X2_PIXELS_QCOM'>
	<value: 16r96A7>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_1X2_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1X4_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_1X4_PIXELS_QCOM'>
	<value: 16r96AA>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_1X4_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV [

	<enum: #'GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV'>
	<value: 16r9566>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV [

	<enum: #'GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV'>
	<value: 16r9567>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV [

	<enum: #'GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV'>
	<value: 16r9568>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV [

	<enum: #'GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV'>
	<value: 16r9569>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV [

	<enum: #'GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV'>
	<value: 16r956A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV [

	<enum: #'GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV'>
	<value: 16r956B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_1_INVOCATION_PER_PIXEL_NV [

	<enum: #'GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV'>
	<value: 16r9565>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_2X1_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_2X1_PIXELS_QCOM'>
	<value: 16r96A8>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_2X1_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_2X2_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_2X2_PIXELS_QCOM'>
	<value: 16r96A9>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_2X2_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_2X4_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_2X4_PIXELS_QCOM'>
	<value: 16r96AD>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_2X4_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV [

	<enum: #'GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV'>
	<value: 16r956C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_4X1_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_4X1_PIXELS_QCOM'>
	<value: 16r96AB>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_4X1_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_4X2_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_4X2_PIXELS_QCOM'>
	<value: 16r96AC>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_4X2_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_4X4_PIXELS_QCOM [

	<enum: #'GL_SHADING_RATE_4X4_PIXELS_QCOM'>
	<value: 16r96AE>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#ShadingRateQCOM)>
	^ GL_SHADING_RATE_4X4_PIXELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV [

	<enum: #'GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV'>
	<value: 16r956D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV [

	<enum: #'GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV'>
	<value: 16r956E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_IMAGE_BINDING_NV [

	<enum: #'GL_SHADING_RATE_IMAGE_BINDING_NV'>
	<value: 16r955B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_IMAGE_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_IMAGE_NV [

	<enum: #'GL_SHADING_RATE_IMAGE_NV'>
	<value: 16r9563>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_IMAGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_IMAGE_PALETTE_COUNT_NV [

	<enum: #'GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV'>
	<value: 16r95B2>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#GetPName)>
	^ GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_IMAGE_PALETTE_SIZE_NV [

	<enum: #'GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV'>
	<value: 16r955E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_IMAGE_PER_PRIMITIVE_NV [

	<enum: #'GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV'>
	<value: 16r95B1>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#EnableCap #GetPName)>
	^ GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV [

	<enum: #'GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV'>
	<value: 16r955D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_IMAGE_TEXEL_WIDTH_NV [

	<enum: #'GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV'>
	<value: 16r955C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_NO_INVOCATIONS_NV [

	<enum: #'GL_SHADING_RATE_NO_INVOCATIONS_NV'>
	<value: 16r9564>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_NO_INVOCATIONS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM [

	<enum: #'GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM'>
	<value: 16r96A5>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#EnableCap)>
	^ GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_QCOM [

	<enum: #'GL_SHADING_RATE_QCOM'>
	<value: 16r96A4>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#GetPName)>
	^ GL_SHADING_RATE_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV [

	<enum: #'GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV'>
	<value: 16r95AE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV [

	<enum: #'GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV'>
	<value: 16r95AF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV [

	<enum: #'GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV'>
	<value: 16r95B0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADOW_AMBIENT_SGIX [

	<enum: #'GL_SHADOW_AMBIENT_SGIX'>
	<value: 16r80BF>
	<vendor: #ARB>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_SHADOW_AMBIENT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHADOW_ATTENUATION_EXT [

	<enum: #'GL_SHADOW_ATTENUATION_EXT'>
	<value: 16r834E>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightTexturePNameEXT)>
	^ GL_SHADOW_ATTENUATION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHARED_EDGE_NV [

	<enum: #'GL_SHARED_EDGE_NV'>
	<value: 16rC0>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathRenderingTokenNV)>
	^ GL_SHARED_EDGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHARED_TEXTURE_PALETTE_EXT [

	<enum: #'GL_SHARED_TEXTURE_PALETTE_EXT'>
	<value: 16r81FB>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#EnableCap #GetPName)>
	^ GL_SHARED_TEXTURE_PALETTE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHARPEN_TEXTURE_FUNC_POINTS_SGIS [

	<enum: #'GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS'>
	<value: 16r80B0>
	<vendor: #ARB>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHININESS [

	<enum: #'GL_SHININESS'>
	<value: 16r1601>
	<vendor: #ARB>
	<groups: #(#MaterialParameter)>
	^ GL_SHININESS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SHORT [

	<enum: #'GL_SHORT'>
	<value: 16r1402>
	<vendor: #ARB>
	<groups: #(#BinormalPointerTypeEXT #IndexPointerType #ListNameType #NormalPointerType #PixelType #SecondaryColorPointerTypeIBM #TangentPointerTypeEXT #TexCoordPointerType #VertexAttribIType #VertexAttribPointerType #VertexAttribType #VertexPointerType #WeightPointerTypeARB)>
	^ GL_SHORT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNALED [

	<enum: #'GL_SIGNALED'>
	<value: 16r9119>
	<vendor: #ARB>
	^ GL_SIGNALED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNALED_APPLE [

	<enum: #'GL_SIGNALED_APPLE'>
	<value: 16r9119>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_SIGNALED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_ALPHA8_NV [

	<enum: #'GL_SIGNED_ALPHA8_NV'>
	<value: 16r8706>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_ALPHA8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_ALPHA_NV [

	<enum: #'GL_SIGNED_ALPHA_NV'>
	<value: 16r8705>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_ALPHA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_HILO16_NV [

	<enum: #'GL_SIGNED_HILO16_NV'>
	<value: 16r86FA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_HILO16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_HILO8_NV [

	<enum: #'GL_SIGNED_HILO8_NV'>
	<value: 16r885F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_HILO8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_HILO_NV [

	<enum: #'GL_SIGNED_HILO_NV'>
	<value: 16r86F9>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_HILO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_IDENTITY_NV [

	<enum: #'GL_SIGNED_IDENTITY_NV'>
	<value: 16r853C>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerMappingNV)>
	^ GL_SIGNED_IDENTITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_INTENSITY8_NV [

	<enum: #'GL_SIGNED_INTENSITY8_NV'>
	<value: 16r8708>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_INTENSITY8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_INTENSITY_NV [

	<enum: #'GL_SIGNED_INTENSITY_NV'>
	<value: 16r8707>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_INTENSITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_LUMINANCE8_ALPHA8_NV [

	<enum: #'GL_SIGNED_LUMINANCE8_ALPHA8_NV'>
	<value: 16r8704>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_LUMINANCE8_ALPHA8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_LUMINANCE8_NV [

	<enum: #'GL_SIGNED_LUMINANCE8_NV'>
	<value: 16r8702>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_LUMINANCE8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_LUMINANCE_ALPHA_NV [

	<enum: #'GL_SIGNED_LUMINANCE_ALPHA_NV'>
	<value: 16r8703>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_LUMINANCE_ALPHA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_LUMINANCE_NV [

	<enum: #'GL_SIGNED_LUMINANCE_NV'>
	<value: 16r8701>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_LUMINANCE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_NEGATE_NV [

	<enum: #'GL_SIGNED_NEGATE_NV'>
	<value: 16r853D>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerMappingNV)>
	^ GL_SIGNED_NEGATE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_NORMALIZED [

	<enum: #'GL_SIGNED_NORMALIZED'>
	<value: 16r8F9C>
	<vendor: #ARB>
	^ GL_SIGNED_NORMALIZED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_RGB8_NV [

	<enum: #'GL_SIGNED_RGB8_NV'>
	<value: 16r86FF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_RGB8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_RGB8_UNSIGNED_ALPHA8_NV [

	<enum: #'GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV'>
	<value: 16r870D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_RGBA8_NV [

	<enum: #'GL_SIGNED_RGBA8_NV'>
	<value: 16r86FC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_RGBA8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_RGBA_NV [

	<enum: #'GL_SIGNED_RGBA_NV'>
	<value: 16r86FB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_RGBA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_RGB_NV [

	<enum: #'GL_SIGNED_RGB_NV'>
	<value: 16r86FE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_RGB_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIGNED_RGB_UNSIGNED_ALPHA_NV [

	<enum: #'GL_SIGNED_RGB_UNSIGNED_ALPHA_NV'>
	<value: 16r870C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST [

	<enum: #'GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST'>
	<value: 16r82AC>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE [

	<enum: #'GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE'>
	<value: 16r82AE>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST [

	<enum: #'GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST'>
	<value: 16r82AD>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE [

	<enum: #'GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE'>
	<value: 16r82AF>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SINGLE_COLOR [

	<enum: #'GL_SINGLE_COLOR'>
	<value: 16r81F9>
	<vendor: #SGI>
	<groups: #(#LightModelColorControl)>
	^ GL_SINGLE_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SINGLE_COLOR_EXT [

	<enum: #'GL_SINGLE_COLOR_EXT'>
	<value: 16r81F9>
	<vendor: #SGI>
	<suffix: #EXT>
	<groups: #(#LightModelColorControl)>
	^ GL_SINGLE_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SKIP_COMPONENTS1_NV [

	<enum: #'GL_SKIP_COMPONENTS1_NV'>
	<value: -16r6>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#TransformFeedbackTokenNV)>
	^ GL_SKIP_COMPONENTS1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SKIP_COMPONENTS2_NV [

	<enum: #'GL_SKIP_COMPONENTS2_NV'>
	<value: -16r5>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#TransformFeedbackTokenNV)>
	^ GL_SKIP_COMPONENTS2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SKIP_COMPONENTS3_NV [

	<enum: #'GL_SKIP_COMPONENTS3_NV'>
	<value: -16r4>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#TransformFeedbackTokenNV)>
	^ GL_SKIP_COMPONENTS3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SKIP_COMPONENTS4_NV [

	<enum: #'GL_SKIP_COMPONENTS4_NV'>
	<value: -16r3>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#TransformFeedbackTokenNV)>
	^ GL_SKIP_COMPONENTS4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SKIP_DECODE_EXT [

	<enum: #'GL_SKIP_DECODE_EXT'>
	<value: 16r8A4A>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_SKIP_DECODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SKIP_MISSING_GLYPH_NV [

	<enum: #'GL_SKIP_MISSING_GLYPH_NV'>
	<value: 16r90A9>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathHandleMissingGlyphs)>
	^ GL_SKIP_MISSING_GLYPH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLICE_ACCUM_SUN [

	<enum: #'GL_SLICE_ACCUM_SUN'>
	<value: 16r85CC>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_SLICE_ACCUM_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLIM10U_SGIX [

	<enum: #'GL_SLIM10U_SGIX'>
	<value: 16r831E>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_SLIM10U_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLIM12S_SGIX [

	<enum: #'GL_SLIM12S_SGIX'>
	<value: 16r831F>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_SLIM12S_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLIM8U_SGIX [

	<enum: #'GL_SLIM8U_SGIX'>
	<value: 16r831D>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_SLIM8U_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE [

	<enum: #'GL_SLUMINANCE'>
	<value: 16r8C46>
	<vendor: #NV>
	^ GL_SLUMINANCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE8 [

	<enum: #'GL_SLUMINANCE8'>
	<value: 16r8C47>
	<vendor: #NV>
	^ GL_SLUMINANCE8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE8_ALPHA8 [

	<enum: #'GL_SLUMINANCE8_ALPHA8'>
	<value: 16r8C45>
	<vendor: #NV>
	^ GL_SLUMINANCE8_ALPHA8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE8_ALPHA8_EXT [

	<enum: #'GL_SLUMINANCE8_ALPHA8_EXT'>
	<value: 16r8C45>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SLUMINANCE8_ALPHA8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE8_ALPHA8_NV [

	<enum: #'GL_SLUMINANCE8_ALPHA8_NV'>
	<value: 16r8C45>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SLUMINANCE8_ALPHA8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE8_EXT [

	<enum: #'GL_SLUMINANCE8_EXT'>
	<value: 16r8C47>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SLUMINANCE8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE8_NV [

	<enum: #'GL_SLUMINANCE8_NV'>
	<value: 16r8C47>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SLUMINANCE8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE_ALPHA [

	<enum: #'GL_SLUMINANCE_ALPHA'>
	<value: 16r8C44>
	<vendor: #NV>
	^ GL_SLUMINANCE_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE_ALPHA_EXT [

	<enum: #'GL_SLUMINANCE_ALPHA_EXT'>
	<value: 16r8C44>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SLUMINANCE_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE_ALPHA_NV [

	<enum: #'GL_SLUMINANCE_ALPHA_NV'>
	<value: 16r8C44>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SLUMINANCE_ALPHA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE_EXT [

	<enum: #'GL_SLUMINANCE_EXT'>
	<value: 16r8C46>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SLUMINANCE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SLUMINANCE_NV [

	<enum: #'GL_SLUMINANCE_NV'>
	<value: 16r8C46>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SLUMINANCE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMALL_CCW_ARC_TO_NV [

	<enum: #'GL_SMALL_CCW_ARC_TO_NV'>
	<value: 16r12>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_SMALL_CCW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMALL_CW_ARC_TO_NV [

	<enum: #'GL_SMALL_CW_ARC_TO_NV'>
	<value: 16r14>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_SMALL_CW_ARC_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMAPHS30_PROGRAM_BINARY_DMP [

	<enum: #'GL_SMAPHS30_PROGRAM_BINARY_DMP'>
	<value: 16r9251>
	<vendor: #DMP>
	<suffix: #DMP>
	^ GL_SMAPHS30_PROGRAM_BINARY_DMP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMAPHS_PROGRAM_BINARY_DMP [

	<enum: #'GL_SMAPHS_PROGRAM_BINARY_DMP'>
	<value: 16r9252>
	<vendor: #DMP>
	<suffix: #DMP>
	^ GL_SMAPHS_PROGRAM_BINARY_DMP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMOOTH [

	<enum: #'GL_SMOOTH'>
	<value: 16r1D01>
	<vendor: #ARB>
	<groups: #(#ShadingModel)>
	^ GL_SMOOTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMOOTH_CUBIC_CURVE_TO_NV [

	<enum: #'GL_SMOOTH_CUBIC_CURVE_TO_NV'>
	<value: 16r10>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_SMOOTH_CUBIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMOOTH_LINE_WIDTH_GRANULARITY [

	<enum: #'GL_SMOOTH_LINE_WIDTH_GRANULARITY'>
	<value: 16rB23>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SMOOTH_LINE_WIDTH_GRANULARITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMOOTH_LINE_WIDTH_RANGE [

	<enum: #'GL_SMOOTH_LINE_WIDTH_RANGE'>
	<value: 16rB22>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SMOOTH_LINE_WIDTH_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMOOTH_POINT_SIZE_GRANULARITY [

	<enum: #'GL_SMOOTH_POINT_SIZE_GRANULARITY'>
	<value: 16rB13>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SMOOTH_POINT_SIZE_GRANULARITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMOOTH_POINT_SIZE_RANGE [

	<enum: #'GL_SMOOTH_POINT_SIZE_RANGE'>
	<value: 16rB12>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SMOOTH_POINT_SIZE_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SMOOTH_QUADRATIC_CURVE_TO_NV [

	<enum: #'GL_SMOOTH_QUADRATIC_CURVE_TO_NV'>
	<value: 16rE>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_SMOOTH_QUADRATIC_CURVE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SM_COUNT_NV [

	<enum: #'GL_SM_COUNT_NV'>
	<value: 16r933B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SM_COUNT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOFTLIGHT [

	<enum: #'GL_SOFTLIGHT'>
	<value: 16r929C>
	<vendor: #NV>
	^ GL_SOFTLIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOFTLIGHT_KHR [

	<enum: #'GL_SOFTLIGHT_KHR'>
	<value: 16r929C>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_SOFTLIGHT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOFTLIGHT_NV [

	<enum: #'GL_SOFTLIGHT_NV'>
	<value: 16r929C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SOFTLIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE0_ALPHA [

	<enum: #'GL_SOURCE0_ALPHA'>
	<value: 16r8588>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE0_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE0_ALPHA_ARB [

	<enum: #'GL_SOURCE0_ALPHA_ARB'>
	<value: 16r8588>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE0_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE0_ALPHA_EXT [

	<enum: #'GL_SOURCE0_ALPHA_EXT'>
	<value: 16r8588>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE0_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE0_RGB [

	<enum: #'GL_SOURCE0_RGB'>
	<value: 16r8580>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE0_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE0_RGB_ARB [

	<enum: #'GL_SOURCE0_RGB_ARB'>
	<value: 16r8580>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE0_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE0_RGB_EXT [

	<enum: #'GL_SOURCE0_RGB_EXT'>
	<value: 16r8580>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE0_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE1_ALPHA [

	<enum: #'GL_SOURCE1_ALPHA'>
	<value: 16r8589>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE1_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE1_ALPHA_ARB [

	<enum: #'GL_SOURCE1_ALPHA_ARB'>
	<value: 16r8589>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE1_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE1_ALPHA_EXT [

	<enum: #'GL_SOURCE1_ALPHA_EXT'>
	<value: 16r8589>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE1_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE1_RGB [

	<enum: #'GL_SOURCE1_RGB'>
	<value: 16r8581>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE1_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE1_RGB_ARB [

	<enum: #'GL_SOURCE1_RGB_ARB'>
	<value: 16r8581>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE1_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE1_RGB_EXT [

	<enum: #'GL_SOURCE1_RGB_EXT'>
	<value: 16r8581>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE1_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE2_ALPHA [

	<enum: #'GL_SOURCE2_ALPHA'>
	<value: 16r858A>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE2_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE2_ALPHA_ARB [

	<enum: #'GL_SOURCE2_ALPHA_ARB'>
	<value: 16r858A>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE2_ALPHA_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE2_ALPHA_EXT [

	<enum: #'GL_SOURCE2_ALPHA_EXT'>
	<value: 16r858A>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE2_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE2_RGB [

	<enum: #'GL_SOURCE2_RGB'>
	<value: 16r8582>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE2_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE2_RGB_ARB [

	<enum: #'GL_SOURCE2_RGB_ARB'>
	<value: 16r8582>
	<vendor: #'AMD/NV'>
	<suffix: #ARB>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE2_RGB_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE2_RGB_EXT [

	<enum: #'GL_SOURCE2_RGB_EXT'>
	<value: 16r8582>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE2_RGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE3_ALPHA_NV [

	<enum: #'GL_SOURCE3_ALPHA_NV'>
	<value: 16r858B>
	<vendor: #'AMD/NV'>
	<suffix: #NV>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE3_ALPHA_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SOURCE3_RGB_NV [

	<enum: #'GL_SOURCE3_RGB_NV'>
	<value: 16r8583>
	<vendor: #'AMD/NV'>
	<suffix: #NV>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SOURCE3_RGB_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPARE0_NV [

	<enum: #'GL_SPARE0_NV'>
	<value: 16r852E>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerRegisterNV)>
	^ GL_SPARE0_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPARE0_PLUS_SECONDARY_COLOR_NV [

	<enum: #'GL_SPARE0_PLUS_SECONDARY_COLOR_NV'>
	<value: 16r8532>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SPARE0_PLUS_SECONDARY_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPARE1_NV [

	<enum: #'GL_SPARE1_NV'>
	<value: 16r852F>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerRegisterNV)>
	^ GL_SPARE1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPARSE_BUFFER_PAGE_SIZE_ARB [

	<enum: #'GL_SPARSE_BUFFER_PAGE_SIZE_ARB'>
	<value: 16r82F8>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SPARSE_BUFFER_PAGE_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPARSE_STORAGE_BIT_ARB [

	<enum: #'GL_SPARSE_STORAGE_BIT_ARB'>
	<value: 2r10000000000>
	<suffix: #ARB>
	<bitmask>
	<groups: #(#BufferStorageMask)>
	^ GL_SPARSE_STORAGE_BIT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB [

	<enum: #'GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB'>
	<value: 16r91A9>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT [

	<enum: #'GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT'>
	<value: 16r91A9>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPECULAR [

	<enum: #'GL_SPECULAR'>
	<value: 16r1202>
	<vendor: #ARB>
	<groups: #(#ColorMaterialParameter #FragmentLightParameterSGIX #MaterialParameter)>
	^ GL_SPECULAR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPHERE_MAP [

	<enum: #'GL_SPHERE_MAP'>
	<value: 16r2402>
	<vendor: #ARB>
	<groups: #(#TextureGenMode)>
	^ GL_SPHERE_MAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPIR_V_BINARY [

	<enum: #'GL_SPIR_V_BINARY'>
	<value: 16r9552>
	<vendor: #NV>
	^ GL_SPIR_V_BINARY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPIR_V_BINARY_ARB [

	<enum: #'GL_SPIR_V_BINARY_ARB'>
	<value: 16r9552>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_SPIR_V_BINARY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPIR_V_EXTENSIONS [

	<enum: #'GL_SPIR_V_EXTENSIONS'>
	<value: 16r9553>
	<vendor: #NV>
	^ GL_SPIR_V_EXTENSIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPOT_CUTOFF [

	<enum: #'GL_SPOT_CUTOFF'>
	<value: 16r1206>
	<vendor: #ARB>
	<groups: #(#FragmentLightParameterSGIX #LightParameter)>
	^ GL_SPOT_CUTOFF
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPOT_DIRECTION [

	<enum: #'GL_SPOT_DIRECTION'>
	<value: 16r1204>
	<vendor: #ARB>
	<groups: #(#FragmentLightParameterSGIX #LightParameter)>
	^ GL_SPOT_DIRECTION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPOT_EXPONENT [

	<enum: #'GL_SPOT_EXPONENT'>
	<value: 16r1205>
	<vendor: #ARB>
	<groups: #(#FragmentLightParameterSGIX #LightParameter)>
	^ GL_SPOT_EXPONENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPRITE_AXIAL_SGIX [

	<enum: #'GL_SPRITE_AXIAL_SGIX'>
	<value: 16r814C>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_SPRITE_AXIAL_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPRITE_AXIS_SGIX [

	<enum: #'GL_SPRITE_AXIS_SGIX'>
	<value: 16r814A>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_SPRITE_AXIS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPRITE_EYE_ALIGNED_SGIX [

	<enum: #'GL_SPRITE_EYE_ALIGNED_SGIX'>
	<value: 16r814E>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_SPRITE_EYE_ALIGNED_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPRITE_MODE_SGIX [

	<enum: #'GL_SPRITE_MODE_SGIX'>
	<value: 16r8149>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #SpriteParameterNameSGIX)>
	^ GL_SPRITE_MODE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPRITE_OBJECT_ALIGNED_SGIX [

	<enum: #'GL_SPRITE_OBJECT_ALIGNED_SGIX'>
	<value: 16r814D>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_SPRITE_OBJECT_ALIGNED_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPRITE_SGIX [

	<enum: #'GL_SPRITE_SGIX'>
	<value: 16r8148>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#EnableCap #GetPName)>
	^ GL_SPRITE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SPRITE_TRANSLATION_SGIX [

	<enum: #'GL_SPRITE_TRANSLATION_SGIX'>
	<value: 16r814B>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName)>
	^ GL_SPRITE_TRANSLATION_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SQUARE_NV [

	<enum: #'GL_SQUARE_NV'>
	<value: 16r90A3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SQUARE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SR8_EXT [

	<enum: #'GL_SR8_EXT'>
	<value: 16r8FBD>
	<vendor: #QCOM>
	<suffix: #EXT>
	<groups: #(#InternalFormat)>
	^ GL_SR8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC0_ALPHA [

	<enum: #'GL_SRC0_ALPHA'>
	<value: 16r8588>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SRC0_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC0_RGB [

	<enum: #'GL_SRC0_RGB'>
	<value: 16r8580>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SRC0_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC1_ALPHA [

	<enum: #'GL_SRC1_ALPHA'>
	<value: 16r8589>
	<vendor: #'AMD/NV'>
	<groups: #(#BlendingFactor #RegisterCombinerPname)>
	^ GL_SRC1_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC1_ALPHA_EXT [

	<enum: #'GL_SRC1_ALPHA_EXT'>
	<value: 16r8589>
	<vendor: #'AMD/NV'>
	<suffix: #EXT>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SRC1_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC1_COLOR [

	<enum: #'GL_SRC1_COLOR'>
	<value: 16r88F9>
	<vendor: #NV>
	<groups: #(#BlendingFactor)>
	^ GL_SRC1_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC1_COLOR_EXT [

	<enum: #'GL_SRC1_COLOR_EXT'>
	<value: 16r88F9>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SRC1_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC1_RGB [

	<enum: #'GL_SRC1_RGB'>
	<value: 16r8581>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SRC1_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC2_ALPHA [

	<enum: #'GL_SRC2_ALPHA'>
	<value: 16r858A>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SRC2_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC2_RGB [

	<enum: #'GL_SRC2_RGB'>
	<value: 16r8582>
	<vendor: #'AMD/NV'>
	<groups: #(#RegisterCombinerPname)>
	^ GL_SRC2_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_ALPHA [

	<enum: #'GL_SRC_ALPHA'>
	<value: 16r302>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_SRC_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_ALPHA_SATURATE [

	<enum: #'GL_SRC_ALPHA_SATURATE'>
	<value: 16r308>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_SRC_ALPHA_SATURATE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_ALPHA_SATURATE_EXT [

	<enum: #'GL_SRC_ALPHA_SATURATE_EXT'>
	<value: 16r308>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_SRC_ALPHA_SATURATE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_ATOP_NV [

	<enum: #'GL_SRC_ATOP_NV'>
	<value: 16r928E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SRC_ATOP_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_COLOR [

	<enum: #'GL_SRC_COLOR'>
	<value: 16r300>
	<vendor: #ARB>
	<groups: #(#BlendingFactor)>
	^ GL_SRC_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_IN_NV [

	<enum: #'GL_SRC_IN_NV'>
	<value: 16r928A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SRC_IN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_NV [

	<enum: #'GL_SRC_NV'>
	<value: 16r9286>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SRC_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_OUT_NV [

	<enum: #'GL_SRC_OUT_NV'>
	<value: 16r928C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SRC_OUT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRC_OVER_NV [

	<enum: #'GL_SRC_OVER_NV'>
	<value: 16r9288>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SRC_OVER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRG8_EXT [

	<enum: #'GL_SRG8_EXT'>
	<value: 16r8FBE>
	<vendor: #QCOM>
	<suffix: #EXT>
	<groups: #(#InternalFormat)>
	^ GL_SRG8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB [

	<enum: #'GL_SRGB'>
	<value: 16r8C40>
	<vendor: #NV>
	<groups: #(#InternalFormat)>
	^ GL_SRGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB8 [

	<enum: #'GL_SRGB8'>
	<value: 16r8C41>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_SRGB8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB8_ALPHA8 [

	<enum: #'GL_SRGB8_ALPHA8'>
	<value: 16r8C43>
	<vendor: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_SRGB8_ALPHA8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB8_ALPHA8_EXT [

	<enum: #'GL_SRGB8_ALPHA8_EXT'>
	<value: 16r8C43>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_SRGB8_ALPHA8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB8_EXT [

	<enum: #'GL_SRGB8_EXT'>
	<value: 16r8C41>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_SRGB8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB8_NV [

	<enum: #'GL_SRGB8_NV'>
	<value: 16r8C41>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_SRGB8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB_ALPHA [

	<enum: #'GL_SRGB_ALPHA'>
	<value: 16r8C42>
	<vendor: #NV>
	<groups: #(#InternalFormat)>
	^ GL_SRGB_ALPHA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB_ALPHA_EXT [

	<enum: #'GL_SRGB_ALPHA_EXT'>
	<value: 16r8C42>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat)>
	^ GL_SRGB_ALPHA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB_DECODE_ARB [

	<enum: #'GL_SRGB_DECODE_ARB'>
	<value: 16r8299>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SRGB_DECODE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB_EXT [

	<enum: #'GL_SRGB_EXT'>
	<value: 16r8C40>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#InternalFormat)>
	^ GL_SRGB_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB_READ [

	<enum: #'GL_SRGB_READ'>
	<value: 16r8297>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SRGB_READ
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SRGB_WRITE [

	<enum: #'GL_SRGB_WRITE'>
	<value: 16r8298>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_SRGB_WRITE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STACK_OVERFLOW [

	<enum: #'GL_STACK_OVERFLOW'>
	<value: 16r503>
	<vendor: #ARB>
	<groups: #(#ErrorCode)>
	^ GL_STACK_OVERFLOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STACK_OVERFLOW_KHR [

	<enum: #'GL_STACK_OVERFLOW_KHR'>
	<value: 16r503>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_STACK_OVERFLOW_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STACK_UNDERFLOW [

	<enum: #'GL_STACK_UNDERFLOW'>
	<value: 16r504>
	<vendor: #ARB>
	<groups: #(#ErrorCode)>
	^ GL_STACK_UNDERFLOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STACK_UNDERFLOW_KHR [

	<enum: #'GL_STACK_UNDERFLOW_KHR'>
	<value: 16r504>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_STACK_UNDERFLOW_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STANDARD_FONT_FORMAT_NV [

	<enum: #'GL_STANDARD_FONT_FORMAT_NV'>
	<value: 16r936C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_STANDARD_FONT_FORMAT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STANDARD_FONT_NAME_NV [

	<enum: #'GL_STANDARD_FONT_NAME_NV'>
	<value: 16r9072>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathFontTarget)>
	^ GL_STANDARD_FONT_NAME_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATE_RESTORE [

	<enum: #'GL_STATE_RESTORE'>
	<value: 16r8BDC>
	<vendor: #QCOM>
	^ GL_STATE_RESTORE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATIC_ATI [

	<enum: #'GL_STATIC_ATI'>
	<value: 16r8760>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#ArrayObjectUsageATI)>
	^ GL_STATIC_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATIC_COPY [

	<enum: #'GL_STATIC_COPY'>
	<value: 16r88E6>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_STATIC_COPY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATIC_COPY_ARB [

	<enum: #'GL_STATIC_COPY_ARB'>
	<value: 16r88E6>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_STATIC_COPY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATIC_DRAW [

	<enum: #'GL_STATIC_DRAW'>
	<value: 16r88E4>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_STATIC_DRAW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATIC_DRAW_ARB [

	<enum: #'GL_STATIC_DRAW_ARB'>
	<value: 16r88E4>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_STATIC_DRAW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATIC_READ [

	<enum: #'GL_STATIC_READ'>
	<value: 16r88E5>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_STATIC_READ
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATIC_READ_ARB [

	<enum: #'GL_STATIC_READ_ARB'>
	<value: 16r88E5>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_STATIC_READ_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STATIC_VERTEX_ARRAY_IBM [

	<enum: #'GL_STATIC_VERTEX_ARRAY_IBM'>
	<value: 16r19295>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_STATIC_VERTEX_ARRAY_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL [

	<enum: #'GL_STENCIL'>
	<value: 16r1802>
	<vendor: #ARB>
	<groups: #(#Buffer #InvalidateFramebufferAttachment #PixelCopyType)>
	^ GL_STENCIL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_ATTACHMENT [

	<enum: #'GL_STENCIL_ATTACHMENT'>
	<value: 16r8D20>
	<vendor: #ARB>
	<groups: #(#FramebufferAttachment)>
	^ GL_STENCIL_ATTACHMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_ATTACHMENT_EXT [

	<enum: #'GL_STENCIL_ATTACHMENT_EXT'>
	<value: 16r8D20>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_STENCIL_ATTACHMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_ATTACHMENT_OES [

	<enum: #'GL_STENCIL_ATTACHMENT_OES'>
	<value: 16r8D20>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InvalidateFramebufferAttachment)>
	^ GL_STENCIL_ATTACHMENT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_FAIL [

	<enum: #'GL_STENCIL_BACK_FAIL'>
	<value: 16r8801>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_STENCIL_BACK_FAIL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_FAIL_ATI [

	<enum: #'GL_STENCIL_BACK_FAIL_ATI'>
	<value: 16r8801>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_STENCIL_BACK_FAIL_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_FUNC [

	<enum: #'GL_STENCIL_BACK_FUNC'>
	<value: 16r8800>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_STENCIL_BACK_FUNC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_FUNC_ATI [

	<enum: #'GL_STENCIL_BACK_FUNC_ATI'>
	<value: 16r8800>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_STENCIL_BACK_FUNC_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_OP_VALUE_AMD [

	<enum: #'GL_STENCIL_BACK_OP_VALUE_AMD'>
	<value: 16r874D>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_STENCIL_BACK_OP_VALUE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_PASS_DEPTH_FAIL [

	<enum: #'GL_STENCIL_BACK_PASS_DEPTH_FAIL'>
	<value: 16r8802>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_STENCIL_BACK_PASS_DEPTH_FAIL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_PASS_DEPTH_FAIL_ATI [

	<enum: #'GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI'>
	<value: 16r8802>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_PASS_DEPTH_PASS [

	<enum: #'GL_STENCIL_BACK_PASS_DEPTH_PASS'>
	<value: 16r8803>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_STENCIL_BACK_PASS_DEPTH_PASS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_PASS_DEPTH_PASS_ATI [

	<enum: #'GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI'>
	<value: 16r8803>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_REF [

	<enum: #'GL_STENCIL_BACK_REF'>
	<value: 16r8CA3>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_BACK_REF
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_VALUE_MASK [

	<enum: #'GL_STENCIL_BACK_VALUE_MASK'>
	<value: 16r8CA4>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_BACK_VALUE_MASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BACK_WRITEMASK [

	<enum: #'GL_STENCIL_BACK_WRITEMASK'>
	<value: 16r8CA5>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_BACK_WRITEMASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BITS [

	<enum: #'GL_STENCIL_BITS'>
	<value: 16rD57>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT [

	<enum: #'GL_STENCIL_BUFFER_BIT'>
	<value: 2r10000000000>
	<bitmask>
	<groups: #(#AttribMask #ClearBufferMask)>
	^ GL_STENCIL_BUFFER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT0_QCOM [

	<enum: #'GL_STENCIL_BUFFER_BIT0_QCOM'>
	<value: 2r10000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_STENCIL_BUFFER_BIT0_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT1_QCOM [

	<enum: #'GL_STENCIL_BUFFER_BIT1_QCOM'>
	<value: 2r100000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_STENCIL_BUFFER_BIT1_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT2_QCOM [

	<enum: #'GL_STENCIL_BUFFER_BIT2_QCOM'>
	<value: 2r1000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_STENCIL_BUFFER_BIT2_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT3_QCOM [

	<enum: #'GL_STENCIL_BUFFER_BIT3_QCOM'>
	<value: 2r10000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_STENCIL_BUFFER_BIT3_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT4_QCOM [

	<enum: #'GL_STENCIL_BUFFER_BIT4_QCOM'>
	<value: 2r100000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_STENCIL_BUFFER_BIT4_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT5_QCOM [

	<enum: #'GL_STENCIL_BUFFER_BIT5_QCOM'>
	<value: 2r1000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_STENCIL_BUFFER_BIT5_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT6_QCOM [

	<enum: #'GL_STENCIL_BUFFER_BIT6_QCOM'>
	<value: 2r10000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_STENCIL_BUFFER_BIT6_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_BUFFER_BIT7_QCOM [

	<enum: #'GL_STENCIL_BUFFER_BIT7_QCOM'>
	<value: 2r100000000000000000000000>
	<suffix: #QCOM>
	<bitmask>
	<groups: #(#BufferBitQCOM)>
	^ GL_STENCIL_BUFFER_BIT7_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_CLEAR_TAG_VALUE_EXT [

	<enum: #'GL_STENCIL_CLEAR_TAG_VALUE_EXT'>
	<value: 16r88F3>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_STENCIL_CLEAR_TAG_VALUE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_CLEAR_VALUE [

	<enum: #'GL_STENCIL_CLEAR_VALUE'>
	<value: 16rB91>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_CLEAR_VALUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_COMPONENTS [

	<enum: #'GL_STENCIL_COMPONENTS'>
	<value: 16r8285>
	<vendor: #ARB>
	^ GL_STENCIL_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_EXT [

	<enum: #'GL_STENCIL_EXT'>
	<value: 16r1802>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelCopyType)>
	^ GL_STENCIL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_FAIL [

	<enum: #'GL_STENCIL_FAIL'>
	<value: 16rB94>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_FAIL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_FUNC [

	<enum: #'GL_STENCIL_FUNC'>
	<value: 16rB92>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_FUNC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX [

	<enum: #'GL_STENCIL_INDEX'>
	<value: 16r1901>
	<vendor: #ARB>
	<groups: #(#InternalFormat #PixelFormat)>
	^ GL_STENCIL_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX1 [

	<enum: #'GL_STENCIL_INDEX1'>
	<value: 16r8D46>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX16 [

	<enum: #'GL_STENCIL_INDEX16'>
	<value: 16r8D49>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX16_EXT [

	<enum: #'GL_STENCIL_INDEX16_EXT'>
	<value: 16r8D49>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX16_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX1_EXT [

	<enum: #'GL_STENCIL_INDEX1_EXT'>
	<value: 16r8D46>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX1_OES [

	<enum: #'GL_STENCIL_INDEX1_OES'>
	<value: 16r8D46>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX1_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX4 [

	<enum: #'GL_STENCIL_INDEX4'>
	<value: 16r8D47>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX4_EXT [

	<enum: #'GL_STENCIL_INDEX4_EXT'>
	<value: 16r8D47>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX4_OES [

	<enum: #'GL_STENCIL_INDEX4_OES'>
	<value: 16r8D47>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX4_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX8 [

	<enum: #'GL_STENCIL_INDEX8'>
	<value: 16r8D48>
	<vendor: #ARB>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX8_EXT [

	<enum: #'GL_STENCIL_INDEX8_EXT'>
	<value: 16r8D48>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX8_OES [

	<enum: #'GL_STENCIL_INDEX8_OES'>
	<value: 16r8D48>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat #SizedInternalFormat)>
	^ GL_STENCIL_INDEX8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_INDEX_OES [

	<enum: #'GL_STENCIL_INDEX_OES'>
	<value: 16r1901>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#InternalFormat)>
	^ GL_STENCIL_INDEX_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_OP_VALUE_AMD [

	<enum: #'GL_STENCIL_OP_VALUE_AMD'>
	<value: 16r874C>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_STENCIL_OP_VALUE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_PASS_DEPTH_FAIL [

	<enum: #'GL_STENCIL_PASS_DEPTH_FAIL'>
	<value: 16rB95>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_PASS_DEPTH_FAIL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_PASS_DEPTH_PASS [

	<enum: #'GL_STENCIL_PASS_DEPTH_PASS'>
	<value: 16rB96>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_PASS_DEPTH_PASS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_REF [

	<enum: #'GL_STENCIL_REF'>
	<value: 16rB97>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_REF
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_REF_COMMAND_NV [

	<enum: #'GL_STENCIL_REF_COMMAND_NV'>
	<value: 16rC>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_STENCIL_REF_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_RENDERABLE [

	<enum: #'GL_STENCIL_RENDERABLE'>
	<value: 16r8288>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_STENCIL_RENDERABLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_SAMPLES_NV [

	<enum: #'GL_STENCIL_SAMPLES_NV'>
	<value: 16r932E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_STENCIL_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_TAG_BITS_EXT [

	<enum: #'GL_STENCIL_TAG_BITS_EXT'>
	<value: 16r88F2>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_STENCIL_TAG_BITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_TEST [

	<enum: #'GL_STENCIL_TEST'>
	<value: 16rB90>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_STENCIL_TEST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_TEST_TWO_SIDE_EXT [

	<enum: #'GL_STENCIL_TEST_TWO_SIDE_EXT'>
	<value: 16r8910>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_STENCIL_TEST_TWO_SIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_VALUE_MASK [

	<enum: #'GL_STENCIL_VALUE_MASK'>
	<value: 16rB93>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_VALUE_MASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STENCIL_WRITEMASK [

	<enum: #'GL_STENCIL_WRITEMASK'>
	<value: 16rB98>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_STENCIL_WRITEMASK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STEREO [

	<enum: #'GL_STEREO'>
	<value: 16rC33>
	<vendor: #ARB>
	<groups: #(#GetFramebufferParameter #GetPName)>
	^ GL_STEREO
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STORAGE_CACHED_APPLE [

	<enum: #'GL_STORAGE_CACHED_APPLE'>
	<value: 16r85BE>
	<vendor: #APPLE>
	<suffix: #APPLE>
	<groups: #(#VertexArrayPNameAPPLE)>
	^ GL_STORAGE_CACHED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STORAGE_CLIENT_APPLE [

	<enum: #'GL_STORAGE_CLIENT_APPLE'>
	<value: 16r85B4>
	<vendor: #APPLE>
	<suffix: #APPLE>
	<groups: #(#VertexArrayPNameAPPLE)>
	^ GL_STORAGE_CLIENT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STORAGE_PRIVATE_APPLE [

	<enum: #'GL_STORAGE_PRIVATE_APPLE'>
	<value: 16r85BD>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_STORAGE_PRIVATE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STORAGE_SHARED_APPLE [

	<enum: #'GL_STORAGE_SHARED_APPLE'>
	<value: 16r85BF>
	<vendor: #APPLE>
	<suffix: #APPLE>
	<groups: #(#VertexArrayPNameAPPLE)>
	^ GL_STORAGE_SHARED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STREAM_COPY [

	<enum: #'GL_STREAM_COPY'>
	<value: 16r88E2>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_STREAM_COPY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STREAM_COPY_ARB [

	<enum: #'GL_STREAM_COPY_ARB'>
	<value: 16r88E2>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_STREAM_COPY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STREAM_DRAW [

	<enum: #'GL_STREAM_DRAW'>
	<value: 16r88E0>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_STREAM_DRAW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STREAM_DRAW_ARB [

	<enum: #'GL_STREAM_DRAW_ARB'>
	<value: 16r88E0>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_STREAM_DRAW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STREAM_RASTERIZATION_AMD [

	<enum: #'GL_STREAM_RASTERIZATION_AMD'>
	<value: 16r91A0>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_STREAM_RASTERIZATION_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STREAM_READ [

	<enum: #'GL_STREAM_READ'>
	<value: 16r88E1>
	<vendor: #NV>
	<groups: #(#BufferUsageARB #VertexBufferObjectUsage)>
	^ GL_STREAM_READ
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STREAM_READ_ARB [

	<enum: #'GL_STREAM_READ_ARB'>
	<value: 16r88E1>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_STREAM_READ_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STRICT_DEPTHFUNC_HINT_PGI [

	<enum: #'GL_STRICT_DEPTHFUNC_HINT_PGI'>
	<value: 16r1A216>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_STRICT_DEPTHFUNC_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STRICT_LIGHTING_HINT_PGI [

	<enum: #'GL_STRICT_LIGHTING_HINT_PGI'>
	<value: 16r1A217>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_STRICT_LIGHTING_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> STRICT_SCISSOR_HINT_PGI [

	<enum: #'GL_STRICT_SCISSOR_HINT_PGI'>
	<value: 16r1A218>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_STRICT_SCISSOR_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR [

	<enum: #'GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR'>
	<value: 2r100>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_BALLOT_BIT_KHR [

	<enum: #'GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR'>
	<value: 2r1000>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_BASIC_BIT_KHR [

	<enum: #'GL_SUBGROUP_FEATURE_BASIC_BIT_KHR'>
	<value: 2r1>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_BASIC_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_CLUSTERED_BIT_KHR [

	<enum: #'GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR'>
	<value: 2r1000000>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_PARTITIONED_BIT_NV [

	<enum: #'GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV'>
	<value: 2r100000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_QUAD_BIT_KHR [

	<enum: #'GL_SUBGROUP_FEATURE_QUAD_BIT_KHR'>
	<value: 2r10000000>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_QUAD_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_SHUFFLE_BIT_KHR [

	<enum: #'GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR'>
	<value: 2r10000>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR [

	<enum: #'GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR'>
	<value: 2r100000>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_FEATURE_VOTE_BIT_KHR [

	<enum: #'GL_SUBGROUP_FEATURE_VOTE_BIT_KHR'>
	<value: 2r10>
	<suffix: #KHR>
	<bitmask>
	<groups: #(#SubgroupSupportedFeatures)>
	^ GL_SUBGROUP_FEATURE_VOTE_BIT_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_QUAD_ALL_STAGES_KHR [

	<enum: #'GL_SUBGROUP_QUAD_ALL_STAGES_KHR'>
	<value: 16r9535>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_SUBGROUP_QUAD_ALL_STAGES_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_SIZE_KHR [

	<enum: #'GL_SUBGROUP_SIZE_KHR'>
	<value: 16r9532>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_SUBGROUP_SIZE_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_SUPPORTED_FEATURES_KHR [

	<enum: #'GL_SUBGROUP_SUPPORTED_FEATURES_KHR'>
	<value: 16r9534>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_SUBGROUP_SUPPORTED_FEATURES_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBGROUP_SUPPORTED_STAGES_KHR [

	<enum: #'GL_SUBGROUP_SUPPORTED_STAGES_KHR'>
	<value: 16r9533>
	<vendor: #NV>
	<suffix: #KHR>
	^ GL_SUBGROUP_SUPPORTED_STAGES_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBPIXEL_BITS [

	<enum: #'GL_SUBPIXEL_BITS'>
	<value: 16rD50>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_SUBPIXEL_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBPIXEL_PRECISION_BIAS_X_BITS_NV [

	<enum: #'GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV'>
	<value: 16r9347>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBPIXEL_PRECISION_BIAS_Y_BITS_NV [

	<enum: #'GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV'>
	<value: 16r9348>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBSAMPLE_DISTANCE_AMD [

	<enum: #'GL_SUBSAMPLE_DISTANCE_AMD'>
	<value: 16r883F>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_SUBSAMPLE_DISTANCE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBTRACT [

	<enum: #'GL_SUBTRACT'>
	<value: 16r84E7>
	<vendor: #ARB>
	^ GL_SUBTRACT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUBTRACT_ARB [

	<enum: #'GL_SUBTRACT_ARB'>
	<value: 16r84E7>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SUBTRACT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUB_ATI [

	<enum: #'GL_SUB_ATI'>
	<value: 16r8965>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#FragmentOpATI)>
	^ GL_SUB_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUCCESS_NV [

	<enum: #'GL_SUCCESS_NV'>
	<value: 16r902F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SUCCESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUPERSAMPLE_SCALE_X_NV [

	<enum: #'GL_SUPERSAMPLE_SCALE_X_NV'>
	<value: 16r9372>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SUPERSAMPLE_SCALE_X_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUPERSAMPLE_SCALE_Y_NV [

	<enum: #'GL_SUPERSAMPLE_SCALE_Y_NV'>
	<value: 16r9373>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SUPERSAMPLE_SCALE_Y_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SUPPORTED_MULTISAMPLE_MODES_AMD [

	<enum: #'GL_SUPPORTED_MULTISAMPLE_MODES_AMD'>
	<value: 16r91B7>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_SUPPORTED_MULTISAMPLE_MODES_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SURFACE_MAPPED_NV [

	<enum: #'GL_SURFACE_MAPPED_NV'>
	<value: 16r8700>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SURFACE_MAPPED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SURFACE_REGISTERED_NV [

	<enum: #'GL_SURFACE_REGISTERED_NV'>
	<value: 16r86FD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SURFACE_REGISTERED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SURFACE_STATE_NV [

	<enum: #'GL_SURFACE_STATE_NV'>
	<value: 16r86EB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_SURFACE_STATE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SWIZZLE_STQ_ATI [

	<enum: #'GL_SWIZZLE_STQ_ATI'>
	<value: 16r8977>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#SwizzleOpATI)>
	^ GL_SWIZZLE_STQ_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SWIZZLE_STQ_DQ_ATI [

	<enum: #'GL_SWIZZLE_STQ_DQ_ATI'>
	<value: 16r8979>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#SwizzleOpATI)>
	^ GL_SWIZZLE_STQ_DQ_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SWIZZLE_STRQ_ATI [

	<enum: #'GL_SWIZZLE_STRQ_ATI'>
	<value: 16r897A>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_SWIZZLE_STRQ_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SWIZZLE_STRQ_DQ_ATI [

	<enum: #'GL_SWIZZLE_STRQ_DQ_ATI'>
	<value: 16r897B>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_SWIZZLE_STRQ_DQ_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SWIZZLE_STR_ATI [

	<enum: #'GL_SWIZZLE_STR_ATI'>
	<value: 16r8976>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#SwizzleOpATI)>
	^ GL_SWIZZLE_STR_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SWIZZLE_STR_DR_ATI [

	<enum: #'GL_SWIZZLE_STR_DR_ATI'>
	<value: 16r8978>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#SwizzleOpATI)>
	^ GL_SWIZZLE_STR_DR_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_CL_EVENT_ARB [

	<enum: #'GL_SYNC_CL_EVENT_ARB'>
	<value: 16r8240>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SYNC_CL_EVENT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_CL_EVENT_COMPLETE_ARB [

	<enum: #'GL_SYNC_CL_EVENT_COMPLETE_ARB'>
	<value: 16r8241>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_SYNC_CL_EVENT_COMPLETE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_CONDITION [

	<enum: #'GL_SYNC_CONDITION'>
	<value: 16r9113>
	<vendor: #ARB>
	<groups: #(#SyncParameterName)>
	^ GL_SYNC_CONDITION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_CONDITION_APPLE [

	<enum: #'GL_SYNC_CONDITION_APPLE'>
	<value: 16r9113>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_SYNC_CONDITION_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_FENCE [

	<enum: #'GL_SYNC_FENCE'>
	<value: 16r9116>
	<vendor: #ARB>
	^ GL_SYNC_FENCE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_FENCE_APPLE [

	<enum: #'GL_SYNC_FENCE_APPLE'>
	<value: 16r9116>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_SYNC_FENCE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_FLAGS [

	<enum: #'GL_SYNC_FLAGS'>
	<value: 16r9115>
	<vendor: #ARB>
	<groups: #(#SyncParameterName)>
	^ GL_SYNC_FLAGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_FLAGS_APPLE [

	<enum: #'GL_SYNC_FLAGS_APPLE'>
	<value: 16r9115>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_SYNC_FLAGS_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_FLUSH_COMMANDS_BIT [

	<enum: #'GL_SYNC_FLUSH_COMMANDS_BIT'>
	<value: 2r1>
	<bitmask>
	<groups: #(#SyncObjectMask)>
	^ GL_SYNC_FLUSH_COMMANDS_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_FLUSH_COMMANDS_BIT_APPLE [

	<enum: #'GL_SYNC_FLUSH_COMMANDS_BIT_APPLE'>
	<value: 2r1>
	<suffix: #APPLE>
	<bitmask>
	<groups: #(#SyncObjectMask)>
	^ GL_SYNC_FLUSH_COMMANDS_BIT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_GPU_COMMANDS_COMPLETE [

	<enum: #'GL_SYNC_GPU_COMMANDS_COMPLETE'>
	<value: 16r9117>
	<vendor: #ARB>
	<groups: #(#SyncCondition)>
	^ GL_SYNC_GPU_COMMANDS_COMPLETE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_GPU_COMMANDS_COMPLETE_APPLE [

	<enum: #'GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE'>
	<value: 16r9117>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_OBJECT_APPLE [

	<enum: #'GL_SYNC_OBJECT_APPLE'>
	<value: 16r8A53>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_SYNC_OBJECT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_STATUS [

	<enum: #'GL_SYNC_STATUS'>
	<value: 16r9114>
	<vendor: #ARB>
	<groups: #(#SyncParameterName)>
	^ GL_SYNC_STATUS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_STATUS_APPLE [

	<enum: #'GL_SYNC_STATUS_APPLE'>
	<value: 16r9114>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_SYNC_STATUS_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYNC_X11_FENCE_EXT [

	<enum: #'GL_SYNC_X11_FENCE_EXT'>
	<value: 16r90E1>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_SYNC_X11_FENCE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> SYSTEM_FONT_NAME_NV [

	<enum: #'GL_SYSTEM_FONT_NAME_NV'>
	<value: 16r9073>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathFontTarget)>
	^ GL_SYSTEM_FONT_NAME_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T [

	<enum: #'GL_T'>
	<value: 16r2001>
	<vendor: #ARB>
	<groups: #(#TextureCoordName)>
	^ GL_T
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_C3F_V3F [

	<enum: #'GL_T2F_C3F_V3F'>
	<value: 16r2A2A>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_T2F_C3F_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_C4F_N3F_V3F [

	<enum: #'GL_T2F_C4F_N3F_V3F'>
	<value: 16r2A2C>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_T2F_C4F_N3F_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_C4UB_V3F [

	<enum: #'GL_T2F_C4UB_V3F'>
	<value: 16r2A29>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_T2F_C4UB_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_IUI_N3F_V2F_EXT [

	<enum: #'GL_T2F_IUI_N3F_V2F_EXT'>
	<value: 16r81B3>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_T2F_IUI_N3F_V2F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_IUI_N3F_V3F_EXT [

	<enum: #'GL_T2F_IUI_N3F_V3F_EXT'>
	<value: 16r81B4>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_T2F_IUI_N3F_V3F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_IUI_V2F_EXT [

	<enum: #'GL_T2F_IUI_V2F_EXT'>
	<value: 16r81B1>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_T2F_IUI_V2F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_IUI_V3F_EXT [

	<enum: #'GL_T2F_IUI_V3F_EXT'>
	<value: 16r81B2>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_T2F_IUI_V3F_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_N3F_V3F [

	<enum: #'GL_T2F_N3F_V3F'>
	<value: 16r2A2B>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_T2F_N3F_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T2F_V3F [

	<enum: #'GL_T2F_V3F'>
	<value: 16r2A27>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_T2F_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T4F_C4F_N3F_V4F [

	<enum: #'GL_T4F_C4F_N3F_V4F'>
	<value: 16r2A2D>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_T4F_C4F_N3F_V4F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> T4F_V4F [

	<enum: #'GL_T4F_V4F'>
	<value: 16r2A28>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_T4F_V4F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TABLE_TOO_LARGE [

	<enum: #'GL_TABLE_TOO_LARGE'>
	<value: 16r8031>
	<vendor: #ARB>
	<groups: #(#ErrorCode)>
	^ GL_TABLE_TOO_LARGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TABLE_TOO_LARGE_EXT [

	<enum: #'GL_TABLE_TOO_LARGE_EXT'>
	<value: 16r8031>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ErrorCode)>
	^ GL_TABLE_TOO_LARGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TANGENT_ARRAY_EXT [

	<enum: #'GL_TANGENT_ARRAY_EXT'>
	<value: 16r8439>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TANGENT_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TANGENT_ARRAY_POINTER_EXT [

	<enum: #'GL_TANGENT_ARRAY_POINTER_EXT'>
	<value: 16r8442>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TANGENT_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TANGENT_ARRAY_STRIDE_EXT [

	<enum: #'GL_TANGENT_ARRAY_STRIDE_EXT'>
	<value: 16r843F>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TANGENT_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TANGENT_ARRAY_TYPE_EXT [

	<enum: #'GL_TANGENT_ARRAY_TYPE_EXT'>
	<value: 16r843E>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TANGENT_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TASK_SHADER_BIT_NV [

	<enum: #'GL_TASK_SHADER_BIT_NV'>
	<value: 2r10000000>
	<suffix: #NV>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_TASK_SHADER_BIT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TASK_SHADER_NV [

	<enum: #'GL_TASK_SHADER_NV'>
	<value: 16r955A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TASK_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TASK_SUBROUTINE_NV [

	<enum: #'GL_TASK_SUBROUTINE_NV'>
	<value: 16r957D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TASK_SUBROUTINE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TASK_SUBROUTINE_UNIFORM_NV [

	<enum: #'GL_TASK_SUBROUTINE_UNIFORM_NV'>
	<value: 16r957F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TASK_SUBROUTINE_UNIFORM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TASK_WORK_GROUP_SIZE_NV [

	<enum: #'GL_TASK_WORK_GROUP_SIZE_NV'>
	<value: 16r953F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TASK_WORK_GROUP_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TERMINATE_SEQUENCE_COMMAND_NV [

	<enum: #'GL_TERMINATE_SEQUENCE_COMMAND_NV'>
	<value: 16r0>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_TERMINATE_SEQUENCE_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESSELLATION_FACTOR_AMD [

	<enum: #'GL_TESSELLATION_FACTOR_AMD'>
	<value: 16r9005>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_TESSELLATION_FACTOR_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESSELLATION_MODE_AMD [

	<enum: #'GL_TESSELLATION_MODE_AMD'>
	<value: 16r9004>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_TESSELLATION_MODE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_OUTPUT_VERTICES [

	<enum: #'GL_TESS_CONTROL_OUTPUT_VERTICES'>
	<value: 16r8E75>
	<vendor: #NV>
	^ GL_TESS_CONTROL_OUTPUT_VERTICES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_OUTPUT_VERTICES_EXT [

	<enum: #'GL_TESS_CONTROL_OUTPUT_VERTICES_EXT'>
	<value: 16r8E75>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TESS_CONTROL_OUTPUT_VERTICES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_OUTPUT_VERTICES_OES [

	<enum: #'GL_TESS_CONTROL_OUTPUT_VERTICES_OES'>
	<value: 16r8E75>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TESS_CONTROL_OUTPUT_VERTICES_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_PROGRAM_NV [

	<enum: #'GL_TESS_CONTROL_PROGRAM_NV'>
	<value: 16r891E>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#ProgramTarget)>
	^ GL_TESS_CONTROL_PROGRAM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV [

	<enum: #'GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV'>
	<value: 16r8C74>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SHADER [

	<enum: #'GL_TESS_CONTROL_SHADER'>
	<value: 16r8E88>
	<vendor: #NV>
	<groups: #(#PipelineParameterName #ShaderType)>
	^ GL_TESS_CONTROL_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SHADER_BIT [

	<enum: #'GL_TESS_CONTROL_SHADER_BIT'>
	<value: 2r1000>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_TESS_CONTROL_SHADER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SHADER_BIT_EXT [

	<enum: #'GL_TESS_CONTROL_SHADER_BIT_EXT'>
	<value: 2r1000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_TESS_CONTROL_SHADER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SHADER_BIT_OES [

	<enum: #'GL_TESS_CONTROL_SHADER_BIT_OES'>
	<value: 2r1000>
	<suffix: #OES>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_TESS_CONTROL_SHADER_BIT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SHADER_EXT [

	<enum: #'GL_TESS_CONTROL_SHADER_EXT'>
	<value: 16r8E88>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TESS_CONTROL_SHADER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SHADER_OES [

	<enum: #'GL_TESS_CONTROL_SHADER_OES'>
	<value: 16r8E88>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TESS_CONTROL_SHADER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SHADER_PATCHES [

	<enum: #'GL_TESS_CONTROL_SHADER_PATCHES'>
	<value: 16r82F1>
	<vendor: #ARB>
	^ GL_TESS_CONTROL_SHADER_PATCHES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SHADER_PATCHES_ARB [

	<enum: #'GL_TESS_CONTROL_SHADER_PATCHES_ARB'>
	<value: 16r82F1>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TESS_CONTROL_SHADER_PATCHES_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SUBROUTINE [

	<enum: #'GL_TESS_CONTROL_SUBROUTINE'>
	<value: 16r92E9>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_TESS_CONTROL_SUBROUTINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_SUBROUTINE_UNIFORM [

	<enum: #'GL_TESS_CONTROL_SUBROUTINE_UNIFORM'>
	<value: 16r92EF>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_TESS_CONTROL_SUBROUTINE_UNIFORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_CONTROL_TEXTURE [

	<enum: #'GL_TESS_CONTROL_TEXTURE'>
	<value: 16r829C>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TESS_CONTROL_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_PROGRAM_NV [

	<enum: #'GL_TESS_EVALUATION_PROGRAM_NV'>
	<value: 16r891F>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#ProgramTarget)>
	^ GL_TESS_EVALUATION_PROGRAM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV [

	<enum: #'GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV'>
	<value: 16r8C75>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SHADER [

	<enum: #'GL_TESS_EVALUATION_SHADER'>
	<value: 16r8E87>
	<vendor: #NV>
	<groups: #(#PipelineParameterName #ShaderType)>
	^ GL_TESS_EVALUATION_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SHADER_BIT [

	<enum: #'GL_TESS_EVALUATION_SHADER_BIT'>
	<value: 2r10000>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_TESS_EVALUATION_SHADER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SHADER_BIT_EXT [

	<enum: #'GL_TESS_EVALUATION_SHADER_BIT_EXT'>
	<value: 2r10000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_TESS_EVALUATION_SHADER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SHADER_BIT_OES [

	<enum: #'GL_TESS_EVALUATION_SHADER_BIT_OES'>
	<value: 2r10000>
	<suffix: #OES>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_TESS_EVALUATION_SHADER_BIT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SHADER_EXT [

	<enum: #'GL_TESS_EVALUATION_SHADER_EXT'>
	<value: 16r8E87>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TESS_EVALUATION_SHADER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SHADER_INVOCATIONS [

	<enum: #'GL_TESS_EVALUATION_SHADER_INVOCATIONS'>
	<value: 16r82F2>
	<vendor: #ARB>
	^ GL_TESS_EVALUATION_SHADER_INVOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SHADER_INVOCATIONS_ARB [

	<enum: #'GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB'>
	<value: 16r82F2>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SHADER_OES [

	<enum: #'GL_TESS_EVALUATION_SHADER_OES'>
	<value: 16r8E87>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TESS_EVALUATION_SHADER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SUBROUTINE [

	<enum: #'GL_TESS_EVALUATION_SUBROUTINE'>
	<value: 16r92EA>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_TESS_EVALUATION_SUBROUTINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_SUBROUTINE_UNIFORM [

	<enum: #'GL_TESS_EVALUATION_SUBROUTINE_UNIFORM'>
	<value: 16r92F0>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_EVALUATION_TEXTURE [

	<enum: #'GL_TESS_EVALUATION_TEXTURE'>
	<value: 16r829D>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TESS_EVALUATION_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_MODE [

	<enum: #'GL_TESS_GEN_MODE'>
	<value: 16r8E76>
	<vendor: #NV>
	^ GL_TESS_GEN_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_MODE_EXT [

	<enum: #'GL_TESS_GEN_MODE_EXT'>
	<value: 16r8E76>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TESS_GEN_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_MODE_OES [

	<enum: #'GL_TESS_GEN_MODE_OES'>
	<value: 16r8E76>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TESS_GEN_MODE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_POINT_MODE [

	<enum: #'GL_TESS_GEN_POINT_MODE'>
	<value: 16r8E79>
	<vendor: #NV>
	^ GL_TESS_GEN_POINT_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_POINT_MODE_EXT [

	<enum: #'GL_TESS_GEN_POINT_MODE_EXT'>
	<value: 16r8E79>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TESS_GEN_POINT_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_POINT_MODE_OES [

	<enum: #'GL_TESS_GEN_POINT_MODE_OES'>
	<value: 16r8E79>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TESS_GEN_POINT_MODE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_SPACING [

	<enum: #'GL_TESS_GEN_SPACING'>
	<value: 16r8E77>
	<vendor: #NV>
	^ GL_TESS_GEN_SPACING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_SPACING_EXT [

	<enum: #'GL_TESS_GEN_SPACING_EXT'>
	<value: 16r8E77>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TESS_GEN_SPACING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_SPACING_OES [

	<enum: #'GL_TESS_GEN_SPACING_OES'>
	<value: 16r8E77>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TESS_GEN_SPACING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_VERTEX_ORDER [

	<enum: #'GL_TESS_GEN_VERTEX_ORDER'>
	<value: 16r8E78>
	<vendor: #NV>
	^ GL_TESS_GEN_VERTEX_ORDER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_VERTEX_ORDER_EXT [

	<enum: #'GL_TESS_GEN_VERTEX_ORDER_EXT'>
	<value: 16r8E78>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TESS_GEN_VERTEX_ORDER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TESS_GEN_VERTEX_ORDER_OES [

	<enum: #'GL_TESS_GEN_VERTEX_ORDER_OES'>
	<value: 16r8E78>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TESS_GEN_VERTEX_ORDER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXCOORD1_BIT_PGI [

	<enum: #'GL_TEXCOORD1_BIT_PGI'>
	<value: 2r10000000000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_TEXCOORD1_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXCOORD2_BIT_PGI [

	<enum: #'GL_TEXCOORD2_BIT_PGI'>
	<value: 2r100000000000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_TEXCOORD2_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXCOORD3_BIT_PGI [

	<enum: #'GL_TEXCOORD3_BIT_PGI'>
	<value: 2r1000000000000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_TEXCOORD3_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXCOORD4_BIT_PGI [

	<enum: #'GL_TEXCOORD4_BIT_PGI'>
	<value: 2r10000000000000000000000000000000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_TEXCOORD4_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE [

	<enum: #'GL_TEXTURE'>
	<value: 16r1702>
	<vendor: #ARB>
	<groups: #(#MatrixMode #ObjectIdentifier)>
	^ GL_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE0 [

	<enum: #'GL_TEXTURE0'>
	<value: 16r84C0>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE0
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE0_ARB [

	<enum: #'GL_TEXTURE0_ARB'>
	<value: 16r84C0>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#CombinerRegisterNV)>
	^ GL_TEXTURE0_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE1 [

	<enum: #'GL_TEXTURE1'>
	<value: 16r84C1>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE10 [

	<enum: #'GL_TEXTURE10'>
	<value: 16r84CA>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE10
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE10_ARB [

	<enum: #'GL_TEXTURE10_ARB'>
	<value: 16r84CA>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE10_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE11 [

	<enum: #'GL_TEXTURE11'>
	<value: 16r84CB>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE11
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE11_ARB [

	<enum: #'GL_TEXTURE11_ARB'>
	<value: 16r84CB>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE11_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE12 [

	<enum: #'GL_TEXTURE12'>
	<value: 16r84CC>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE12
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE12_ARB [

	<enum: #'GL_TEXTURE12_ARB'>
	<value: 16r84CC>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE12_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE13 [

	<enum: #'GL_TEXTURE13'>
	<value: 16r84CD>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE13
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE13_ARB [

	<enum: #'GL_TEXTURE13_ARB'>
	<value: 16r84CD>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE13_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE14 [

	<enum: #'GL_TEXTURE14'>
	<value: 16r84CE>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE14
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE14_ARB [

	<enum: #'GL_TEXTURE14_ARB'>
	<value: 16r84CE>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE14_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE15 [

	<enum: #'GL_TEXTURE15'>
	<value: 16r84CF>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE15
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE15_ARB [

	<enum: #'GL_TEXTURE15_ARB'>
	<value: 16r84CF>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE15_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE16 [

	<enum: #'GL_TEXTURE16'>
	<value: 16r84D0>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE16
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE16_ARB [

	<enum: #'GL_TEXTURE16_ARB'>
	<value: 16r84D0>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE16_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE17 [

	<enum: #'GL_TEXTURE17'>
	<value: 16r84D1>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE17
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE17_ARB [

	<enum: #'GL_TEXTURE17_ARB'>
	<value: 16r84D1>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE17_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE18 [

	<enum: #'GL_TEXTURE18'>
	<value: 16r84D2>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE18
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE18_ARB [

	<enum: #'GL_TEXTURE18_ARB'>
	<value: 16r84D2>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE18_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE19 [

	<enum: #'GL_TEXTURE19'>
	<value: 16r84D3>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE19
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE19_ARB [

	<enum: #'GL_TEXTURE19_ARB'>
	<value: 16r84D3>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE19_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE1_ARB [

	<enum: #'GL_TEXTURE1_ARB'>
	<value: 16r84C1>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#CombinerRegisterNV)>
	^ GL_TEXTURE1_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE2 [

	<enum: #'GL_TEXTURE2'>
	<value: 16r84C2>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE20 [

	<enum: #'GL_TEXTURE20'>
	<value: 16r84D4>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE20
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE20_ARB [

	<enum: #'GL_TEXTURE20_ARB'>
	<value: 16r84D4>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE20_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE21 [

	<enum: #'GL_TEXTURE21'>
	<value: 16r84D5>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE21
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE21_ARB [

	<enum: #'GL_TEXTURE21_ARB'>
	<value: 16r84D5>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE21_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE22 [

	<enum: #'GL_TEXTURE22'>
	<value: 16r84D6>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE22
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE22_ARB [

	<enum: #'GL_TEXTURE22_ARB'>
	<value: 16r84D6>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE22_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE23 [

	<enum: #'GL_TEXTURE23'>
	<value: 16r84D7>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE23
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE23_ARB [

	<enum: #'GL_TEXTURE23_ARB'>
	<value: 16r84D7>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE23_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE24 [

	<enum: #'GL_TEXTURE24'>
	<value: 16r84D8>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE24
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE24_ARB [

	<enum: #'GL_TEXTURE24_ARB'>
	<value: 16r84D8>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE24_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE25 [

	<enum: #'GL_TEXTURE25'>
	<value: 16r84D9>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE25
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE25_ARB [

	<enum: #'GL_TEXTURE25_ARB'>
	<value: 16r84D9>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE25_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE26 [

	<enum: #'GL_TEXTURE26'>
	<value: 16r84DA>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE26
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE26_ARB [

	<enum: #'GL_TEXTURE26_ARB'>
	<value: 16r84DA>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE26_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE27 [

	<enum: #'GL_TEXTURE27'>
	<value: 16r84DB>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE27
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE27_ARB [

	<enum: #'GL_TEXTURE27_ARB'>
	<value: 16r84DB>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE27_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE28 [

	<enum: #'GL_TEXTURE28'>
	<value: 16r84DC>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE28
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE28_ARB [

	<enum: #'GL_TEXTURE28_ARB'>
	<value: 16r84DC>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE28_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE29 [

	<enum: #'GL_TEXTURE29'>
	<value: 16r84DD>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE29
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE29_ARB [

	<enum: #'GL_TEXTURE29_ARB'>
	<value: 16r84DD>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE29_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE2_ARB [

	<enum: #'GL_TEXTURE2_ARB'>
	<value: 16r84C2>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE3 [

	<enum: #'GL_TEXTURE3'>
	<value: 16r84C3>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE30 [

	<enum: #'GL_TEXTURE30'>
	<value: 16r84DE>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE30
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE30_ARB [

	<enum: #'GL_TEXTURE30_ARB'>
	<value: 16r84DE>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE30_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE31 [

	<enum: #'GL_TEXTURE31'>
	<value: 16r84DF>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE31
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE31_ARB [

	<enum: #'GL_TEXTURE31_ARB'>
	<value: 16r84DF>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE31_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE3_ARB [

	<enum: #'GL_TEXTURE3_ARB'>
	<value: 16r84C3>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE4 [

	<enum: #'GL_TEXTURE4'>
	<value: 16r84C4>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE4_ARB [

	<enum: #'GL_TEXTURE4_ARB'>
	<value: 16r84C4>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE5 [

	<enum: #'GL_TEXTURE5'>
	<value: 16r84C5>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE5_ARB [

	<enum: #'GL_TEXTURE5_ARB'>
	<value: 16r84C5>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE5_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE6 [

	<enum: #'GL_TEXTURE6'>
	<value: 16r84C6>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE6
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE6_ARB [

	<enum: #'GL_TEXTURE6_ARB'>
	<value: 16r84C6>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE6_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE7 [

	<enum: #'GL_TEXTURE7'>
	<value: 16r84C7>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE7
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE7_ARB [

	<enum: #'GL_TEXTURE7_ARB'>
	<value: 16r84C7>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE7_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE8 [

	<enum: #'GL_TEXTURE8'>
	<value: 16r84C8>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE8_ARB [

	<enum: #'GL_TEXTURE8_ARB'>
	<value: 16r84C8>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE8_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE9 [

	<enum: #'GL_TEXTURE9'>
	<value: 16r84C9>
	<vendor: #ARB>
	<groups: #(#TextureUnit)>
	^ GL_TEXTURE9
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE9_ARB [

	<enum: #'GL_TEXTURE9_ARB'>
	<value: 16r84C9>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE9_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_1D [

	<enum: #'GL_TEXTURE_1D'>
	<value: 16rDE0>
	<vendor: #ARB>
	<groups: #(#CopyImageSubDataTarget #EnableCap #GetPName #TextureTarget)>
	^ GL_TEXTURE_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_1D_ARRAY [

	<enum: #'GL_TEXTURE_1D_ARRAY'>
	<value: 16r8C18>
	<vendor: #NV>
	<groups: #(#CopyImageSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_1D_ARRAY_EXT [

	<enum: #'GL_TEXTURE_1D_ARRAY_EXT'>
	<value: 16r8C18>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_1D_BINDING_EXT [

	<enum: #'GL_TEXTURE_1D_BINDING_EXT'>
	<value: 16r8068>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_1D_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_1D_STACK_BINDING_MESAX [

	<enum: #'GL_TEXTURE_1D_STACK_BINDING_MESAX'>
	<value: 16r875D>
	<vendor: #MESA>
	<suffix: #MESAX>
	^ GL_TEXTURE_1D_STACK_BINDING_MESAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_1D_STACK_MESAX [

	<enum: #'GL_TEXTURE_1D_STACK_MESAX'>
	<value: 16r8759>
	<vendor: #MESA>
	<suffix: #MESAX>
	^ GL_TEXTURE_1D_STACK_MESAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D [

	<enum: #'GL_TEXTURE_2D'>
	<value: 16rDE1>
	<vendor: #ARB>
	<groups: #(#CopyImageSubDataTarget #EnableCap #GetPName #TextureTarget)>
	^ GL_TEXTURE_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D_ARRAY [

	<enum: #'GL_TEXTURE_2D_ARRAY'>
	<value: 16r8C1A>
	<vendor: #NV>
	<groups: #(#CopyImageSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D_ARRAY_EXT [

	<enum: #'GL_TEXTURE_2D_ARRAY_EXT'>
	<value: 16r8C1A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D_BINDING_EXT [

	<enum: #'GL_TEXTURE_2D_BINDING_EXT'>
	<value: 16r8069>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_2D_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D_MULTISAMPLE [

	<enum: #'GL_TEXTURE_2D_MULTISAMPLE'>
	<value: 16r9100>
	<vendor: #ARB>
	<groups: #(#CopyImageSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_TEXTURE_2D_MULTISAMPLE_ARRAY'>
	<value: 16r9102>
	<vendor: #ARB>
	<groups: #(#CopyImageSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D_MULTISAMPLE_ARRAY_OES [

	<enum: #'GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES'>
	<value: 16r9102>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D_STACK_BINDING_MESAX [

	<enum: #'GL_TEXTURE_2D_STACK_BINDING_MESAX'>
	<value: 16r875E>
	<vendor: #MESA>
	<suffix: #MESAX>
	^ GL_TEXTURE_2D_STACK_BINDING_MESAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_2D_STACK_MESAX [

	<enum: #'GL_TEXTURE_2D_STACK_MESAX'>
	<value: 16r875A>
	<vendor: #MESA>
	<suffix: #MESAX>
	^ GL_TEXTURE_2D_STACK_MESAX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_3D [

	<enum: #'GL_TEXTURE_3D'>
	<value: 16r806F>
	<vendor: #ARB>
	<groups: #(#CopyImageSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_3D_BINDING_EXT [

	<enum: #'GL_TEXTURE_3D_BINDING_EXT'>
	<value: 16r806A>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_3D_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_3D_BINDING_OES [

	<enum: #'GL_TEXTURE_3D_BINDING_OES'>
	<value: 16r806A>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_3D_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_3D_EXT [

	<enum: #'GL_TEXTURE_3D_EXT'>
	<value: 16r806F>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#EnableCap #GetPName #TextureTarget)>
	^ GL_TEXTURE_3D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_3D_OES [

	<enum: #'GL_TEXTURE_3D_OES'>
	<value: 16r806F>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_3D_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_4DSIZE_SGIS [

	<enum: #'GL_TEXTURE_4DSIZE_SGIS'>
	<value: 16r8136>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_4DSIZE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_4D_BINDING_SGIS [

	<enum: #'GL_TEXTURE_4D_BINDING_SGIS'>
	<value: 16r814F>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_4D_BINDING_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_4D_SGIS [

	<enum: #'GL_TEXTURE_4D_SGIS'>
	<value: 16r8134>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#EnableCap #GetPName #TextureTarget)>
	^ GL_TEXTURE_4D_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ALPHA_MODULATE_IMG [

	<enum: #'GL_TEXTURE_ALPHA_MODULATE_IMG'>
	<value: 16r8C06>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_TEXTURE_ALPHA_MODULATE_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ALPHA_SIZE [

	<enum: #'GL_TEXTURE_ALPHA_SIZE'>
	<value: 16r805F>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_ALPHA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ALPHA_SIZE_EXT [

	<enum: #'GL_TEXTURE_ALPHA_SIZE_EXT'>
	<value: 16r805F>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_ALPHA_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ALPHA_TYPE [

	<enum: #'GL_TEXTURE_ALPHA_TYPE'>
	<value: 16r8C13>
	<vendor: #NV>
	^ GL_TEXTURE_ALPHA_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ALPHA_TYPE_ARB [

	<enum: #'GL_TEXTURE_ALPHA_TYPE_ARB'>
	<value: 16r8C13>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_ALPHA_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_APPLICATION_MODE_EXT [

	<enum: #'GL_TEXTURE_APPLICATION_MODE_EXT'>
	<value: 16r834F>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TEXTURE_APPLICATION_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ASTC_DECODE_PRECISION_EXT [

	<enum: #'GL_TEXTURE_ASTC_DECODE_PRECISION_EXT'>
	<value: 16r8F69>
	<vendor: #ARM>
	<suffix: #EXT>
	^ GL_TEXTURE_ASTC_DECODE_PRECISION_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BASE_LEVEL [

	<enum: #'GL_TEXTURE_BASE_LEVEL'>
	<value: 16r813C>
	<vendor: #SGI>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_BASE_LEVEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BASE_LEVEL_SGIS [

	<enum: #'GL_TEXTURE_BASE_LEVEL_SGIS'>
	<value: 16r813C>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_BASE_LEVEL_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_1D [

	<enum: #'GL_TEXTURE_BINDING_1D'>
	<value: 16r8068>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_1D_ARRAY [

	<enum: #'GL_TEXTURE_BINDING_1D_ARRAY'>
	<value: 16r8C1C>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_1D_ARRAY_EXT [

	<enum: #'GL_TEXTURE_BINDING_1D_ARRAY_EXT'>
	<value: 16r8C1C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_BINDING_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_2D [

	<enum: #'GL_TEXTURE_BINDING_2D'>
	<value: 16r8069>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_2D_ARRAY [

	<enum: #'GL_TEXTURE_BINDING_2D_ARRAY'>
	<value: 16r8C1D>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_2D_ARRAY_EXT [

	<enum: #'GL_TEXTURE_BINDING_2D_ARRAY_EXT'>
	<value: 16r8C1D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_BINDING_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_2D_MULTISAMPLE [

	<enum: #'GL_TEXTURE_BINDING_2D_MULTISAMPLE'>
	<value: 16r9104>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY'>
	<value: 16r9105>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES [

	<enum: #'GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES'>
	<value: 16r9105>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_3D [

	<enum: #'GL_TEXTURE_BINDING_3D'>
	<value: 16r806A>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_3D_OES [

	<enum: #'GL_TEXTURE_BINDING_3D_OES'>
	<value: 16r806A>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_BINDING_3D_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_BUFFER [

	<enum: #'GL_TEXTURE_BINDING_BUFFER'>
	<value: 16r8C2C>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_BUFFER_ARB [

	<enum: #'GL_TEXTURE_BINDING_BUFFER_ARB'>
	<value: 16r8C2C>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_BINDING_BUFFER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_BUFFER_EXT [

	<enum: #'GL_TEXTURE_BINDING_BUFFER_EXT'>
	<value: 16r8C2C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_BINDING_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_BUFFER_OES [

	<enum: #'GL_TEXTURE_BINDING_BUFFER_OES'>
	<value: 16r8C2C>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_BINDING_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_CUBE_MAP [

	<enum: #'GL_TEXTURE_BINDING_CUBE_MAP'>
	<value: 16r8514>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_CUBE_MAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_CUBE_MAP_ARB [

	<enum: #'GL_TEXTURE_BINDING_CUBE_MAP_ARB'>
	<value: 16r8514>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_BINDING_CUBE_MAP_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_CUBE_MAP_ARRAY [

	<enum: #'GL_TEXTURE_BINDING_CUBE_MAP_ARRAY'>
	<value: 16r900A>
	<vendor: #AMD>
	^ GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB [

	<enum: #'GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB'>
	<value: 16r900A>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT [

	<enum: #'GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT'>
	<value: 16r900A>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_CUBE_MAP_ARRAY_OES [

	<enum: #'GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES'>
	<value: 16r900A>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_CUBE_MAP_EXT [

	<enum: #'GL_TEXTURE_BINDING_CUBE_MAP_EXT'>
	<value: 16r8514>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_BINDING_CUBE_MAP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_CUBE_MAP_OES [

	<enum: #'GL_TEXTURE_BINDING_CUBE_MAP_OES'>
	<value: 16r8514>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_BINDING_CUBE_MAP_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_EXTERNAL_OES [

	<enum: #'GL_TEXTURE_BINDING_EXTERNAL_OES'>
	<value: 16r8D67>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_TEXTURE_BINDING_EXTERNAL_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_RECTANGLE [

	<enum: #'GL_TEXTURE_BINDING_RECTANGLE'>
	<value: 16r84F6>
	<vendor: #NV>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BINDING_RECTANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_RECTANGLE_ARB [

	<enum: #'GL_TEXTURE_BINDING_RECTANGLE_ARB'>
	<value: 16r84F6>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_BINDING_RECTANGLE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_RECTANGLE_NV [

	<enum: #'GL_TEXTURE_BINDING_RECTANGLE_NV'>
	<value: 16r84F6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_BINDING_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BINDING_RENDERBUFFER_NV [

	<enum: #'GL_TEXTURE_BINDING_RENDERBUFFER_NV'>
	<value: 16r8E53>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_BINDING_RENDERBUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BIT [

	<enum: #'GL_TEXTURE_BIT'>
	<value: 2r1000000000000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_TEXTURE_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BLUE_SIZE [

	<enum: #'GL_TEXTURE_BLUE_SIZE'>
	<value: 16r805E>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_BLUE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BLUE_SIZE_EXT [

	<enum: #'GL_TEXTURE_BLUE_SIZE_EXT'>
	<value: 16r805E>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_BLUE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BLUE_TYPE [

	<enum: #'GL_TEXTURE_BLUE_TYPE'>
	<value: 16r8C12>
	<vendor: #NV>
	^ GL_TEXTURE_BLUE_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BLUE_TYPE_ARB [

	<enum: #'GL_TEXTURE_BLUE_TYPE_ARB'>
	<value: 16r8C12>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_BLUE_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BORDER [

	<enum: #'GL_TEXTURE_BORDER'>
	<value: 16r1005>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_BORDER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BORDER_COLOR [

	<enum: #'GL_TEXTURE_BORDER_COLOR'>
	<value: 16r1004>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #SamplerParameterF #TextureParameterName)>
	^ GL_TEXTURE_BORDER_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BORDER_COLOR_EXT [

	<enum: #'GL_TEXTURE_BORDER_COLOR_EXT'>
	<value: 16r1004>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_BORDER_COLOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BORDER_COLOR_NV [

	<enum: #'GL_TEXTURE_BORDER_COLOR_NV'>
	<value: 16r1004>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_BORDER_COLOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BORDER_COLOR_OES [

	<enum: #'GL_TEXTURE_BORDER_COLOR_OES'>
	<value: 16r1004>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_BORDER_COLOR_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BORDER_VALUES_NV [

	<enum: #'GL_TEXTURE_BORDER_VALUES_NV'>
	<value: 16r871A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_BORDER_VALUES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER [

	<enum: #'GL_TEXTURE_BUFFER'>
	<value: 16r8C2A>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_ARB [

	<enum: #'GL_TEXTURE_BUFFER_ARB'>
	<value: 16r8C2A>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_BUFFER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_BINDING [

	<enum: #'GL_TEXTURE_BUFFER_BINDING'>
	<value: 16r8C2A>
	<vendor: #NV>
	^ GL_TEXTURE_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_BINDING_EXT [

	<enum: #'GL_TEXTURE_BUFFER_BINDING_EXT'>
	<value: 16r8C2A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_BUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_BINDING_OES [

	<enum: #'GL_TEXTURE_BUFFER_BINDING_OES'>
	<value: 16r8C2A>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_BUFFER_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_DATA_STORE_BINDING [

	<enum: #'GL_TEXTURE_BUFFER_DATA_STORE_BINDING'>
	<value: 16r8C2D>
	<vendor: #NV>
	^ GL_TEXTURE_BUFFER_DATA_STORE_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_DATA_STORE_BINDING_ARB [

	<enum: #'GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB'>
	<value: 16r8C2D>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_DATA_STORE_BINDING_EXT [

	<enum: #'GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT'>
	<value: 16r8C2D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_DATA_STORE_BINDING_OES [

	<enum: #'GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES'>
	<value: 16r8C2D>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_EXT [

	<enum: #'GL_TEXTURE_BUFFER_EXT'>
	<value: 16r8C2A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_FORMAT_ARB [

	<enum: #'GL_TEXTURE_BUFFER_FORMAT_ARB'>
	<value: 16r8C2E>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_BUFFER_FORMAT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_FORMAT_EXT [

	<enum: #'GL_TEXTURE_BUFFER_FORMAT_EXT'>
	<value: 16r8C2E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_BUFFER_FORMAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_OES [

	<enum: #'GL_TEXTURE_BUFFER_OES'>
	<value: 16r8C2A>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_OFFSET [

	<enum: #'GL_TEXTURE_BUFFER_OFFSET'>
	<value: 16r919D>
	<vendor: #AMD>
	^ GL_TEXTURE_BUFFER_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_OFFSET_ALIGNMENT [

	<enum: #'GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT'>
	<value: 16r919F>
	<vendor: #AMD>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT [

	<enum: #'GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT'>
	<value: 16r919F>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES [

	<enum: #'GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES'>
	<value: 16r919F>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_OFFSET_EXT [

	<enum: #'GL_TEXTURE_BUFFER_OFFSET_EXT'>
	<value: 16r919D>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_TEXTURE_BUFFER_OFFSET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_OFFSET_OES [

	<enum: #'GL_TEXTURE_BUFFER_OFFSET_OES'>
	<value: 16r919D>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_TEXTURE_BUFFER_OFFSET_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_SIZE [

	<enum: #'GL_TEXTURE_BUFFER_SIZE'>
	<value: 16r919E>
	<vendor: #AMD>
	^ GL_TEXTURE_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_SIZE_EXT [

	<enum: #'GL_TEXTURE_BUFFER_SIZE_EXT'>
	<value: 16r919E>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_TEXTURE_BUFFER_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_BUFFER_SIZE_OES [

	<enum: #'GL_TEXTURE_BUFFER_SIZE_OES'>
	<value: 16r919E>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_TEXTURE_BUFFER_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CLIPMAP_CENTER_SGIX [

	<enum: #'GL_TEXTURE_CLIPMAP_CENTER_SGIX'>
	<value: 16r8171>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_CLIPMAP_CENTER_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CLIPMAP_DEPTH_SGIX [

	<enum: #'GL_TEXTURE_CLIPMAP_DEPTH_SGIX'>
	<value: 16r8176>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_CLIPMAP_DEPTH_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CLIPMAP_FRAME_SGIX [

	<enum: #'GL_TEXTURE_CLIPMAP_FRAME_SGIX'>
	<value: 16r8172>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_CLIPMAP_FRAME_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CLIPMAP_LOD_OFFSET_SGIX [

	<enum: #'GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX'>
	<value: 16r8175>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CLIPMAP_OFFSET_SGIX [

	<enum: #'GL_TEXTURE_CLIPMAP_OFFSET_SGIX'>
	<value: 16r8173>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_CLIPMAP_OFFSET_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX [

	<enum: #'GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX'>
	<value: 16r8174>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COLOR_SAMPLES_NV [

	<enum: #'GL_TEXTURE_COLOR_SAMPLES_NV'>
	<value: 16r9046>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_COLOR_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COLOR_TABLE_SGI [

	<enum: #'GL_TEXTURE_COLOR_TABLE_SGI'>
	<value: 16r80BC>
	<vendor: #ARB>
	<suffix: #SGI>
	<groups: #(#ColorTableTargetSGI #EnableCap #GetPName)>
	^ GL_TEXTURE_COLOR_TABLE_SGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COLOR_WRITEMASK_SGIS [

	<enum: #'GL_TEXTURE_COLOR_WRITEMASK_SGIS'>
	<value: 16r81EF>
	<vendor: #SGI>
	<suffix: #SGIS>
	^ GL_TEXTURE_COLOR_WRITEMASK_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_FAIL_VALUE_ARB [

	<enum: #'GL_TEXTURE_COMPARE_FAIL_VALUE_ARB'>
	<value: 16r80BF>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_FUNC [

	<enum: #'GL_TEXTURE_COMPARE_FUNC'>
	<value: 16r884D>
	<vendor: #ARB>
	<groups: #(#SamplerParameterI #TextureParameterName)>
	^ GL_TEXTURE_COMPARE_FUNC
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_FUNC_ARB [

	<enum: #'GL_TEXTURE_COMPARE_FUNC_ARB'>
	<value: 16r884D>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE_COMPARE_FUNC_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_FUNC_EXT [

	<enum: #'GL_TEXTURE_COMPARE_FUNC_EXT'>
	<value: 16r884D>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_COMPARE_FUNC_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_MODE [

	<enum: #'GL_TEXTURE_COMPARE_MODE'>
	<value: 16r884C>
	<vendor: #ARB>
	<groups: #(#SamplerParameterI #TextureParameterName)>
	^ GL_TEXTURE_COMPARE_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_MODE_ARB [

	<enum: #'GL_TEXTURE_COMPARE_MODE_ARB'>
	<value: 16r884C>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE_COMPARE_MODE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_MODE_EXT [

	<enum: #'GL_TEXTURE_COMPARE_MODE_EXT'>
	<value: 16r884C>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_COMPARE_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_OPERATOR_SGIX [

	<enum: #'GL_TEXTURE_COMPARE_OPERATOR_SGIX'>
	<value: 16r819B>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_COMPARE_OPERATOR_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPARE_SGIX [

	<enum: #'GL_TEXTURE_COMPARE_SGIX'>
	<value: 16r819A>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_COMPARE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPONENTS [

	<enum: #'GL_TEXTURE_COMPONENTS'>
	<value: 16r1003>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_COMPONENTS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSED [

	<enum: #'GL_TEXTURE_COMPRESSED'>
	<value: 16r86A1>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_COMPRESSED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSED_ARB [

	<enum: #'GL_TEXTURE_COMPRESSED_ARB'>
	<value: 16r86A1>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE_COMPRESSED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSED_BLOCK_HEIGHT [

	<enum: #'GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT'>
	<value: 16r82B2>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSED_BLOCK_SIZE [

	<enum: #'GL_TEXTURE_COMPRESSED_BLOCK_SIZE'>
	<value: 16r82B3>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_COMPRESSED_BLOCK_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSED_BLOCK_WIDTH [

	<enum: #'GL_TEXTURE_COMPRESSED_BLOCK_WIDTH'>
	<value: 16r82B1>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSED_IMAGE_SIZE [

	<enum: #'GL_TEXTURE_COMPRESSED_IMAGE_SIZE'>
	<value: 16r86A0>
	<vendor: #ARB>
	^ GL_TEXTURE_COMPRESSED_IMAGE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSED_IMAGE_SIZE_ARB [

	<enum: #'GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB'>
	<value: 16r86A0>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSION_HINT [

	<enum: #'GL_TEXTURE_COMPRESSION_HINT'>
	<value: 16r84EF>
	<vendor: #ARB>
	<groups: #(#GetPName #HintTarget)>
	^ GL_TEXTURE_COMPRESSION_HINT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COMPRESSION_HINT_ARB [

	<enum: #'GL_TEXTURE_COMPRESSION_HINT_ARB'>
	<value: 16r84EF>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#HintTarget)>
	^ GL_TEXTURE_COMPRESSION_HINT_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CONSTANT_DATA_SUNX [

	<enum: #'GL_TEXTURE_CONSTANT_DATA_SUNX'>
	<value: 16r81D6>
	<vendor: #SUN>
	<suffix: #SUNX>
	^ GL_TEXTURE_CONSTANT_DATA_SUNX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY [

	<enum: #'GL_TEXTURE_COORD_ARRAY'>
	<value: 16r8078>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_TEXTURE_COORD_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_ADDRESS_NV [

	<enum: #'GL_TEXTURE_COORD_ARRAY_ADDRESS_NV'>
	<value: 16r8F25>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_BUFFER_BINDING [

	<enum: #'GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING'>
	<value: 16r889A>
	<vendor: #NV>
	^ GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r889A>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_COUNT_EXT [

	<enum: #'GL_TEXTURE_COORD_ARRAY_COUNT_EXT'>
	<value: 16r808B>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_COORD_ARRAY_COUNT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_EXT [

	<enum: #'GL_TEXTURE_COORD_ARRAY_EXT'>
	<value: 16r8078>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_COORD_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_LENGTH_NV [

	<enum: #'GL_TEXTURE_COORD_ARRAY_LENGTH_NV'>
	<value: 16r8F2F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_COORD_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_LIST_IBM [

	<enum: #'GL_TEXTURE_COORD_ARRAY_LIST_IBM'>
	<value: 16r192A2>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_TEXTURE_COORD_ARRAY_LIST_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM [

	<enum: #'GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM'>
	<value: 16r192AC>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL [

	<enum: #'GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL'>
	<value: 16r83F8>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_POINTER [

	<enum: #'GL_TEXTURE_COORD_ARRAY_POINTER'>
	<value: 16r8092>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_TEXTURE_COORD_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_POINTER_EXT [

	<enum: #'GL_TEXTURE_COORD_ARRAY_POINTER_EXT'>
	<value: 16r8092>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPointervPName)>
	^ GL_TEXTURE_COORD_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_SIZE [

	<enum: #'GL_TEXTURE_COORD_ARRAY_SIZE'>
	<value: 16r8088>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_COORD_ARRAY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_SIZE_EXT [

	<enum: #'GL_TEXTURE_COORD_ARRAY_SIZE_EXT'>
	<value: 16r8088>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_COORD_ARRAY_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_STRIDE [

	<enum: #'GL_TEXTURE_COORD_ARRAY_STRIDE'>
	<value: 16r808A>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_COORD_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_STRIDE_EXT [

	<enum: #'GL_TEXTURE_COORD_ARRAY_STRIDE_EXT'>
	<value: 16r808A>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_TYPE [

	<enum: #'GL_TEXTURE_COORD_ARRAY_TYPE'>
	<value: 16r8089>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_COORD_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_ARRAY_TYPE_EXT [

	<enum: #'GL_TEXTURE_COORD_ARRAY_TYPE_EXT'>
	<value: 16r8089>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_COORD_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COORD_NV [

	<enum: #'GL_TEXTURE_COORD_NV'>
	<value: 16r8C79>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_COORD_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_COVERAGE_SAMPLES_NV [

	<enum: #'GL_TEXTURE_COVERAGE_SAMPLES_NV'>
	<value: 16r9045>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_COVERAGE_SAMPLES_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CROP_RECT_OES [

	<enum: #'GL_TEXTURE_CROP_RECT_OES'>
	<value: 16r8B9D>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_TEXTURE_CROP_RECT_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP [

	<enum: #'GL_TEXTURE_CUBE_MAP'>
	<value: 16r8513>
	<vendor: #NV>
	<groups: #(#CopyImageSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_ARB [

	<enum: #'GL_TEXTURE_CUBE_MAP_ARB'>
	<value: 16r8513>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_CUBE_MAP_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_ARRAY [

	<enum: #'GL_TEXTURE_CUBE_MAP_ARRAY'>
	<value: 16r9009>
	<vendor: #AMD>
	<groups: #(#CopyImageSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_ARRAY_ARB [

	<enum: #'GL_TEXTURE_CUBE_MAP_ARRAY_ARB'>
	<value: 16r9009>
	<vendor: #AMD>
	<suffix: #ARB>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_ARRAY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_ARRAY_EXT [

	<enum: #'GL_TEXTURE_CUBE_MAP_ARRAY_EXT'>
	<value: 16r9009>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_ARRAY_OES [

	<enum: #'GL_TEXTURE_CUBE_MAP_ARRAY_OES'>
	<value: 16r9009>
	<vendor: #AMD>
	<suffix: #OES>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_EXT [

	<enum: #'GL_TEXTURE_CUBE_MAP_EXT'>
	<value: 16r8513>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_CUBE_MAP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_X [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_X'>
	<value: 16r8516>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_X
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_X_ARB [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB'>
	<value: 16r8516>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_X_EXT [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT'>
	<value: 16r8516>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_X_OES [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES'>
	<value: 16r8516>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_Y [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y'>
	<value: 16r8518>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB'>
	<value: 16r8518>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT'>
	<value: 16r8518>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_Y_OES [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES'>
	<value: 16r8518>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_Z [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z'>
	<value: 16r851A>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB'>
	<value: 16r851A>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT'>
	<value: 16r851A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_NEGATIVE_Z_OES [

	<enum: #'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES'>
	<value: 16r851A>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_OES [

	<enum: #'GL_TEXTURE_CUBE_MAP_OES'>
	<value: 16r8513>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_CUBE_MAP_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_X [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_X'>
	<value: 16r8515>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_X
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_X_ARB [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB'>
	<value: 16r8515>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_X_EXT [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT'>
	<value: 16r8515>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_X_OES [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES'>
	<value: 16r8515>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_Y [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_Y'>
	<value: 16r8517>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_Y
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_Y_ARB [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB'>
	<value: 16r8517>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_Y_EXT [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT'>
	<value: 16r8517>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_Y_OES [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES'>
	<value: 16r8517>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_Z [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_Z'>
	<value: 16r8519>
	<vendor: #NV>
	<groups: #(#TextureTarget)>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_Z
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_Z_ARB [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB'>
	<value: 16r8519>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_Z_EXT [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT'>
	<value: 16r8519>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_POSITIVE_Z_OES [

	<enum: #'GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES'>
	<value: 16r8519>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_CUBE_MAP_SEAMLESS [

	<enum: #'GL_TEXTURE_CUBE_MAP_SEAMLESS'>
	<value: 16r884F>
	<vendor: #ARB>
	<groups: #(#EnableCap)>
	^ GL_TEXTURE_CUBE_MAP_SEAMLESS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEFORMATION_BIT_SGIX [

	<enum: #'GL_TEXTURE_DEFORMATION_BIT_SGIX'>
	<value: 2r1>
	<suffix: #SGIX>
	<bitmask>
	<groups: #(#FfdMaskSGIX)>
	^ GL_TEXTURE_DEFORMATION_BIT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEFORMATION_SGIX [

	<enum: #'GL_TEXTURE_DEFORMATION_SGIX'>
	<value: 16r8195>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#FfdTargetSGIX #MapTarget)>
	^ GL_TEXTURE_DEFORMATION_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEPTH [

	<enum: #'GL_TEXTURE_DEPTH'>
	<value: 16r8071>
	<vendor: #ARB>
	^ GL_TEXTURE_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEPTH_EXT [

	<enum: #'GL_TEXTURE_DEPTH_EXT'>
	<value: 16r8071>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_DEPTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEPTH_QCOM [

	<enum: #'GL_TEXTURE_DEPTH_QCOM'>
	<value: 16r8BD4>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_DEPTH_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEPTH_SIZE [

	<enum: #'GL_TEXTURE_DEPTH_SIZE'>
	<value: 16r884A>
	<vendor: #ARB>
	^ GL_TEXTURE_DEPTH_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEPTH_SIZE_ARB [

	<enum: #'GL_TEXTURE_DEPTH_SIZE_ARB'>
	<value: 16r884A>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TEXTURE_DEPTH_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEPTH_TYPE [

	<enum: #'GL_TEXTURE_DEPTH_TYPE'>
	<value: 16r8C16>
	<vendor: #NV>
	^ GL_TEXTURE_DEPTH_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DEPTH_TYPE_ARB [

	<enum: #'GL_TEXTURE_DEPTH_TYPE_ARB'>
	<value: 16r8C16>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_DEPTH_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DS_SIZE_NV [

	<enum: #'GL_TEXTURE_DS_SIZE_NV'>
	<value: 16r871D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_DS_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_DT_SIZE_NV [

	<enum: #'GL_TEXTURE_DT_SIZE_NV'>
	<value: 16r871E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_DT_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ENV [

	<enum: #'GL_TEXTURE_ENV'>
	<value: 16r2300>
	<vendor: #ARB>
	<groups: #(#TextureEnvTarget)>
	^ GL_TEXTURE_ENV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ENV_BIAS_SGIX [

	<enum: #'GL_TEXTURE_ENV_BIAS_SGIX'>
	<value: 16r80BE>
	<vendor: #ARB>
	<suffix: #SGIX>
	<groups: #(#TextureEnvMode)>
	^ GL_TEXTURE_ENV_BIAS_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ENV_COLOR [

	<enum: #'GL_TEXTURE_ENV_COLOR'>
	<value: 16r2201>
	<vendor: #ARB>
	<groups: #(#TextureEnvParameter)>
	^ GL_TEXTURE_ENV_COLOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_ENV_MODE [

	<enum: #'GL_TEXTURE_ENV_MODE'>
	<value: 16r2200>
	<vendor: #ARB>
	<groups: #(#TextureEnvParameter)>
	^ GL_TEXTURE_ENV_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_EXTERNAL_OES [

	<enum: #'GL_TEXTURE_EXTERNAL_OES'>
	<value: 16r8D65>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_TEXTURE_EXTERNAL_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FETCH_BARRIER_BIT [

	<enum: #'GL_TEXTURE_FETCH_BARRIER_BIT'>
	<value: 2r1000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_TEXTURE_FETCH_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FETCH_BARRIER_BIT_EXT [

	<enum: #'GL_TEXTURE_FETCH_BARRIER_BIT_EXT'>
	<value: 2r1000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_TEXTURE_FETCH_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FILTER4_SIZE_SGIS [

	<enum: #'GL_TEXTURE_FILTER4_SIZE_SGIS'>
	<value: 16r8147>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_FILTER4_SIZE_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FILTER_CONTROL [

	<enum: #'GL_TEXTURE_FILTER_CONTROL'>
	<value: 16r8500>
	<vendor: #NV>
	^ GL_TEXTURE_FILTER_CONTROL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FILTER_CONTROL_EXT [

	<enum: #'GL_TEXTURE_FILTER_CONTROL_EXT'>
	<value: 16r8500>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_FILTER_CONTROL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FIXED_SAMPLE_LOCATIONS [

	<enum: #'GL_TEXTURE_FIXED_SAMPLE_LOCATIONS'>
	<value: 16r9107>
	<vendor: #ARB>
	^ GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FLOAT_COMPONENTS_NV [

	<enum: #'GL_TEXTURE_FLOAT_COMPONENTS_NV'>
	<value: 16r888C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_FLOAT_COMPONENTS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FORMAT_QCOM [

	<enum: #'GL_TEXTURE_FORMAT_QCOM'>
	<value: 16r8BD6>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_FORMAT_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FORMAT_SRGB_OVERRIDE_EXT [

	<enum: #'GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT'>
	<value: 16r8FBF>
	<vendor: #QCOM>
	<suffix: #EXT>
	^ GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM [

	<enum: #'GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM'>
	<value: 16r96A0>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FOVEATED_FEATURE_BITS_QCOM [

	<enum: #'GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM'>
	<value: 16r8BFB>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FOVEATED_FEATURE_QUERY_QCOM [

	<enum: #'GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM'>
	<value: 16r8BFD>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM [

	<enum: #'GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM'>
	<value: 16r8BFC>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM [

	<enum: #'GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM'>
	<value: 16r8BFE>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_FREE_MEMORY_ATI [

	<enum: #'GL_TEXTURE_FREE_MEMORY_ATI'>
	<value: 16r87FC>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_TEXTURE_FREE_MEMORY_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GATHER [

	<enum: #'GL_TEXTURE_GATHER'>
	<value: 16r82A2>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_GATHER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GATHER_SHADOW [

	<enum: #'GL_TEXTURE_GATHER_SHADOW'>
	<value: 16r82A3>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_GATHER_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GEN_MODE [

	<enum: #'GL_TEXTURE_GEN_MODE'>
	<value: 16r2500>
	<vendor: #ARB>
	<groups: #(#TextureGenParameter)>
	^ GL_TEXTURE_GEN_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GEN_MODE_OES [

	<enum: #'GL_TEXTURE_GEN_MODE_OES'>
	<value: 16r2500>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_GEN_MODE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GEN_Q [

	<enum: #'GL_TEXTURE_GEN_Q'>
	<value: 16rC63>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_TEXTURE_GEN_Q
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GEN_R [

	<enum: #'GL_TEXTURE_GEN_R'>
	<value: 16rC62>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_TEXTURE_GEN_R
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GEN_S [

	<enum: #'GL_TEXTURE_GEN_S'>
	<value: 16rC60>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_TEXTURE_GEN_S
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GEN_STR_OES [

	<enum: #'GL_TEXTURE_GEN_STR_OES'>
	<value: 16r8D60>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_TEXTURE_GEN_STR_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GEN_T [

	<enum: #'GL_TEXTURE_GEN_T'>
	<value: 16rC61>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName)>
	^ GL_TEXTURE_GEN_T
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GEQUAL_R_SGIX [

	<enum: #'GL_TEXTURE_GEQUAL_R_SGIX'>
	<value: 16r819D>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_GEQUAL_R_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GREEN_SIZE [

	<enum: #'GL_TEXTURE_GREEN_SIZE'>
	<value: 16r805D>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_GREEN_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GREEN_SIZE_EXT [

	<enum: #'GL_TEXTURE_GREEN_SIZE_EXT'>
	<value: 16r805D>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_GREEN_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GREEN_TYPE [

	<enum: #'GL_TEXTURE_GREEN_TYPE'>
	<value: 16r8C11>
	<vendor: #NV>
	^ GL_TEXTURE_GREEN_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_GREEN_TYPE_ARB [

	<enum: #'GL_TEXTURE_GREEN_TYPE_ARB'>
	<value: 16r8C11>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_GREEN_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_HEIGHT [

	<enum: #'GL_TEXTURE_HEIGHT'>
	<value: 16r1001>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_HEIGHT_QCOM [

	<enum: #'GL_TEXTURE_HEIGHT_QCOM'>
	<value: 16r8BD3>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_HEIGHT_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_HI_SIZE_NV [

	<enum: #'GL_TEXTURE_HI_SIZE_NV'>
	<value: 16r871B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_HI_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_IMAGE_FORMAT [

	<enum: #'GL_TEXTURE_IMAGE_FORMAT'>
	<value: 16r828F>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_IMAGE_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_IMAGE_TYPE [

	<enum: #'GL_TEXTURE_IMAGE_TYPE'>
	<value: 16r8290>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_IMAGE_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_IMAGE_VALID_QCOM [

	<enum: #'GL_TEXTURE_IMAGE_VALID_QCOM'>
	<value: 16r8BD8>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_IMAGE_VALID_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_IMMUTABLE_FORMAT [

	<enum: #'GL_TEXTURE_IMMUTABLE_FORMAT'>
	<value: 16r912F>
	<vendor: #ARB>
	^ GL_TEXTURE_IMMUTABLE_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_IMMUTABLE_FORMAT_EXT [

	<enum: #'GL_TEXTURE_IMMUTABLE_FORMAT_EXT'>
	<value: 16r912F>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_IMMUTABLE_FORMAT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_IMMUTABLE_LEVELS [

	<enum: #'GL_TEXTURE_IMMUTABLE_LEVELS'>
	<value: 16r82DF>
	<vendor: #ARB>
	^ GL_TEXTURE_IMMUTABLE_LEVELS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_INDEX_SIZE_EXT [

	<enum: #'GL_TEXTURE_INDEX_SIZE_EXT'>
	<value: 16r80ED>
	<vendor: #MS>
	<suffix: #EXT>
	^ GL_TEXTURE_INDEX_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_INTENSITY_SIZE [

	<enum: #'GL_TEXTURE_INTENSITY_SIZE'>
	<value: 16r8061>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_INTENSITY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_INTENSITY_SIZE_EXT [

	<enum: #'GL_TEXTURE_INTENSITY_SIZE_EXT'>
	<value: 16r8061>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_INTENSITY_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_INTENSITY_TYPE [

	<enum: #'GL_TEXTURE_INTENSITY_TYPE'>
	<value: 16r8C15>
	<vendor: #NV>
	^ GL_TEXTURE_INTENSITY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_INTENSITY_TYPE_ARB [

	<enum: #'GL_TEXTURE_INTENSITY_TYPE_ARB'>
	<value: 16r8C15>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_INTENSITY_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_INTERNAL_FORMAT [

	<enum: #'GL_TEXTURE_INTERNAL_FORMAT'>
	<value: 16r1003>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_INTERNAL_FORMAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_INTERNAL_FORMAT_QCOM [

	<enum: #'GL_TEXTURE_INTERNAL_FORMAT_QCOM'>
	<value: 16r8BD5>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_INTERNAL_FORMAT_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LEQUAL_R_SGIX [

	<enum: #'GL_TEXTURE_LEQUAL_R_SGIX'>
	<value: 16r819C>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_LEQUAL_R_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LIGHTING_MODE_HP [

	<enum: #'GL_TEXTURE_LIGHTING_MODE_HP'>
	<value: 16r8167>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_TEXTURE_LIGHTING_MODE_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LIGHT_EXT [

	<enum: #'GL_TEXTURE_LIGHT_EXT'>
	<value: 16r8350>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TEXTURE_LIGHT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LOD_BIAS [

	<enum: #'GL_TEXTURE_LOD_BIAS'>
	<value: 16r8501>
	<vendor: #NV>
	<groups: #(#SamplerParameterF #TextureParameterName)>
	^ GL_TEXTURE_LOD_BIAS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LOD_BIAS_EXT [

	<enum: #'GL_TEXTURE_LOD_BIAS_EXT'>
	<value: 16r8501>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_LOD_BIAS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LOD_BIAS_R_SGIX [

	<enum: #'GL_TEXTURE_LOD_BIAS_R_SGIX'>
	<value: 16r8190>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_LOD_BIAS_R_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LOD_BIAS_S_SGIX [

	<enum: #'GL_TEXTURE_LOD_BIAS_S_SGIX'>
	<value: 16r818E>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_LOD_BIAS_S_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LOD_BIAS_T_SGIX [

	<enum: #'GL_TEXTURE_LOD_BIAS_T_SGIX'>
	<value: 16r818F>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_LOD_BIAS_T_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LO_SIZE_NV [

	<enum: #'GL_TEXTURE_LO_SIZE_NV'>
	<value: 16r871C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_LO_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LUMINANCE_SIZE [

	<enum: #'GL_TEXTURE_LUMINANCE_SIZE'>
	<value: 16r8060>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_LUMINANCE_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LUMINANCE_SIZE_EXT [

	<enum: #'GL_TEXTURE_LUMINANCE_SIZE_EXT'>
	<value: 16r8060>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_LUMINANCE_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LUMINANCE_TYPE [

	<enum: #'GL_TEXTURE_LUMINANCE_TYPE'>
	<value: 16r8C14>
	<vendor: #NV>
	^ GL_TEXTURE_LUMINANCE_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_LUMINANCE_TYPE_ARB [

	<enum: #'GL_TEXTURE_LUMINANCE_TYPE_ARB'>
	<value: 16r8C14>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_LUMINANCE_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAG_FILTER [

	<enum: #'GL_TEXTURE_MAG_FILTER'>
	<value: 16r2800>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #SamplerParameterI #TextureParameterName)>
	^ GL_TEXTURE_MAG_FILTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAG_SIZE_NV [

	<enum: #'GL_TEXTURE_MAG_SIZE_NV'>
	<value: 16r871F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_MAG_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MATERIAL_FACE_EXT [

	<enum: #'GL_TEXTURE_MATERIAL_FACE_EXT'>
	<value: 16r8351>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TEXTURE_MATERIAL_FACE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MATERIAL_PARAMETER_EXT [

	<enum: #'GL_TEXTURE_MATERIAL_PARAMETER_EXT'>
	<value: 16r8352>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TEXTURE_MATERIAL_PARAMETER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MATRIX [

	<enum: #'GL_TEXTURE_MATRIX'>
	<value: 16rBA8>
	<vendor: #ARB>
	<groups: #(#GetPName #VertexShaderTextureUnitParameter)>
	^ GL_TEXTURE_MATRIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES [

	<enum: #'GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES'>
	<value: 16r898F>
	<vendor: #OML>
	<suffix: #OES>
	^ GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_ANISOTROPY [

	<enum: #'GL_TEXTURE_MAX_ANISOTROPY'>
	<value: 16r84FE>
	<vendor: #NV>
	<groups: #(#SamplerParameterF)>
	^ GL_TEXTURE_MAX_ANISOTROPY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_ANISOTROPY_EXT [

	<enum: #'GL_TEXTURE_MAX_ANISOTROPY_EXT'>
	<value: 16r84FE>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_MAX_ANISOTROPY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_CLAMP_R_SGIX [

	<enum: #'GL_TEXTURE_MAX_CLAMP_R_SGIX'>
	<value: 16r836B>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_MAX_CLAMP_R_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_CLAMP_S_SGIX [

	<enum: #'GL_TEXTURE_MAX_CLAMP_S_SGIX'>
	<value: 16r8369>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_MAX_CLAMP_S_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_CLAMP_T_SGIX [

	<enum: #'GL_TEXTURE_MAX_CLAMP_T_SGIX'>
	<value: 16r836A>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_MAX_CLAMP_T_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_LEVEL [

	<enum: #'GL_TEXTURE_MAX_LEVEL'>
	<value: 16r813D>
	<vendor: #SGI>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_MAX_LEVEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_LEVEL_APPLE [

	<enum: #'GL_TEXTURE_MAX_LEVEL_APPLE'>
	<value: 16r813D>
	<vendor: #SGI>
	<suffix: #APPLE>
	^ GL_TEXTURE_MAX_LEVEL_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_LEVEL_SGIS [

	<enum: #'GL_TEXTURE_MAX_LEVEL_SGIS'>
	<value: 16r813D>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_MAX_LEVEL_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_LOD [

	<enum: #'GL_TEXTURE_MAX_LOD'>
	<value: 16r813B>
	<vendor: #SGI>
	<groups: #(#SamplerParameterF #TextureParameterName)>
	^ GL_TEXTURE_MAX_LOD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MAX_LOD_SGIS [

	<enum: #'GL_TEXTURE_MAX_LOD_SGIS'>
	<value: 16r813B>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_MAX_LOD_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MEMORY_LAYOUT_INTEL [

	<enum: #'GL_TEXTURE_MEMORY_LAYOUT_INTEL'>
	<value: 16r83FF>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_TEXTURE_MEMORY_LAYOUT_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MIN_FILTER [

	<enum: #'GL_TEXTURE_MIN_FILTER'>
	<value: 16r2801>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #SamplerParameterI #TextureParameterName)>
	^ GL_TEXTURE_MIN_FILTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MIN_LOD [

	<enum: #'GL_TEXTURE_MIN_LOD'>
	<value: 16r813A>
	<vendor: #SGI>
	<groups: #(#SamplerParameterF #TextureParameterName)>
	^ GL_TEXTURE_MIN_LOD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MIN_LOD_SGIS [

	<enum: #'GL_TEXTURE_MIN_LOD_SGIS'>
	<value: 16r813A>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_MIN_LOD_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_MULTI_BUFFER_HINT_SGIX [

	<enum: #'GL_TEXTURE_MULTI_BUFFER_HINT_SGIX'>
	<value: 16r812E>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#HintTarget)>
	^ GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_NORMAL_EXT [

	<enum: #'GL_TEXTURE_NORMAL_EXT'>
	<value: 16r85AF>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_TEXTURE_NORMAL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_NUM_LEVELS_QCOM [

	<enum: #'GL_TEXTURE_NUM_LEVELS_QCOM'>
	<value: 16r8BD9>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_NUM_LEVELS_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_OBJECT_VALID_QCOM [

	<enum: #'GL_TEXTURE_OBJECT_VALID_QCOM'>
	<value: 16r8BDB>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_OBJECT_VALID_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_POST_SPECULAR_HP [

	<enum: #'GL_TEXTURE_POST_SPECULAR_HP'>
	<value: 16r8168>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_TEXTURE_POST_SPECULAR_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_PRE_SPECULAR_HP [

	<enum: #'GL_TEXTURE_PRE_SPECULAR_HP'>
	<value: 16r8169>
	<vendor: #HP>
	<suffix: #HP>
	^ GL_TEXTURE_PRE_SPECULAR_HP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_PRIORITY [

	<enum: #'GL_TEXTURE_PRIORITY'>
	<value: 16r8066>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_PRIORITY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_PRIORITY_EXT [

	<enum: #'GL_TEXTURE_PRIORITY_EXT'>
	<value: 16r8066>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_PRIORITY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_PROTECTED_EXT [

	<enum: #'GL_TEXTURE_PROTECTED_EXT'>
	<value: 16r8BFA>
	<vendor: #QCOM>
	<suffix: #EXT>
	^ GL_TEXTURE_PROTECTED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RANGE_LENGTH_APPLE [

	<enum: #'GL_TEXTURE_RANGE_LENGTH_APPLE'>
	<value: 16r85B7>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_TEXTURE_RANGE_LENGTH_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RANGE_POINTER_APPLE [

	<enum: #'GL_TEXTURE_RANGE_POINTER_APPLE'>
	<value: 16r85B8>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_TEXTURE_RANGE_POINTER_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RECTANGLE [

	<enum: #'GL_TEXTURE_RECTANGLE'>
	<value: 16r84F5>
	<vendor: #NV>
	<groups: #(#CopyImageSubDataTarget #TextureTarget)>
	^ GL_TEXTURE_RECTANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RECTANGLE_ARB [

	<enum: #'GL_TEXTURE_RECTANGLE_ARB'>
	<value: 16r84F5>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_RECTANGLE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RECTANGLE_NV [

	<enum: #'GL_TEXTURE_RECTANGLE_NV'>
	<value: 16r84F5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_RECTANGLE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_REDUCTION_MODE_ARB [

	<enum: #'GL_TEXTURE_REDUCTION_MODE_ARB'>
	<value: 16r9366>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_REDUCTION_MODE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_REDUCTION_MODE_EXT [

	<enum: #'GL_TEXTURE_REDUCTION_MODE_EXT'>
	<value: 16r9366>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_REDUCTION_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RED_SIZE [

	<enum: #'GL_TEXTURE_RED_SIZE'>
	<value: 16r805C>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_RED_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RED_SIZE_EXT [

	<enum: #'GL_TEXTURE_RED_SIZE_EXT'>
	<value: 16r805C>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_RED_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RED_TYPE [

	<enum: #'GL_TEXTURE_RED_TYPE'>
	<value: 16r8C10>
	<vendor: #NV>
	^ GL_TEXTURE_RED_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RED_TYPE_ARB [

	<enum: #'GL_TEXTURE_RED_TYPE_ARB'>
	<value: 16r8C10>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TEXTURE_RED_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV [

	<enum: #'GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV'>
	<value: 16r8E54>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RENDERBUFFER_NV [

	<enum: #'GL_TEXTURE_RENDERBUFFER_NV'>
	<value: 16r8E55>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_RENDERBUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RESIDENT [

	<enum: #'GL_TEXTURE_RESIDENT'>
	<value: 16r8067>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_RESIDENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_RESIDENT_EXT [

	<enum: #'GL_TEXTURE_RESIDENT_EXT'>
	<value: 16r8067>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_RESIDENT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SAMPLES [

	<enum: #'GL_TEXTURE_SAMPLES'>
	<value: 16r9106>
	<vendor: #ARB>
	^ GL_TEXTURE_SAMPLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SAMPLES_IMG [

	<enum: #'GL_TEXTURE_SAMPLES_IMG'>
	<value: 16r9136>
	<vendor: #IMG>
	<suffix: #IMG>
	^ GL_TEXTURE_SAMPLES_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SHADER_NV [

	<enum: #'GL_TEXTURE_SHADER_NV'>
	<value: 16r86DE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SHADOW [

	<enum: #'GL_TEXTURE_SHADOW'>
	<value: 16r82A1>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_SHADOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SHARED_SIZE [

	<enum: #'GL_TEXTURE_SHARED_SIZE'>
	<value: 16r8C3F>
	<vendor: #NV>
	^ GL_TEXTURE_SHARED_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SHARED_SIZE_EXT [

	<enum: #'GL_TEXTURE_SHARED_SIZE_EXT'>
	<value: 16r8C3F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_SHARED_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SPARSE_ARB [

	<enum: #'GL_TEXTURE_SPARSE_ARB'>
	<value: 16r91A6>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_TEXTURE_SPARSE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SPARSE_EXT [

	<enum: #'GL_TEXTURE_SPARSE_EXT'>
	<value: 16r91A6>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_TEXTURE_SPARSE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SRGB_DECODE_EXT [

	<enum: #'GL_TEXTURE_SRGB_DECODE_EXT'>
	<value: 16r8A48>
	<vendor: #APPLE>
	<suffix: #EXT>
	^ GL_TEXTURE_SRGB_DECODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_STACK_DEPTH [

	<enum: #'GL_TEXTURE_STACK_DEPTH'>
	<value: 16rBA5>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_TEXTURE_STACK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_STENCIL_SIZE [

	<enum: #'GL_TEXTURE_STENCIL_SIZE'>
	<value: 16r88F1>
	<vendor: #NV>
	^ GL_TEXTURE_STENCIL_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_STENCIL_SIZE_EXT [

	<enum: #'GL_TEXTURE_STENCIL_SIZE_EXT'>
	<value: 16r88F1>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_STENCIL_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_STORAGE_HINT_APPLE [

	<enum: #'GL_TEXTURE_STORAGE_HINT_APPLE'>
	<value: 16r85BC>
	<vendor: #APPLE>
	<suffix: #APPLE>
	<groups: #(#HintTarget)>
	^ GL_TEXTURE_STORAGE_HINT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_STORAGE_SPARSE_BIT_AMD [

	<enum: #'GL_TEXTURE_STORAGE_SPARSE_BIT_AMD'>
	<value: 2r1>
	<suffix: #AMD>
	<bitmask>
	<groups: #(#TextureStorageMaskAMD)>
	^ GL_TEXTURE_STORAGE_SPARSE_BIT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_A [

	<enum: #'GL_TEXTURE_SWIZZLE_A'>
	<value: 16r8E45>
	<vendor: #NV>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_SWIZZLE_A
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_A_EXT [

	<enum: #'GL_TEXTURE_SWIZZLE_A_EXT'>
	<value: 16r8E45>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_SWIZZLE_A_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_B [

	<enum: #'GL_TEXTURE_SWIZZLE_B'>
	<value: 16r8E44>
	<vendor: #NV>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_SWIZZLE_B
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_B_EXT [

	<enum: #'GL_TEXTURE_SWIZZLE_B_EXT'>
	<value: 16r8E44>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_SWIZZLE_B_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_G [

	<enum: #'GL_TEXTURE_SWIZZLE_G'>
	<value: 16r8E43>
	<vendor: #NV>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_SWIZZLE_G
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_G_EXT [

	<enum: #'GL_TEXTURE_SWIZZLE_G_EXT'>
	<value: 16r8E43>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_SWIZZLE_G_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_R [

	<enum: #'GL_TEXTURE_SWIZZLE_R'>
	<value: 16r8E42>
	<vendor: #NV>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_SWIZZLE_R
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_RGBA [

	<enum: #'GL_TEXTURE_SWIZZLE_RGBA'>
	<value: 16r8E46>
	<vendor: #NV>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_SWIZZLE_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_RGBA_EXT [

	<enum: #'GL_TEXTURE_SWIZZLE_RGBA_EXT'>
	<value: 16r8E46>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_SWIZZLE_RGBA_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_SWIZZLE_R_EXT [

	<enum: #'GL_TEXTURE_SWIZZLE_R_EXT'>
	<value: 16r8E42>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TEXTURE_SWIZZLE_R_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_TARGET [

	<enum: #'GL_TEXTURE_TARGET'>
	<value: 16r1006>
	<vendor: #ARB>
	^ GL_TEXTURE_TARGET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_TARGET_QCOM [

	<enum: #'GL_TEXTURE_TARGET_QCOM'>
	<value: 16r8BDA>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_TARGET_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_TILING_EXT [

	<enum: #'GL_TEXTURE_TILING_EXT'>
	<value: 16r9580>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_TILING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_TOO_LARGE_EXT [

	<enum: #'GL_TEXTURE_TOO_LARGE_EXT'>
	<value: 16r8065>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#ErrorCode)>
	^ GL_TEXTURE_TOO_LARGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_TYPE_QCOM [

	<enum: #'GL_TEXTURE_TYPE_QCOM'>
	<value: 16r8BD7>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_TYPE_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_UNNORMALIZED_COORDINATES_ARM [

	<enum: #'GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM'>
	<value: 16r8F6A>
	<vendor: #ARM>
	<suffix: #ARM>
	<groups: #(#GetTextureParameter #SamplerParameterF #SamplerParameterI #TextureParameterName)>
	^ GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_UNSIGNED_REMAP_MODE_NV [

	<enum: #'GL_TEXTURE_UNSIGNED_REMAP_MODE_NV'>
	<value: 16r888F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_UPDATE_BARRIER_BIT [

	<enum: #'GL_TEXTURE_UPDATE_BARRIER_BIT'>
	<value: 2r100000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_TEXTURE_UPDATE_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_UPDATE_BARRIER_BIT_EXT [

	<enum: #'GL_TEXTURE_UPDATE_BARRIER_BIT_EXT'>
	<value: 2r100000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_TEXTURE_UPDATE_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_USAGE_ANGLE [

	<enum: #'GL_TEXTURE_USAGE_ANGLE'>
	<value: 16r93A2>
	<vendor: #ANGLE>
	^ GL_TEXTURE_USAGE_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW [

	<enum: #'GL_TEXTURE_VIEW'>
	<value: 16r82B5>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_TEXTURE_VIEW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_MIN_LAYER [

	<enum: #'GL_TEXTURE_VIEW_MIN_LAYER'>
	<value: 16r82DD>
	<vendor: #ARB>
	^ GL_TEXTURE_VIEW_MIN_LAYER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_MIN_LAYER_EXT [

	<enum: #'GL_TEXTURE_VIEW_MIN_LAYER_EXT'>
	<value: 16r82DD>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_VIEW_MIN_LAYER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_MIN_LAYER_OES [

	<enum: #'GL_TEXTURE_VIEW_MIN_LAYER_OES'>
	<value: 16r82DD>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_VIEW_MIN_LAYER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_MIN_LEVEL [

	<enum: #'GL_TEXTURE_VIEW_MIN_LEVEL'>
	<value: 16r82DB>
	<vendor: #ARB>
	^ GL_TEXTURE_VIEW_MIN_LEVEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_MIN_LEVEL_EXT [

	<enum: #'GL_TEXTURE_VIEW_MIN_LEVEL_EXT'>
	<value: 16r82DB>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_VIEW_MIN_LEVEL_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_MIN_LEVEL_OES [

	<enum: #'GL_TEXTURE_VIEW_MIN_LEVEL_OES'>
	<value: 16r82DB>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_VIEW_MIN_LEVEL_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_NUM_LAYERS [

	<enum: #'GL_TEXTURE_VIEW_NUM_LAYERS'>
	<value: 16r82DE>
	<vendor: #ARB>
	^ GL_TEXTURE_VIEW_NUM_LAYERS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_NUM_LAYERS_EXT [

	<enum: #'GL_TEXTURE_VIEW_NUM_LAYERS_EXT'>
	<value: 16r82DE>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_VIEW_NUM_LAYERS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_NUM_LAYERS_OES [

	<enum: #'GL_TEXTURE_VIEW_NUM_LAYERS_OES'>
	<value: 16r82DE>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_VIEW_NUM_LAYERS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_NUM_LEVELS [

	<enum: #'GL_TEXTURE_VIEW_NUM_LEVELS'>
	<value: 16r82DC>
	<vendor: #ARB>
	^ GL_TEXTURE_VIEW_NUM_LEVELS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_NUM_LEVELS_EXT [

	<enum: #'GL_TEXTURE_VIEW_NUM_LEVELS_EXT'>
	<value: 16r82DC>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_TEXTURE_VIEW_NUM_LEVELS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_VIEW_NUM_LEVELS_OES [

	<enum: #'GL_TEXTURE_VIEW_NUM_LEVELS_OES'>
	<value: 16r82DC>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TEXTURE_VIEW_NUM_LEVELS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_WIDTH [

	<enum: #'GL_TEXTURE_WIDTH'>
	<value: 16r1000>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_WIDTH_QCOM [

	<enum: #'GL_TEXTURE_WIDTH_QCOM'>
	<value: 16r8BD2>
	<vendor: #QCOM>
	<suffix: #QCOM>
	^ GL_TEXTURE_WIDTH_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_WRAP_Q_SGIS [

	<enum: #'GL_TEXTURE_WRAP_Q_SGIS'>
	<value: 16r8137>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_WRAP_Q_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_WRAP_R [

	<enum: #'GL_TEXTURE_WRAP_R'>
	<value: 16r8072>
	<vendor: #ARB>
	<groups: #(#SamplerParameterI #TextureParameterName)>
	^ GL_TEXTURE_WRAP_R
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_WRAP_R_EXT [

	<enum: #'GL_TEXTURE_WRAP_R_EXT'>
	<value: 16r8072>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetTextureParameter #TextureParameterName)>
	^ GL_TEXTURE_WRAP_R_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_WRAP_R_OES [

	<enum: #'GL_TEXTURE_WRAP_R_OES'>
	<value: 16r8072>
	<vendor: #ARB>
	<suffix: #OES>
	<groups: #(#TextureParameterName)>
	^ GL_TEXTURE_WRAP_R_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_WRAP_S [

	<enum: #'GL_TEXTURE_WRAP_S'>
	<value: 16r2802>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #SamplerParameterI #TextureParameterName)>
	^ GL_TEXTURE_WRAP_S
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXTURE_WRAP_T [

	<enum: #'GL_TEXTURE_WRAP_T'>
	<value: 16r2803>
	<vendor: #ARB>
	<groups: #(#GetTextureParameter #SamplerParameterI #TextureParameterName)>
	^ GL_TEXTURE_WRAP_T
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TEXT_FRAGMENT_SHADER_ATI [

	<enum: #'GL_TEXT_FRAGMENT_SHADER_ATI'>
	<value: 16r8200>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#ProgramTarget)>
	^ GL_TEXT_FRAGMENT_SHADER_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TILE_RASTER_ORDER_FIXED_MESA [

	<enum: #'GL_TILE_RASTER_ORDER_FIXED_MESA'>
	<value: 16r8BB8>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_TILE_RASTER_ORDER_FIXED_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TILE_RASTER_ORDER_INCREASING_X_MESA [

	<enum: #'GL_TILE_RASTER_ORDER_INCREASING_X_MESA'>
	<value: 16r8BB9>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_TILE_RASTER_ORDER_INCREASING_X_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TILE_RASTER_ORDER_INCREASING_Y_MESA [

	<enum: #'GL_TILE_RASTER_ORDER_INCREASING_Y_MESA'>
	<value: 16r8BBA>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_TILE_RASTER_ORDER_INCREASING_Y_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TILING_TYPES_EXT [

	<enum: #'GL_TILING_TYPES_EXT'>
	<value: 16r9583>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TILING_TYPES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIMELINE_SEMAPHORE_VALUE_NV [

	<enum: #'GL_TIMELINE_SEMAPHORE_VALUE_NV'>
	<value: 16r9595>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#SemaphoreParameterName)>
	^ GL_TIMELINE_SEMAPHORE_VALUE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIMEOUT_EXPIRED [

	<enum: #'GL_TIMEOUT_EXPIRED'>
	<value: 16r911B>
	<vendor: #ARB>
	<groups: #(#SyncStatus)>
	^ GL_TIMEOUT_EXPIRED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIMEOUT_EXPIRED_APPLE [

	<enum: #'GL_TIMEOUT_EXPIRED_APPLE'>
	<value: 16r911B>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_TIMEOUT_EXPIRED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIMEOUT_IGNORED [

	<enum: #'GL_TIMEOUT_IGNORED'>
	<value: 16rFFFFFFFFFFFFFFFF>
	<vendor: #ARB>
	<groups: #(#SpecialNumbers)>
	^ GL_TIMEOUT_IGNORED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIMEOUT_IGNORED_APPLE [

	<enum: #'GL_TIMEOUT_IGNORED_APPLE'>
	<value: 16rFFFFFFFFFFFFFFFF>
	<vendor: #ARB>
	<suffix: #APPLE>
	<groups: #(#SpecialNumbers)>
	^ GL_TIMEOUT_IGNORED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIMESTAMP [

	<enum: #'GL_TIMESTAMP'>
	<value: 16r8E28>
	<vendor: #NV>
	<groups: #(#GetPName #QueryCounterTarget)>
	^ GL_TIMESTAMP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIMESTAMP_EXT [

	<enum: #'GL_TIMESTAMP_EXT'>
	<value: 16r8E28>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TIMESTAMP_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIME_ELAPSED [

	<enum: #'GL_TIME_ELAPSED'>
	<value: 16r88BF>
	<vendor: #NV>
	<groups: #(#QueryTarget)>
	^ GL_TIME_ELAPSED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TIME_ELAPSED_EXT [

	<enum: #'GL_TIME_ELAPSED_EXT'>
	<value: 16r88BF>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TIME_ELAPSED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TOP_LEVEL_ARRAY_SIZE [

	<enum: #'GL_TOP_LEVEL_ARRAY_SIZE'>
	<value: 16r930C>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_TOP_LEVEL_ARRAY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TOP_LEVEL_ARRAY_STRIDE [

	<enum: #'GL_TOP_LEVEL_ARRAY_STRIDE'>
	<value: 16r930D>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_TOP_LEVEL_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_ALL_BITS_MESA [

	<enum: #'GL_TRACE_ALL_BITS_MESA'>
	<value: 2r1111111111111111>
	<suffix: #MESA>
	<bitmask>
	<groups: #(#TraceMaskMESA)>
	^ GL_TRACE_ALL_BITS_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_ARRAYS_BIT_MESA [

	<enum: #'GL_TRACE_ARRAYS_BIT_MESA'>
	<value: 2r100>
	<suffix: #MESA>
	<bitmask>
	<groups: #(#TraceMaskMESA)>
	^ GL_TRACE_ARRAYS_BIT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_ERRORS_BIT_MESA [

	<enum: #'GL_TRACE_ERRORS_BIT_MESA'>
	<value: 2r100000>
	<suffix: #MESA>
	<bitmask>
	<groups: #(#TraceMaskMESA)>
	^ GL_TRACE_ERRORS_BIT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_MASK_MESA [

	<enum: #'GL_TRACE_MASK_MESA'>
	<value: 16r8755>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_TRACE_MASK_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_NAME_MESA [

	<enum: #'GL_TRACE_NAME_MESA'>
	<value: 16r8756>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_TRACE_NAME_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_OPERATIONS_BIT_MESA [

	<enum: #'GL_TRACE_OPERATIONS_BIT_MESA'>
	<value: 2r1>
	<suffix: #MESA>
	<bitmask>
	<groups: #(#TraceMaskMESA)>
	^ GL_TRACE_OPERATIONS_BIT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_PIXELS_BIT_MESA [

	<enum: #'GL_TRACE_PIXELS_BIT_MESA'>
	<value: 2r10000>
	<suffix: #MESA>
	<bitmask>
	<groups: #(#TraceMaskMESA)>
	^ GL_TRACE_PIXELS_BIT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_PRIMITIVES_BIT_MESA [

	<enum: #'GL_TRACE_PRIMITIVES_BIT_MESA'>
	<value: 2r10>
	<suffix: #MESA>
	<bitmask>
	<groups: #(#TraceMaskMESA)>
	^ GL_TRACE_PRIMITIVES_BIT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACE_TEXTURES_BIT_MESA [

	<enum: #'GL_TRACE_TEXTURES_BIT_MESA'>
	<value: 2r1000>
	<suffix: #MESA>
	<bitmask>
	<groups: #(#TraceMaskMESA)>
	^ GL_TRACE_TEXTURES_BIT_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACK_MATRIX_NV [

	<enum: #'GL_TRACK_MATRIX_NV'>
	<value: 16r8648>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRACK_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRACK_MATRIX_TRANSFORM_NV [

	<enum: #'GL_TRACK_MATRIX_TRANSFORM_NV'>
	<value: 16r8649>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRACK_MATRIX_TRANSFORM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_BIT [

	<enum: #'GL_TRANSFORM_BIT'>
	<value: 2r1000000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_TRANSFORM_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK [

	<enum: #'GL_TRANSFORM_FEEDBACK'>
	<value: 16r8E22>
	<vendor: #NV>
	<groups: #(#BindTransformFeedbackTarget #ObjectIdentifier)>
	^ GL_TRANSFORM_FEEDBACK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_ACTIVE [

	<enum: #'GL_TRANSFORM_FEEDBACK_ACTIVE'>
	<value: 16r8E24>
	<vendor: #NV>
	<groups: #(#TransformFeedbackPName)>
	^ GL_TRANSFORM_FEEDBACK_ACTIVE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_ATTRIBS_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_ATTRIBS_NV'>
	<value: 16r8C7E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BARRIER_BIT [

	<enum: #'GL_TRANSFORM_FEEDBACK_BARRIER_BIT'>
	<value: 2r100000000000>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_TRANSFORM_FEEDBACK_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BARRIER_BIT_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT'>
	<value: 2r100000000000>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BINDING [

	<enum: #'GL_TRANSFORM_FEEDBACK_BINDING'>
	<value: 16r8E25>
	<vendor: #NV>
	^ GL_TRANSFORM_FEEDBACK_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BINDING_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_BINDING_NV'>
	<value: 16r8E25>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER'>
	<value: 16r8C8E>
	<vendor: #NV>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget #ProgramInterface)>
	^ GL_TRANSFORM_FEEDBACK_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_ACTIVE [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE'>
	<value: 16r8E24>
	<vendor: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV'>
	<value: 16r8E24>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_BINDING [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_BINDING'>
	<value: 16r8C8F>
	<vendor: #NV>
	<groups: #(#GetPName #TransformFeedbackPName)>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT'>
	<value: 16r8C8F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_BINDING_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV'>
	<value: 16r8C8F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_EXT'>
	<value: 16r8C8E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_INDEX [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_INDEX'>
	<value: 16r934B>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_MODE [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_MODE'>
	<value: 16r8C7F>
	<vendor: #NV>
	<groups: #(#ProgramPropertyARB)>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_MODE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_MODE_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT'>
	<value: 16r8C7F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_MODE_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV'>
	<value: 16r8C7F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_NV'>
	<value: 16r8C8E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_PAUSED [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED'>
	<value: 16r8E23>
	<vendor: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV'>
	<value: 16r8E23>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_SIZE [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_SIZE'>
	<value: 16r8C85>
	<vendor: #NV>
	<groups: #(#GetPName #TransformFeedbackPName)>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT'>
	<value: 16r8C85>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_SIZE_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV'>
	<value: 16r8C85>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_START [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_START'>
	<value: 16r8C84>
	<vendor: #NV>
	<groups: #(#GetPName #TransformFeedbackPName)>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_START
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_START_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT'>
	<value: 16r8C84>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_START_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_START_NV'>
	<value: 16r8C84>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_BUFFER_STRIDE [

	<enum: #'GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE'>
	<value: 16r934C>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_NV'>
	<value: 16r8E22>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_OVERFLOW [

	<enum: #'GL_TRANSFORM_FEEDBACK_OVERFLOW'>
	<value: 16r82EC>
	<vendor: #ARB>
	<groups: #(#QueryTarget)>
	^ GL_TRANSFORM_FEEDBACK_OVERFLOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_OVERFLOW_ARB [

	<enum: #'GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB'>
	<value: 16r82EC>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_PAUSED [

	<enum: #'GL_TRANSFORM_FEEDBACK_PAUSED'>
	<value: 16r8E23>
	<vendor: #NV>
	<groups: #(#TransformFeedbackPName)>
	^ GL_TRANSFORM_FEEDBACK_PAUSED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN [

	<enum: #'GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN'>
	<value: 16r8C88>
	<vendor: #NV>
	<groups: #(#QueryTarget)>
	^ GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT'>
	<value: 16r8C88>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV'>
	<value: 16r8C88>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_RECORD_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_RECORD_NV'>
	<value: 16r8C86>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_RECORD_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_STREAM_OVERFLOW [

	<enum: #'GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW'>
	<value: 16r82ED>
	<vendor: #ARB>
	^ GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB [

	<enum: #'GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB'>
	<value: 16r82ED>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_VARYING [

	<enum: #'GL_TRANSFORM_FEEDBACK_VARYING'>
	<value: 16r92F4>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_TRANSFORM_FEEDBACK_VARYING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_VARYINGS [

	<enum: #'GL_TRANSFORM_FEEDBACK_VARYINGS'>
	<value: 16r8C83>
	<vendor: #NV>
	<groups: #(#ProgramPropertyARB)>
	^ GL_TRANSFORM_FEEDBACK_VARYINGS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_VARYINGS_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_VARYINGS_EXT'>
	<value: 16r8C83>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_VARYINGS_NV [

	<enum: #'GL_TRANSFORM_FEEDBACK_VARYINGS_NV'>
	<value: 16r8C83>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSFORM_FEEDBACK_VARYINGS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH [

	<enum: #'GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH'>
	<value: 16r8C76>
	<vendor: #NV>
	<groups: #(#ProgramPropertyARB)>
	^ GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT [

	<enum: #'GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT'>
	<value: 16r8C76>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSFORM_HINT_APPLE [

	<enum: #'GL_TRANSFORM_HINT_APPLE'>
	<value: 16r85B1>
	<vendor: #APPLE>
	<suffix: #APPLE>
	<groups: #(#HintTarget)>
	^ GL_TRANSFORM_HINT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE [

	<enum: #'GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE'>
	<value: 16r93A0>
	<vendor: #ANGLE>
	^ GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSLATE_2D_NV [

	<enum: #'GL_TRANSLATE_2D_NV'>
	<value: 16r9090>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathTransformType)>
	^ GL_TRANSLATE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSLATE_3D_NV [

	<enum: #'GL_TRANSLATE_3D_NV'>
	<value: 16r9091>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathTransformType)>
	^ GL_TRANSLATE_3D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSLATE_X_NV [

	<enum: #'GL_TRANSLATE_X_NV'>
	<value: 16r908E>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathTransformType)>
	^ GL_TRANSLATE_X_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSLATE_Y_NV [

	<enum: #'GL_TRANSLATE_Y_NV'>
	<value: 16r908F>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathTransformType)>
	^ GL_TRANSLATE_Y_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_AFFINE_2D_NV [

	<enum: #'GL_TRANSPOSE_AFFINE_2D_NV'>
	<value: 16r9096>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathTransformType)>
	^ GL_TRANSPOSE_AFFINE_2D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_AFFINE_3D_NV [

	<enum: #'GL_TRANSPOSE_AFFINE_3D_NV'>
	<value: 16r9098>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathTransformType)>
	^ GL_TRANSPOSE_AFFINE_3D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_COLOR_MATRIX [

	<enum: #'GL_TRANSPOSE_COLOR_MATRIX'>
	<value: 16r84E6>
	<vendor: #ARB>
	^ GL_TRANSPOSE_COLOR_MATRIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_COLOR_MATRIX_ARB [

	<enum: #'GL_TRANSPOSE_COLOR_MATRIX_ARB'>
	<value: 16r84E6>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TRANSPOSE_COLOR_MATRIX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_CURRENT_MATRIX_ARB [

	<enum: #'GL_TRANSPOSE_CURRENT_MATRIX_ARB'>
	<value: 16r88B7>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_TRANSPOSE_CURRENT_MATRIX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_MODELVIEW_MATRIX [

	<enum: #'GL_TRANSPOSE_MODELVIEW_MATRIX'>
	<value: 16r84E3>
	<vendor: #ARB>
	^ GL_TRANSPOSE_MODELVIEW_MATRIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_MODELVIEW_MATRIX_ARB [

	<enum: #'GL_TRANSPOSE_MODELVIEW_MATRIX_ARB'>
	<value: 16r84E3>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_NV [

	<enum: #'GL_TRANSPOSE_NV'>
	<value: 16r862C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRANSPOSE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_PROGRAM_MATRIX_EXT [

	<enum: #'GL_TRANSPOSE_PROGRAM_MATRIX_EXT'>
	<value: 16r8E2E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_TRANSPOSE_PROGRAM_MATRIX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_PROJECTION_MATRIX [

	<enum: #'GL_TRANSPOSE_PROJECTION_MATRIX'>
	<value: 16r84E4>
	<vendor: #ARB>
	^ GL_TRANSPOSE_PROJECTION_MATRIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_PROJECTION_MATRIX_ARB [

	<enum: #'GL_TRANSPOSE_PROJECTION_MATRIX_ARB'>
	<value: 16r84E4>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TRANSPOSE_PROJECTION_MATRIX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_TEXTURE_MATRIX [

	<enum: #'GL_TRANSPOSE_TEXTURE_MATRIX'>
	<value: 16r84E5>
	<vendor: #ARB>
	^ GL_TRANSPOSE_TEXTURE_MATRIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRANSPOSE_TEXTURE_MATRIX_ARB [

	<enum: #'GL_TRANSPOSE_TEXTURE_MATRIX_ARB'>
	<value: 16r84E5>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_TRANSPOSE_TEXTURE_MATRIX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLES [

	<enum: #'GL_TRIANGLES'>
	<value: 16r4>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLES_ADJACENCY [

	<enum: #'GL_TRIANGLES_ADJACENCY'>
	<value: 16rC>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLES_ADJACENCY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLES_ADJACENCY_ARB [

	<enum: #'GL_TRIANGLES_ADJACENCY_ARB'>
	<value: 16rC>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLES_ADJACENCY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLES_ADJACENCY_EXT [

	<enum: #'GL_TRIANGLES_ADJACENCY_EXT'>
	<value: 16rC>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLES_ADJACENCY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLES_ADJACENCY_OES [

	<enum: #'GL_TRIANGLES_ADJACENCY_OES'>
	<value: 16rC>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TRIANGLES_ADJACENCY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLE_FAN [

	<enum: #'GL_TRIANGLE_FAN'>
	<value: 16r6>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLE_FAN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLE_LIST_SUN [

	<enum: #'GL_TRIANGLE_LIST_SUN'>
	<value: 16r81D7>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_TRIANGLE_LIST_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLE_MESH_SUN [

	<enum: #'GL_TRIANGLE_MESH_SUN'>
	<value: 16r8615>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_TRIANGLE_MESH_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLE_STRIP [

	<enum: #'GL_TRIANGLE_STRIP'>
	<value: 16r5>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLE_STRIP
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLE_STRIP_ADJACENCY [

	<enum: #'GL_TRIANGLE_STRIP_ADJACENCY'>
	<value: 16rD>
	<vendor: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLE_STRIP_ADJACENCY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLE_STRIP_ADJACENCY_ARB [

	<enum: #'GL_TRIANGLE_STRIP_ADJACENCY_ARB'>
	<value: 16rD>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLE_STRIP_ADJACENCY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLE_STRIP_ADJACENCY_EXT [

	<enum: #'GL_TRIANGLE_STRIP_ADJACENCY_EXT'>
	<value: 16rD>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PrimitiveType)>
	^ GL_TRIANGLE_STRIP_ADJACENCY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGLE_STRIP_ADJACENCY_OES [

	<enum: #'GL_TRIANGLE_STRIP_ADJACENCY_OES'>
	<value: 16rD>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_TRIANGLE_STRIP_ADJACENCY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRIANGULAR_NV [

	<enum: #'GL_TRIANGULAR_NV'>
	<value: 16r90A5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_TRIANGULAR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TRUE [

	<enum: #'GL_TRUE'>
	<value: 16r1>
	<vendor: #ARB>
	<groups: #(#Boolean #ClampColorModeARB #SpecialNumbers #VertexShaderWriteMaskEXT)>
	^ GL_TRUE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> TYPE [

	<enum: #'GL_TYPE'>
	<value: 16r92FA>
	<vendor: #NV>
	<groups: #(#ProgramResourceProperty)>
	^ GL_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNCORRELATED_NV [

	<enum: #'GL_UNCORRELATED_NV'>
	<value: 16r9282>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNCORRELATED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNDEFINED_APPLE [

	<enum: #'GL_UNDEFINED_APPLE'>
	<value: 16r8A1C>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_UNDEFINED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNDEFINED_VERTEX [

	<enum: #'GL_UNDEFINED_VERTEX'>
	<value: 16r8260>
	<vendor: #ARB>
	^ GL_UNDEFINED_VERTEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNDEFINED_VERTEX_EXT [

	<enum: #'GL_UNDEFINED_VERTEX_EXT'>
	<value: 16r8260>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_UNDEFINED_VERTEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNDEFINED_VERTEX_OES [

	<enum: #'GL_UNDEFINED_VERTEX_OES'>
	<value: 16r8260>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_UNDEFINED_VERTEX_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM [

	<enum: #'GL_UNIFORM'>
	<value: 16r92E1>
	<vendor: #NV>
	<groups: #(#ProgramInterface #ProgramResourceProperty)>
	^ GL_UNIFORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_ADDRESS_COMMAND_NV [

	<enum: #'GL_UNIFORM_ADDRESS_COMMAND_NV'>
	<value: 16rA>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_UNIFORM_ADDRESS_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_ARRAY_STRIDE [

	<enum: #'GL_UNIFORM_ARRAY_STRIDE'>
	<value: 16r8A3C>
	<vendor: #APPLE>
	<groups: #(#UniformPName)>
	^ GL_UNIFORM_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX [

	<enum: #'GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX'>
	<value: 16r92DA>
	<vendor: #NV>
	<groups: #(#UniformPName)>
	^ GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BARRIER_BIT [

	<enum: #'GL_UNIFORM_BARRIER_BIT'>
	<value: 2r100>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_UNIFORM_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BARRIER_BIT_EXT [

	<enum: #'GL_UNIFORM_BARRIER_BIT_EXT'>
	<value: 2r100>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_UNIFORM_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK [

	<enum: #'GL_UNIFORM_BLOCK'>
	<value: 16r92E2>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_UNIFORM_BLOCK
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_ACTIVE_UNIFORMS [

	<enum: #'GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS'>
	<value: 16r8A42>
	<vendor: #APPLE>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES [

	<enum: #'GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES'>
	<value: 16r8A43>
	<vendor: #APPLE>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_BINDING [

	<enum: #'GL_UNIFORM_BLOCK_BINDING'>
	<value: 16r8A3F>
	<vendor: #APPLE>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_DATA_SIZE [

	<enum: #'GL_UNIFORM_BLOCK_DATA_SIZE'>
	<value: 16r8A40>
	<vendor: #APPLE>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_DATA_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_INDEX [

	<enum: #'GL_UNIFORM_BLOCK_INDEX'>
	<value: 16r8A3A>
	<vendor: #APPLE>
	<groups: #(#UniformPName)>
	^ GL_UNIFORM_BLOCK_INDEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_NAME_LENGTH [

	<enum: #'GL_UNIFORM_BLOCK_NAME_LENGTH'>
	<value: 16r8A41>
	<vendor: #APPLE>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_NAME_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER [

	<enum: #'GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER'>
	<value: 16r90EC>
	<vendor: #NV>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER [

	<enum: #'GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER'>
	<value: 16r8A46>
	<vendor: #APPLE>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER [

	<enum: #'GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER'>
	<value: 16r8A45>
	<vendor: #APPLE>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV [

	<enum: #'GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV'>
	<value: 16r959C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV [

	<enum: #'GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV'>
	<value: 16r959D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER [

	<enum: #'GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER'>
	<value: 16r84F0>
	<vendor: #NV>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER [

	<enum: #'GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER'>
	<value: 16r84F1>
	<vendor: #NV>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER [

	<enum: #'GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER'>
	<value: 16r8A44>
	<vendor: #APPLE>
	<groups: #(#UniformBlockPName)>
	^ GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER [

	<enum: #'GL_UNIFORM_BUFFER'>
	<value: 16r8A11>
	<vendor: #APPLE>
	<groups: #(#BufferStorageTarget #BufferTargetARB #CopyBufferSubDataTarget)>
	^ GL_UNIFORM_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_ADDRESS_NV [

	<enum: #'GL_UNIFORM_BUFFER_ADDRESS_NV'>
	<value: 16r936F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNIFORM_BUFFER_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_BINDING [

	<enum: #'GL_UNIFORM_BUFFER_BINDING'>
	<value: 16r8A28>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_UNIFORM_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_BINDING_EXT [

	<enum: #'GL_UNIFORM_BUFFER_BINDING_EXT'>
	<value: 16r8DEF>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNIFORM_BUFFER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_EXT [

	<enum: #'GL_UNIFORM_BUFFER_EXT'>
	<value: 16r8DEE>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNIFORM_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_LENGTH_NV [

	<enum: #'GL_UNIFORM_BUFFER_LENGTH_NV'>
	<value: 16r9370>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNIFORM_BUFFER_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_OFFSET_ALIGNMENT [

	<enum: #'GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT'>
	<value: 16r8A34>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_SIZE [

	<enum: #'GL_UNIFORM_BUFFER_SIZE'>
	<value: 16r8A2A>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_UNIFORM_BUFFER_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_START [

	<enum: #'GL_UNIFORM_BUFFER_START'>
	<value: 16r8A29>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_UNIFORM_BUFFER_START
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_BUFFER_UNIFIED_NV [

	<enum: #'GL_UNIFORM_BUFFER_UNIFIED_NV'>
	<value: 16r936E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNIFORM_BUFFER_UNIFIED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_IS_ROW_MAJOR [

	<enum: #'GL_UNIFORM_IS_ROW_MAJOR'>
	<value: 16r8A3E>
	<vendor: #APPLE>
	<groups: #(#UniformPName)>
	^ GL_UNIFORM_IS_ROW_MAJOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_MATRIX_STRIDE [

	<enum: #'GL_UNIFORM_MATRIX_STRIDE'>
	<value: 16r8A3D>
	<vendor: #APPLE>
	<groups: #(#UniformPName)>
	^ GL_UNIFORM_MATRIX_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_NAME_LENGTH [

	<enum: #'GL_UNIFORM_NAME_LENGTH'>
	<value: 16r8A39>
	<vendor: #APPLE>
	<groups: #(#SubroutineParameterName #UniformPName)>
	^ GL_UNIFORM_NAME_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_OFFSET [

	<enum: #'GL_UNIFORM_OFFSET'>
	<value: 16r8A3B>
	<vendor: #APPLE>
	<groups: #(#UniformPName)>
	^ GL_UNIFORM_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_SIZE [

	<enum: #'GL_UNIFORM_SIZE'>
	<value: 16r8A38>
	<vendor: #APPLE>
	<groups: #(#SubroutineParameterName #UniformPName)>
	^ GL_UNIFORM_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNIFORM_TYPE [

	<enum: #'GL_UNIFORM_TYPE'>
	<value: 16r8A37>
	<vendor: #APPLE>
	<groups: #(#UniformPName)>
	^ GL_UNIFORM_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNKNOWN_CONTEXT_RESET [

	<enum: #'GL_UNKNOWN_CONTEXT_RESET'>
	<value: 16r8255>
	<vendor: #ARB>
	<groups: #(#GraphicsResetStatus)>
	^ GL_UNKNOWN_CONTEXT_RESET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNKNOWN_CONTEXT_RESET_ARB [

	<enum: #'GL_UNKNOWN_CONTEXT_RESET_ARB'>
	<value: 16r8255>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_UNKNOWN_CONTEXT_RESET_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNKNOWN_CONTEXT_RESET_EXT [

	<enum: #'GL_UNKNOWN_CONTEXT_RESET_EXT'>
	<value: 16r8255>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_UNKNOWN_CONTEXT_RESET_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNKNOWN_CONTEXT_RESET_KHR [

	<enum: #'GL_UNKNOWN_CONTEXT_RESET_KHR'>
	<value: 16r8255>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_UNKNOWN_CONTEXT_RESET_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_ALIGNMENT [

	<enum: #'GL_UNPACK_ALIGNMENT'>
	<value: 16rCF5>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_ALIGNMENT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_CLIENT_STORAGE_APPLE [

	<enum: #'GL_UNPACK_CLIENT_STORAGE_APPLE'>
	<value: 16r85B2>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_UNPACK_CLIENT_STORAGE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_CMYK_HINT_EXT [

	<enum: #'GL_UNPACK_CMYK_HINT_EXT'>
	<value: 16r800F>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #HintTarget)>
	^ GL_UNPACK_CMYK_HINT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_COLORSPACE_CONVERSION_WEBGL [

	<enum: #'GL_UNPACK_COLORSPACE_CONVERSION_WEBGL'>
	<value: 16r9243>
	<vendor: #WEBGL>
	^ GL_UNPACK_COLORSPACE_CONVERSION_WEBGL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_COMPRESSED_BLOCK_DEPTH [

	<enum: #'GL_UNPACK_COMPRESSED_BLOCK_DEPTH'>
	<value: 16r9129>
	<vendor: #ARB>
	^ GL_UNPACK_COMPRESSED_BLOCK_DEPTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_COMPRESSED_BLOCK_HEIGHT [

	<enum: #'GL_UNPACK_COMPRESSED_BLOCK_HEIGHT'>
	<value: 16r9128>
	<vendor: #ARB>
	^ GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_COMPRESSED_BLOCK_SIZE [

	<enum: #'GL_UNPACK_COMPRESSED_BLOCK_SIZE'>
	<value: 16r912A>
	<vendor: #ARB>
	^ GL_UNPACK_COMPRESSED_BLOCK_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_COMPRESSED_BLOCK_WIDTH [

	<enum: #'GL_UNPACK_COMPRESSED_BLOCK_WIDTH'>
	<value: 16r9127>
	<vendor: #ARB>
	^ GL_UNPACK_COMPRESSED_BLOCK_WIDTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_COMPRESSED_SIZE_SGIX [

	<enum: #'GL_UNPACK_COMPRESSED_SIZE_SGIX'>
	<value: 16r831A>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_UNPACK_COMPRESSED_SIZE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_CONSTANT_DATA_SUNX [

	<enum: #'GL_UNPACK_CONSTANT_DATA_SUNX'>
	<value: 16r81D5>
	<vendor: #SUN>
	<suffix: #SUNX>
	^ GL_UNPACK_CONSTANT_DATA_SUNX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_FLIP_Y_WEBGL [

	<enum: #'GL_UNPACK_FLIP_Y_WEBGL'>
	<value: 16r9240>
	<vendor: #WEBGL>
	^ GL_UNPACK_FLIP_Y_WEBGL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_IMAGE_DEPTH_SGIS [

	<enum: #'GL_UNPACK_IMAGE_DEPTH_SGIS'>
	<value: 16r8133>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_IMAGE_DEPTH_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_IMAGE_HEIGHT [

	<enum: #'GL_UNPACK_IMAGE_HEIGHT'>
	<value: 16r806E>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_IMAGE_HEIGHT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_IMAGE_HEIGHT_EXT [

	<enum: #'GL_UNPACK_IMAGE_HEIGHT_EXT'>
	<value: 16r806E>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_IMAGE_HEIGHT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_LSB_FIRST [

	<enum: #'GL_UNPACK_LSB_FIRST'>
	<value: 16rCF1>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_LSB_FIRST
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_PREMULTIPLY_ALPHA_WEBGL [

	<enum: #'GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL'>
	<value: 16r9241>
	<vendor: #WEBGL>
	^ GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_RESAMPLE_OML [

	<enum: #'GL_UNPACK_RESAMPLE_OML'>
	<value: 16r8985>
	<vendor: #OML>
	<suffix: #OML>
	<groups: #(#PixelStoreParameter)>
	^ GL_UNPACK_RESAMPLE_OML
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_RESAMPLE_SGIX [

	<enum: #'GL_UNPACK_RESAMPLE_SGIX'>
	<value: 16r842F>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_RESAMPLE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_ROW_BYTES_APPLE [

	<enum: #'GL_UNPACK_ROW_BYTES_APPLE'>
	<value: 16r8A16>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_UNPACK_ROW_BYTES_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_ROW_LENGTH [

	<enum: #'GL_UNPACK_ROW_LENGTH'>
	<value: 16rCF2>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_ROW_LENGTH
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_ROW_LENGTH_EXT [

	<enum: #'GL_UNPACK_ROW_LENGTH_EXT'>
	<value: 16rCF2>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelStoreParameter)>
	^ GL_UNPACK_ROW_LENGTH_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SKIP_IMAGES [

	<enum: #'GL_UNPACK_SKIP_IMAGES'>
	<value: 16r806D>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_SKIP_IMAGES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SKIP_IMAGES_EXT [

	<enum: #'GL_UNPACK_SKIP_IMAGES_EXT'>
	<value: 16r806D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_SKIP_IMAGES_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SKIP_PIXELS [

	<enum: #'GL_UNPACK_SKIP_PIXELS'>
	<value: 16rCF4>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_SKIP_PIXELS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SKIP_PIXELS_EXT [

	<enum: #'GL_UNPACK_SKIP_PIXELS_EXT'>
	<value: 16rCF4>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelStoreParameter)>
	^ GL_UNPACK_SKIP_PIXELS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SKIP_ROWS [

	<enum: #'GL_UNPACK_SKIP_ROWS'>
	<value: 16rCF3>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_SKIP_ROWS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SKIP_ROWS_EXT [

	<enum: #'GL_UNPACK_SKIP_ROWS_EXT'>
	<value: 16rCF3>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelStoreParameter)>
	^ GL_UNPACK_SKIP_ROWS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SKIP_VOLUMES_SGIS [

	<enum: #'GL_UNPACK_SKIP_VOLUMES_SGIS'>
	<value: 16r8132>
	<vendor: #SGI>
	<suffix: #SGIS>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_SKIP_VOLUMES_SGIS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SUBSAMPLE_RATE_SGIX [

	<enum: #'GL_UNPACK_SUBSAMPLE_RATE_SGIX'>
	<value: 16r85A1>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_SUBSAMPLE_RATE_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNPACK_SWAP_BYTES [

	<enum: #'GL_UNPACK_SWAP_BYTES'>
	<value: 16rCF0>
	<vendor: #ARB>
	<groups: #(#GetPName #PixelStoreParameter)>
	^ GL_UNPACK_SWAP_BYTES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNALED [

	<enum: #'GL_UNSIGNALED'>
	<value: 16r9118>
	<vendor: #ARB>
	^ GL_UNSIGNALED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNALED_APPLE [

	<enum: #'GL_UNSIGNALED_APPLE'>
	<value: 16r9118>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_UNSIGNALED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_BYTE [

	<enum: #'GL_UNSIGNED_BYTE'>
	<value: 16r1401>
	<vendor: #ARB>
	<groups: #(#ColorPointerType #DrawElementsType #ElementPointerTypeATI #ListNameType #MatrixIndexPointerTypeARB #PixelType #ReplacementCodeTypeSUN #ScalarType #VertexAttribIType #VertexAttribPointerType #VertexAttribType #WeightPointerTypeARB)>
	^ GL_UNSIGNED_BYTE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_BYTE_2_3_3_REV [

	<enum: #'GL_UNSIGNED_BYTE_2_3_3_REV'>
	<value: 16r8362>
	<vendor: #SGI>
	^ GL_UNSIGNED_BYTE_2_3_3_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_BYTE_2_3_3_REV_EXT [

	<enum: #'GL_UNSIGNED_BYTE_2_3_3_REV_EXT'>
	<value: 16r8362>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_UNSIGNED_BYTE_2_3_3_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_BYTE_3_3_2 [

	<enum: #'GL_UNSIGNED_BYTE_3_3_2'>
	<value: 16r8032>
	<vendor: #ARB>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_BYTE_3_3_2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_BYTE_3_3_2_EXT [

	<enum: #'GL_UNSIGNED_BYTE_3_3_2_EXT'>
	<value: 16r8032>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_BYTE_3_3_2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_IDENTITY_NV [

	<enum: #'GL_UNSIGNED_IDENTITY_NV'>
	<value: 16r8536>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerMappingNV)>
	^ GL_UNSIGNED_IDENTITY_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT [

	<enum: #'GL_UNSIGNED_INT'>
	<value: 16r1405>
	<vendor: #ARB>
	<groups: #(#AttributeType #ColorPointerType #DrawElementsType #ElementPointerTypeATI #GlslTypeToken #ListNameType #MatrixIndexPointerTypeARB #PixelFormat #PixelType #ReplacementCodeTypeSUN #ScalarType #UniformType #VertexAttribIType #VertexAttribPointerType #VertexAttribType #WeightPointerTypeARB)>
	^ GL_UNSIGNED_INT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT16_NV [

	<enum: #'GL_UNSIGNED_INT16_NV'>
	<value: 16r8FF0>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT16_VEC2_NV [

	<enum: #'GL_UNSIGNED_INT16_VEC2_NV'>
	<value: 16r8FF1>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT16_VEC2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT16_VEC3_NV [

	<enum: #'GL_UNSIGNED_INT16_VEC3_NV'>
	<value: 16r8FF2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT16_VEC3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT16_VEC4_NV [

	<enum: #'GL_UNSIGNED_INT16_VEC4_NV'>
	<value: 16r8FF3>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT16_VEC4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_AMD [

	<enum: #'GL_UNSIGNED_INT64_AMD'>
	<value: 16r8BC2>
	<vendor: #QCOM>
	<suffix: #AMD>
	^ GL_UNSIGNED_INT64_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_ARB [

	<enum: #'GL_UNSIGNED_INT64_ARB'>
	<value: 16r140F>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#AttributeType #VertexAttribPointerType)>
	^ GL_UNSIGNED_INT64_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_NV [

	<enum: #'GL_UNSIGNED_INT64_NV'>
	<value: 16r140F>
	<vendor: #ARB>
	<suffix: #NV>
	<groups: #(#AttributeType #VertexAttribPointerType)>
	^ GL_UNSIGNED_INT64_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_VEC2_ARB [

	<enum: #'GL_UNSIGNED_INT64_VEC2_ARB'>
	<value: 16r8FF5>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_UNSIGNED_INT64_VEC2_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_VEC2_NV [

	<enum: #'GL_UNSIGNED_INT64_VEC2_NV'>
	<value: 16r8FF5>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT64_VEC2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_VEC3_ARB [

	<enum: #'GL_UNSIGNED_INT64_VEC3_ARB'>
	<value: 16r8FF6>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_UNSIGNED_INT64_VEC3_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_VEC3_NV [

	<enum: #'GL_UNSIGNED_INT64_VEC3_NV'>
	<value: 16r8FF6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT64_VEC3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_VEC4_ARB [

	<enum: #'GL_UNSIGNED_INT64_VEC4_ARB'>
	<value: 16r8FF7>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#AttributeType)>
	^ GL_UNSIGNED_INT64_VEC4_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT64_VEC4_NV [

	<enum: #'GL_UNSIGNED_INT64_VEC4_NV'>
	<value: 16r8FF7>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT64_VEC4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT8_NV [

	<enum: #'GL_UNSIGNED_INT8_NV'>
	<value: 16r8FEC>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT8_VEC2_NV [

	<enum: #'GL_UNSIGNED_INT8_VEC2_NV'>
	<value: 16r8FED>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT8_VEC2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT8_VEC3_NV [

	<enum: #'GL_UNSIGNED_INT8_VEC3_NV'>
	<value: 16r8FEE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT8_VEC3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT8_VEC4_NV [

	<enum: #'GL_UNSIGNED_INT8_VEC4_NV'>
	<value: 16r8FEF>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT8_VEC4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_10F_11F_11F_REV [

	<enum: #'GL_UNSIGNED_INT_10F_11F_11F_REV'>
	<value: 16r8C3B>
	<vendor: #NV>
	<groups: #(#VertexAttribPointerType #VertexAttribType)>
	^ GL_UNSIGNED_INT_10F_11F_11F_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_10F_11F_11F_REV_APPLE [

	<enum: #'GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE'>
	<value: 16r8C3B>
	<vendor: #NV>
	<suffix: #APPLE>
	^ GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_10F_11F_11F_REV_EXT [

	<enum: #'GL_UNSIGNED_INT_10F_11F_11F_REV_EXT'>
	<value: 16r8C3B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_10_10_10_2 [

	<enum: #'GL_UNSIGNED_INT_10_10_10_2'>
	<value: 16r8036>
	<vendor: #ARB>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_INT_10_10_10_2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_10_10_10_2_EXT [

	<enum: #'GL_UNSIGNED_INT_10_10_10_2_EXT'>
	<value: 16r8036>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_INT_10_10_10_2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_10_10_10_2_OES [

	<enum: #'GL_UNSIGNED_INT_10_10_10_2_OES'>
	<value: 16r8DF6>
	<vendor: #OES>
	<suffix: #OES>
	^ GL_UNSIGNED_INT_10_10_10_2_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_24_8 [

	<enum: #'GL_UNSIGNED_INT_24_8'>
	<value: 16r84FA>
	<vendor: #NV>
	^ GL_UNSIGNED_INT_24_8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_24_8_EXT [

	<enum: #'GL_UNSIGNED_INT_24_8_EXT'>
	<value: 16r84FA>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_24_8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_24_8_MESA [

	<enum: #'GL_UNSIGNED_INT_24_8_MESA'>
	<value: 16r8751>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_UNSIGNED_INT_24_8_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_24_8_NV [

	<enum: #'GL_UNSIGNED_INT_24_8_NV'>
	<value: 16r84FA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT_24_8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_24_8_OES [

	<enum: #'GL_UNSIGNED_INT_24_8_OES'>
	<value: 16r84FA>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_UNSIGNED_INT_24_8_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_2_10_10_10_REV [

	<enum: #'GL_UNSIGNED_INT_2_10_10_10_REV'>
	<value: 16r8368>
	<vendor: #SGI>
	<groups: #(#VertexAttribPointerType #VertexAttribType)>
	^ GL_UNSIGNED_INT_2_10_10_10_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_2_10_10_10_REV_EXT [

	<enum: #'GL_UNSIGNED_INT_2_10_10_10_REV_EXT'>
	<value: 16r8368>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_2_10_10_10_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_5_9_9_9_REV [

	<enum: #'GL_UNSIGNED_INT_5_9_9_9_REV'>
	<value: 16r8C3E>
	<vendor: #NV>
	^ GL_UNSIGNED_INT_5_9_9_9_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_5_9_9_9_REV_APPLE [

	<enum: #'GL_UNSIGNED_INT_5_9_9_9_REV_APPLE'>
	<value: 16r8C3E>
	<vendor: #NV>
	<suffix: #APPLE>
	^ GL_UNSIGNED_INT_5_9_9_9_REV_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_5_9_9_9_REV_EXT [

	<enum: #'GL_UNSIGNED_INT_5_9_9_9_REV_EXT'>
	<value: 16r8C3E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_5_9_9_9_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_8_24_REV_MESA [

	<enum: #'GL_UNSIGNED_INT_8_24_REV_MESA'>
	<value: 16r8752>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_UNSIGNED_INT_8_24_REV_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_8_8_8_8 [

	<enum: #'GL_UNSIGNED_INT_8_8_8_8'>
	<value: 16r8035>
	<vendor: #ARB>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_INT_8_8_8_8
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_8_8_8_8_EXT [

	<enum: #'GL_UNSIGNED_INT_8_8_8_8_EXT'>
	<value: 16r8035>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_INT_8_8_8_8_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_8_8_8_8_REV [

	<enum: #'GL_UNSIGNED_INT_8_8_8_8_REV'>
	<value: 16r8367>
	<vendor: #SGI>
	^ GL_UNSIGNED_INT_8_8_8_8_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_8_8_8_8_REV_EXT [

	<enum: #'GL_UNSIGNED_INT_8_8_8_8_REV_EXT'>
	<value: 16r8367>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_8_8_8_8_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_8_8_S8_S8_REV_NV [

	<enum: #'GL_UNSIGNED_INT_8_8_S8_S8_REV_NV'>
	<value: 16r86DB>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_ATOMIC_COUNTER [

	<enum: #'GL_UNSIGNED_INT_ATOMIC_COUNTER'>
	<value: 16r92DB>
	<vendor: #NV>
	<groups: #(#GlslTypeToken)>
	^ GL_UNSIGNED_INT_ATOMIC_COUNTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_1D [

	<enum: #'GL_UNSIGNED_INT_IMAGE_1D'>
	<value: 16r9062>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_1D_ARRAY [

	<enum: #'GL_UNSIGNED_INT_IMAGE_1D_ARRAY'>
	<value: 16r9068>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_1D_ARRAY_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT'>
	<value: 16r9068>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_1D_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_1D_EXT'>
	<value: 16r9062>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_1D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D'>
	<value: 16r9063>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_ARRAY [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_ARRAY'>
	<value: 16r9069>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_ARRAY_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT'>
	<value: 16r9069>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_EXT'>
	<value: 16r9063>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_MULTISAMPLE [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE'>
	<value: 16r906B>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY'>
	<value: 16r906C>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT'>
	<value: 16r906C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT'>
	<value: 16r906B>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_RECT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_RECT'>
	<value: 16r9065>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_2D_RECT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_2D_RECT_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT'>
	<value: 16r9065>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_3D [

	<enum: #'GL_UNSIGNED_INT_IMAGE_3D'>
	<value: 16r9064>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_3D_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_3D_EXT'>
	<value: 16r9064>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_3D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_BUFFER [

	<enum: #'GL_UNSIGNED_INT_IMAGE_BUFFER'>
	<value: 16r9067>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_BUFFER_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_BUFFER_EXT'>
	<value: 16r9067>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_BUFFER_OES [

	<enum: #'GL_UNSIGNED_INT_IMAGE_BUFFER_OES'>
	<value: 16r9067>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_UNSIGNED_INT_IMAGE_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_CUBE [

	<enum: #'GL_UNSIGNED_INT_IMAGE_CUBE'>
	<value: 16r9066>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_CUBE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_CUBE_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_CUBE_EXT'>
	<value: 16r9066>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_CUBE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY [

	<enum: #'GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY'>
	<value: 16r906A>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken)>
	^ GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT [

	<enum: #'GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT'>
	<value: 16r906A>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES [

	<enum: #'GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES'>
	<value: 16r906A>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_S8_S8_8_8_NV [

	<enum: #'GL_UNSIGNED_INT_S8_S8_8_8_NV'>
	<value: 16r86DA>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT_S8_S8_8_8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_1D [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_1D'>
	<value: 16r8DD1>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_1D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_1D_ARRAY [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_1D_ARRAY'>
	<value: 16r8DD6>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT'>
	<value: 16r8DD6>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_1D_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_1D_EXT'>
	<value: 16r8DD1>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_1D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D'>
	<value: 16r8DD2>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_2D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D_ARRAY [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D_ARRAY'>
	<value: 16r8DD7>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT'>
	<value: 16r8DD7>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D_EXT'>
	<value: 16r8DD2>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_2D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE'>
	<value: 16r910A>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY'>
	<value: 16r910D>
	<vendor: #ARB>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES'>
	<value: 16r910D>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D_RECT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D_RECT'>
	<value: 16r8DD5>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_2D_RECT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_2D_RECT_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT'>
	<value: 16r8DD5>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_3D [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_3D'>
	<value: 16r8DD3>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_3D
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_3D_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_3D_EXT'>
	<value: 16r8DD3>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_3D_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_BUFFER [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_BUFFER'>
	<value: 16r8DD8>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_BUFFER_AMD [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD'>
	<value: 16r9003>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_BUFFER_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT'>
	<value: 16r8DD8>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_BUFFER_OES [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_BUFFER_OES'>
	<value: 16r8DD8>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_UNSIGNED_INT_SAMPLER_BUFFER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_CUBE [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_CUBE'>
	<value: 16r8DD4>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_CUBE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_CUBE_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_CUBE_EXT'>
	<value: 16r8DD4>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY'>
	<value: 16r900F>
	<vendor: #AMD>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB'>
	<value: 16r900F>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT'>
	<value: 16r900F>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES'>
	<value: 16r900F>
	<vendor: #AMD>
	<suffix: #OES>
	^ GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV [

	<enum: #'GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV'>
	<value: 16r8E58>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_VEC2 [

	<enum: #'GL_UNSIGNED_INT_VEC2'>
	<value: 16r8DC6>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_VEC2
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_VEC2_EXT [

	<enum: #'GL_UNSIGNED_INT_VEC2_EXT'>
	<value: 16r8DC6>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_VEC2_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_VEC3 [

	<enum: #'GL_UNSIGNED_INT_VEC3'>
	<value: 16r8DC7>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_VEC3
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_VEC3_EXT [

	<enum: #'GL_UNSIGNED_INT_VEC3_EXT'>
	<value: 16r8DC7>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_VEC3_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_VEC4 [

	<enum: #'GL_UNSIGNED_INT_VEC4'>
	<value: 16r8DC8>
	<vendor: #NV>
	<groups: #(#AttributeType #GlslTypeToken #UniformType)>
	^ GL_UNSIGNED_INT_VEC4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INT_VEC4_EXT [

	<enum: #'GL_UNSIGNED_INT_VEC4_EXT'>
	<value: 16r8DC8>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_INT_VEC4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_INVERT_NV [

	<enum: #'GL_UNSIGNED_INVERT_NV'>
	<value: 16r8537>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerMappingNV)>
	^ GL_UNSIGNED_INVERT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_NORMALIZED [

	<enum: #'GL_UNSIGNED_NORMALIZED'>
	<value: 16r8C17>
	<vendor: #NV>
	^ GL_UNSIGNED_NORMALIZED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_NORMALIZED_ARB [

	<enum: #'GL_UNSIGNED_NORMALIZED_ARB'>
	<value: 16r8C17>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_UNSIGNED_NORMALIZED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_NORMALIZED_EXT [

	<enum: #'GL_UNSIGNED_NORMALIZED_EXT'>
	<value: 16r8C17>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_UNSIGNED_NORMALIZED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT [

	<enum: #'GL_UNSIGNED_SHORT'>
	<value: 16r1403>
	<vendor: #ARB>
	<groups: #(#ColorPointerType #DrawElementsType #ElementPointerTypeATI #ListNameType #MatrixIndexPointerTypeARB #PixelFormat #PixelType #ReplacementCodeTypeSUN #ScalarType #VertexAttribIType #VertexAttribPointerType #VertexAttribType #WeightPointerTypeARB)>
	^ GL_UNSIGNED_SHORT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_15_1_MESA [

	<enum: #'GL_UNSIGNED_SHORT_15_1_MESA'>
	<value: 16r8753>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_UNSIGNED_SHORT_15_1_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_1_15_REV_MESA [

	<enum: #'GL_UNSIGNED_SHORT_1_15_REV_MESA'>
	<value: 16r8754>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_UNSIGNED_SHORT_1_15_REV_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_1_5_5_5_REV [

	<enum: #'GL_UNSIGNED_SHORT_1_5_5_5_REV'>
	<value: 16r8366>
	<vendor: #SGI>
	^ GL_UNSIGNED_SHORT_1_5_5_5_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_1_5_5_5_REV_EXT [

	<enum: #'GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT'>
	<value: 16r8366>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_4_4_4_4 [

	<enum: #'GL_UNSIGNED_SHORT_4_4_4_4'>
	<value: 16r8033>
	<vendor: #ARB>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_SHORT_4_4_4_4
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_4_4_4_4_EXT [

	<enum: #'GL_UNSIGNED_SHORT_4_4_4_4_EXT'>
	<value: 16r8033>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_SHORT_4_4_4_4_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_4_4_4_4_REV [

	<enum: #'GL_UNSIGNED_SHORT_4_4_4_4_REV'>
	<value: 16r8365>
	<vendor: #SGI>
	^ GL_UNSIGNED_SHORT_4_4_4_4_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_4_4_4_4_REV_EXT [

	<enum: #'GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT'>
	<value: 16r8365>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_4_4_4_4_REV_IMG [

	<enum: #'GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG'>
	<value: 16r8365>
	<vendor: #SGI>
	<suffix: #IMG>
	^ GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_5_5_5_1 [

	<enum: #'GL_UNSIGNED_SHORT_5_5_5_1'>
	<value: 16r8034>
	<vendor: #ARB>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_SHORT_5_5_5_1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_5_5_5_1_EXT [

	<enum: #'GL_UNSIGNED_SHORT_5_5_5_1_EXT'>
	<value: 16r8034>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#PixelType)>
	^ GL_UNSIGNED_SHORT_5_5_5_1_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_5_6_5 [

	<enum: #'GL_UNSIGNED_SHORT_5_6_5'>
	<value: 16r8363>
	<vendor: #SGI>
	^ GL_UNSIGNED_SHORT_5_6_5
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_5_6_5_EXT [

	<enum: #'GL_UNSIGNED_SHORT_5_6_5_EXT'>
	<value: 16r8363>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_UNSIGNED_SHORT_5_6_5_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_5_6_5_REV [

	<enum: #'GL_UNSIGNED_SHORT_5_6_5_REV'>
	<value: 16r8364>
	<vendor: #SGI>
	^ GL_UNSIGNED_SHORT_5_6_5_REV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_5_6_5_REV_EXT [

	<enum: #'GL_UNSIGNED_SHORT_5_6_5_REV_EXT'>
	<value: 16r8364>
	<vendor: #SGI>
	<suffix: #EXT>
	^ GL_UNSIGNED_SHORT_5_6_5_REV_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_8_8_APPLE [

	<enum: #'GL_UNSIGNED_SHORT_8_8_APPLE'>
	<value: 16r85BA>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_UNSIGNED_SHORT_8_8_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_8_8_MESA [

	<enum: #'GL_UNSIGNED_SHORT_8_8_MESA'>
	<value: 16r85BA>
	<vendor: #APPLE>
	<suffix: #MESA>
	^ GL_UNSIGNED_SHORT_8_8_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_8_8_REV_APPLE [

	<enum: #'GL_UNSIGNED_SHORT_8_8_REV_APPLE'>
	<value: 16r85BB>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_UNSIGNED_SHORT_8_8_REV_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UNSIGNED_SHORT_8_8_REV_MESA [

	<enum: #'GL_UNSIGNED_SHORT_8_8_REV_MESA'>
	<value: 16r85BB>
	<vendor: #APPLE>
	<suffix: #MESA>
	^ GL_UNSIGNED_SHORT_8_8_REV_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UPLOAD_GPU_MASK_NVX [

	<enum: #'GL_UPLOAD_GPU_MASK_NVX'>
	<value: 16r954A>
	<vendor: #NV>
	<suffix: #NVX>
	^ GL_UPLOAD_GPU_MASK_NVX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UPPER_LEFT [

	<enum: #'GL_UPPER_LEFT'>
	<value: 16r8CA2>
	<vendor: #ARB>
	<groups: #(#ClipControlOrigin)>
	^ GL_UPPER_LEFT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UPPER_LEFT_EXT [

	<enum: #'GL_UPPER_LEFT_EXT'>
	<value: 16r8CA2>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_UPPER_LEFT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> USE_MISSING_GLYPH_NV [

	<enum: #'GL_USE_MISSING_GLYPH_NV'>
	<value: 16r90AA>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathHandleMissingGlyphs)>
	^ GL_USE_MISSING_GLYPH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UTF16_NV [

	<enum: #'GL_UTF16_NV'>
	<value: 16r909B>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathElementType)>
	^ GL_UTF16_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UTF8_NV [

	<enum: #'GL_UTF8_NV'>
	<value: 16r909A>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathElementType)>
	^ GL_UTF8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> UUID_SIZE_EXT [

	<enum: #'GL_UUID_SIZE_EXT'>
	<value: 16r10>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#SpecialNumbers)>
	^ GL_UUID_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> V2F [

	<enum: #'GL_V2F'>
	<value: 16r2A20>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_V2F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> V3F [

	<enum: #'GL_V3F'>
	<value: 16r2A21>
	<vendor: #ARB>
	<groups: #(#InterleavedArrayFormat)>
	^ GL_V3F
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VALIDATE_SHADER_BINARY_QCOM [

	<enum: #'GL_VALIDATE_SHADER_BINARY_QCOM'>
	<value: 16r96A3>
	<vendor: #Qualcomm>
	<suffix: #QCOM>
	^ GL_VALIDATE_SHADER_BINARY_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VALIDATE_STATUS [

	<enum: #'GL_VALIDATE_STATUS'>
	<value: 16r8B83>
	<vendor: #ARB>
	<groups: #(#ProgramPropertyARB)>
	^ GL_VALIDATE_STATUS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIABLE_A_NV [

	<enum: #'GL_VARIABLE_A_NV'>
	<value: 16r8523>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerVariableNV)>
	^ GL_VARIABLE_A_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIABLE_B_NV [

	<enum: #'GL_VARIABLE_B_NV'>
	<value: 16r8524>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerVariableNV)>
	^ GL_VARIABLE_B_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIABLE_C_NV [

	<enum: #'GL_VARIABLE_C_NV'>
	<value: 16r8525>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerVariableNV)>
	^ GL_VARIABLE_C_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIABLE_D_NV [

	<enum: #'GL_VARIABLE_D_NV'>
	<value: 16r8526>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerVariableNV)>
	^ GL_VARIABLE_D_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIABLE_E_NV [

	<enum: #'GL_VARIABLE_E_NV'>
	<value: 16r8527>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerVariableNV)>
	^ GL_VARIABLE_E_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIABLE_F_NV [

	<enum: #'GL_VARIABLE_F_NV'>
	<value: 16r8528>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerVariableNV)>
	^ GL_VARIABLE_F_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIABLE_G_NV [

	<enum: #'GL_VARIABLE_G_NV'>
	<value: 16r8529>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CombinerVariableNV)>
	^ GL_VARIABLE_G_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIANT_ARRAY_EXT [

	<enum: #'GL_VARIANT_ARRAY_EXT'>
	<value: 16r87E8>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VariantCapEXT)>
	^ GL_VARIANT_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIANT_ARRAY_POINTER_EXT [

	<enum: #'GL_VARIANT_ARRAY_POINTER_EXT'>
	<value: 16r87E9>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VARIANT_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIANT_ARRAY_STRIDE_EXT [

	<enum: #'GL_VARIANT_ARRAY_STRIDE_EXT'>
	<value: 16r87E6>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#GetVariantValueEXT)>
	^ GL_VARIANT_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIANT_ARRAY_TYPE_EXT [

	<enum: #'GL_VARIANT_ARRAY_TYPE_EXT'>
	<value: 16r87E7>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#GetVariantValueEXT)>
	^ GL_VARIANT_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIANT_DATATYPE_EXT [

	<enum: #'GL_VARIANT_DATATYPE_EXT'>
	<value: 16r87E5>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#GetVariantValueEXT)>
	^ GL_VARIANT_DATATYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIANT_EXT [

	<enum: #'GL_VARIANT_EXT'>
	<value: 16r87C1>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderStorageTypeEXT)>
	^ GL_VARIANT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VARIANT_VALUE_EXT [

	<enum: #'GL_VARIANT_VALUE_EXT'>
	<value: 16r87E4>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#GetVariantValueEXT)>
	^ GL_VARIANT_VALUE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VBO_FREE_MEMORY_ATI [

	<enum: #'GL_VBO_FREE_MEMORY_ATI'>
	<value: 16r87FB>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_VBO_FREE_MEMORY_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VECTOR_EXT [

	<enum: #'GL_VECTOR_EXT'>
	<value: 16r87BF>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#DataTypeEXT)>
	^ GL_VECTOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VENDOR [

	<enum: #'GL_VENDOR'>
	<value: 16r1F00>
	<vendor: #ARB>
	<groups: #(#StringName)>
	^ GL_VENDOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERSION [

	<enum: #'GL_VERSION'>
	<value: 16r1F02>
	<vendor: #ARB>
	<groups: #(#StringName)>
	^ GL_VERSION
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERSION_ES_CL_1_0 [

	<enum: #'GL_VERSION_ES_CL_1_0'>
	<value: 16r1>
	<vendor: #ARB>
	<groups: #(#SpecialNumbers)>
	^ GL_VERSION_ES_CL_1_0
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERSION_ES_CL_1_1 [

	<enum: #'GL_VERSION_ES_CL_1_1'>
	<value: 16r1>
	<vendor: #ARB>
	<groups: #(#SpecialNumbers)>
	^ GL_VERSION_ES_CL_1_1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERSION_ES_CM_1_1 [

	<enum: #'GL_VERSION_ES_CM_1_1'>
	<value: 16r1>
	<vendor: #ARB>
	<groups: #(#SpecialNumbers)>
	^ GL_VERSION_ES_CM_1_1
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX23_BIT_PGI [

	<enum: #'GL_VERTEX23_BIT_PGI'>
	<value: 2r100>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_VERTEX23_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX4_BIT_PGI [

	<enum: #'GL_VERTEX4_BIT_PGI'>
	<value: 2r1000>
	<suffix: #PGI>
	<bitmask>
	<groups: #(#VertexHintsMaskPGI)>
	^ GL_VERTEX4_BIT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY [

	<enum: #'GL_VERTEX_ARRAY'>
	<value: 16r8074>
	<vendor: #ARB>
	<groups: #(#EnableCap #GetPName #ObjectIdentifier)>
	^ GL_VERTEX_ARRAY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_ADDRESS_NV [

	<enum: #'GL_VERTEX_ARRAY_ADDRESS_NV'>
	<value: 16r8F21>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_BINDING [

	<enum: #'GL_VERTEX_ARRAY_BINDING'>
	<value: 16r85B5>
	<vendor: #APPLE>
	<groups: #(#GetPName)>
	^ GL_VERTEX_ARRAY_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_BINDING_APPLE [

	<enum: #'GL_VERTEX_ARRAY_BINDING_APPLE'>
	<value: 16r85B5>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ARRAY_BINDING_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_BINDING_OES [

	<enum: #'GL_VERTEX_ARRAY_BINDING_OES'>
	<value: 16r85B5>
	<vendor: #APPLE>
	<suffix: #OES>
	^ GL_VERTEX_ARRAY_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_BUFFER_BINDING [

	<enum: #'GL_VERTEX_ARRAY_BUFFER_BINDING'>
	<value: 16r8896>
	<vendor: #NV>
	^ GL_VERTEX_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_VERTEX_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r8896>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_COUNT_EXT [

	<enum: #'GL_VERTEX_ARRAY_COUNT_EXT'>
	<value: 16r807D>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPName)>
	^ GL_VERTEX_ARRAY_COUNT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_EXT [

	<enum: #'GL_VERTEX_ARRAY_EXT'>
	<value: 16r8074>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_VERTEX_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_KHR [

	<enum: #'GL_VERTEX_ARRAY_KHR'>
	<value: 16r8074>
	<vendor: #ARB>
	<suffix: #KHR>
	^ GL_VERTEX_ARRAY_KHR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_LENGTH_NV [

	<enum: #'GL_VERTEX_ARRAY_LENGTH_NV'>
	<value: 16r8F2B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_LIST_IBM [

	<enum: #'GL_VERTEX_ARRAY_LIST_IBM'>
	<value: 16r1929E>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_VERTEX_ARRAY_LIST_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_LIST_STRIDE_IBM [

	<enum: #'GL_VERTEX_ARRAY_LIST_STRIDE_IBM'>
	<value: 16r192A8>
	<vendor: #IBM>
	<suffix: #IBM>
	^ GL_VERTEX_ARRAY_LIST_STRIDE_IBM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_OBJECT_AMD [

	<enum: #'GL_VERTEX_ARRAY_OBJECT_AMD'>
	<value: 16r9154>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_VERTEX_ARRAY_OBJECT_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_OBJECT_EXT [

	<enum: #'GL_VERTEX_ARRAY_OBJECT_EXT'>
	<value: 16r9154>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_ARRAY_OBJECT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_PARALLEL_POINTERS_INTEL [

	<enum: #'GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL'>
	<value: 16r83F5>
	<vendor: #INTEL>
	<suffix: #INTEL>
	^ GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_POINTER [

	<enum: #'GL_VERTEX_ARRAY_POINTER'>
	<value: 16r808E>
	<vendor: #ARB>
	<groups: #(#GetPointervPName)>
	^ GL_VERTEX_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_POINTER_EXT [

	<enum: #'GL_VERTEX_ARRAY_POINTER_EXT'>
	<value: 16r808E>
	<vendor: #ARB>
	<suffix: #EXT>
	<groups: #(#GetPointervPName)>
	^ GL_VERTEX_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_RANGE_APPLE [

	<enum: #'GL_VERTEX_ARRAY_RANGE_APPLE'>
	<value: 16r851D>
	<vendor: #NV>
	<suffix: #APPLE>
	^ GL_VERTEX_ARRAY_RANGE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_RANGE_LENGTH_APPLE [

	<enum: #'GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE'>
	<value: 16r851E>
	<vendor: #NV>
	<suffix: #APPLE>
	^ GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_RANGE_LENGTH_NV [

	<enum: #'GL_VERTEX_ARRAY_RANGE_LENGTH_NV'>
	<value: 16r851E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ARRAY_RANGE_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_RANGE_NV [

	<enum: #'GL_VERTEX_ARRAY_RANGE_NV'>
	<value: 16r851D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ARRAY_RANGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_RANGE_POINTER_APPLE [

	<enum: #'GL_VERTEX_ARRAY_RANGE_POINTER_APPLE'>
	<value: 16r8521>
	<vendor: #NV>
	<suffix: #APPLE>
	^ GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_RANGE_POINTER_NV [

	<enum: #'GL_VERTEX_ARRAY_RANGE_POINTER_NV'>
	<value: 16r8521>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ARRAY_RANGE_POINTER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_RANGE_VALID_NV [

	<enum: #'GL_VERTEX_ARRAY_RANGE_VALID_NV'>
	<value: 16r851F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ARRAY_RANGE_VALID_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV [

	<enum: #'GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV'>
	<value: 16r8533>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_SIZE [

	<enum: #'GL_VERTEX_ARRAY_SIZE'>
	<value: 16r807A>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VERTEX_ARRAY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_SIZE_EXT [

	<enum: #'GL_VERTEX_ARRAY_SIZE_EXT'>
	<value: 16r807A>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_VERTEX_ARRAY_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_STORAGE_HINT_APPLE [

	<enum: #'GL_VERTEX_ARRAY_STORAGE_HINT_APPLE'>
	<value: 16r851F>
	<vendor: #NV>
	<suffix: #APPLE>
	<groups: #(#HintTarget)>
	^ GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_STRIDE [

	<enum: #'GL_VERTEX_ARRAY_STRIDE'>
	<value: 16r807C>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VERTEX_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_STRIDE_EXT [

	<enum: #'GL_VERTEX_ARRAY_STRIDE_EXT'>
	<value: 16r807C>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_VERTEX_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_TYPE [

	<enum: #'GL_VERTEX_ARRAY_TYPE'>
	<value: 16r807B>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VERTEX_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ARRAY_TYPE_EXT [

	<enum: #'GL_VERTEX_ARRAY_TYPE_EXT'>
	<value: 16r807B>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_VERTEX_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY0_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY0_NV'>
	<value: 16r8650>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY0_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY10_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY10_NV'>
	<value: 16r865A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY10_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY11_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY11_NV'>
	<value: 16r865B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY11_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY12_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY12_NV'>
	<value: 16r865C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY12_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY13_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY13_NV'>
	<value: 16r865D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY13_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY14_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY14_NV'>
	<value: 16r865E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY14_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY15_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY15_NV'>
	<value: 16r865F>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY15_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY1_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY1_NV'>
	<value: 16r8651>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY1_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY2_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY2_NV'>
	<value: 16r8652>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY2_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY3_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY3_NV'>
	<value: 16r8653>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY3_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY4_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY4_NV'>
	<value: 16r8654>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY4_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY5_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY5_NV'>
	<value: 16r8655>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY5_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY6_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY6_NV'>
	<value: 16r8656>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY6_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY7_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY7_NV'>
	<value: 16r8657>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY7_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY8_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY8_NV'>
	<value: 16r8658>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY8_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY9_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY9_NV'>
	<value: 16r8659>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY9_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_ADDRESS_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV'>
	<value: 16r8F20>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_BARRIER_BIT [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT'>
	<value: 2r1>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT'>
	<value: 2r1>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#MemoryBarrierMask)>
	^ GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_BUFFER_BINDING [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING'>
	<value: 16r889F>
	<vendor: #NV>
	<groups: #(#VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r889F>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_DIVISOR [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_DIVISOR'>
	<value: 16r88FE>
	<vendor: #NV>
	<groups: #(#VertexArrayPName #VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_DIVISOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE'>
	<value: 16r88FE>
	<vendor: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_DIVISOR_ARB [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB'>
	<value: 16r88FE>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_DIVISOR_EXT [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT'>
	<value: 16r88FE>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_DIVISOR_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV'>
	<value: 16r88FE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_ENABLED [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_ENABLED'>
	<value: 16r8622>
	<vendor: #NV>
	<groups: #(#VertexArrayPName #VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_ENABLED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_ENABLED_ARB [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB'>
	<value: 16r8622>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_INTEGER [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_INTEGER'>
	<value: 16r88FD>
	<vendor: #NV>
	<groups: #(#VertexArrayPName #VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_INTEGER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_INTEGER_EXT [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT'>
	<value: 16r88FD>
	<vendor: #NV>
	<suffix: #EXT>
	<groups: #(#VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_INTEGER_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV'>
	<value: 16r88FD>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_LENGTH_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV'>
	<value: 16r8F2A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_LONG [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_LONG'>
	<value: 16r874E>
	<vendor: #AMD>
	<groups: #(#VertexArrayPName #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_LONG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_NORMALIZED [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_NORMALIZED'>
	<value: 16r886A>
	<vendor: #NV>
	<groups: #(#VertexArrayPName #VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB'>
	<value: 16r886A>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_POINTER [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_POINTER'>
	<value: 16r8645>
	<vendor: #NV>
	<groups: #(#VertexAttribPointerPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_POINTER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_POINTER_ARB [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB'>
	<value: 16r8645>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#VertexAttribPointerPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_SIZE [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_SIZE'>
	<value: 16r8623>
	<vendor: #NV>
	<groups: #(#VertexArrayPName #VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_SIZE_ARB [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB'>
	<value: 16r8623>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_STRIDE [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_STRIDE'>
	<value: 16r8624>
	<vendor: #NV>
	<groups: #(#VertexArrayPName #VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_STRIDE_ARB [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB'>
	<value: 16r8624>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_TYPE [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_TYPE'>
	<value: 16r8625>
	<vendor: #NV>
	<groups: #(#VertexArrayPName #VertexAttribEnum #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_ARRAY_TYPE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_TYPE_ARB [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB'>
	<value: 16r8625>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_ARRAY_UNIFIED_NV [

	<enum: #'GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV'>
	<value: 16r8F1E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_BINDING [

	<enum: #'GL_VERTEX_ATTRIB_BINDING'>
	<value: 16r82D4>
	<vendor: #ARB>
	<groups: #(#VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP1_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP1_APPLE'>
	<value: 16r8A00>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP1_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP1_COEFF_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE'>
	<value: 16r8A03>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP1_DOMAIN_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE'>
	<value: 16r8A05>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP1_ORDER_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE'>
	<value: 16r8A04>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP1_SIZE_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE'>
	<value: 16r8A02>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP2_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP2_APPLE'>
	<value: 16r8A01>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP2_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP2_COEFF_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE'>
	<value: 16r8A07>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP2_DOMAIN_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE'>
	<value: 16r8A09>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP2_ORDER_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE'>
	<value: 16r8A08>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_MAP2_SIZE_APPLE [

	<enum: #'GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE'>
	<value: 16r8A06>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ATTRIB_RELATIVE_OFFSET [

	<enum: #'GL_VERTEX_ATTRIB_RELATIVE_OFFSET'>
	<value: 16r82D5>
	<vendor: #ARB>
	<groups: #(#VertexArrayPName #VertexAttribPropertyARB)>
	^ GL_VERTEX_ATTRIB_RELATIVE_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_BINDING_BUFFER [

	<enum: #'GL_VERTEX_BINDING_BUFFER'>
	<value: 16r8F4F>
	<vendor: #NV>
	^ GL_VERTEX_BINDING_BUFFER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_BINDING_DIVISOR [

	<enum: #'GL_VERTEX_BINDING_DIVISOR'>
	<value: 16r82D6>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VERTEX_BINDING_DIVISOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_BINDING_OFFSET [

	<enum: #'GL_VERTEX_BINDING_OFFSET'>
	<value: 16r82D7>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VERTEX_BINDING_OFFSET
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_BINDING_STRIDE [

	<enum: #'GL_VERTEX_BINDING_STRIDE'>
	<value: 16r82D8>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VERTEX_BINDING_STRIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_BLEND_ARB [

	<enum: #'GL_VERTEX_BLEND_ARB'>
	<value: 16r86A7>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_VERTEX_BLEND_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_CONSISTENT_HINT_PGI [

	<enum: #'GL_VERTEX_CONSISTENT_HINT_PGI'>
	<value: 16r1A22B>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget #HintTargetPGI)>
	^ GL_VERTEX_CONSISTENT_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_DATA_HINT_PGI [

	<enum: #'GL_VERTEX_DATA_HINT_PGI'>
	<value: 16r1A22A>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget #HintTargetPGI)>
	^ GL_VERTEX_DATA_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ELEMENT_SWIZZLE_AMD [

	<enum: #'GL_VERTEX_ELEMENT_SWIZZLE_AMD'>
	<value: 16r91A4>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_VERTEX_ELEMENT_SWIZZLE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ID_NV [

	<enum: #'GL_VERTEX_ID_NV'>
	<value: 16r8C7B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_ID_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_ID_SWIZZLE_AMD [

	<enum: #'GL_VERTEX_ID_SWIZZLE_AMD'>
	<value: 16r91A5>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_VERTEX_ID_SWIZZLE_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PRECLIP_HINT_SGIX [

	<enum: #'GL_VERTEX_PRECLIP_HINT_SGIX'>
	<value: 16r83EF>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #HintTarget)>
	^ GL_VERTEX_PRECLIP_HINT_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PRECLIP_SGIX [

	<enum: #'GL_VERTEX_PRECLIP_SGIX'>
	<value: 16r83EE>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#GetPName #HintTarget)>
	^ GL_VERTEX_PRECLIP_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_ARB [

	<enum: #'GL_VERTEX_PROGRAM_ARB'>
	<value: 16r8620>
	<vendor: #NV>
	<suffix: #ARB>
	<groups: #(#ProgramTarget)>
	^ GL_VERTEX_PROGRAM_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_BINDING_NV [

	<enum: #'GL_VERTEX_PROGRAM_BINDING_NV'>
	<value: 16r864A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_PROGRAM_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_CALLBACK_DATA_MESA [

	<enum: #'GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA'>
	<value: 16r8BB7>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_CALLBACK_FUNC_MESA [

	<enum: #'GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA'>
	<value: 16r8BB6>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_CALLBACK_MESA [

	<enum: #'GL_VERTEX_PROGRAM_CALLBACK_MESA'>
	<value: 16r8BB5>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_VERTEX_PROGRAM_CALLBACK_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_NV [

	<enum: #'GL_VERTEX_PROGRAM_NV'>
	<value: 16r8620>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_PROGRAM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_PARAMETER_BUFFER_NV [

	<enum: #'GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV'>
	<value: 16r8DA2>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_POINT_SIZE [

	<enum: #'GL_VERTEX_PROGRAM_POINT_SIZE'>
	<value: 16r8642>
	<vendor: #NV>
	^ GL_VERTEX_PROGRAM_POINT_SIZE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_POINT_SIZE_ARB [

	<enum: #'GL_VERTEX_PROGRAM_POINT_SIZE_ARB'>
	<value: 16r8642>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_PROGRAM_POINT_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_POINT_SIZE_NV [

	<enum: #'GL_VERTEX_PROGRAM_POINT_SIZE_NV'>
	<value: 16r8642>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_PROGRAM_POINT_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_POSITION_MESA [

	<enum: #'GL_VERTEX_PROGRAM_POSITION_MESA'>
	<value: 16r8BB4>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_VERTEX_PROGRAM_POSITION_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_TWO_SIDE [

	<enum: #'GL_VERTEX_PROGRAM_TWO_SIDE'>
	<value: 16r8643>
	<vendor: #NV>
	^ GL_VERTEX_PROGRAM_TWO_SIDE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_TWO_SIDE_ARB [

	<enum: #'GL_VERTEX_PROGRAM_TWO_SIDE_ARB'>
	<value: 16r8643>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_VERTEX_PROGRAM_TWO_SIDE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_PROGRAM_TWO_SIDE_NV [

	<enum: #'GL_VERTEX_PROGRAM_TWO_SIDE_NV'>
	<value: 16r8643>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_PROGRAM_TWO_SIDE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER [

	<enum: #'GL_VERTEX_SHADER'>
	<value: 16r8B31>
	<vendor: #ARB>
	<groups: #(#PipelineParameterName #ShaderType)>
	^ GL_VERTEX_SHADER
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_ARB [

	<enum: #'GL_VERTEX_SHADER_ARB'>
	<value: 16r8B31>
	<vendor: #ARB>
	<suffix: #ARB>
	<groups: #(#ShaderType)>
	^ GL_VERTEX_SHADER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_BINDING_EXT [

	<enum: #'GL_VERTEX_SHADER_BINDING_EXT'>
	<value: 16r8781>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_SHADER_BINDING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_BIT [

	<enum: #'GL_VERTEX_SHADER_BIT'>
	<value: 2r1>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_VERTEX_SHADER_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_BIT_EXT [

	<enum: #'GL_VERTEX_SHADER_BIT_EXT'>
	<value: 2r1>
	<suffix: #EXT>
	<bitmask>
	<groups: #(#UseProgramStageMask)>
	^ GL_VERTEX_SHADER_BIT_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_EXT [

	<enum: #'GL_VERTEX_SHADER_EXT'>
	<value: 16r8780>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_SHADER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_INSTRUCTIONS_EXT [

	<enum: #'GL_VERTEX_SHADER_INSTRUCTIONS_EXT'>
	<value: 16r87CF>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_SHADER_INSTRUCTIONS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_INVARIANTS_EXT [

	<enum: #'GL_VERTEX_SHADER_INVARIANTS_EXT'>
	<value: 16r87D1>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_SHADER_INVARIANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_INVOCATIONS [

	<enum: #'GL_VERTEX_SHADER_INVOCATIONS'>
	<value: 16r82F0>
	<vendor: #ARB>
	<groups: #(#QueryTarget)>
	^ GL_VERTEX_SHADER_INVOCATIONS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_INVOCATIONS_ARB [

	<enum: #'GL_VERTEX_SHADER_INVOCATIONS_ARB'>
	<value: 16r82F0>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_VERTEX_SHADER_INVOCATIONS_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_LOCALS_EXT [

	<enum: #'GL_VERTEX_SHADER_LOCALS_EXT'>
	<value: 16r87D3>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_SHADER_LOCALS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_LOCAL_CONSTANTS_EXT [

	<enum: #'GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT'>
	<value: 16r87D2>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_OPTIMIZED_EXT [

	<enum: #'GL_VERTEX_SHADER_OPTIMIZED_EXT'>
	<value: 16r87D4>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_SHADER_OPTIMIZED_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SHADER_VARIANTS_EXT [

	<enum: #'GL_VERTEX_SHADER_VARIANTS_EXT'>
	<value: 16r87D0>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VERTEX_SHADER_VARIANTS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SOURCE_ATI [

	<enum: #'GL_VERTEX_SOURCE_ATI'>
	<value: 16r8774>
	<vendor: #AMD>
	<suffix: #ATI>
	^ GL_VERTEX_SOURCE_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STATE_PROGRAM_NV [

	<enum: #'GL_VERTEX_STATE_PROGRAM_NV'>
	<value: 16r8621>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VERTEX_STATE_PROGRAM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STREAM0_ATI [

	<enum: #'GL_VERTEX_STREAM0_ATI'>
	<value: 16r876C>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#VertexStreamATI)>
	^ GL_VERTEX_STREAM0_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STREAM1_ATI [

	<enum: #'GL_VERTEX_STREAM1_ATI'>
	<value: 16r876D>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#VertexStreamATI)>
	^ GL_VERTEX_STREAM1_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STREAM2_ATI [

	<enum: #'GL_VERTEX_STREAM2_ATI'>
	<value: 16r876E>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#VertexStreamATI)>
	^ GL_VERTEX_STREAM2_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STREAM3_ATI [

	<enum: #'GL_VERTEX_STREAM3_ATI'>
	<value: 16r876F>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#VertexStreamATI)>
	^ GL_VERTEX_STREAM3_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STREAM4_ATI [

	<enum: #'GL_VERTEX_STREAM4_ATI'>
	<value: 16r8770>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#VertexStreamATI)>
	^ GL_VERTEX_STREAM4_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STREAM5_ATI [

	<enum: #'GL_VERTEX_STREAM5_ATI'>
	<value: 16r8771>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#VertexStreamATI)>
	^ GL_VERTEX_STREAM5_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STREAM6_ATI [

	<enum: #'GL_VERTEX_STREAM6_ATI'>
	<value: 16r8772>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#VertexStreamATI)>
	^ GL_VERTEX_STREAM6_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_STREAM7_ATI [

	<enum: #'GL_VERTEX_STREAM7_ATI'>
	<value: 16r8773>
	<vendor: #AMD>
	<suffix: #ATI>
	<groups: #(#VertexStreamATI)>
	^ GL_VERTEX_STREAM7_ATI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SUBROUTINE [

	<enum: #'GL_VERTEX_SUBROUTINE'>
	<value: 16r92E8>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_VERTEX_SUBROUTINE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_SUBROUTINE_UNIFORM [

	<enum: #'GL_VERTEX_SUBROUTINE_UNIFORM'>
	<value: 16r92EE>
	<vendor: #NV>
	<groups: #(#ProgramInterface)>
	^ GL_VERTEX_SUBROUTINE_UNIFORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_TEXTURE [

	<enum: #'GL_VERTEX_TEXTURE'>
	<value: 16r829B>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_VERTEX_TEXTURE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_WEIGHTING_EXT [

	<enum: #'GL_VERTEX_WEIGHTING_EXT'>
	<value: 16r8509>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_VERTEX_WEIGHTING_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_WEIGHT_ARRAY_EXT [

	<enum: #'GL_VERTEX_WEIGHT_ARRAY_EXT'>
	<value: 16r850C>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_VERTEX_WEIGHT_ARRAY_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_WEIGHT_ARRAY_POINTER_EXT [

	<enum: #'GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT'>
	<value: 16r8510>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_WEIGHT_ARRAY_SIZE_EXT [

	<enum: #'GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT'>
	<value: 16r850D>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_WEIGHT_ARRAY_STRIDE_EXT [

	<enum: #'GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT'>
	<value: 16r850F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTEX_WEIGHT_ARRAY_TYPE_EXT [

	<enum: #'GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT'>
	<value: 16r850E>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTICAL_LINE_TO_NV [

	<enum: #'GL_VERTICAL_LINE_TO_NV'>
	<value: 16r8>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PathCoordType #PathRenderingTokenNV)>
	^ GL_VERTICAL_LINE_TO_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTICES_SUBMITTED [

	<enum: #'GL_VERTICES_SUBMITTED'>
	<value: 16r82EE>
	<vendor: #ARB>
	<groups: #(#QueryTarget)>
	^ GL_VERTICES_SUBMITTED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VERTICES_SUBMITTED_ARB [

	<enum: #'GL_VERTICES_SUBMITTED_ARB'>
	<value: 16r82EE>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_VERTICES_SUBMITTED_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIBRANCE_BIAS_NV [

	<enum: #'GL_VIBRANCE_BIAS_NV'>
	<value: 16r8719>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIBRANCE_BIAS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIBRANCE_SCALE_NV [

	<enum: #'GL_VIBRANCE_SCALE_NV'>
	<value: 16r8713>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIBRANCE_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_BUFFER_BINDING_NV [

	<enum: #'GL_VIDEO_BUFFER_BINDING_NV'>
	<value: 16r9021>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_BUFFER_BINDING_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_BUFFER_INTERNAL_FORMAT_NV [

	<enum: #'GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV'>
	<value: 16r902D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_BUFFER_NV [

	<enum: #'GL_VIDEO_BUFFER_NV'>
	<value: 16r9020>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_BUFFER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_BUFFER_PITCH_NV [

	<enum: #'GL_VIDEO_BUFFER_PITCH_NV'>
	<value: 16r9028>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_BUFFER_PITCH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV [

	<enum: #'GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV'>
	<value: 16r903B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV [

	<enum: #'GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV'>
	<value: 16r903A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_CAPTURE_FRAME_HEIGHT_NV [

	<enum: #'GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV'>
	<value: 16r9039>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_CAPTURE_FRAME_WIDTH_NV [

	<enum: #'GL_VIDEO_CAPTURE_FRAME_WIDTH_NV'>
	<value: 16r9038>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_CAPTURE_SURFACE_ORIGIN_NV [

	<enum: #'GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV'>
	<value: 16r903C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_CAPTURE_TO_422_SUPPORTED_NV [

	<enum: #'GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV'>
	<value: 16r9026>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_COLOR_CONVERSION_MATRIX_NV [

	<enum: #'GL_VIDEO_COLOR_CONVERSION_MATRIX_NV'>
	<value: 16r9029>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_COLOR_CONVERSION_MAX_NV [

	<enum: #'GL_VIDEO_COLOR_CONVERSION_MAX_NV'>
	<value: 16r902A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_COLOR_CONVERSION_MAX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_COLOR_CONVERSION_MIN_NV [

	<enum: #'GL_VIDEO_COLOR_CONVERSION_MIN_NV'>
	<value: 16r902B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_COLOR_CONVERSION_MIN_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIDEO_COLOR_CONVERSION_OFFSET_NV [

	<enum: #'GL_VIDEO_COLOR_CONVERSION_OFFSET_NV'>
	<value: 16r902C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT [

	<enum: #'GL_VIEWPORT'>
	<value: 16rBA2>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VIEWPORT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_BIT [

	<enum: #'GL_VIEWPORT_BIT'>
	<value: 2r100000000000>
	<bitmask>
	<groups: #(#AttribMask)>
	^ GL_VIEWPORT_BIT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_BOUNDS_RANGE [

	<enum: #'GL_VIEWPORT_BOUNDS_RANGE'>
	<value: 16r825D>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VIEWPORT_BOUNDS_RANGE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_BOUNDS_RANGE_EXT [

	<enum: #'GL_VIEWPORT_BOUNDS_RANGE_EXT'>
	<value: 16r825D>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_VIEWPORT_BOUNDS_RANGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_BOUNDS_RANGE_NV [

	<enum: #'GL_VIEWPORT_BOUNDS_RANGE_NV'>
	<value: 16r825D>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_VIEWPORT_BOUNDS_RANGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_BOUNDS_RANGE_OES [

	<enum: #'GL_VIEWPORT_BOUNDS_RANGE_OES'>
	<value: 16r825D>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_VIEWPORT_BOUNDS_RANGE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_COMMAND_NV [

	<enum: #'GL_VIEWPORT_COMMAND_NV'>
	<value: 16r10>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#CommandOpcodesNV)>
	^ GL_VIEWPORT_COMMAND_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_INDEX_PROVOKING_VERTEX [

	<enum: #'GL_VIEWPORT_INDEX_PROVOKING_VERTEX'>
	<value: 16r825F>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VIEWPORT_INDEX_PROVOKING_VERTEX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_INDEX_PROVOKING_VERTEX_EXT [

	<enum: #'GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT'>
	<value: 16r825F>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_INDEX_PROVOKING_VERTEX_NV [

	<enum: #'GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV'>
	<value: 16r825F>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_INDEX_PROVOKING_VERTEX_OES [

	<enum: #'GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES'>
	<value: 16r825F>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_POSITION_W_SCALE_NV [

	<enum: #'GL_VIEWPORT_POSITION_W_SCALE_NV'>
	<value: 16r937C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_POSITION_W_SCALE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_POSITION_W_SCALE_X_COEFF_NV [

	<enum: #'GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV'>
	<value: 16r937D>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV [

	<enum: #'GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV'>
	<value: 16r937E>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SUBPIXEL_BITS [

	<enum: #'GL_VIEWPORT_SUBPIXEL_BITS'>
	<value: 16r825C>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_VIEWPORT_SUBPIXEL_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SUBPIXEL_BITS_EXT [

	<enum: #'GL_VIEWPORT_SUBPIXEL_BITS_EXT'>
	<value: 16r825C>
	<vendor: #ARB>
	<suffix: #EXT>
	^ GL_VIEWPORT_SUBPIXEL_BITS_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SUBPIXEL_BITS_NV [

	<enum: #'GL_VIEWPORT_SUBPIXEL_BITS_NV'>
	<value: 16r825C>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_VIEWPORT_SUBPIXEL_BITS_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SUBPIXEL_BITS_OES [

	<enum: #'GL_VIEWPORT_SUBPIXEL_BITS_OES'>
	<value: 16r825C>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_VIEWPORT_SUBPIXEL_BITS_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_NEGATIVE_W_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV'>
	<value: 16r9357>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_NEGATIVE_X_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV'>
	<value: 16r9351>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_NEGATIVE_Y_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV'>
	<value: 16r9353>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_NEGATIVE_Z_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV'>
	<value: 16r9355>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_POSITIVE_W_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV'>
	<value: 16r9356>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_POSITIVE_X_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV'>
	<value: 16r9350>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_POSITIVE_Y_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV'>
	<value: 16r9352>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_POSITIVE_Z_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV'>
	<value: 16r9354>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_W_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_W_NV'>
	<value: 16r935B>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_W_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_X_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_X_NV'>
	<value: 16r9358>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_X_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_Y_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_Y_NV'>
	<value: 16r9359>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_Y_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEWPORT_SWIZZLE_Z_NV [

	<enum: #'GL_VIEWPORT_SWIZZLE_Z_NV'>
	<value: 16r935A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIEWPORT_SWIZZLE_Z_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_128_BITS [

	<enum: #'GL_VIEW_CLASS_128_BITS'>
	<value: 16r82C4>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_128_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_16_BITS [

	<enum: #'GL_VIEW_CLASS_16_BITS'>
	<value: 16r82CA>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_16_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_24_BITS [

	<enum: #'GL_VIEW_CLASS_24_BITS'>
	<value: 16r82C9>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_24_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_32_BITS [

	<enum: #'GL_VIEW_CLASS_32_BITS'>
	<value: 16r82C8>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_32_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_48_BITS [

	<enum: #'GL_VIEW_CLASS_48_BITS'>
	<value: 16r82C7>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_48_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_64_BITS [

	<enum: #'GL_VIEW_CLASS_64_BITS'>
	<value: 16r82C6>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_64_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_8_BITS [

	<enum: #'GL_VIEW_CLASS_8_BITS'>
	<value: 16r82CB>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_8_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_96_BITS [

	<enum: #'GL_VIEW_CLASS_96_BITS'>
	<value: 16r82C5>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_96_BITS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_10x10_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_10x10_RGBA'>
	<value: 16r9393>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_10x10_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_10x5_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_10x5_RGBA'>
	<value: 16r9390>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_10x5_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_10x6_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_10x6_RGBA'>
	<value: 16r9391>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_10x6_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_10x8_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_10x8_RGBA'>
	<value: 16r9392>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_10x8_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_12x10_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_12x10_RGBA'>
	<value: 16r9394>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_12x10_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_12x12_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_12x12_RGBA'>
	<value: 16r9395>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_12x12_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_4x4_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_4x4_RGBA'>
	<value: 16r9388>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_4x4_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_5x4_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_5x4_RGBA'>
	<value: 16r9389>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_5x4_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_5x5_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_5x5_RGBA'>
	<value: 16r938A>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_5x5_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_6x5_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_6x5_RGBA'>
	<value: 16r938B>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_6x5_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_6x6_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_6x6_RGBA'>
	<value: 16r938C>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_6x6_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_8x5_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_8x5_RGBA'>
	<value: 16r938D>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_8x5_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_8x6_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_8x6_RGBA'>
	<value: 16r938E>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_8x6_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ASTC_8x8_RGBA [

	<enum: #'GL_VIEW_CLASS_ASTC_8x8_RGBA'>
	<value: 16r938F>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ASTC_8x8_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_BPTC_FLOAT [

	<enum: #'GL_VIEW_CLASS_BPTC_FLOAT'>
	<value: 16r82D3>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_BPTC_FLOAT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_BPTC_UNORM [

	<enum: #'GL_VIEW_CLASS_BPTC_UNORM'>
	<value: 16r82D2>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_BPTC_UNORM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_EAC_R11 [

	<enum: #'GL_VIEW_CLASS_EAC_R11'>
	<value: 16r9383>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_EAC_R11
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_EAC_RG11 [

	<enum: #'GL_VIEW_CLASS_EAC_RG11'>
	<value: 16r9384>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_EAC_RG11
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ETC2_EAC_RGBA [

	<enum: #'GL_VIEW_CLASS_ETC2_EAC_RGBA'>
	<value: 16r9387>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ETC2_EAC_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ETC2_RGB [

	<enum: #'GL_VIEW_CLASS_ETC2_RGB'>
	<value: 16r9385>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ETC2_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_ETC2_RGBA [

	<enum: #'GL_VIEW_CLASS_ETC2_RGBA'>
	<value: 16r9386>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_ETC2_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_RGTC1_RED [

	<enum: #'GL_VIEW_CLASS_RGTC1_RED'>
	<value: 16r82D0>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_RGTC1_RED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_RGTC2_RG [

	<enum: #'GL_VIEW_CLASS_RGTC2_RG'>
	<value: 16r82D1>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_RGTC2_RG
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_S3TC_DXT1_RGB [

	<enum: #'GL_VIEW_CLASS_S3TC_DXT1_RGB'>
	<value: 16r82CC>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_S3TC_DXT1_RGB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_S3TC_DXT1_RGBA [

	<enum: #'GL_VIEW_CLASS_S3TC_DXT1_RGBA'>
	<value: 16r82CD>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_S3TC_DXT1_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_S3TC_DXT3_RGBA [

	<enum: #'GL_VIEW_CLASS_S3TC_DXT3_RGBA'>
	<value: 16r82CE>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_S3TC_DXT3_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_CLASS_S3TC_DXT5_RGBA [

	<enum: #'GL_VIEW_CLASS_S3TC_DXT5_RGBA'>
	<value: 16r82CF>
	<vendor: #ARB>
	^ GL_VIEW_CLASS_S3TC_DXT5_RGBA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIEW_COMPATIBILITY_CLASS [

	<enum: #'GL_VIEW_COMPATIBILITY_CLASS'>
	<value: 16r82B6>
	<vendor: #ARB>
	<groups: #(#InternalFormatPName)>
	^ GL_VIEW_COMPATIBILITY_CLASS
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_INDEX_ARB [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_INDEX_ARB'>
	<value: 16r91A7>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_VIRTUAL_PAGE_SIZE_INDEX_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_INDEX_EXT [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_INDEX_EXT'>
	<value: 16r91A7>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VIRTUAL_PAGE_SIZE_INDEX_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_X_AMD [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_X_AMD'>
	<value: 16r9195>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_VIRTUAL_PAGE_SIZE_X_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_X_ARB [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_X_ARB'>
	<value: 16r9195>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_VIRTUAL_PAGE_SIZE_X_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_X_EXT [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_X_EXT'>
	<value: 16r9195>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VIRTUAL_PAGE_SIZE_X_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_Y_AMD [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_Y_AMD'>
	<value: 16r9196>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_VIRTUAL_PAGE_SIZE_Y_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_Y_ARB [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_Y_ARB'>
	<value: 16r9196>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_VIRTUAL_PAGE_SIZE_Y_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_Y_EXT [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_Y_EXT'>
	<value: 16r9196>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VIRTUAL_PAGE_SIZE_Y_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_Z_AMD [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_Z_AMD'>
	<value: 16r9197>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_VIRTUAL_PAGE_SIZE_Z_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_Z_ARB [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_Z_ARB'>
	<value: 16r9197>
	<vendor: #AMD>
	<suffix: #ARB>
	^ GL_VIRTUAL_PAGE_SIZE_Z_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIRTUAL_PAGE_SIZE_Z_EXT [

	<enum: #'GL_VIRTUAL_PAGE_SIZE_Z_EXT'>
	<value: 16r9197>
	<vendor: #AMD>
	<suffix: #EXT>
	^ GL_VIRTUAL_PAGE_SIZE_Z_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VIVIDLIGHT_NV [

	<enum: #'GL_VIVIDLIGHT_NV'>
	<value: 16r92A6>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_VIVIDLIGHT_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> VOLATILE_APPLE [

	<enum: #'GL_VOLATILE_APPLE'>
	<value: 16r8A1A>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_VOLATILE_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WAIT_FAILED [

	<enum: #'GL_WAIT_FAILED'>
	<value: 16r911D>
	<vendor: #ARB>
	<groups: #(#SyncStatus)>
	^ GL_WAIT_FAILED
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WAIT_FAILED_APPLE [

	<enum: #'GL_WAIT_FAILED_APPLE'>
	<value: 16r911D>
	<vendor: #ARB>
	<suffix: #APPLE>
	^ GL_WAIT_FAILED_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WARPS_PER_SM_NV [

	<enum: #'GL_WARPS_PER_SM_NV'>
	<value: 16r933A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_WARPS_PER_SM_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WARP_SIZE_NV [

	<enum: #'GL_WARP_SIZE_NV'>
	<value: 16r9339>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_WARP_SIZE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHTED_AVERAGE_ARB [

	<enum: #'GL_WEIGHTED_AVERAGE_ARB'>
	<value: 16r9367>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_WEIGHTED_AVERAGE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHTED_AVERAGE_EXT [

	<enum: #'GL_WEIGHTED_AVERAGE_EXT'>
	<value: 16r9367>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_WEIGHTED_AVERAGE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_ARB [

	<enum: #'GL_WEIGHT_ARRAY_ARB'>
	<value: 16r86AD>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_WEIGHT_ARRAY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_BUFFER_BINDING [

	<enum: #'GL_WEIGHT_ARRAY_BUFFER_BINDING'>
	<value: 16r889E>
	<vendor: #NV>
	^ GL_WEIGHT_ARRAY_BUFFER_BINDING
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_BUFFER_BINDING_ARB [

	<enum: #'GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB'>
	<value: 16r889E>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_BUFFER_BINDING_OES [

	<enum: #'GL_WEIGHT_ARRAY_BUFFER_BINDING_OES'>
	<value: 16r889E>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_WEIGHT_ARRAY_BUFFER_BINDING_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_OES [

	<enum: #'GL_WEIGHT_ARRAY_OES'>
	<value: 16r86AD>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_WEIGHT_ARRAY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_POINTER_ARB [

	<enum: #'GL_WEIGHT_ARRAY_POINTER_ARB'>
	<value: 16r86AC>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_WEIGHT_ARRAY_POINTER_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_POINTER_OES [

	<enum: #'GL_WEIGHT_ARRAY_POINTER_OES'>
	<value: 16r86AC>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_WEIGHT_ARRAY_POINTER_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_SIZE_ARB [

	<enum: #'GL_WEIGHT_ARRAY_SIZE_ARB'>
	<value: 16r86AB>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_WEIGHT_ARRAY_SIZE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_SIZE_OES [

	<enum: #'GL_WEIGHT_ARRAY_SIZE_OES'>
	<value: 16r86AB>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_WEIGHT_ARRAY_SIZE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_STRIDE_ARB [

	<enum: #'GL_WEIGHT_ARRAY_STRIDE_ARB'>
	<value: 16r86AA>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_WEIGHT_ARRAY_STRIDE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_STRIDE_OES [

	<enum: #'GL_WEIGHT_ARRAY_STRIDE_OES'>
	<value: 16r86AA>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_WEIGHT_ARRAY_STRIDE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_TYPE_ARB [

	<enum: #'GL_WEIGHT_ARRAY_TYPE_ARB'>
	<value: 16r86A9>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_WEIGHT_ARRAY_TYPE_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_ARRAY_TYPE_OES [

	<enum: #'GL_WEIGHT_ARRAY_TYPE_OES'>
	<value: 16r86A9>
	<vendor: #ARB>
	<suffix: #OES>
	^ GL_WEIGHT_ARRAY_TYPE_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WEIGHT_SUM_UNITY_ARB [

	<enum: #'GL_WEIGHT_SUM_UNITY_ARB'>
	<value: 16r86A6>
	<vendor: #ARB>
	<suffix: #ARB>
	^ GL_WEIGHT_SUM_UNITY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WIDE_LINE_HINT_PGI [

	<enum: #'GL_WIDE_LINE_HINT_PGI'>
	<value: 16r1A222>
	<vendor: #PGI>
	<suffix: #PGI>
	<groups: #(#HintTarget)>
	^ GL_WIDE_LINE_HINT_PGI
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WINDOW_RECTANGLE_EXT [

	<enum: #'GL_WINDOW_RECTANGLE_EXT'>
	<value: 16r8F12>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_WINDOW_RECTANGLE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WINDOW_RECTANGLE_MODE_EXT [

	<enum: #'GL_WINDOW_RECTANGLE_MODE_EXT'>
	<value: 16r8F13>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_WINDOW_RECTANGLE_MODE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRAP_BORDER_SUN [

	<enum: #'GL_WRAP_BORDER_SUN'>
	<value: 16r81D4>
	<vendor: #SUN>
	<suffix: #SUN>
	^ GL_WRAP_BORDER_SUN
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRITEONLY_RENDERING_QCOM [

	<enum: #'GL_WRITEONLY_RENDERING_QCOM'>
	<value: 16r8823>
	<vendor: #AMD>
	<suffix: #QCOM>
	^ GL_WRITEONLY_RENDERING_QCOM
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRITE_DISCARD_NV [

	<enum: #'GL_WRITE_DISCARD_NV'>
	<value: 16r88BE>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_WRITE_DISCARD_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRITE_ONLY [

	<enum: #'GL_WRITE_ONLY'>
	<value: 16r88B9>
	<vendor: #NV>
	<groups: #(#BufferAccessARB)>
	^ GL_WRITE_ONLY
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRITE_ONLY_ARB [

	<enum: #'GL_WRITE_ONLY_ARB'>
	<value: 16r88B9>
	<vendor: #NV>
	<suffix: #ARB>
	^ GL_WRITE_ONLY_ARB
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRITE_ONLY_OES [

	<enum: #'GL_WRITE_ONLY_OES'>
	<value: 16r88B9>
	<vendor: #NV>
	<suffix: #OES>
	^ GL_WRITE_ONLY_OES
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRITE_PIXEL_DATA_RANGE_LENGTH_NV [

	<enum: #'GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV'>
	<value: 16r887A>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRITE_PIXEL_DATA_RANGE_NV [

	<enum: #'GL_WRITE_PIXEL_DATA_RANGE_NV'>
	<value: 16r8878>
	<vendor: #NV>
	<suffix: #NV>
	<groups: #(#PixelDataRangeTargetNV)>
	^ GL_WRITE_PIXEL_DATA_RANGE_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> WRITE_PIXEL_DATA_RANGE_POINTER_NV [

	<enum: #'GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV'>
	<value: 16r887C>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> W_EXT [

	<enum: #'GL_W_EXT'>
	<value: 16r87D8>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_W_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> XOR [

	<enum: #'GL_XOR'>
	<value: 16r1506>
	<vendor: #ARB>
	<groups: #(#LogicOp)>
	^ GL_XOR
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> XOR_NV [

	<enum: #'GL_XOR_NV'>
	<value: 16r1506>
	<vendor: #ARB>
	<suffix: #NV>
	^ GL_XOR_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> X_EXT [

	<enum: #'GL_X_EXT'>
	<value: 16r87D5>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_X_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> YCBAYCR8A_4224_NV [

	<enum: #'GL_YCBAYCR8A_4224_NV'>
	<value: 16r9032>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_YCBAYCR8A_4224_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> YCBCR_422_APPLE [

	<enum: #'GL_YCBCR_422_APPLE'>
	<value: 16r85B9>
	<vendor: #APPLE>
	<suffix: #APPLE>
	^ GL_YCBCR_422_APPLE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> YCBCR_MESA [

	<enum: #'GL_YCBCR_MESA'>
	<value: 16r8757>
	<vendor: #MESA>
	<suffix: #MESA>
	^ GL_YCBCR_MESA
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> YCBYCR8_422_NV [

	<enum: #'GL_YCBYCR8_422_NV'>
	<value: 16r9031>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_YCBYCR8_422_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> YCRCBA_SGIX [

	<enum: #'GL_YCRCBA_SGIX'>
	<value: 16r8319>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_YCRCBA_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> YCRCB_422_SGIX [

	<enum: #'GL_YCRCB_422_SGIX'>
	<value: 16r81BB>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelFormat)>
	^ GL_YCRCB_422_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> YCRCB_444_SGIX [

	<enum: #'GL_YCRCB_444_SGIX'>
	<value: 16r81BC>
	<vendor: #SGI>
	<suffix: #SGIX>
	<groups: #(#PixelFormat)>
	^ GL_YCRCB_444_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> YCRCB_SGIX [

	<enum: #'GL_YCRCB_SGIX'>
	<value: 16r8318>
	<vendor: #SGI>
	<suffix: #SGIX>
	^ GL_YCRCB_SGIX
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Y_EXT [

	<enum: #'GL_Y_EXT'>
	<value: 16r87D6>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_Y_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Z400_BINARY_AMD [

	<enum: #'GL_Z400_BINARY_AMD'>
	<value: 16r8740>
	<vendor: #AMD>
	<suffix: #AMD>
	^ GL_Z400_BINARY_AMD
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV [

	<enum: #'GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV'>
	<value: 16r9036>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Z4Y12Z4CB12Z4CR12_444_NV [

	<enum: #'GL_Z4Y12Z4CB12Z4CR12_444_NV'>
	<value: 16r9037>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_Z4Y12Z4CB12Z4CR12_444_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Z4Y12Z4CB12Z4Y12Z4CR12_422_NV [

	<enum: #'GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV'>
	<value: 16r9035>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV [

	<enum: #'GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV'>
	<value: 16r9034>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Z6Y10Z6CB10Z6Y10Z6CR10_422_NV [

	<enum: #'GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV'>
	<value: 16r9033>
	<vendor: #NV>
	<suffix: #NV>
	^ GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ZERO [

	<enum: #'GL_ZERO'>
	<value: 16r0>
	<vendor: #ARB>
	<groups: #(#BlendingFactor #SpecialNumbers #StencilOp #TextureSwizzle)>
	^ GL_ZERO
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ZERO_EXT [

	<enum: #'GL_ZERO_EXT'>
	<value: 16r87DD>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_ZERO_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ZERO_TO_ONE [

	<enum: #'GL_ZERO_TO_ONE'>
	<value: 16r935F>
	<vendor: #NV>
	<groups: #(#ClipControlDepth)>
	^ GL_ZERO_TO_ONE
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ZERO_TO_ONE_EXT [

	<enum: #'GL_ZERO_TO_ONE_EXT'>
	<value: 16r935F>
	<vendor: #NV>
	<suffix: #EXT>
	^ GL_ZERO_TO_ONE_EXT
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ZOOM_X [

	<enum: #'GL_ZOOM_X'>
	<value: 16rD16>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ZOOM_X
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> ZOOM_Y [

	<enum: #'GL_ZOOM_Y'>
	<value: 16rD17>
	<vendor: #ARB>
	<groups: #(#GetPName)>
	^ GL_ZOOM_Y
]

{
	#category : #enums,
	#timestamp : 'stlu 3/5/2021 13:33'
}
GLRegistry >> Z_EXT [

	<enum: #'GL_Z_EXT'>
	<value: 16r87D7>
	<vendor: #AMD>
	<suffix: #EXT>
	<groups: #(#VertexShaderCoordOutEXT)>
	^ GL_Z_EXT
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> accum: op with: value [

	<command: #glAccum>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #AccumOp>
	<arg: 'value' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glAccum' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> accumxOES: op with: value [

	<command: #glAccumxOES>
	<return: 'void'>
	<arg: 'op' type: 'GLenum'>
	<arg: 'value' type: 'GLfixed'>

	<apicall: void 'glAccumxOES' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> acquireKeyedMutexWin32EXT: memory with: key with: timeout [

	<command: #glAcquireKeyedMutexWin32EXT>
	<return: 'GLboolean'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'key' type: 'GLuint64'>
	<arg: 'timeout' type: 'GLuint'>

	<apicall: GLboolean 'glAcquireKeyedMutexWin32EXT' (GLuint GLuint64 GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> activeProgramEXT: program [

	<command: #glActiveProgramEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glActiveProgramEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> activeShaderProgram: pipeline with: program [

	<command: #glActiveShaderProgram>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glActiveShaderProgram' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> activeShaderProgramEXT: pipeline with: program [

	<command: #glActiveShaderProgramEXT>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glActiveShaderProgramEXT' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> activeStencilFaceEXT: face [

	<command: #glActiveStencilFaceEXT>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #StencilFaceDirection>

	<apicall: void 'glActiveStencilFaceEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> activeTexture: texture [

	<command: #glActiveTexture>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>

	<apicall: void 'glActiveTexture' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> activeTextureARB: texture [

	<command: #glActiveTextureARB>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>

	<apicall: void 'glActiveTextureARB' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> activeVaryingNV: program with: name [

	<command: #glActiveVaryingNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: void 'glActiveVaryingNV' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> alphaFragmentOp1ATI: op with: dst with: dstMod with: arg1 with: arg1Rep with: arg1Mod [

	<command: #glAlphaFragmentOp1ATI>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #FragmentOpATI>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'dstMod' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>
	<arg: 'arg1Rep' type: 'GLuint'>
	<arg: 'arg1Mod' type: 'GLuint'>

	<apicall: void 'glAlphaFragmentOp1ATI' (GLenum GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> alphaFragmentOp2ATI: op with: dst with: dstMod with: arg1 with: arg1Rep with: arg1Mod with: arg2 with: arg2Rep with: arg2Mod [

	<command: #glAlphaFragmentOp2ATI>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #FragmentOpATI>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'dstMod' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>
	<arg: 'arg1Rep' type: 'GLuint'>
	<arg: 'arg1Mod' type: 'GLuint'>
	<arg: 'arg2' type: 'GLuint'>
	<arg: 'arg2Rep' type: 'GLuint'>
	<arg: 'arg2Mod' type: 'GLuint'>

	<apicall: void 'glAlphaFragmentOp2ATI' (GLenum GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> alphaFragmentOp3ATI: op with: dst with: dstMod with: arg1 with: arg1Rep with: arg1Mod with: arg2 with: arg2Rep with: arg2Mod with: arg3 with: arg3Rep with: arg3Mod [

	<command: #glAlphaFragmentOp3ATI>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #FragmentOpATI>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'dstMod' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>
	<arg: 'arg1Rep' type: 'GLuint'>
	<arg: 'arg1Mod' type: 'GLuint'>
	<arg: 'arg2' type: 'GLuint'>
	<arg: 'arg2Rep' type: 'GLuint'>
	<arg: 'arg2Mod' type: 'GLuint'>
	<arg: 'arg3' type: 'GLuint'>
	<arg: 'arg3Rep' type: 'GLuint'>
	<arg: 'arg3Mod' type: 'GLuint'>

	<apicall: void 'glAlphaFragmentOp3ATI' (GLenum GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> alphaFunc: func with: ref [

	<command: #glAlphaFunc>
	<return: 'void'>
	<arg: 'func' type: 'GLenum' group: #AlphaFunction>
	<arg: 'ref' type: 'GLfloat'>

	<apicall: void 'glAlphaFunc' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> alphaFuncQCOM: func with: ref [

	<command: #glAlphaFuncQCOM>
	<return: 'void'>
	<arg: 'func' type: 'GLenum'>
	<arg: 'ref' type: 'GLclampf'>

	<apicall: void 'glAlphaFuncQCOM' (GLenum GLclampf)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> alphaFuncx: func with: ref [

	<command: #glAlphaFuncx>
	<return: 'void'>
	<arg: 'func' type: 'GLenum' group: #AlphaFunction>
	<arg: 'ref' type: 'GLfixed'>

	<apicall: void 'glAlphaFuncx' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> alphaFuncxOES: func with: ref [

	<command: #glAlphaFuncxOES>
	<return: 'void'>
	<arg: 'func' type: 'GLenum' group: #AlphaFunction>
	<arg: 'ref' type: 'GLfixed' group: #ClampedFixed>

	<apicall: void 'glAlphaFuncxOES' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> alphaToCoverageDitherControlNV: mode [

	<command: #glAlphaToCoverageDitherControlNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum'>

	<apicall: void 'glAlphaToCoverageDitherControlNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> applyFramebufferAttachmentCMAAINTEL [

	<command: #glApplyFramebufferAttachmentCMAAINTEL>
	<return: 'void'>

	<apicall: void 'glApplyFramebufferAttachmentCMAAINTEL' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> applyTextureEXT: mode [

	<command: #glApplyTextureEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #LightTextureModeEXT>

	<apicall: void 'glApplyTextureEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> areProgramsResidentNV: n with: programs with: residences [

	<command: #glAreProgramsResidentNV>
	<return: 'GLboolean'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'programs' type: 'GLuint*' size: 'n'>
	<arg: 'residences' type: 'GLboolean*' group: #Boolean size: 'n'>

	<apicall: GLboolean 'glAreProgramsResidentNV' (GLsizei GLuint* GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> areTexturesResident: n with: textures with: residences [

	<command: #glAreTexturesResident>
	<return: 'GLboolean'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' group: #Texture size: 'n'>
	<arg: 'residences' type: 'GLboolean*' group: #Boolean size: 'n'>

	<apicall: GLboolean 'glAreTexturesResident' (GLsizei GLuint* GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> areTexturesResidentEXT: n with: textures with: residences [

	<command: #glAreTexturesResidentEXT>
	<return: 'GLboolean'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' group: #Texture size: 'n'>
	<arg: 'residences' type: 'GLboolean*' group: #Boolean size: 'n'>

	<apicall: GLboolean 'glAreTexturesResidentEXT' (GLsizei GLuint* GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> arrayElement: i [

	<command: #glArrayElement>
	<return: 'void'>
	<arg: 'i' type: 'GLint'>

	<apicall: void 'glArrayElement' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> arrayElementEXT: i [

	<command: #glArrayElementEXT>
	<return: 'void'>
	<arg: 'i' type: 'GLint'>

	<apicall: void 'glArrayElementEXT' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> arrayObjectATI: array with: size with: type with: stride with: buffer with: offset [

	<command: #glArrayObjectATI>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ScalarType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint'>

	<apicall: void 'glArrayObjectATI' (GLenum GLint GLenum GLsizei GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> asyncCopyBufferSubDataNVX: waitSemaphoreCount with: waitSemaphoreArray with: fenceValueArray with: readGpu with: writeGpuMask with: readBuffer with: writeBuffer with: readOffset with: writeOffset with: size with: signalSemaphoreCount with: signalSemaphoreArray with: signalValueArray [

	<command: #glAsyncCopyBufferSubDataNVX>
	<return: 'GLuint'>
	<arg: 'waitSemaphoreCount' type: 'GLsizei'>
	<arg: 'waitSemaphoreArray' type: 'GLuint*' size: 'waitSemaphoreCount'>
	<arg: 'fenceValueArray' type: 'GLuint64*' size: 'waitSemaphoreCount'>
	<arg: 'readGpu' type: 'GLuint'>
	<arg: 'writeGpuMask' type: 'GLbitfield'>
	<arg: 'readBuffer' type: 'GLuint'>
	<arg: 'writeBuffer' type: 'GLuint'>
	<arg: 'readOffset' type: 'GLintptr'>
	<arg: 'writeOffset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'signalSemaphoreCount' type: 'GLsizei'>
	<arg: 'signalSemaphoreArray' type: 'GLuint*' size: 'signalSemaphoreCount'>
	<arg: 'signalValueArray' type: 'GLuint64*' size: 'signalSemaphoreCount'>

	<apicall: GLuint 'glAsyncCopyBufferSubDataNVX' (GLsizei GLuint* GLuint64* GLuint GLbitfield GLuint GLuint GLintptr GLintptr GLsizeiptr GLsizei GLuint* GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> asyncMarkerSGIX: marker [

	<command: #glAsyncMarkerSGIX>
	<return: 'void'>
	<arg: 'marker' type: 'GLuint'>

	<apicall: void 'glAsyncMarkerSGIX' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> attachObjectARB: containerObj with: obj [

	<command: #glAttachObjectARB>
	<return: 'void'>
	<arg: 'containerObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'obj' type: 'GLhandleARB' group: #handleARB>

	<apicall: void 'glAttachObjectARB' (GLhandleARB GLhandleARB)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> attachShader: program with: shader [

	<command: #glAttachShader>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shader' type: 'GLuint'>

	<apicall: void 'glAttachShader' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> begin: mode [

	<command: #glBegin>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>

	<apicall: void 'glBegin' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginConditionalRender: id with: mode [

	<command: #glBeginConditionalRender>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'mode' type: 'GLenum' group: #ConditionalRenderMode>

	<apicall: void 'glBeginConditionalRender' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginConditionalRenderNV: id with: mode [

	<command: #glBeginConditionalRenderNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'mode' type: 'GLenum' group: #ConditionalRenderMode>

	<apicall: void 'glBeginConditionalRenderNV' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginConditionalRenderNVX: id [

	<command: #glBeginConditionalRenderNVX>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBeginConditionalRenderNVX' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginFragmentShaderATI [

	<command: #glBeginFragmentShaderATI>
	<return: 'void'>

	<apicall: void 'glBeginFragmentShaderATI' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginOcclusionQueryNV: id [

	<command: #glBeginOcclusionQueryNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBeginOcclusionQueryNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginPerfMonitorAMD: monitor [

	<command: #glBeginPerfMonitorAMD>
	<return: 'void'>
	<arg: 'monitor' type: 'GLuint'>

	<apicall: void 'glBeginPerfMonitorAMD' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginPerfQueryINTEL: queryHandle [

	<command: #glBeginPerfQueryINTEL>
	<return: 'void'>
	<arg: 'queryHandle' type: 'GLuint'>

	<apicall: void 'glBeginPerfQueryINTEL' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginQuery: target with: id [

	<command: #glBeginQuery>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBeginQuery' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginQueryARB: target with: id [

	<command: #glBeginQueryARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBeginQueryARB' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginQueryEXT: target with: id [

	<command: #glBeginQueryEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBeginQueryEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginQueryIndexed: target with: index with: id [

	<command: #glBeginQueryIndexed>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBeginQueryIndexed' (GLenum GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginTransformFeedback: primitiveMode [

	<command: #glBeginTransformFeedback>
	<return: 'void'>
	<arg: 'primitiveMode' type: 'GLenum' group: #PrimitiveType>

	<apicall: void 'glBeginTransformFeedback' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginTransformFeedbackEXT: primitiveMode [

	<command: #glBeginTransformFeedbackEXT>
	<return: 'void'>
	<arg: 'primitiveMode' type: 'GLenum' group: #PrimitiveType>

	<apicall: void 'glBeginTransformFeedbackEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginTransformFeedbackNV: primitiveMode [

	<command: #glBeginTransformFeedbackNV>
	<return: 'void'>
	<arg: 'primitiveMode' type: 'GLenum' group: #PrimitiveType>

	<apicall: void 'glBeginTransformFeedbackNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginVertexShaderEXT [

	<command: #glBeginVertexShaderEXT>
	<return: 'void'>

	<apicall: void 'glBeginVertexShaderEXT' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> beginVideoCaptureNV: video_capture_slot [

	<command: #glBeginVideoCaptureNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>

	<apicall: void 'glBeginVideoCaptureNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindAttribLocation: program with: index with: name [

	<command: #glBindAttribLocation>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*'>

	<apicall: void 'glBindAttribLocation' (GLuint GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindAttribLocationARB: programObj with: index with: name [

	<command: #glBindAttribLocationARB>
	<return: 'void'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'name' type: 'GLcharARB*'>

	<apicall: void 'glBindAttribLocationARB' (GLhandleARB GLuint GLcharARB*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBuffer: target with: buffer [

	<command: #glBindBuffer>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glBindBuffer' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferARB: target with: buffer [

	<command: #glBindBufferARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glBindBufferARB' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferBase: target with: index with: buffer [

	<command: #glBindBufferBase>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glBindBufferBase' (GLenum GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferBaseEXT: target with: index with: buffer [

	<command: #glBindBufferBaseEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glBindBufferBaseEXT' (GLenum GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferBaseNV: target with: index with: buffer [

	<command: #glBindBufferBaseNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glBindBufferBaseNV' (GLenum GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferOffsetEXT: target with: index with: buffer with: offset [

	<command: #glBindBufferOffsetEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>

	<apicall: void 'glBindBufferOffsetEXT' (GLenum GLuint GLuint GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferOffsetNV: target with: index with: buffer with: offset [

	<command: #glBindBufferOffsetNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>

	<apicall: void 'glBindBufferOffsetNV' (GLenum GLuint GLuint GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferRange: target with: index with: buffer with: offset with: size [

	<command: #glBindBufferRange>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glBindBufferRange' (GLenum GLuint GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferRangeEXT: target with: index with: buffer with: offset with: size [

	<command: #glBindBufferRangeEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glBindBufferRangeEXT' (GLenum GLuint GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBufferRangeNV: target with: index with: buffer with: offset with: size [

	<command: #glBindBufferRangeNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glBindBufferRangeNV' (GLenum GLuint GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBuffersBase: target with: first with: count with: buffers [

	<command: #glBindBuffersBase>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*' size: 'count'>

	<apicall: void 'glBindBuffersBase' (GLenum GLuint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindBuffersRange: target with: first with: count with: buffers with: offsets with: sizes [

	<command: #glBindBuffersRange>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*' size: 'count'>
	<arg: 'offsets' type: 'GLintptr*' size: 'count'>
	<arg: 'sizes' type: 'GLsizeiptr*' size: 'count'>

	<apicall: void 'glBindBuffersRange' (GLenum GLuint GLsizei GLuint* GLintptr* GLsizeiptr*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindFragDataLocation: program with: color with: name [

	<command: #glBindFragDataLocation>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'color' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: void 'glBindFragDataLocation' (GLuint GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindFragDataLocationEXT: program with: color with: name [

	<command: #glBindFragDataLocationEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'color' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: void 'glBindFragDataLocationEXT' (GLuint GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindFragDataLocationIndexed: program with: colorNumber with: index with: name [

	<command: #glBindFragDataLocationIndexed>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'colorNumber' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*'>

	<apicall: void 'glBindFragDataLocationIndexed' (GLuint GLuint GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindFragDataLocationIndexedEXT: program with: colorNumber with: index with: name [

	<command: #glBindFragDataLocationIndexedEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'colorNumber' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*'>

	<apicall: void 'glBindFragDataLocationIndexedEXT' (GLuint GLuint GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindFragmentShaderATI: id [

	<command: #glBindFragmentShaderATI>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBindFragmentShaderATI' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindFramebuffer: target with: framebuffer [

	<command: #glBindFramebuffer>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'framebuffer' type: 'GLuint'>

	<apicall: void 'glBindFramebuffer' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindFramebufferEXT: target with: framebuffer [

	<command: #glBindFramebufferEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'framebuffer' type: 'GLuint'>

	<apicall: void 'glBindFramebufferEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindFramebufferOES: target with: framebuffer [

	<command: #glBindFramebufferOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'framebuffer' type: 'GLuint'>

	<apicall: void 'glBindFramebufferOES' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindImageTexture: unit with: texture with: level with: layered with: layer with: access with: format [

	<command: #glBindImageTexture>
	<return: 'void'>
	<arg: 'unit' type: 'GLuint'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'layered' type: 'GLboolean' group: #Boolean>
	<arg: 'layer' type: 'GLint'>
	<arg: 'access' type: 'GLenum' group: #BufferAccessARB>
	<arg: 'format' type: 'GLenum' group: #InternalFormat>

	<apicall: void 'glBindImageTexture' (GLuint GLuint GLint GLboolean GLint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindImageTextureEXT: index with: texture with: level with: layered with: layer with: access with: format [

	<command: #glBindImageTextureEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'layered' type: 'GLboolean' group: #Boolean>
	<arg: 'layer' type: 'GLint'>
	<arg: 'access' type: 'GLenum' group: #BufferAccessARB>
	<arg: 'format' type: 'GLint'>

	<apicall: void 'glBindImageTextureEXT' (GLuint GLuint GLint GLboolean GLint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindImageTextures: first with: count with: textures [

	<command: #glBindImageTextures>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' size: 'count'>

	<apicall: void 'glBindImageTextures' (GLuint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindLightParameterEXT: light with: value [

	<command: #glBindLightParameterEXT>
	<return: 'GLuint'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'value' type: 'GLenum' group: #LightParameter>

	<apicall: GLuint 'glBindLightParameterEXT' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindMaterialParameterEXT: face with: value [

	<command: #glBindMaterialParameterEXT>
	<return: 'GLuint'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'value' type: 'GLenum' group: #MaterialParameter>

	<apicall: GLuint 'glBindMaterialParameterEXT' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindMultiTextureEXT: texunit with: target with: texture [

	<command: #glBindMultiTextureEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint' group: #Texture>

	<apicall: void 'glBindMultiTextureEXT' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindParameterEXT: value [

	<command: #glBindParameterEXT>
	<return: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #VertexShaderParameterEXT>

	<apicall: GLuint 'glBindParameterEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindProgramARB: target with: program [

	<command: #glBindProgramARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glBindProgramARB' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindProgramNV: target with: id [

	<command: #glBindProgramNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBindProgramNV' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindProgramPipeline: pipeline [

	<command: #glBindProgramPipeline>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>

	<apicall: void 'glBindProgramPipeline' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindProgramPipelineEXT: pipeline [

	<command: #glBindProgramPipelineEXT>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>

	<apicall: void 'glBindProgramPipelineEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindRenderbuffer: target with: renderbuffer [

	<command: #glBindRenderbuffer>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glBindRenderbuffer' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindRenderbufferEXT: target with: renderbuffer [

	<command: #glBindRenderbufferEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glBindRenderbufferEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindRenderbufferOES: target with: renderbuffer [

	<command: #glBindRenderbufferOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glBindRenderbufferOES' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindSampler: unit with: sampler [

	<command: #glBindSampler>
	<return: 'void'>
	<arg: 'unit' type: 'GLuint'>
	<arg: 'sampler' type: 'GLuint'>

	<apicall: void 'glBindSampler' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindSamplers: first with: count with: samplers [

	<command: #glBindSamplers>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'samplers' type: 'GLuint*' size: 'count'>

	<apicall: void 'glBindSamplers' (GLuint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindShadingRateImageNV: texture [

	<command: #glBindShadingRateImageNV>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>

	<apicall: void 'glBindShadingRateImageNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindTexGenParameterEXT: unit with: coord with: value [

	<command: #glBindTexGenParameterEXT>
	<return: 'GLuint'>
	<arg: 'unit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'value' type: 'GLenum' group: #TextureGenParameter>

	<apicall: GLuint 'glBindTexGenParameterEXT' (GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindTexture: target with: texture [

	<command: #glBindTexture>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint' group: #Texture>

	<apicall: void 'glBindTexture' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindTextureEXT: target with: texture [

	<command: #glBindTextureEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint' group: #Texture>

	<apicall: void 'glBindTextureEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindTextureUnit: unit with: texture [

	<command: #glBindTextureUnit>
	<return: 'void'>
	<arg: 'unit' type: 'GLuint'>
	<arg: 'texture' type: 'GLuint'>

	<apicall: void 'glBindTextureUnit' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindTextureUnitParameterEXT: unit with: value [

	<command: #glBindTextureUnitParameterEXT>
	<return: 'GLuint'>
	<arg: 'unit' type: 'GLenum' group: #TextureUnit>
	<arg: 'value' type: 'GLenum' group: #VertexShaderTextureUnitParameter>

	<apicall: GLuint 'glBindTextureUnitParameterEXT' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindTextures: first with: count with: textures [

	<command: #glBindTextures>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' size: 'count'>

	<apicall: void 'glBindTextures' (GLuint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindTransformFeedback: target with: id [

	<command: #glBindTransformFeedback>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BindTransformFeedbackTarget>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBindTransformFeedback' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindTransformFeedbackNV: target with: id [

	<command: #glBindTransformFeedbackNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBindTransformFeedbackNV' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindVertexArray: array [

	<command: #glBindVertexArray>
	<return: 'void'>
	<arg: 'array' type: 'GLuint'>

	<apicall: void 'glBindVertexArray' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindVertexArrayAPPLE: array [

	<command: #glBindVertexArrayAPPLE>
	<return: 'void'>
	<arg: 'array' type: 'GLuint'>

	<apicall: void 'glBindVertexArrayAPPLE' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindVertexArrayOES: array [

	<command: #glBindVertexArrayOES>
	<return: 'void'>
	<arg: 'array' type: 'GLuint'>

	<apicall: void 'glBindVertexArrayOES' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindVertexBuffer: bindingindex with: buffer with: offset with: stride [

	<command: #glBindVertexBuffer>
	<return: 'void'>
	<arg: 'bindingindex' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glBindVertexBuffer' (GLuint GLuint GLintptr GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindVertexBuffers: first with: count with: buffers with: offsets with: strides [

	<command: #glBindVertexBuffers>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*' size: 'count'>
	<arg: 'offsets' type: 'GLintptr*' size: 'count'>
	<arg: 'strides' type: 'GLsizei*' size: 'count'>

	<apicall: void 'glBindVertexBuffers' (GLuint GLsizei GLuint* GLintptr* GLsizei*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindVertexShaderEXT: id [

	<command: #glBindVertexShaderEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glBindVertexShaderEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindVideoCaptureStreamBufferNV: video_capture_slot with: stream with: frame_region with: offset [

	<command: #glBindVideoCaptureStreamBufferNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'frame_region' type: 'GLenum'>
	<arg: 'offset' type: 'GLintptrARB' group: #BufferOffsetARB>

	<apicall: void 'glBindVideoCaptureStreamBufferNV' (GLuint GLuint GLenum GLintptrARB)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bindVideoCaptureStreamTextureNV: video_capture_slot with: stream with: frame_region with: target with: texture [

	<command: #glBindVideoCaptureStreamTextureNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'frame_region' type: 'GLenum'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'texture' type: 'GLuint'>

	<apicall: void 'glBindVideoCaptureStreamTextureNV' (GLuint GLuint GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3bEXT: bx with: by with: bz [

	<command: #glBinormal3bEXT>
	<return: 'void'>
	<arg: 'bx' type: 'GLbyte'>
	<arg: 'by' type: 'GLbyte'>
	<arg: 'bz' type: 'GLbyte'>

	<apicall: void 'glBinormal3bEXT' (GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3bvEXT: v [

	<command: #glBinormal3bvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLbyte*' size: '3'>

	<apicall: void 'glBinormal3bvEXT' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3dEXT: bx with: by with: bz [

	<command: #glBinormal3dEXT>
	<return: 'void'>
	<arg: 'bx' type: 'GLdouble' group: #CoordD>
	<arg: 'by' type: 'GLdouble' group: #CoordD>
	<arg: 'bz' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glBinormal3dEXT' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3dvEXT: v [

	<command: #glBinormal3dvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glBinormal3dvEXT' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3fEXT: bx with: by with: bz [

	<command: #glBinormal3fEXT>
	<return: 'void'>
	<arg: 'bx' type: 'GLfloat' group: #CoordF>
	<arg: 'by' type: 'GLfloat' group: #CoordF>
	<arg: 'bz' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glBinormal3fEXT' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3fvEXT: v [

	<command: #glBinormal3fvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glBinormal3fvEXT' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3iEXT: bx with: by with: bz [

	<command: #glBinormal3iEXT>
	<return: 'void'>
	<arg: 'bx' type: 'GLint'>
	<arg: 'by' type: 'GLint'>
	<arg: 'bz' type: 'GLint'>

	<apicall: void 'glBinormal3iEXT' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3ivEXT: v [

	<command: #glBinormal3ivEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' size: '3'>

	<apicall: void 'glBinormal3ivEXT' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3sEXT: bx with: by with: bz [

	<command: #glBinormal3sEXT>
	<return: 'void'>
	<arg: 'bx' type: 'GLshort'>
	<arg: 'by' type: 'GLshort'>
	<arg: 'bz' type: 'GLshort'>

	<apicall: void 'glBinormal3sEXT' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormal3svEXT: v [

	<command: #glBinormal3svEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' size: '3'>

	<apicall: void 'glBinormal3svEXT' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> binormalPointerEXT: type with: stride with: pointer [

	<command: #glBinormalPointerEXT>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #BinormalPointerTypeEXT>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glBinormalPointerEXT' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bitmap: width with: height with: xorig with: yorig with: xmove with: ymove with: bitmap [

	<command: #glBitmap>
	<return: 'void'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'xorig' type: 'GLfloat' group: #CoordF>
	<arg: 'yorig' type: 'GLfloat' group: #CoordF>
	<arg: 'xmove' type: 'GLfloat' group: #CoordF>
	<arg: 'ymove' type: 'GLfloat' group: #CoordF>
	<arg: 'bitmap' type: 'GLubyte*' size: 'COMPSIZE(width,height)'>

	<apicall: void 'glBitmap' (GLsizei GLsizei GLfloat GLfloat GLfloat GLfloat GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bitmapxOES: width with: height with: xorig with: yorig with: xmove with: ymove with: bitmap [

	<command: #glBitmapxOES>
	<return: 'void'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'xorig' type: 'GLfixed'>
	<arg: 'yorig' type: 'GLfixed'>
	<arg: 'xmove' type: 'GLfixed'>
	<arg: 'ymove' type: 'GLfixed'>
	<arg: 'bitmap' type: 'GLubyte*' size: 'COMPSIZE(width,height)'>

	<apicall: void 'glBitmapxOES' (GLsizei GLsizei GLfixed GLfixed GLfixed GLfixed GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendBarrier [

	<command: #glBlendBarrier>
	<return: 'void'>

	<apicall: void 'glBlendBarrier' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendBarrierKHR [

	<command: #glBlendBarrierKHR>
	<return: 'void'>

	<apicall: void 'glBlendBarrierKHR' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendBarrierNV [

	<command: #glBlendBarrierNV>
	<return: 'void'>

	<apicall: void 'glBlendBarrierNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendColor: red with: green with: blue with: alpha [

	<command: #glBlendColor>
	<return: 'void'>
	<arg: 'red' type: 'GLfloat' group: #ColorF>
	<arg: 'green' type: 'GLfloat' group: #ColorF>
	<arg: 'blue' type: 'GLfloat' group: #ColorF>
	<arg: 'alpha' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glBlendColor' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendColorEXT: red with: green with: blue with: alpha [

	<command: #glBlendColorEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLfloat' group: #ColorF>
	<arg: 'green' type: 'GLfloat' group: #ColorF>
	<arg: 'blue' type: 'GLfloat' group: #ColorF>
	<arg: 'alpha' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glBlendColorEXT' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendColorxOES: red with: green with: blue with: alpha [

	<command: #glBlendColorxOES>
	<return: 'void'>
	<arg: 'red' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'green' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'blue' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'alpha' type: 'GLfixed' group: #ClampedFixed>

	<apicall: void 'glBlendColorxOES' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquation: mode [

	<command: #glBlendEquation>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquation' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationEXT: mode [

	<command: #glBlendEquationEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationIndexedAMD: buf with: mode [

	<command: #glBlendEquationIndexedAMD>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'mode' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationIndexedAMD' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationOES: mode [

	<command: #glBlendEquationOES>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationOES' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationSeparate: modeRGB with: modeAlpha [

	<command: #glBlendEquationSeparate>
	<return: 'void'>
	<arg: 'modeRGB' type: 'GLenum' group: #BlendEquationModeEXT>
	<arg: 'modeAlpha' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationSeparate' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationSeparateEXT: modeRGB with: modeAlpha [

	<command: #glBlendEquationSeparateEXT>
	<return: 'void'>
	<arg: 'modeRGB' type: 'GLenum' group: #BlendEquationModeEXT>
	<arg: 'modeAlpha' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationSeparateEXT' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationSeparateIndexedAMD: buf with: modeRGB with: modeAlpha [

	<command: #glBlendEquationSeparateIndexedAMD>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'modeRGB' type: 'GLenum' group: #BlendEquationModeEXT>
	<arg: 'modeAlpha' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationSeparateIndexedAMD' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationSeparateOES: modeRGB with: modeAlpha [

	<command: #glBlendEquationSeparateOES>
	<return: 'void'>
	<arg: 'modeRGB' type: 'GLenum' group: #BlendEquationModeEXT>
	<arg: 'modeAlpha' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationSeparateOES' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationSeparatei: buf with: modeRGB with: modeAlpha [

	<command: #glBlendEquationSeparatei>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'modeRGB' type: 'GLenum' group: #BlendEquationModeEXT>
	<arg: 'modeAlpha' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationSeparatei' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationSeparateiARB: buf with: modeRGB with: modeAlpha [

	<command: #glBlendEquationSeparateiARB>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'modeRGB' type: 'GLenum' group: #BlendEquationModeEXT>
	<arg: 'modeAlpha' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationSeparateiARB' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationSeparateiEXT: buf with: modeRGB with: modeAlpha [

	<command: #glBlendEquationSeparateiEXT>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'modeRGB' type: 'GLenum' group: #BlendEquationModeEXT>
	<arg: 'modeAlpha' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationSeparateiEXT' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationSeparateiOES: buf with: modeRGB with: modeAlpha [

	<command: #glBlendEquationSeparateiOES>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'modeRGB' type: 'GLenum' group: #BlendEquationModeEXT>
	<arg: 'modeAlpha' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationSeparateiOES' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationi: buf with: mode [

	<command: #glBlendEquationi>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'mode' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationi' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationiARB: buf with: mode [

	<command: #glBlendEquationiARB>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'mode' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationiARB' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationiEXT: buf with: mode [

	<command: #glBlendEquationiEXT>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'mode' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationiEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendEquationiOES: buf with: mode [

	<command: #glBlendEquationiOES>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'mode' type: 'GLenum' group: #BlendEquationModeEXT>

	<apicall: void 'glBlendEquationiOES' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFunc: sfactor with: dfactor [

	<command: #glBlendFunc>
	<return: 'void'>
	<arg: 'sfactor' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dfactor' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFunc' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncIndexedAMD: buf with: src with: dst [

	<command: #glBlendFuncIndexedAMD>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'src' type: 'GLenum'>
	<arg: 'dst' type: 'GLenum'>

	<apicall: void 'glBlendFuncIndexedAMD' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparate: sfactorRGB with: dfactorRGB with: sfactorAlpha with: dfactorAlpha [

	<command: #glBlendFuncSeparate>
	<return: 'void'>
	<arg: 'sfactorRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dfactorRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'sfactorAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dfactorAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparate' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparateEXT: sfactorRGB with: dfactorRGB with: sfactorAlpha with: dfactorAlpha [

	<command: #glBlendFuncSeparateEXT>
	<return: 'void'>
	<arg: 'sfactorRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dfactorRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'sfactorAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dfactorAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparateEXT' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparateINGR: sfactorRGB with: dfactorRGB with: sfactorAlpha with: dfactorAlpha [

	<command: #glBlendFuncSeparateINGR>
	<return: 'void'>
	<arg: 'sfactorRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dfactorRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'sfactorAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dfactorAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparateINGR' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparateIndexedAMD: buf with: srcRGB with: dstRGB with: srcAlpha with: dstAlpha [

	<command: #glBlendFuncSeparateIndexedAMD>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'srcRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'srcAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparateIndexedAMD' (GLuint GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparateOES: srcRGB with: dstRGB with: srcAlpha with: dstAlpha [

	<command: #glBlendFuncSeparateOES>
	<return: 'void'>
	<arg: 'srcRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'srcAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparateOES' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparatei: buf with: srcRGB with: dstRGB with: srcAlpha with: dstAlpha [

	<command: #glBlendFuncSeparatei>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'srcRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'srcAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparatei' (GLuint GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparateiARB: buf with: srcRGB with: dstRGB with: srcAlpha with: dstAlpha [

	<command: #glBlendFuncSeparateiARB>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'srcRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'srcAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparateiARB' (GLuint GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparateiEXT: buf with: srcRGB with: dstRGB with: srcAlpha with: dstAlpha [

	<command: #glBlendFuncSeparateiEXT>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'srcRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'srcAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparateiEXT' (GLuint GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFuncSeparateiOES: buf with: srcRGB with: dstRGB with: srcAlpha with: dstAlpha [

	<command: #glBlendFuncSeparateiOES>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'srcRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstRGB' type: 'GLenum' group: #BlendingFactor>
	<arg: 'srcAlpha' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dstAlpha' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFuncSeparateiOES' (GLuint GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFunci: buf with: src with: dst [

	<command: #glBlendFunci>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'src' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dst' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFunci' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFunciARB: buf with: src with: dst [

	<command: #glBlendFunciARB>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'src' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dst' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFunciARB' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFunciEXT: buf with: src with: dst [

	<command: #glBlendFunciEXT>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'src' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dst' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFunciEXT' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendFunciOES: buf with: src with: dst [

	<command: #glBlendFunciOES>
	<return: 'void'>
	<arg: 'buf' type: 'GLuint'>
	<arg: 'src' type: 'GLenum' group: #BlendingFactor>
	<arg: 'dst' type: 'GLenum' group: #BlendingFactor>

	<apicall: void 'glBlendFunciOES' (GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blendParameteriNV: pname with: value [

	<command: #glBlendParameteriNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'value' type: 'GLint'>

	<apicall: void 'glBlendParameteriNV' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blitFramebuffer: srcX0 with: srcY0 with: srcX1 with: srcY1 with: dstX0 with: dstY0 with: dstX1 with: dstY1 with: mask with: filter [

	<command: #glBlitFramebuffer>
	<return: 'void'>
	<arg: 'srcX0' type: 'GLint'>
	<arg: 'srcY0' type: 'GLint'>
	<arg: 'srcX1' type: 'GLint'>
	<arg: 'srcY1' type: 'GLint'>
	<arg: 'dstX0' type: 'GLint'>
	<arg: 'dstY0' type: 'GLint'>
	<arg: 'dstX1' type: 'GLint'>
	<arg: 'dstY1' type: 'GLint'>
	<arg: 'mask' type: 'GLbitfield' group: #ClearBufferMask>
	<arg: 'filter' type: 'GLenum' group: #BlitFramebufferFilter>

	<apicall: void 'glBlitFramebuffer' (GLint GLint GLint GLint GLint GLint GLint GLint GLbitfield GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blitFramebufferANGLE: srcX0 with: srcY0 with: srcX1 with: srcY1 with: dstX0 with: dstY0 with: dstX1 with: dstY1 with: mask with: filter [

	<command: #glBlitFramebufferANGLE>
	<return: 'void'>
	<arg: 'srcX0' type: 'GLint'>
	<arg: 'srcY0' type: 'GLint'>
	<arg: 'srcX1' type: 'GLint'>
	<arg: 'srcY1' type: 'GLint'>
	<arg: 'dstX0' type: 'GLint'>
	<arg: 'dstY0' type: 'GLint'>
	<arg: 'dstX1' type: 'GLint'>
	<arg: 'dstY1' type: 'GLint'>
	<arg: 'mask' type: 'GLbitfield' group: #ClearBufferMask>
	<arg: 'filter' type: 'GLenum' group: #BlitFramebufferFilter>

	<apicall: void 'glBlitFramebufferANGLE' (GLint GLint GLint GLint GLint GLint GLint GLint GLbitfield GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blitFramebufferEXT: srcX0 with: srcY0 with: srcX1 with: srcY1 with: dstX0 with: dstY0 with: dstX1 with: dstY1 with: mask with: filter [

	<command: #glBlitFramebufferEXT>
	<return: 'void'>
	<arg: 'srcX0' type: 'GLint'>
	<arg: 'srcY0' type: 'GLint'>
	<arg: 'srcX1' type: 'GLint'>
	<arg: 'srcY1' type: 'GLint'>
	<arg: 'dstX0' type: 'GLint'>
	<arg: 'dstY0' type: 'GLint'>
	<arg: 'dstX1' type: 'GLint'>
	<arg: 'dstY1' type: 'GLint'>
	<arg: 'mask' type: 'GLbitfield' group: #ClearBufferMask>
	<arg: 'filter' type: 'GLenum' group: #BlitFramebufferFilter>

	<apicall: void 'glBlitFramebufferEXT' (GLint GLint GLint GLint GLint GLint GLint GLint GLbitfield GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blitFramebufferNV: srcX0 with: srcY0 with: srcX1 with: srcY1 with: dstX0 with: dstY0 with: dstX1 with: dstY1 with: mask with: filter [

	<command: #glBlitFramebufferNV>
	<return: 'void'>
	<arg: 'srcX0' type: 'GLint'>
	<arg: 'srcY0' type: 'GLint'>
	<arg: 'srcX1' type: 'GLint'>
	<arg: 'srcY1' type: 'GLint'>
	<arg: 'dstX0' type: 'GLint'>
	<arg: 'dstY0' type: 'GLint'>
	<arg: 'dstX1' type: 'GLint'>
	<arg: 'dstY1' type: 'GLint'>
	<arg: 'mask' type: 'GLbitfield' group: #ClearBufferMask>
	<arg: 'filter' type: 'GLenum' group: #BlitFramebufferFilter>

	<apicall: void 'glBlitFramebufferNV' (GLint GLint GLint GLint GLint GLint GLint GLint GLbitfield GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> blitNamedFramebuffer: readFramebuffer with: drawFramebuffer with: srcX0 with: srcY0 with: srcX1 with: srcY1 with: dstX0 with: dstY0 with: dstX1 with: dstY1 with: mask with: filter [

	<command: #glBlitNamedFramebuffer>
	<return: 'void'>
	<arg: 'readFramebuffer' type: 'GLuint'>
	<arg: 'drawFramebuffer' type: 'GLuint'>
	<arg: 'srcX0' type: 'GLint'>
	<arg: 'srcY0' type: 'GLint'>
	<arg: 'srcX1' type: 'GLint'>
	<arg: 'srcY1' type: 'GLint'>
	<arg: 'dstX0' type: 'GLint'>
	<arg: 'dstY0' type: 'GLint'>
	<arg: 'dstX1' type: 'GLint'>
	<arg: 'dstY1' type: 'GLint'>
	<arg: 'mask' type: 'GLbitfield' group: #ClearBufferMask>
	<arg: 'filter' type: 'GLenum' group: #BlitFramebufferFilter>

	<apicall: void 'glBlitNamedFramebuffer' (GLuint GLuint GLint GLint GLint GLint GLint GLint GLint GLint GLbitfield GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferAddressRangeNV: pname with: index with: address with: length [

	<command: #glBufferAddressRangeNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'address' type: 'GLuint64EXT'>
	<arg: 'length' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glBufferAddressRangeNV' (GLenum GLuint GLuint64EXT GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferAttachMemoryNV: target with: memory with: offset [

	<command: #glBufferAttachMemoryNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glBufferAttachMemoryNV' (GLenum GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferData: target with: size with: data with: usage [

	<command: #glBufferData>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*' size: 'size'>
	<arg: 'usage' type: 'GLenum' group: #BufferUsageARB>

	<apicall: void 'glBufferData' (GLenum GLsizeiptr void* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferDataARB: target with: size with: data with: usage [

	<command: #glBufferDataARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'size' type: 'GLsizeiptrARB' group: #BufferSizeARB>
	<arg: 'data' type: 'void*' size: 'size'>
	<arg: 'usage' type: 'GLenum' group: #BufferUsageARB>

	<apicall: void 'glBufferDataARB' (GLenum GLsizeiptrARB void* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferPageCommitmentARB: target with: offset with: size with: commit [

	<command: #glBufferPageCommitmentARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glBufferPageCommitmentARB' (GLenum GLintptr GLsizeiptr GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferPageCommitmentMemNV: target with: offset with: size with: memory with: memOffset with: commit [

	<command: #glBufferPageCommitmentMemNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferStorageTarget>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'memOffset' type: 'GLuint64'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glBufferPageCommitmentMemNV' (GLenum GLintptr GLsizeiptr GLuint GLuint64 GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferParameteriAPPLE: target with: pname with: param [

	<command: #glBufferParameteriAPPLE>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glBufferParameteriAPPLE' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferStorage: target with: size with: data with: flags [

	<command: #glBufferStorage>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferStorageTarget>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'data' type: 'void*' size: 'size'>
	<arg: 'flags' type: 'GLbitfield' group: #BufferStorageMask>

	<apicall: void 'glBufferStorage' (GLenum GLsizeiptr void* GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferStorageEXT: target with: size with: data with: flags [

	<command: #glBufferStorageEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferStorageTarget>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'data' type: 'void*' size: 'size'>
	<arg: 'flags' type: 'GLbitfield' group: #BufferStorageMask>

	<apicall: void 'glBufferStorageEXT' (GLenum GLsizeiptr void* GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferStorageExternalEXT: target with: offset with: size with: clientBuffer with: flags [

	<command: #glBufferStorageExternalEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'clientBuffer' type: 'GLeglClientBufferEXT'>
	<arg: 'flags' type: 'GLbitfield' group: #BufferStorageMask>

	<apicall: void 'glBufferStorageExternalEXT' (GLenum GLintptr GLsizeiptr GLeglClientBufferEXT GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferStorageMemEXT: target with: size with: memory with: offset [

	<command: #glBufferStorageMemEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glBufferStorageMemEXT' (GLenum GLsizeiptr GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferSubData: target with: offset with: size with: data [

	<command: #glBufferSubData>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*' size: 'size'>

	<apicall: void 'glBufferSubData' (GLenum GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> bufferSubDataARB: target with: offset with: size with: data [

	<command: #glBufferSubDataARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptrARB' group: #BufferOffsetARB>
	<arg: 'size' type: 'GLsizeiptrARB' group: #BufferSizeARB>
	<arg: 'data' type: 'void*' size: 'size'>

	<apicall: void 'glBufferSubDataARB' (GLenum GLintptrARB GLsizeiptrARB void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> callCommandListNV: list [

	<command: #glCallCommandListNV>
	<return: 'void'>
	<arg: 'list' type: 'GLuint'>

	<apicall: void 'glCallCommandListNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> callList: list [

	<command: #glCallList>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>

	<apicall: void 'glCallList' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> callLists: n with: type with: lists [

	<command: #glCallLists>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #ListNameType>
	<arg: 'lists' type: 'void*' size: 'COMPSIZE(n,type)'>

	<apicall: void 'glCallLists' (GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> checkFramebufferStatus: target [

	<command: #glCheckFramebufferStatus>
	<return: 'GLenum'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>

	<apicall: GLenum 'glCheckFramebufferStatus' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> checkFramebufferStatusEXT: target [

	<command: #glCheckFramebufferStatusEXT>
	<return: 'GLenum'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>

	<apicall: GLenum 'glCheckFramebufferStatusEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> checkFramebufferStatusOES: target [

	<command: #glCheckFramebufferStatusOES>
	<return: 'GLenum'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>

	<apicall: GLenum 'glCheckFramebufferStatusOES' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> checkNamedFramebufferStatus: framebuffer with: target [

	<command: #glCheckNamedFramebufferStatus>
	<return: 'GLenum'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>

	<apicall: GLenum 'glCheckNamedFramebufferStatus' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> checkNamedFramebufferStatusEXT: framebuffer with: target [

	<command: #glCheckNamedFramebufferStatusEXT>
	<return: 'GLenum'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>

	<apicall: GLenum 'glCheckNamedFramebufferStatusEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clampColor: target with: clamp [

	<command: #glClampColor>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ClampColorTargetARB>
	<arg: 'clamp' type: 'GLenum' group: #ClampColorModeARB>

	<apicall: void 'glClampColor' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clampColorARB: target with: clamp [

	<command: #glClampColorARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ClampColorTargetARB>
	<arg: 'clamp' type: 'GLenum' group: #ClampColorModeARB>

	<apicall: void 'glClampColorARB' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clear: mask [

	<command: #glClear>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield' group: #ClearBufferMask>

	<apicall: void 'glClear' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearAccum: red with: green with: blue with: alpha [

	<command: #glClearAccum>
	<return: 'void'>
	<arg: 'red' type: 'GLfloat'>
	<arg: 'green' type: 'GLfloat'>
	<arg: 'blue' type: 'GLfloat'>
	<arg: 'alpha' type: 'GLfloat'>

	<apicall: void 'glClearAccum' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearAccumxOES: red with: green with: blue with: alpha [

	<command: #glClearAccumxOES>
	<return: 'void'>
	<arg: 'red' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'green' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'blue' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'alpha' type: 'GLfixed' group: #ClampedFixed>

	<apicall: void 'glClearAccumxOES' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearBufferData: target with: internalformat with: format with: type with: data [

	<command: #glClearBufferData>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferStorageTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type)'>

	<apicall: void 'glClearBufferData' (GLenum GLenum GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearBufferSubData: target with: internalformat with: offset with: size with: format with: type with: data [

	<command: #glClearBufferSubData>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type)'>

	<apicall: void 'glClearBufferSubData' (GLenum GLenum GLintptr GLsizeiptr GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearBufferfi: buffer with: drawbuffer with: depth with: stencil [

	<command: #glClearBufferfi>
	<return: 'void'>
	<arg: 'buffer' type: 'GLenum' group: #Buffer>
	<arg: 'drawbuffer' type: 'GLint' group: #DrawBufferName>
	<arg: 'depth' type: 'GLfloat'>
	<arg: 'stencil' type: 'GLint'>

	<apicall: void 'glClearBufferfi' (GLenum GLint GLfloat GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearBufferfv: buffer with: drawbuffer with: value [

	<command: #glClearBufferfv>
	<return: 'void'>
	<arg: 'buffer' type: 'GLenum' group: #Buffer>
	<arg: 'drawbuffer' type: 'GLint' group: #DrawBufferName>
	<arg: 'value' type: 'GLfloat*' size: 'COMPSIZE(buffer)'>

	<apicall: void 'glClearBufferfv' (GLenum GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearBufferiv: buffer with: drawbuffer with: value [

	<command: #glClearBufferiv>
	<return: 'void'>
	<arg: 'buffer' type: 'GLenum' group: #Buffer>
	<arg: 'drawbuffer' type: 'GLint' group: #DrawBufferName>
	<arg: 'value' type: 'GLint*' size: 'COMPSIZE(buffer)'>

	<apicall: void 'glClearBufferiv' (GLenum GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearBufferuiv: buffer with: drawbuffer with: value [

	<command: #glClearBufferuiv>
	<return: 'void'>
	<arg: 'buffer' type: 'GLenum' group: #Buffer>
	<arg: 'drawbuffer' type: 'GLint' group: #DrawBufferName>
	<arg: 'value' type: 'GLuint*' size: 'COMPSIZE(buffer)'>

	<apicall: void 'glClearBufferuiv' (GLenum GLint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearColor: red with: green with: blue with: alpha [

	<command: #glClearColor>
	<return: 'void'>
	<arg: 'red' type: 'GLfloat' group: #ColorF>
	<arg: 'green' type: 'GLfloat' group: #ColorF>
	<arg: 'blue' type: 'GLfloat' group: #ColorF>
	<arg: 'alpha' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glClearColor' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearColorIiEXT: red with: green with: blue with: alpha [

	<command: #glClearColorIiEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLint'>
	<arg: 'green' type: 'GLint'>
	<arg: 'blue' type: 'GLint'>
	<arg: 'alpha' type: 'GLint'>

	<apicall: void 'glClearColorIiEXT' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearColorIuiEXT: red with: green with: blue with: alpha [

	<command: #glClearColorIuiEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLuint'>
	<arg: 'green' type: 'GLuint'>
	<arg: 'blue' type: 'GLuint'>
	<arg: 'alpha' type: 'GLuint'>

	<apicall: void 'glClearColorIuiEXT' (GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearColorx: red with: green with: blue with: alpha [

	<command: #glClearColorx>
	<return: 'void'>
	<arg: 'red' type: 'GLfixed'>
	<arg: 'green' type: 'GLfixed'>
	<arg: 'blue' type: 'GLfixed'>
	<arg: 'alpha' type: 'GLfixed'>

	<apicall: void 'glClearColorx' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearColorxOES: red with: green with: blue with: alpha [

	<command: #glClearColorxOES>
	<return: 'void'>
	<arg: 'red' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'green' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'blue' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'alpha' type: 'GLfixed' group: #ClampedFixed>

	<apicall: void 'glClearColorxOES' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearDepth: depth [

	<command: #glClearDepth>
	<return: 'void'>
	<arg: 'depth' type: 'GLdouble'>

	<apicall: void 'glClearDepth' (GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearDepthdNV: depth [

	<command: #glClearDepthdNV>
	<return: 'void'>
	<arg: 'depth' type: 'GLdouble'>

	<apicall: void 'glClearDepthdNV' (GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearDepthf: d [

	<command: #glClearDepthf>
	<return: 'void'>
	<arg: 'd' type: 'GLfloat'>

	<apicall: void 'glClearDepthf' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearDepthfOES: depth [

	<command: #glClearDepthfOES>
	<return: 'void'>
	<arg: 'depth' type: 'GLclampf' group: #ClampedFloat32>

	<apicall: void 'glClearDepthfOES' (GLclampf)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearDepthx: depth [

	<command: #glClearDepthx>
	<return: 'void'>
	<arg: 'depth' type: 'GLfixed'>

	<apicall: void 'glClearDepthx' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearDepthxOES: depth [

	<command: #glClearDepthxOES>
	<return: 'void'>
	<arg: 'depth' type: 'GLfixed' group: #ClampedFixed>

	<apicall: void 'glClearDepthxOES' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearIndex: c [

	<command: #glClearIndex>
	<return: 'void'>
	<arg: 'c' type: 'GLfloat' group: #MaskedColorIndexValueF>

	<apicall: void 'glClearIndex' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearNamedBufferData: buffer with: internalformat with: format with: type with: data [

	<command: #glClearNamedBufferData>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*'>

	<apicall: void 'glClearNamedBufferData' (GLuint GLenum GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearNamedBufferDataEXT: buffer with: internalformat with: format with: type with: data [

	<command: #glClearNamedBufferDataEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type)'>

	<apicall: void 'glClearNamedBufferDataEXT' (GLuint GLenum GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearNamedBufferSubData: buffer with: internalformat with: offset with: size with: format with: type with: data [

	<command: #glClearNamedBufferSubData>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*'>

	<apicall: void 'glClearNamedBufferSubData' (GLuint GLenum GLintptr GLsizeiptr GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearNamedBufferSubDataEXT: buffer with: internalformat with: offset with: size with: format with: type with: data [

	<command: #glClearNamedBufferSubDataEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'offset' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type)'>

	<apicall: void 'glClearNamedBufferSubDataEXT' (GLuint GLenum GLsizeiptr GLsizeiptr GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearNamedFramebufferfi: framebuffer with: buffer with: drawbuffer with: depth with: stencil [

	<command: #glClearNamedFramebufferfi>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'buffer' type: 'GLenum' group: #Buffer>
	<arg: 'drawbuffer' type: 'GLint'>
	<arg: 'depth' type: 'GLfloat'>
	<arg: 'stencil' type: 'GLint'>

	<apicall: void 'glClearNamedFramebufferfi' (GLuint GLenum GLint GLfloat GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearNamedFramebufferfv: framebuffer with: buffer with: drawbuffer with: value [

	<command: #glClearNamedFramebufferfv>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'buffer' type: 'GLenum' group: #Buffer>
	<arg: 'drawbuffer' type: 'GLint'>
	<arg: 'value' type: 'GLfloat*'>

	<apicall: void 'glClearNamedFramebufferfv' (GLuint GLenum GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearNamedFramebufferiv: framebuffer with: buffer with: drawbuffer with: value [

	<command: #glClearNamedFramebufferiv>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'buffer' type: 'GLenum' group: #Buffer>
	<arg: 'drawbuffer' type: 'GLint'>
	<arg: 'value' type: 'GLint*'>

	<apicall: void 'glClearNamedFramebufferiv' (GLuint GLenum GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearNamedFramebufferuiv: framebuffer with: buffer with: drawbuffer with: value [

	<command: #glClearNamedFramebufferuiv>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'buffer' type: 'GLenum' group: #Buffer>
	<arg: 'drawbuffer' type: 'GLint'>
	<arg: 'value' type: 'GLuint*'>

	<apicall: void 'glClearNamedFramebufferuiv' (GLuint GLenum GLint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearPixelLocalStorageuiEXT: offset with: n with: values [

	<command: #glClearPixelLocalStorageuiEXT>
	<return: 'void'>
	<arg: 'offset' type: 'GLsizei'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'values' type: 'GLuint*' size: 'n'>

	<apicall: void 'glClearPixelLocalStorageuiEXT' (GLsizei GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearStencil: s [

	<command: #glClearStencil>
	<return: 'void'>
	<arg: 's' type: 'GLint' group: #StencilValue>

	<apicall: void 'glClearStencil' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearTexImage: texture with: level with: format with: type with: data [

	<command: #glClearTexImage>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type)'>

	<apicall: void 'glClearTexImage' (GLuint GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearTexImageEXT: texture with: level with: format with: type with: data [

	<command: #glClearTexImageEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type)'>

	<apicall: void 'glClearTexImageEXT' (GLuint GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearTexSubImage: texture with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: data [

	<command: #glClearTexSubImage>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type)'>

	<apicall: void 'glClearTexSubImage' (GLuint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clearTexSubImageEXT: texture with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: data [

	<command: #glClearTexSubImageEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type)'>

	<apicall: void 'glClearTexSubImageEXT' (GLuint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clientActiveTexture: texture [

	<command: #glClientActiveTexture>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>

	<apicall: void 'glClientActiveTexture' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clientActiveTextureARB: texture [

	<command: #glClientActiveTextureARB>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>

	<apicall: void 'glClientActiveTextureARB' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clientActiveVertexStreamATI: stream [

	<command: #glClientActiveVertexStreamATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>

	<apicall: void 'glClientActiveVertexStreamATI' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clientAttribDefaultEXT: mask [

	<command: #glClientAttribDefaultEXT>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield' group: #ClientAttribMask>

	<apicall: void 'glClientAttribDefaultEXT' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clientWaitSemaphoreui64NVX: fenceObjectCount with: semaphoreArray with: fenceValueArray [

	<command: #glClientWaitSemaphoreui64NVX>
	<return: 'void'>
	<arg: 'fenceObjectCount' type: 'GLsizei'>
	<arg: 'semaphoreArray' type: 'GLuint*' size: 'fenceObjectCount'>
	<arg: 'fenceValueArray' type: 'GLuint64*' size: 'fenceObjectCount'>

	<apicall: void 'glClientWaitSemaphoreui64NVX' (GLsizei GLuint* GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clientWaitSync: sync with: flags with: timeout [

	<command: #glClientWaitSync>
	<return: 'GLenum'>
	<arg: 'sync' type: 'GLsync' group: #sync>
	<arg: 'flags' type: 'GLbitfield' group: #SyncObjectMask>
	<arg: 'timeout' type: 'GLuint64'>

	<apicall: GLenum 'glClientWaitSync' (GLsync GLbitfield GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clientWaitSyncAPPLE: sync with: flags with: timeout [

	<command: #glClientWaitSyncAPPLE>
	<return: 'GLenum'>
	<arg: 'sync' type: 'GLsync' group: #sync>
	<arg: 'flags' type: 'GLbitfield' group: #SyncObjectMask>
	<arg: 'timeout' type: 'GLuint64'>

	<apicall: GLenum 'glClientWaitSyncAPPLE' (GLsync GLbitfield GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipControl: origin with: depth [

	<command: #glClipControl>
	<return: 'void'>
	<arg: 'origin' type: 'GLenum' group: #ClipControlOrigin>
	<arg: 'depth' type: 'GLenum' group: #ClipControlDepth>

	<apicall: void 'glClipControl' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipControlEXT: origin with: depth [

	<command: #glClipControlEXT>
	<return: 'void'>
	<arg: 'origin' type: 'GLenum'>
	<arg: 'depth' type: 'GLenum'>

	<apicall: void 'glClipControlEXT' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipPlane: plane with: equation [

	<command: #glClipPlane>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLdouble*' size: '4'>

	<apicall: void 'glClipPlane' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipPlanef: p with: eqn [

	<command: #glClipPlanef>
	<return: 'void'>
	<arg: 'p' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'eqn' type: 'GLfloat*' size: '4'>

	<apicall: void 'glClipPlanef' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipPlanefIMG: p with: eqn [

	<command: #glClipPlanefIMG>
	<return: 'void'>
	<arg: 'p' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'eqn' type: 'GLfloat*' size: '4'>

	<apicall: void 'glClipPlanefIMG' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipPlanefOES: plane with: equation [

	<command: #glClipPlanefOES>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLfloat*' size: '4'>

	<apicall: void 'glClipPlanefOES' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipPlanex: plane with: equation [

	<command: #glClipPlanex>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLfixed*' size: '4'>

	<apicall: void 'glClipPlanex' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipPlanexIMG: p with: eqn [

	<command: #glClipPlanexIMG>
	<return: 'void'>
	<arg: 'p' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'eqn' type: 'GLfixed*' size: '4'>

	<apicall: void 'glClipPlanexIMG' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> clipPlanexOES: plane with: equation [

	<command: #glClipPlanexOES>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLfixed*' size: '4'>

	<apicall: void 'glClipPlanexOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3b: red with: green with: blue [

	<command: #glColor3b>
	<return: 'void'>
	<arg: 'red' type: 'GLbyte' group: #ColorB>
	<arg: 'green' type: 'GLbyte' group: #ColorB>
	<arg: 'blue' type: 'GLbyte' group: #ColorB>

	<apicall: void 'glColor3b' (GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3bv: v [

	<command: #glColor3bv>
	<return: 'void'>
	<arg: 'v' type: 'GLbyte*' group: #ColorB size: '3'>

	<apicall: void 'glColor3bv' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3d: red with: green with: blue [

	<command: #glColor3d>
	<return: 'void'>
	<arg: 'red' type: 'GLdouble' group: #ColorD>
	<arg: 'green' type: 'GLdouble' group: #ColorD>
	<arg: 'blue' type: 'GLdouble' group: #ColorD>

	<apicall: void 'glColor3d' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3dv: v [

	<command: #glColor3dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #ColorD size: '3'>

	<apicall: void 'glColor3dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3f: red with: green with: blue [

	<command: #glColor3f>
	<return: 'void'>
	<arg: 'red' type: 'GLfloat' group: #ColorF>
	<arg: 'green' type: 'GLfloat' group: #ColorF>
	<arg: 'blue' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glColor3f' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3fVertex3fSUN: r with: g with: b with: x with: y with: z [

	<command: #glColor3fVertex3fSUN>
	<return: 'void'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'g' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glColor3fVertex3fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3fVertex3fvSUN: c with: v [

	<command: #glColor3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'c' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glColor3fVertex3fvSUN' (GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3fv: v [

	<command: #glColor3fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #ColorF size: '3'>

	<apicall: void 'glColor3fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3hNV: red with: green with: blue [

	<command: #glColor3hNV>
	<return: 'void'>
	<arg: 'red' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'green' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'blue' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glColor3hNV' (GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3hvNV: v [

	<command: #glColor3hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '3'>

	<apicall: void 'glColor3hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3i: red with: green with: blue [

	<command: #glColor3i>
	<return: 'void'>
	<arg: 'red' type: 'GLint' group: #ColorI>
	<arg: 'green' type: 'GLint' group: #ColorI>
	<arg: 'blue' type: 'GLint' group: #ColorI>

	<apicall: void 'glColor3i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3iv: v [

	<command: #glColor3iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #ColorI size: '3'>

	<apicall: void 'glColor3iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3s: red with: green with: blue [

	<command: #glColor3s>
	<return: 'void'>
	<arg: 'red' type: 'GLshort' group: #ColorS>
	<arg: 'green' type: 'GLshort' group: #ColorS>
	<arg: 'blue' type: 'GLshort' group: #ColorS>

	<apicall: void 'glColor3s' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3sv: v [

	<command: #glColor3sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #ColorS size: '3'>

	<apicall: void 'glColor3sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3ub: red with: green with: blue [

	<command: #glColor3ub>
	<return: 'void'>
	<arg: 'red' type: 'GLubyte' group: #ColorUB>
	<arg: 'green' type: 'GLubyte' group: #ColorUB>
	<arg: 'blue' type: 'GLubyte' group: #ColorUB>

	<apicall: void 'glColor3ub' (GLubyte GLubyte GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3ubv: v [

	<command: #glColor3ubv>
	<return: 'void'>
	<arg: 'v' type: 'GLubyte*' group: #ColorUB size: '3'>

	<apicall: void 'glColor3ubv' (GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3ui: red with: green with: blue [

	<command: #glColor3ui>
	<return: 'void'>
	<arg: 'red' type: 'GLuint' group: #ColorUI>
	<arg: 'green' type: 'GLuint' group: #ColorUI>
	<arg: 'blue' type: 'GLuint' group: #ColorUI>

	<apicall: void 'glColor3ui' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3uiv: v [

	<command: #glColor3uiv>
	<return: 'void'>
	<arg: 'v' type: 'GLuint*' group: #ColorUI size: '3'>

	<apicall: void 'glColor3uiv' (GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3us: red with: green with: blue [

	<command: #glColor3us>
	<return: 'void'>
	<arg: 'red' type: 'GLushort' group: #ColorUS>
	<arg: 'green' type: 'GLushort' group: #ColorUS>
	<arg: 'blue' type: 'GLushort' group: #ColorUS>

	<apicall: void 'glColor3us' (GLushort GLushort GLushort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3usv: v [

	<command: #glColor3usv>
	<return: 'void'>
	<arg: 'v' type: 'GLushort*' group: #ColorUS size: '3'>

	<apicall: void 'glColor3usv' (GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3xOES: red with: green with: blue [

	<command: #glColor3xOES>
	<return: 'void'>
	<arg: 'red' type: 'GLfixed'>
	<arg: 'green' type: 'GLfixed'>
	<arg: 'blue' type: 'GLfixed'>

	<apicall: void 'glColor3xOES' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color3xvOES: components [

	<command: #glColor3xvOES>
	<return: 'void'>
	<arg: 'components' type: 'GLfixed*' size: '3'>

	<apicall: void 'glColor3xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4b: red with: green with: blue with: alpha [

	<command: #glColor4b>
	<return: 'void'>
	<arg: 'red' type: 'GLbyte' group: #ColorB>
	<arg: 'green' type: 'GLbyte' group: #ColorB>
	<arg: 'blue' type: 'GLbyte' group: #ColorB>
	<arg: 'alpha' type: 'GLbyte' group: #ColorB>

	<apicall: void 'glColor4b' (GLbyte GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4bv: v [

	<command: #glColor4bv>
	<return: 'void'>
	<arg: 'v' type: 'GLbyte*' group: #ColorB size: '4'>

	<apicall: void 'glColor4bv' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4d: red with: green with: blue with: alpha [

	<command: #glColor4d>
	<return: 'void'>
	<arg: 'red' type: 'GLdouble' group: #ColorD>
	<arg: 'green' type: 'GLdouble' group: #ColorD>
	<arg: 'blue' type: 'GLdouble' group: #ColorD>
	<arg: 'alpha' type: 'GLdouble' group: #ColorD>

	<apicall: void 'glColor4d' (GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4dv: v [

	<command: #glColor4dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #ColorD size: '4'>

	<apicall: void 'glColor4dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4f: red with: green with: blue with: alpha [

	<command: #glColor4f>
	<return: 'void'>
	<arg: 'red' type: 'GLfloat' group: #ColorF>
	<arg: 'green' type: 'GLfloat' group: #ColorF>
	<arg: 'blue' type: 'GLfloat' group: #ColorF>
	<arg: 'alpha' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glColor4f' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4fNormal3fVertex3fSUN: r with: g with: b with: a with: nx with: ny with: nz with: x with: y with: z [

	<command: #glColor4fNormal3fVertex3fSUN>
	<return: 'void'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'g' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 'a' type: 'GLfloat'>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glColor4fNormal3fVertex3fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4fNormal3fVertex3fvSUN: c with: n with: v [

	<command: #glColor4fNormal3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'c' type: 'GLfloat*' size: '4'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glColor4fNormal3fVertex3fvSUN' (GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4fv: v [

	<command: #glColor4fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #ColorF size: '4'>

	<apicall: void 'glColor4fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4hNV: red with: green with: blue with: alpha [

	<command: #glColor4hNV>
	<return: 'void'>
	<arg: 'red' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'green' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'blue' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'alpha' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glColor4hNV' (GLhalfNV GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4hvNV: v [

	<command: #glColor4hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '4'>

	<apicall: void 'glColor4hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4i: red with: green with: blue with: alpha [

	<command: #glColor4i>
	<return: 'void'>
	<arg: 'red' type: 'GLint' group: #ColorI>
	<arg: 'green' type: 'GLint' group: #ColorI>
	<arg: 'blue' type: 'GLint' group: #ColorI>
	<arg: 'alpha' type: 'GLint' group: #ColorI>

	<apicall: void 'glColor4i' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4iv: v [

	<command: #glColor4iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #ColorI size: '4'>

	<apicall: void 'glColor4iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4s: red with: green with: blue with: alpha [

	<command: #glColor4s>
	<return: 'void'>
	<arg: 'red' type: 'GLshort' group: #ColorS>
	<arg: 'green' type: 'GLshort' group: #ColorS>
	<arg: 'blue' type: 'GLshort' group: #ColorS>
	<arg: 'alpha' type: 'GLshort' group: #ColorS>

	<apicall: void 'glColor4s' (GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4sv: v [

	<command: #glColor4sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #ColorS size: '4'>

	<apicall: void 'glColor4sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4ub: red with: green with: blue with: alpha [

	<command: #glColor4ub>
	<return: 'void'>
	<arg: 'red' type: 'GLubyte' group: #ColorUB>
	<arg: 'green' type: 'GLubyte' group: #ColorUB>
	<arg: 'blue' type: 'GLubyte' group: #ColorUB>
	<arg: 'alpha' type: 'GLubyte' group: #ColorUB>

	<apicall: void 'glColor4ub' (GLubyte GLubyte GLubyte GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4ubVertex2fSUN: r with: g with: b with: a with: x with: y [

	<command: #glColor4ubVertex2fSUN>
	<return: 'void'>
	<arg: 'r' type: 'GLubyte'>
	<arg: 'g' type: 'GLubyte'>
	<arg: 'b' type: 'GLubyte'>
	<arg: 'a' type: 'GLubyte'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>

	<apicall: void 'glColor4ubVertex2fSUN' (GLubyte GLubyte GLubyte GLubyte GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4ubVertex2fvSUN: c with: v [

	<command: #glColor4ubVertex2fvSUN>
	<return: 'void'>
	<arg: 'c' type: 'GLubyte*' size: '4'>
	<arg: 'v' type: 'GLfloat*' size: '2'>

	<apicall: void 'glColor4ubVertex2fvSUN' (GLubyte* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4ubVertex3fSUN: r with: g with: b with: a with: x with: y with: z [

	<command: #glColor4ubVertex3fSUN>
	<return: 'void'>
	<arg: 'r' type: 'GLubyte'>
	<arg: 'g' type: 'GLubyte'>
	<arg: 'b' type: 'GLubyte'>
	<arg: 'a' type: 'GLubyte'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glColor4ubVertex3fSUN' (GLubyte GLubyte GLubyte GLubyte GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4ubVertex3fvSUN: c with: v [

	<command: #glColor4ubVertex3fvSUN>
	<return: 'void'>
	<arg: 'c' type: 'GLubyte*' size: '4'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glColor4ubVertex3fvSUN' (GLubyte* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4ubv: v [

	<command: #glColor4ubv>
	<return: 'void'>
	<arg: 'v' type: 'GLubyte*' group: #ColorUB size: '4'>

	<apicall: void 'glColor4ubv' (GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4ui: red with: green with: blue with: alpha [

	<command: #glColor4ui>
	<return: 'void'>
	<arg: 'red' type: 'GLuint' group: #ColorUI>
	<arg: 'green' type: 'GLuint' group: #ColorUI>
	<arg: 'blue' type: 'GLuint' group: #ColorUI>
	<arg: 'alpha' type: 'GLuint' group: #ColorUI>

	<apicall: void 'glColor4ui' (GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4uiv: v [

	<command: #glColor4uiv>
	<return: 'void'>
	<arg: 'v' type: 'GLuint*' group: #ColorUI size: '4'>

	<apicall: void 'glColor4uiv' (GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4us: red with: green with: blue with: alpha [

	<command: #glColor4us>
	<return: 'void'>
	<arg: 'red' type: 'GLushort' group: #ColorUS>
	<arg: 'green' type: 'GLushort' group: #ColorUS>
	<arg: 'blue' type: 'GLushort' group: #ColorUS>
	<arg: 'alpha' type: 'GLushort' group: #ColorUS>

	<apicall: void 'glColor4us' (GLushort GLushort GLushort GLushort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4usv: v [

	<command: #glColor4usv>
	<return: 'void'>
	<arg: 'v' type: 'GLushort*' group: #ColorUS size: '4'>

	<apicall: void 'glColor4usv' (GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4x: red with: green with: blue with: alpha [

	<command: #glColor4x>
	<return: 'void'>
	<arg: 'red' type: 'GLfixed'>
	<arg: 'green' type: 'GLfixed'>
	<arg: 'blue' type: 'GLfixed'>
	<arg: 'alpha' type: 'GLfixed'>

	<apicall: void 'glColor4x' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4xOES: red with: green with: blue with: alpha [

	<command: #glColor4xOES>
	<return: 'void'>
	<arg: 'red' type: 'GLfixed'>
	<arg: 'green' type: 'GLfixed'>
	<arg: 'blue' type: 'GLfixed'>
	<arg: 'alpha' type: 'GLfixed'>

	<apicall: void 'glColor4xOES' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> color4xvOES: components [

	<command: #glColor4xvOES>
	<return: 'void'>
	<arg: 'components' type: 'GLfixed*' size: '4'>

	<apicall: void 'glColor4xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorFormatNV: size with: type with: stride [

	<command: #glColorFormatNV>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glColorFormatNV' (GLint GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorFragmentOp1ATI: op with: dst with: dstMask with: dstMod with: arg1 with: arg1Rep with: arg1Mod [

	<command: #glColorFragmentOp1ATI>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #FragmentOpATI>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'dstMask' type: 'GLuint'>
	<arg: 'dstMod' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>
	<arg: 'arg1Rep' type: 'GLuint'>
	<arg: 'arg1Mod' type: 'GLuint'>

	<apicall: void 'glColorFragmentOp1ATI' (GLenum GLuint GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorFragmentOp2ATI: op with: dst with: dstMask with: dstMod with: arg1 with: arg1Rep with: arg1Mod with: arg2 with: arg2Rep with: arg2Mod [

	<command: #glColorFragmentOp2ATI>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #FragmentOpATI>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'dstMask' type: 'GLuint'>
	<arg: 'dstMod' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>
	<arg: 'arg1Rep' type: 'GLuint'>
	<arg: 'arg1Mod' type: 'GLuint'>
	<arg: 'arg2' type: 'GLuint'>
	<arg: 'arg2Rep' type: 'GLuint'>
	<arg: 'arg2Mod' type: 'GLuint'>

	<apicall: void 'glColorFragmentOp2ATI' (GLenum GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorFragmentOp3ATI: op with: dst with: dstMask with: dstMod with: arg1 with: arg1Rep with: arg1Mod with: arg2 with: arg2Rep with: arg2Mod with: arg3 with: arg3Rep with: arg3Mod [

	<command: #glColorFragmentOp3ATI>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #FragmentOpATI>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'dstMask' type: 'GLuint'>
	<arg: 'dstMod' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>
	<arg: 'arg1Rep' type: 'GLuint'>
	<arg: 'arg1Mod' type: 'GLuint'>
	<arg: 'arg2' type: 'GLuint'>
	<arg: 'arg2Rep' type: 'GLuint'>
	<arg: 'arg2Mod' type: 'GLuint'>
	<arg: 'arg3' type: 'GLuint'>
	<arg: 'arg3Rep' type: 'GLuint'>
	<arg: 'arg3Mod' type: 'GLuint'>

	<apicall: void 'glColorFragmentOp3ATI' (GLenum GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorMask: red with: green with: blue with: alpha [

	<command: #glColorMask>
	<return: 'void'>
	<arg: 'red' type: 'GLboolean' group: #Boolean>
	<arg: 'green' type: 'GLboolean' group: #Boolean>
	<arg: 'blue' type: 'GLboolean' group: #Boolean>
	<arg: 'alpha' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glColorMask' (GLboolean GLboolean GLboolean GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorMaskIndexedEXT: index with: r with: g with: b with: a [

	<command: #glColorMaskIndexedEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'r' type: 'GLboolean' group: #Boolean>
	<arg: 'g' type: 'GLboolean' group: #Boolean>
	<arg: 'b' type: 'GLboolean' group: #Boolean>
	<arg: 'a' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glColorMaskIndexedEXT' (GLuint GLboolean GLboolean GLboolean GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorMaski: index with: r with: g with: b with: a [

	<command: #glColorMaski>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'r' type: 'GLboolean' group: #Boolean>
	<arg: 'g' type: 'GLboolean' group: #Boolean>
	<arg: 'b' type: 'GLboolean' group: #Boolean>
	<arg: 'a' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glColorMaski' (GLuint GLboolean GLboolean GLboolean GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorMaskiEXT: index with: r with: g with: b with: a [

	<command: #glColorMaskiEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'r' type: 'GLboolean' group: #Boolean>
	<arg: 'g' type: 'GLboolean' group: #Boolean>
	<arg: 'b' type: 'GLboolean' group: #Boolean>
	<arg: 'a' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glColorMaskiEXT' (GLuint GLboolean GLboolean GLboolean GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorMaskiOES: index with: r with: g with: b with: a [

	<command: #glColorMaskiOES>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'r' type: 'GLboolean' group: #Boolean>
	<arg: 'g' type: 'GLboolean' group: #Boolean>
	<arg: 'b' type: 'GLboolean' group: #Boolean>
	<arg: 'a' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glColorMaskiOES' (GLuint GLboolean GLboolean GLboolean GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorMaterial: face with: mode [

	<command: #glColorMaterial>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'mode' type: 'GLenum' group: #ColorMaterialParameter>

	<apicall: void 'glColorMaterial' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorP3ui: type with: color [

	<command: #glColorP3ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'color' type: 'GLuint'>

	<apicall: void 'glColorP3ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorP3uiv: type with: color [

	<command: #glColorP3uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'color' type: 'GLuint*' size: '1'>

	<apicall: void 'glColorP3uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorP4ui: type with: color [

	<command: #glColorP4ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'color' type: 'GLuint'>

	<apicall: void 'glColorP4ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorP4uiv: type with: color [

	<command: #glColorP4uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'color' type: 'GLuint*' size: '1'>

	<apicall: void 'glColorP4uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorPointer: size with: type with: stride with: pointer [

	<command: #glColorPointer>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glColorPointer' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorPointerEXT: size with: type with: stride with: count with: pointer [

	<command: #glColorPointerEXT>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride,count)'>

	<apicall: void 'glColorPointerEXT' (GLint GLenum GLsizei GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorPointerListIBM: size with: type with: stride with: pointer with: ptrstride [

	<command: #glColorPointerListIBM>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'stride' type: 'GLint'>
	<arg: 'pointer' type: 'void**' size: 'COMPSIZE(size,type,stride)'>
	<arg: 'ptrstride' type: 'GLint'>

	<apicall: void 'glColorPointerListIBM' (GLint GLenum GLint void** GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorPointervINTEL: size with: type with: pointer [

	<command: #glColorPointervINTEL>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'pointer' type: 'void**' size: '4'>

	<apicall: void 'glColorPointervINTEL' (GLint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorSubTable: target with: start with: count with: format with: type with: data [

	<command: #glColorSubTable>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'start' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type,count)'>

	<apicall: void 'glColorSubTable' (GLenum GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorSubTableEXT: target with: start with: count with: format with: type with: data [

	<command: #glColorSubTableEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'start' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(format,type,count)'>

	<apicall: void 'glColorSubTableEXT' (GLenum GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorTable: target with: internalformat with: width with: format with: type with: table [

	<command: #glColorTable>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'table' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glColorTable' (GLenum GLenum GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorTableEXT: target with: internalFormat with: width with: format with: type with: table [

	<command: #glColorTableEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'internalFormat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'table' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glColorTableEXT' (GLenum GLenum GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorTableParameterfv: target with: pname with: params [

	<command: #glColorTableParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'pname' type: 'GLenum' group: #ColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glColorTableParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorTableParameterfvSGI: target with: pname with: params [

	<command: #glColorTableParameterfvSGI>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTargetSGI>
	<arg: 'pname' type: 'GLenum' group: #ColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glColorTableParameterfvSGI' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorTableParameteriv: target with: pname with: params [

	<command: #glColorTableParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'pname' type: 'GLenum' group: #ColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glColorTableParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorTableParameterivSGI: target with: pname with: params [

	<command: #glColorTableParameterivSGI>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTargetSGI>
	<arg: 'pname' type: 'GLenum' group: #ColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glColorTableParameterivSGI' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> colorTableSGI: target with: internalformat with: width with: format with: type with: table [

	<command: #glColorTableSGI>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTargetSGI>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'table' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glColorTableSGI' (GLenum GLenum GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> combinerInputNV: stage with: portion with: variable with: input with: mapping with: componentUsage [

	<command: #glCombinerInputNV>
	<return: 'void'>
	<arg: 'stage' type: 'GLenum' group: #CombinerStageNV>
	<arg: 'portion' type: 'GLenum' group: #CombinerPortionNV>
	<arg: 'variable' type: 'GLenum' group: #CombinerVariableNV>
	<arg: 'input' type: 'GLenum' group: #CombinerRegisterNV>
	<arg: 'mapping' type: 'GLenum' group: #CombinerMappingNV>
	<arg: 'componentUsage' type: 'GLenum' group: #CombinerComponentUsageNV>

	<apicall: void 'glCombinerInputNV' (GLenum GLenum GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> combinerOutputNV: stage with: portion with: abOutput with: cdOutput with: sumOutput with: scale with: bias with: abDotProduct with: cdDotProduct with: muxSum [

	<command: #glCombinerOutputNV>
	<return: 'void'>
	<arg: 'stage' type: 'GLenum' group: #CombinerStageNV>
	<arg: 'portion' type: 'GLenum' group: #CombinerPortionNV>
	<arg: 'abOutput' type: 'GLenum' group: #CombinerRegisterNV>
	<arg: 'cdOutput' type: 'GLenum' group: #CombinerRegisterNV>
	<arg: 'sumOutput' type: 'GLenum' group: #CombinerRegisterNV>
	<arg: 'scale' type: 'GLenum' group: #CombinerScaleNV>
	<arg: 'bias' type: 'GLenum' group: #CombinerBiasNV>
	<arg: 'abDotProduct' type: 'GLboolean' group: #Boolean>
	<arg: 'cdDotProduct' type: 'GLboolean' group: #Boolean>
	<arg: 'muxSum' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glCombinerOutputNV' (GLenum GLenum GLenum GLenum GLenum GLenum GLenum GLboolean GLboolean GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> combinerParameterfNV: pname with: param [

	<command: #glCombinerParameterfNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glCombinerParameterfNV' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> combinerParameterfvNV: pname with: params [

	<command: #glCombinerParameterfvNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glCombinerParameterfvNV' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> combinerParameteriNV: pname with: param [

	<command: #glCombinerParameteriNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glCombinerParameteriNV' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> combinerParameterivNV: pname with: params [

	<command: #glCombinerParameterivNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glCombinerParameterivNV' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> combinerStageParameterfvNV: stage with: pname with: params [

	<command: #glCombinerStageParameterfvNV>
	<return: 'void'>
	<arg: 'stage' type: 'GLenum' group: #CombinerStageNV>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glCombinerStageParameterfvNV' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> commandListSegmentsNV: list with: segments [

	<command: #glCommandListSegmentsNV>
	<return: 'void'>
	<arg: 'list' type: 'GLuint'>
	<arg: 'segments' type: 'GLuint'>

	<apicall: void 'glCommandListSegmentsNV' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compileCommandListNV: list [

	<command: #glCompileCommandListNV>
	<return: 'void'>
	<arg: 'list' type: 'GLuint'>

	<apicall: void 'glCompileCommandListNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compileShader: shader [

	<command: #glCompileShader>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>

	<apicall: void 'glCompileShader' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compileShaderARB: shaderObj [

	<command: #glCompileShaderARB>
	<return: 'void'>
	<arg: 'shaderObj' type: 'GLhandleARB' group: #handleARB>

	<apicall: void 'glCompileShaderARB' (GLhandleARB)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compileShaderIncludeARB: shader with: count with: path with: length [

	<command: #glCompileShaderIncludeARB>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'path' type: 'GLchar**' size: 'count'>
	<arg: 'length' type: 'GLint*' size: 'count'>

	<apicall: void 'glCompileShaderIncludeARB' (GLuint GLsizei GLchar** GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedMultiTexImage1DEXT: texunit with: target with: level with: internalformat with: width with: border with: imageSize with: bits [

	<command: #glCompressedMultiTexImage1DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedMultiTexImage1DEXT' (GLenum GLenum GLint GLenum GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedMultiTexImage2DEXT: texunit with: target with: level with: internalformat with: width with: height with: border with: imageSize with: bits [

	<command: #glCompressedMultiTexImage2DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedMultiTexImage2DEXT' (GLenum GLenum GLint GLenum GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedMultiTexImage3DEXT: texunit with: target with: level with: internalformat with: width with: height with: depth with: border with: imageSize with: bits [

	<command: #glCompressedMultiTexImage3DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedMultiTexImage3DEXT' (GLenum GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedMultiTexSubImage1DEXT: texunit with: target with: level with: xoffset with: width with: format with: imageSize with: bits [

	<command: #glCompressedMultiTexSubImage1DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedMultiTexSubImage1DEXT' (GLenum GLenum GLint GLint GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedMultiTexSubImage2DEXT: texunit with: target with: level with: xoffset with: yoffset with: width with: height with: format with: imageSize with: bits [

	<command: #glCompressedMultiTexSubImage2DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedMultiTexSubImage2DEXT' (GLenum GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedMultiTexSubImage3DEXT: texunit with: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: imageSize with: bits [

	<command: #glCompressedMultiTexSubImage3DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedMultiTexSubImage3DEXT' (GLenum GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexImage1D: target with: level with: internalformat with: width with: border with: imageSize with: data [

	<command: #glCompressedTexImage1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexImage1D' (GLenum GLint GLenum GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexImage1DARB: target with: level with: internalformat with: width with: border with: imageSize with: data [

	<command: #glCompressedTexImage1DARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexImage1DARB' (GLenum GLint GLenum GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexImage2D: target with: level with: internalformat with: width with: height with: border with: imageSize with: data [

	<command: #glCompressedTexImage2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexImage2D' (GLenum GLint GLenum GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexImage2DARB: target with: level with: internalformat with: width with: height with: border with: imageSize with: data [

	<command: #glCompressedTexImage2DARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexImage2DARB' (GLenum GLint GLenum GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexImage3D: target with: level with: internalformat with: width with: height with: depth with: border with: imageSize with: data [

	<command: #glCompressedTexImage3D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexImage3D' (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexImage3DARB: target with: level with: internalformat with: width with: height with: depth with: border with: imageSize with: data [

	<command: #glCompressedTexImage3DARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexImage3DARB' (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexImage3DOES: target with: level with: internalformat with: width with: height with: depth with: border with: imageSize with: data [

	<command: #glCompressedTexImage3DOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint'>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedTexImage3DOES' (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexSubImage1D: target with: level with: xoffset with: width with: format with: imageSize with: data [

	<command: #glCompressedTexSubImage1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexSubImage1D' (GLenum GLint GLint GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexSubImage1DARB: target with: level with: xoffset with: width with: format with: imageSize with: data [

	<command: #glCompressedTexSubImage1DARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexSubImage1DARB' (GLenum GLint GLint GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexSubImage2D: target with: level with: xoffset with: yoffset with: width with: height with: format with: imageSize with: data [

	<command: #glCompressedTexSubImage2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexSubImage2D' (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexSubImage2DARB: target with: level with: xoffset with: yoffset with: width with: height with: format with: imageSize with: data [

	<command: #glCompressedTexSubImage2DARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexSubImage2DARB' (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexSubImage3D: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: imageSize with: data [

	<command: #glCompressedTexSubImage3D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexSubImage3D' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexSubImage3DARB: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: imageSize with: data [

	<command: #glCompressedTexSubImage3DARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' group: #CompressedTextureARB size: 'imageSize'>

	<apicall: void 'glCompressedTexSubImage3DARB' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTexSubImage3DOES: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: imageSize with: data [

	<command: #glCompressedTexSubImage3DOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedTexSubImage3DOES' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureImage1DEXT: texture with: target with: level with: internalformat with: width with: border with: imageSize with: bits [

	<command: #glCompressedTextureImage1DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedTextureImage1DEXT' (GLuint GLenum GLint GLenum GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureImage2DEXT: texture with: target with: level with: internalformat with: width with: height with: border with: imageSize with: bits [

	<command: #glCompressedTextureImage2DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedTextureImage2DEXT' (GLuint GLenum GLint GLenum GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureImage3DEXT: texture with: target with: level with: internalformat with: width with: height with: depth with: border with: imageSize with: bits [

	<command: #glCompressedTextureImage3DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedTextureImage3DEXT' (GLuint GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureSubImage1D: texture with: level with: xoffset with: width with: format with: imageSize with: data [

	<command: #glCompressedTextureSubImage1D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*'>

	<apicall: void 'glCompressedTextureSubImage1D' (GLuint GLint GLint GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureSubImage1DEXT: texture with: target with: level with: xoffset with: width with: format with: imageSize with: bits [

	<command: #glCompressedTextureSubImage1DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedTextureSubImage1DEXT' (GLuint GLenum GLint GLint GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureSubImage2D: texture with: level with: xoffset with: yoffset with: width with: height with: format with: imageSize with: data [

	<command: #glCompressedTextureSubImage2D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*'>

	<apicall: void 'glCompressedTextureSubImage2D' (GLuint GLint GLint GLint GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureSubImage2DEXT: texture with: target with: level with: xoffset with: yoffset with: width with: height with: format with: imageSize with: bits [

	<command: #glCompressedTextureSubImage2DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedTextureSubImage2DEXT' (GLuint GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureSubImage3D: texture with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: imageSize with: data [

	<command: #glCompressedTextureSubImage3D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*'>

	<apicall: void 'glCompressedTextureSubImage3D' (GLuint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> compressedTextureSubImage3DEXT: texture with: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: imageSize with: bits [

	<command: #glCompressedTextureSubImage3DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'imageSize' type: 'GLsizei'>
	<arg: 'bits' type: 'void*' size: 'imageSize'>

	<apicall: void 'glCompressedTextureSubImage3DEXT' (GLuint GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> conservativeRasterParameterfNV: pname with: value [

	<command: #glConservativeRasterParameterfNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'value' type: 'GLfloat'>

	<apicall: void 'glConservativeRasterParameterfNV' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> conservativeRasterParameteriNV: pname with: param [

	<command: #glConservativeRasterParameteriNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glConservativeRasterParameteriNV' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionFilter1D: target with: internalformat with: width with: format with: type with: image [

	<command: #glConvolutionFilter1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'image' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glConvolutionFilter1D' (GLenum GLenum GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionFilter1DEXT: target with: internalformat with: width with: format with: type with: image [

	<command: #glConvolutionFilter1DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'image' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glConvolutionFilter1DEXT' (GLenum GLenum GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionFilter2D: target with: internalformat with: width with: height with: format with: type with: image [

	<command: #glConvolutionFilter2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'image' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glConvolutionFilter2D' (GLenum GLenum GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionFilter2DEXT: target with: internalformat with: width with: height with: format with: type with: image [

	<command: #glConvolutionFilter2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'image' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glConvolutionFilter2DEXT' (GLenum GLenum GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameterf: target with: pname with: params [

	<command: #glConvolutionParameterf>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glConvolutionParameterf' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameterfEXT: target with: pname with: params [

	<command: #glConvolutionParameterfEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glConvolutionParameterfEXT' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameterfv: target with: pname with: params [

	<command: #glConvolutionParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glConvolutionParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameterfvEXT: target with: pname with: params [

	<command: #glConvolutionParameterfvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glConvolutionParameterfvEXT' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameteri: target with: pname with: params [

	<command: #glConvolutionParameteri>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glConvolutionParameteri' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameteriEXT: target with: pname with: params [

	<command: #glConvolutionParameteriEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glConvolutionParameteriEXT' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameteriv: target with: pname with: params [

	<command: #glConvolutionParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glConvolutionParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameterivEXT: target with: pname with: params [

	<command: #glConvolutionParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glConvolutionParameterivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameterxOES: target with: pname with: param [

	<command: #glConvolutionParameterxOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glConvolutionParameterxOES' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> convolutionParameterxvOES: target with: pname with: params [

	<command: #glConvolutionParameterxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glConvolutionParameterxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyBufferSubData: readTarget with: writeTarget with: readOffset with: writeOffset with: size [

	<command: #glCopyBufferSubData>
	<return: 'void'>
	<arg: 'readTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'writeTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'readOffset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'writeOffset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glCopyBufferSubData' (GLenum GLenum GLintptr GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyBufferSubDataNV: readTarget with: writeTarget with: readOffset with: writeOffset with: size [

	<command: #glCopyBufferSubDataNV>
	<return: 'void'>
	<arg: 'readTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'writeTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'readOffset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'writeOffset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glCopyBufferSubDataNV' (GLenum GLenum GLintptr GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyColorSubTable: target with: start with: x with: y with: width [

	<command: #glCopyColorSubTable>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'start' type: 'GLsizei'>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyColorSubTable' (GLenum GLsizei GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyColorSubTableEXT: target with: start with: x with: y with: width [

	<command: #glCopyColorSubTableEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'start' type: 'GLsizei'>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyColorSubTableEXT' (GLenum GLsizei GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyColorTable: target with: internalformat with: x with: y with: width [

	<command: #glCopyColorTable>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyColorTable' (GLenum GLenum GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyColorTableSGI: target with: internalformat with: x with: y with: width [

	<command: #glCopyColorTableSGI>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTargetSGI>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyColorTableSGI' (GLenum GLenum GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyConvolutionFilter1D: target with: internalformat with: x with: y with: width [

	<command: #glCopyConvolutionFilter1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyConvolutionFilter1D' (GLenum GLenum GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyConvolutionFilter1DEXT: target with: internalformat with: x with: y with: width [

	<command: #glCopyConvolutionFilter1DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyConvolutionFilter1DEXT' (GLenum GLenum GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyConvolutionFilter2D: target with: internalformat with: x with: y with: width with: height [

	<command: #glCopyConvolutionFilter2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyConvolutionFilter2D' (GLenum GLenum GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyConvolutionFilter2DEXT: target with: internalformat with: x with: y with: width with: height [

	<command: #glCopyConvolutionFilter2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyConvolutionFilter2DEXT' (GLenum GLenum GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyImageSubData: srcName with: srcTarget with: srcLevel with: srcX with: srcY with: srcZ with: dstName with: dstTarget with: dstLevel with: dstX with: dstY with: dstZ with: srcWidth with: srcHeight with: srcDepth [

	<command: #glCopyImageSubData>
	<return: 'void'>
	<arg: 'srcName' type: 'GLuint'>
	<arg: 'srcTarget' type: 'GLenum' group: #CopyImageSubDataTarget>
	<arg: 'srcLevel' type: 'GLint'>
	<arg: 'srcX' type: 'GLint'>
	<arg: 'srcY' type: 'GLint'>
	<arg: 'srcZ' type: 'GLint'>
	<arg: 'dstName' type: 'GLuint'>
	<arg: 'dstTarget' type: 'GLenum' group: #CopyImageSubDataTarget>
	<arg: 'dstLevel' type: 'GLint'>
	<arg: 'dstX' type: 'GLint'>
	<arg: 'dstY' type: 'GLint'>
	<arg: 'dstZ' type: 'GLint'>
	<arg: 'srcWidth' type: 'GLsizei'>
	<arg: 'srcHeight' type: 'GLsizei'>
	<arg: 'srcDepth' type: 'GLsizei'>

	<apicall: void 'glCopyImageSubData' (GLuint GLenum GLint GLint GLint GLint GLuint GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyImageSubDataEXT: srcName with: srcTarget with: srcLevel with: srcX with: srcY with: srcZ with: dstName with: dstTarget with: dstLevel with: dstX with: dstY with: dstZ with: srcWidth with: srcHeight with: srcDepth [

	<command: #glCopyImageSubDataEXT>
	<return: 'void'>
	<arg: 'srcName' type: 'GLuint'>
	<arg: 'srcTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'srcLevel' type: 'GLint'>
	<arg: 'srcX' type: 'GLint'>
	<arg: 'srcY' type: 'GLint'>
	<arg: 'srcZ' type: 'GLint'>
	<arg: 'dstName' type: 'GLuint'>
	<arg: 'dstTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'dstLevel' type: 'GLint'>
	<arg: 'dstX' type: 'GLint'>
	<arg: 'dstY' type: 'GLint'>
	<arg: 'dstZ' type: 'GLint'>
	<arg: 'srcWidth' type: 'GLsizei'>
	<arg: 'srcHeight' type: 'GLsizei'>
	<arg: 'srcDepth' type: 'GLsizei'>

	<apicall: void 'glCopyImageSubDataEXT' (GLuint GLenum GLint GLint GLint GLint GLuint GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyImageSubDataNV: srcName with: srcTarget with: srcLevel with: srcX with: srcY with: srcZ with: dstName with: dstTarget with: dstLevel with: dstX with: dstY with: dstZ with: width with: height with: depth [

	<command: #glCopyImageSubDataNV>
	<return: 'void'>
	<arg: 'srcName' type: 'GLuint'>
	<arg: 'srcTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'srcLevel' type: 'GLint'>
	<arg: 'srcX' type: 'GLint'>
	<arg: 'srcY' type: 'GLint'>
	<arg: 'srcZ' type: 'GLint'>
	<arg: 'dstName' type: 'GLuint'>
	<arg: 'dstTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'dstLevel' type: 'GLint'>
	<arg: 'dstX' type: 'GLint'>
	<arg: 'dstY' type: 'GLint'>
	<arg: 'dstZ' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>

	<apicall: void 'glCopyImageSubDataNV' (GLuint GLenum GLint GLint GLint GLint GLuint GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyImageSubDataOES: srcName with: srcTarget with: srcLevel with: srcX with: srcY with: srcZ with: dstName with: dstTarget with: dstLevel with: dstX with: dstY with: dstZ with: srcWidth with: srcHeight with: srcDepth [

	<command: #glCopyImageSubDataOES>
	<return: 'void'>
	<arg: 'srcName' type: 'GLuint'>
	<arg: 'srcTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'srcLevel' type: 'GLint'>
	<arg: 'srcX' type: 'GLint'>
	<arg: 'srcY' type: 'GLint'>
	<arg: 'srcZ' type: 'GLint'>
	<arg: 'dstName' type: 'GLuint'>
	<arg: 'dstTarget' type: 'GLenum' group: #CopyBufferSubDataTarget>
	<arg: 'dstLevel' type: 'GLint'>
	<arg: 'dstX' type: 'GLint'>
	<arg: 'dstY' type: 'GLint'>
	<arg: 'dstZ' type: 'GLint'>
	<arg: 'srcWidth' type: 'GLsizei'>
	<arg: 'srcHeight' type: 'GLsizei'>
	<arg: 'srcDepth' type: 'GLsizei'>

	<apicall: void 'glCopyImageSubDataOES' (GLuint GLenum GLint GLint GLint GLint GLuint GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyMultiTexImage1DEXT: texunit with: target with: level with: internalformat with: x with: y with: width with: border [

	<command: #glCopyMultiTexImage1DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glCopyMultiTexImage1DEXT' (GLenum GLenum GLint GLenum GLint GLint GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyMultiTexImage2DEXT: texunit with: target with: level with: internalformat with: x with: y with: width with: height with: border [

	<command: #glCopyMultiTexImage2DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glCopyMultiTexImage2DEXT' (GLenum GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyMultiTexSubImage1DEXT: texunit with: target with: level with: xoffset with: x with: y with: width [

	<command: #glCopyMultiTexSubImage1DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyMultiTexSubImage1DEXT' (GLenum GLenum GLint GLint GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyMultiTexSubImage2DEXT: texunit with: target with: level with: xoffset with: yoffset with: x with: y with: width with: height [

	<command: #glCopyMultiTexSubImage2DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyMultiTexSubImage2DEXT' (GLenum GLenum GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyMultiTexSubImage3DEXT: texunit with: target with: level with: xoffset with: yoffset with: zoffset with: x with: y with: width with: height [

	<command: #glCopyMultiTexSubImage3DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyMultiTexSubImage3DEXT' (GLenum GLenum GLint GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyNamedBufferSubData: readBuffer with: writeBuffer with: readOffset with: writeOffset with: size [

	<command: #glCopyNamedBufferSubData>
	<return: 'void'>
	<arg: 'readBuffer' type: 'GLuint'>
	<arg: 'writeBuffer' type: 'GLuint'>
	<arg: 'readOffset' type: 'GLintptr'>
	<arg: 'writeOffset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glCopyNamedBufferSubData' (GLuint GLuint GLintptr GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyPathNV: resultPath with: srcPath [

	<command: #glCopyPathNV>
	<return: 'void'>
	<arg: 'resultPath' type: 'GLuint' group: #Path>
	<arg: 'srcPath' type: 'GLuint' group: #Path>

	<apicall: void 'glCopyPathNV' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyPixels: x with: y with: width with: height with: type [

	<command: #glCopyPixels>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #PixelCopyType>

	<apicall: void 'glCopyPixels' (GLint GLint GLsizei GLsizei GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexImage1D: target with: level with: internalformat with: x with: y with: width with: border [

	<command: #glCopyTexImage1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glCopyTexImage1D' (GLenum GLint GLenum GLint GLint GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexImage1DEXT: target with: level with: internalformat with: x with: y with: width with: border [

	<command: #glCopyTexImage1DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glCopyTexImage1DEXT' (GLenum GLint GLenum GLint GLint GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexImage2D: target with: level with: internalformat with: x with: y with: width with: height with: border [

	<command: #glCopyTexImage2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glCopyTexImage2D' (GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexImage2DEXT: target with: level with: internalformat with: x with: y with: width with: height with: border [

	<command: #glCopyTexImage2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glCopyTexImage2DEXT' (GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexSubImage1D: target with: level with: xoffset with: x with: y with: width [

	<command: #glCopyTexSubImage1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyTexSubImage1D' (GLenum GLint GLint GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexSubImage1DEXT: target with: level with: xoffset with: x with: y with: width [

	<command: #glCopyTexSubImage1DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyTexSubImage1DEXT' (GLenum GLint GLint GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexSubImage2D: target with: level with: xoffset with: yoffset with: x with: y with: width with: height [

	<command: #glCopyTexSubImage2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTexSubImage2D' (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexSubImage2DEXT: target with: level with: xoffset with: yoffset with: x with: y with: width with: height [

	<command: #glCopyTexSubImage2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTexSubImage2DEXT' (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexSubImage3D: target with: level with: xoffset with: yoffset with: zoffset with: x with: y with: width with: height [

	<command: #glCopyTexSubImage3D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTexSubImage3D' (GLenum GLint GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexSubImage3DEXT: target with: level with: xoffset with: yoffset with: zoffset with: x with: y with: width with: height [

	<command: #glCopyTexSubImage3DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTexSubImage3DEXT' (GLenum GLint GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTexSubImage3DOES: target with: level with: xoffset with: yoffset with: zoffset with: x with: y with: width with: height [

	<command: #glCopyTexSubImage3DOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTexSubImage3DOES' (GLenum GLint GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureImage1DEXT: texture with: target with: level with: internalformat with: x with: y with: width with: border [

	<command: #glCopyTextureImage1DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glCopyTextureImage1DEXT' (GLuint GLenum GLint GLenum GLint GLint GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureImage2DEXT: texture with: target with: level with: internalformat with: x with: y with: width with: height with: border [

	<command: #glCopyTextureImage2DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glCopyTextureImage2DEXT' (GLuint GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureLevelsAPPLE: destinationTexture with: sourceTexture with: sourceBaseLevel with: sourceLevelCount [

	<command: #glCopyTextureLevelsAPPLE>
	<return: 'void'>
	<arg: 'destinationTexture' type: 'GLuint'>
	<arg: 'sourceTexture' type: 'GLuint'>
	<arg: 'sourceBaseLevel' type: 'GLint'>
	<arg: 'sourceLevelCount' type: 'GLsizei'>

	<apicall: void 'glCopyTextureLevelsAPPLE' (GLuint GLuint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureSubImage1D: texture with: level with: xoffset with: x with: y with: width [

	<command: #glCopyTextureSubImage1D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyTextureSubImage1D' (GLuint GLint GLint GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureSubImage1DEXT: texture with: target with: level with: xoffset with: x with: y with: width [

	<command: #glCopyTextureSubImage1DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glCopyTextureSubImage1DEXT' (GLuint GLenum GLint GLint GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureSubImage2D: texture with: level with: xoffset with: yoffset with: x with: y with: width with: height [

	<command: #glCopyTextureSubImage2D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTextureSubImage2D' (GLuint GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureSubImage2DEXT: texture with: target with: level with: xoffset with: yoffset with: x with: y with: width with: height [

	<command: #glCopyTextureSubImage2DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTextureSubImage2DEXT' (GLuint GLenum GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureSubImage3D: texture with: level with: xoffset with: yoffset with: zoffset with: x with: y with: width with: height [

	<command: #glCopyTextureSubImage3D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTextureSubImage3D' (GLuint GLint GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> copyTextureSubImage3DEXT: texture with: target with: level with: xoffset with: yoffset with: zoffset with: x with: y with: width with: height [

	<command: #glCopyTextureSubImage3DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glCopyTextureSubImage3DEXT' (GLuint GLenum GLint GLint GLint GLint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> coverFillPathInstancedNV: numPaths with: pathNameType with: paths with: pathBase with: coverMode with: transformType with: transformValues [

	<command: #glCoverFillPathInstancedNV>
	<return: 'void'>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'pathNameType' type: 'GLenum' group: #PathElementType>
	<arg: 'paths' type: 'void*' group: #PathElement size: 'COMPSIZE(numPaths,pathNameType,paths)'>
	<arg: 'pathBase' type: 'GLuint' group: #Path>
	<arg: 'coverMode' type: 'GLenum' group: #PathCoverMode>
	<arg: 'transformType' type: 'GLenum' group: #PathTransformType>
	<arg: 'transformValues' type: 'GLfloat*' size: 'COMPSIZE(numPaths,transformType)'>

	<apicall: void 'glCoverFillPathInstancedNV' (GLsizei GLenum void* GLuint GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> coverFillPathNV: path with: coverMode [

	<command: #glCoverFillPathNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'coverMode' type: 'GLenum' group: #PathCoverMode>

	<apicall: void 'glCoverFillPathNV' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> coverStrokePathInstancedNV: numPaths with: pathNameType with: paths with: pathBase with: coverMode with: transformType with: transformValues [

	<command: #glCoverStrokePathInstancedNV>
	<return: 'void'>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'pathNameType' type: 'GLenum' group: #PathElementType>
	<arg: 'paths' type: 'void*' group: #PathElement size: 'COMPSIZE(numPaths,pathNameType,paths)'>
	<arg: 'pathBase' type: 'GLuint' group: #Path>
	<arg: 'coverMode' type: 'GLenum' group: #PathCoverMode>
	<arg: 'transformType' type: 'GLenum' group: #PathTransformType>
	<arg: 'transformValues' type: 'GLfloat*' size: 'COMPSIZE(numPaths,transformType)'>

	<apicall: void 'glCoverStrokePathInstancedNV' (GLsizei GLenum void* GLuint GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> coverStrokePathNV: path with: coverMode [

	<command: #glCoverStrokePathNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'coverMode' type: 'GLenum' group: #PathCoverMode>

	<apicall: void 'glCoverStrokePathNV' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> coverageMaskNV: mask [

	<command: #glCoverageMaskNV>
	<return: 'void'>
	<arg: 'mask' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glCoverageMaskNV' (GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> coverageModulationNV: components [

	<command: #glCoverageModulationNV>
	<return: 'void'>
	<arg: 'components' type: 'GLenum'>

	<apicall: void 'glCoverageModulationNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> coverageModulationTableNV: n with: v [

	<command: #glCoverageModulationTableNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'n'>

	<apicall: void 'glCoverageModulationTableNV' (GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> coverageOperationNV: operation [

	<command: #glCoverageOperationNV>
	<return: 'void'>
	<arg: 'operation' type: 'GLenum'>

	<apicall: void 'glCoverageOperationNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createBuffers: n with: buffers [

	<command: #glCreateBuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateBuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createCommandListsNV: n with: lists [

	<command: #glCreateCommandListsNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'lists' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateCommandListsNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createFramebuffers: n with: framebuffers [

	<command: #glCreateFramebuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'framebuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateFramebuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createMemoryObjectsEXT: n with: memoryObjects [

	<command: #glCreateMemoryObjectsEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'memoryObjects' type: 'GLuint*'>

	<apicall: void 'glCreateMemoryObjectsEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createPerfQueryINTEL: queryId with: queryHandle [

	<command: #glCreatePerfQueryINTEL>
	<return: 'void'>
	<arg: 'queryId' type: 'GLuint'>
	<arg: 'queryHandle' type: 'GLuint*'>

	<apicall: void 'glCreatePerfQueryINTEL' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createProgram [

	<command: #glCreateProgram>
	<return: 'GLuint'>

	<apicall: GLuint 'glCreateProgram' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createProgramObjectARB [

	<command: #glCreateProgramObjectARB>
	<return: 'GLhandleARB'>

	<apicall: GLhandleARB 'glCreateProgramObjectARB' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createProgramPipelines: n with: pipelines [

	<command: #glCreateProgramPipelines>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'pipelines' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateProgramPipelines' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createProgressFenceNVX [

	<command: #glCreateProgressFenceNVX>
	<return: 'GLuint'>

	<apicall: GLuint 'glCreateProgressFenceNVX' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createQueries: target with: n with: ids [

	<command: #glCreateQueries>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateQueries' (GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createRenderbuffers: n with: renderbuffers [

	<command: #glCreateRenderbuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'renderbuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateRenderbuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createSamplers: n with: samplers [

	<command: #glCreateSamplers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'samplers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateSamplers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createSemaphoresNV: n with: semaphores [

	<command: #glCreateSemaphoresNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'semaphores' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateSemaphoresNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createShader: type [

	<command: #glCreateShader>
	<return: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #ShaderType>

	<apicall: GLuint 'glCreateShader' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createShaderObjectARB: shaderType [

	<command: #glCreateShaderObjectARB>
	<return: 'GLhandleARB'>
	<arg: 'shaderType' type: 'GLenum' group: #ShaderType>

	<apicall: GLhandleARB 'glCreateShaderObjectARB' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createShaderProgramEXT: type with: string [

	<command: #glCreateShaderProgramEXT>
	<return: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #ShaderType>
	<arg: 'string' type: 'GLchar*'>

	<apicall: GLuint 'glCreateShaderProgramEXT' (GLenum GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createShaderProgramv: type with: count with: strings [

	<command: #glCreateShaderProgramv>
	<return: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #ShaderType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'strings' type: 'GLchar**' size: 'count'>

	<apicall: GLuint 'glCreateShaderProgramv' (GLenum GLsizei GLchar**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createShaderProgramvEXT: type with: count with: strings [

	<command: #glCreateShaderProgramvEXT>
	<return: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #ShaderType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'strings' type: 'GLchar**' size: 'count'>

	<apicall: GLuint 'glCreateShaderProgramvEXT' (GLenum GLsizei GLchar**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createStatesNV: n with: states [

	<command: #glCreateStatesNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'states' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateStatesNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createSyncFromCLeventARB: context with: event with: flags [

	<command: #glCreateSyncFromCLeventARB>
	<return: 'GLsync'>
	<arg: 'context' type: 'struct_cl_context*' group: #'cl_context'>
	<arg: 'event' type: 'struct_cl_event*' group: #'cl_event'>
	<arg: 'flags' type: 'GLbitfield'>

	<apicall: GLsync 'glCreateSyncFromCLeventARB' (struct_cl_context* struct_cl_event* GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createTextures: target with: n with: textures [

	<command: #glCreateTextures>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateTextures' (GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createTransformFeedbacks: n with: ids [

	<command: #glCreateTransformFeedbacks>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateTransformFeedbacks' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> createVertexArrays: n with: arrays [

	<command: #glCreateVertexArrays>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'arrays' type: 'GLuint*' size: 'n'>

	<apicall: void 'glCreateVertexArrays' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> cullFace: mode [

	<command: #glCullFace>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #CullFaceMode>

	<apicall: void 'glCullFace' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> cullParameterdvEXT: pname with: params [

	<command: #glCullParameterdvEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #CullParameterEXT>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glCullParameterdvEXT' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> cullParameterfvEXT: pname with: params [

	<command: #glCullParameterfvEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #CullParameterEXT>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glCullParameterfvEXT' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> currentPaletteMatrixARB: index [

	<command: #glCurrentPaletteMatrixARB>
	<return: 'void'>
	<arg: 'index' type: 'GLint'>

	<apicall: void 'glCurrentPaletteMatrixARB' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> currentPaletteMatrixOES: matrixpaletteindex [

	<command: #glCurrentPaletteMatrixOES>
	<return: 'void'>
	<arg: 'matrixpaletteindex' type: 'GLuint'>

	<apicall: void 'glCurrentPaletteMatrixOES' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageCallback: callback with: userParam [

	<command: #glDebugMessageCallback>
	<return: 'void'>
	<arg: 'callback' type: 'GLDEBUGPROC'>
	<arg: 'userParam' type: 'void*'>

	<apicall: void 'glDebugMessageCallback' (GLDEBUGPROC void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageCallbackAMD: callback with: userParam [

	<command: #glDebugMessageCallbackAMD>
	<return: 'void'>
	<arg: 'callback' type: 'GLDEBUGPROCAMD'>
	<arg: 'userParam' type: 'void*'>

	<apicall: void 'glDebugMessageCallbackAMD' (GLDEBUGPROCAMD void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageCallbackARB: callback with: userParam [

	<command: #glDebugMessageCallbackARB>
	<return: 'void'>
	<arg: 'callback' type: 'GLDEBUGPROCARB'>
	<arg: 'userParam' type: 'void*' size: 'COMPSIZE(callback)'>

	<apicall: void 'glDebugMessageCallbackARB' (GLDEBUGPROCARB void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageCallbackKHR: callback with: userParam [

	<command: #glDebugMessageCallbackKHR>
	<return: 'void'>
	<arg: 'callback' type: 'GLDEBUGPROCKHR'>
	<arg: 'userParam' type: 'void*'>

	<apicall: void 'glDebugMessageCallbackKHR' (GLDEBUGPROCKHR void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageControl: source with: type with: severity with: count with: ids with: enabled [

	<command: #glDebugMessageControl>
	<return: 'void'>
	<arg: 'source' type: 'GLenum' group: #DebugSource>
	<arg: 'type' type: 'GLenum' group: #DebugType>
	<arg: 'severity' type: 'GLenum' group: #DebugSeverity>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'count'>
	<arg: 'enabled' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glDebugMessageControl' (GLenum GLenum GLenum GLsizei GLuint* GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageControlARB: source with: type with: severity with: count with: ids with: enabled [

	<command: #glDebugMessageControlARB>
	<return: 'void'>
	<arg: 'source' type: 'GLenum' group: #DebugSource>
	<arg: 'type' type: 'GLenum' group: #DebugType>
	<arg: 'severity' type: 'GLenum' group: #DebugSeverity>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'count'>
	<arg: 'enabled' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glDebugMessageControlARB' (GLenum GLenum GLenum GLsizei GLuint* GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageControlKHR: source with: type with: severity with: count with: ids with: enabled [

	<command: #glDebugMessageControlKHR>
	<return: 'void'>
	<arg: 'source' type: 'GLenum' group: #DebugSource>
	<arg: 'type' type: 'GLenum' group: #DebugType>
	<arg: 'severity' type: 'GLenum' group: #DebugSeverity>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*'>
	<arg: 'enabled' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glDebugMessageControlKHR' (GLenum GLenum GLenum GLsizei GLuint* GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageEnableAMD: category with: severity with: count with: ids with: enabled [

	<command: #glDebugMessageEnableAMD>
	<return: 'void'>
	<arg: 'category' type: 'GLenum'>
	<arg: 'severity' type: 'GLenum' group: #DebugSeverity>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'count'>
	<arg: 'enabled' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glDebugMessageEnableAMD' (GLenum GLenum GLsizei GLuint* GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageInsert: source with: type with: id with: severity with: length with: buf [

	<command: #glDebugMessageInsert>
	<return: 'void'>
	<arg: 'source' type: 'GLenum' group: #DebugSource>
	<arg: 'type' type: 'GLenum' group: #DebugType>
	<arg: 'id' type: 'GLuint'>
	<arg: 'severity' type: 'GLenum' group: #DebugSeverity>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'buf' type: 'GLchar*' size: 'COMPSIZE(buf,length)'>

	<apicall: void 'glDebugMessageInsert' (GLenum GLenum GLuint GLenum GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageInsertAMD: category with: severity with: id with: length with: buf [

	<command: #glDebugMessageInsertAMD>
	<return: 'void'>
	<arg: 'category' type: 'GLenum'>
	<arg: 'severity' type: 'GLenum' group: #DebugSeverity>
	<arg: 'id' type: 'GLuint'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'buf' type: 'GLchar*' size: 'length'>

	<apicall: void 'glDebugMessageInsertAMD' (GLenum GLenum GLuint GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageInsertARB: source with: type with: id with: severity with: length with: buf [

	<command: #glDebugMessageInsertARB>
	<return: 'void'>
	<arg: 'source' type: 'GLenum' group: #DebugSource>
	<arg: 'type' type: 'GLenum' group: #DebugType>
	<arg: 'id' type: 'GLuint'>
	<arg: 'severity' type: 'GLenum' group: #DebugSeverity>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'buf' type: 'GLchar*' size: 'length'>

	<apicall: void 'glDebugMessageInsertARB' (GLenum GLenum GLuint GLenum GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> debugMessageInsertKHR: source with: type with: id with: severity with: length with: buf [

	<command: #glDebugMessageInsertKHR>
	<return: 'void'>
	<arg: 'source' type: 'GLenum' group: #DebugSource>
	<arg: 'type' type: 'GLenum' group: #DebugType>
	<arg: 'id' type: 'GLuint'>
	<arg: 'severity' type: 'GLenum' group: #DebugSeverity>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'buf' type: 'GLchar*'>

	<apicall: void 'glDebugMessageInsertKHR' (GLenum GLenum GLuint GLenum GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deformSGIX: mask [

	<command: #glDeformSGIX>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield' group: #FfdMaskSGIX>

	<apicall: void 'glDeformSGIX' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deformationMap3dSGIX: target with: u1 with: u2 with: ustride with: uorder with: v1 with: v2 with: vstride with: vorder with: w1 with: w2 with: wstride with: worder with: points [

	<command: #glDeformationMap3dSGIX>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FfdTargetSGIX>
	<arg: 'u1' type: 'GLdouble' group: #CoordD>
	<arg: 'u2' type: 'GLdouble' group: #CoordD>
	<arg: 'ustride' type: 'GLint'>
	<arg: 'uorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'v1' type: 'GLdouble' group: #CoordD>
	<arg: 'v2' type: 'GLdouble' group: #CoordD>
	<arg: 'vstride' type: 'GLint'>
	<arg: 'vorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'w1' type: 'GLdouble' group: #CoordD>
	<arg: 'w2' type: 'GLdouble' group: #CoordD>
	<arg: 'wstride' type: 'GLint'>
	<arg: 'worder' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLdouble*' group: #CoordD size: 'COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)'>

	<apicall: void 'glDeformationMap3dSGIX' (GLenum GLdouble GLdouble GLint GLint GLdouble GLdouble GLint GLint GLdouble GLdouble GLint GLint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deformationMap3fSGIX: target with: u1 with: u2 with: ustride with: uorder with: v1 with: v2 with: vstride with: vorder with: w1 with: w2 with: wstride with: worder with: points [

	<command: #glDeformationMap3fSGIX>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FfdTargetSGIX>
	<arg: 'u1' type: 'GLfloat' group: #CoordF>
	<arg: 'u2' type: 'GLfloat' group: #CoordF>
	<arg: 'ustride' type: 'GLint'>
	<arg: 'uorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'v1' type: 'GLfloat' group: #CoordF>
	<arg: 'v2' type: 'GLfloat' group: #CoordF>
	<arg: 'vstride' type: 'GLint'>
	<arg: 'vorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'w1' type: 'GLfloat' group: #CoordF>
	<arg: 'w2' type: 'GLfloat' group: #CoordF>
	<arg: 'wstride' type: 'GLint'>
	<arg: 'worder' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLfloat*' group: #CoordF size: 'COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)'>

	<apicall: void 'glDeformationMap3fSGIX' (GLenum GLfloat GLfloat GLint GLint GLfloat GLfloat GLint GLint GLfloat GLfloat GLint GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteAsyncMarkersSGIX: marker with: range [

	<command: #glDeleteAsyncMarkersSGIX>
	<return: 'void'>
	<arg: 'marker' type: 'GLuint'>
	<arg: 'range' type: 'GLsizei'>

	<apicall: void 'glDeleteAsyncMarkersSGIX' (GLuint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteBuffers: n with: buffers [

	<command: #glDeleteBuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteBuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteBuffersARB: n with: buffers [

	<command: #glDeleteBuffersARB>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteBuffersARB' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteCommandListsNV: n with: lists [

	<command: #glDeleteCommandListsNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'lists' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteCommandListsNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteFencesAPPLE: n with: fences [

	<command: #glDeleteFencesAPPLE>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'fences' type: 'GLuint*' group: #FenceNV size: 'n'>

	<apicall: void 'glDeleteFencesAPPLE' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteFencesNV: n with: fences [

	<command: #glDeleteFencesNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'fences' type: 'GLuint*' group: #FenceNV size: 'n'>

	<apicall: void 'glDeleteFencesNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteFragmentShaderATI: id [

	<command: #glDeleteFragmentShaderATI>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glDeleteFragmentShaderATI' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteFramebuffers: n with: framebuffers [

	<command: #glDeleteFramebuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'framebuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteFramebuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteFramebuffersEXT: n with: framebuffers [

	<command: #glDeleteFramebuffersEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'framebuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteFramebuffersEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteFramebuffersOES: n with: framebuffers [

	<command: #glDeleteFramebuffersOES>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'framebuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteFramebuffersOES' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteLists: list with: range [

	<command: #glDeleteLists>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>
	<arg: 'range' type: 'GLsizei'>

	<apicall: void 'glDeleteLists' (GLuint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteMemoryObjectsEXT: n with: memoryObjects [

	<command: #glDeleteMemoryObjectsEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'memoryObjects' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteMemoryObjectsEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteNamedStringARB: namelen with: name [

	<command: #glDeleteNamedStringARB>
	<return: 'void'>
	<arg: 'namelen' type: 'GLint'>
	<arg: 'name' type: 'GLchar*' size: 'namelen'>

	<apicall: void 'glDeleteNamedStringARB' (GLint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteNamesAMD: identifier with: num with: names [

	<command: #glDeleteNamesAMD>
	<return: 'void'>
	<arg: 'identifier' type: 'GLenum'>
	<arg: 'num' type: 'GLuint'>
	<arg: 'names' type: 'GLuint*' size: 'num'>

	<apicall: void 'glDeleteNamesAMD' (GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteObjectARB: obj [

	<command: #glDeleteObjectARB>
	<return: 'void'>
	<arg: 'obj' type: 'GLhandleARB' group: #handleARB>

	<apicall: void 'glDeleteObjectARB' (GLhandleARB)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteOcclusionQueriesNV: n with: ids [

	<command: #glDeleteOcclusionQueriesNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteOcclusionQueriesNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deletePathsNV: path with: range [

	<command: #glDeletePathsNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'range' type: 'GLsizei'>

	<apicall: void 'glDeletePathsNV' (GLuint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deletePerfMonitorsAMD: n with: monitors [

	<command: #glDeletePerfMonitorsAMD>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'monitors' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeletePerfMonitorsAMD' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deletePerfQueryINTEL: queryHandle [

	<command: #glDeletePerfQueryINTEL>
	<return: 'void'>
	<arg: 'queryHandle' type: 'GLuint'>

	<apicall: void 'glDeletePerfQueryINTEL' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteProgram: program [

	<command: #glDeleteProgram>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glDeleteProgram' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteProgramPipelines: n with: pipelines [

	<command: #glDeleteProgramPipelines>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'pipelines' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteProgramPipelines' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteProgramPipelinesEXT: n with: pipelines [

	<command: #glDeleteProgramPipelinesEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'pipelines' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteProgramPipelinesEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteProgramsARB: n with: programs [

	<command: #glDeleteProgramsARB>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'programs' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteProgramsARB' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteProgramsNV: n with: programs [

	<command: #glDeleteProgramsNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'programs' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteProgramsNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteQueries: n with: ids [

	<command: #glDeleteQueries>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteQueries' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteQueriesARB: n with: ids [

	<command: #glDeleteQueriesARB>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteQueriesARB' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteQueriesEXT: n with: ids [

	<command: #glDeleteQueriesEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteQueriesEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteQueryResourceTagNV: n with: tagIds [

	<command: #glDeleteQueryResourceTagNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'tagIds' type: 'GLint*' size: 'n'>

	<apicall: void 'glDeleteQueryResourceTagNV' (GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteRenderbuffers: n with: renderbuffers [

	<command: #glDeleteRenderbuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'renderbuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteRenderbuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteRenderbuffersEXT: n with: renderbuffers [

	<command: #glDeleteRenderbuffersEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'renderbuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteRenderbuffersEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteRenderbuffersOES: n with: renderbuffers [

	<command: #glDeleteRenderbuffersOES>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'renderbuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteRenderbuffersOES' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteSamplers: count with: samplers [

	<command: #glDeleteSamplers>
	<return: 'void'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'samplers' type: 'GLuint*' size: 'count'>

	<apicall: void 'glDeleteSamplers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteSemaphoresEXT: n with: semaphores [

	<command: #glDeleteSemaphoresEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'semaphores' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteSemaphoresEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteShader: shader [

	<command: #glDeleteShader>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>

	<apicall: void 'glDeleteShader' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteStatesNV: n with: states [

	<command: #glDeleteStatesNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'states' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteStatesNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteSync: sync [

	<command: #glDeleteSync>
	<return: 'void'>
	<arg: 'sync' type: 'GLsync' group: #sync>

	<apicall: void 'glDeleteSync' (GLsync)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteSyncAPPLE: sync [

	<command: #glDeleteSyncAPPLE>
	<return: 'void'>
	<arg: 'sync' type: 'GLsync'>

	<apicall: void 'glDeleteSyncAPPLE' (GLsync)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteTextures: n with: textures [

	<command: #glDeleteTextures>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' group: #Texture size: 'n'>

	<apicall: void 'glDeleteTextures' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteTexturesEXT: n with: textures [

	<command: #glDeleteTexturesEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' group: #Texture size: 'n'>

	<apicall: void 'glDeleteTexturesEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteTransformFeedbacks: n with: ids [

	<command: #glDeleteTransformFeedbacks>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteTransformFeedbacks' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteTransformFeedbacksNV: n with: ids [

	<command: #glDeleteTransformFeedbacksNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteTransformFeedbacksNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteVertexArrays: n with: arrays [

	<command: #glDeleteVertexArrays>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'arrays' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteVertexArrays' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteVertexArraysAPPLE: n with: arrays [

	<command: #glDeleteVertexArraysAPPLE>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'arrays' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteVertexArraysAPPLE' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteVertexArraysOES: n with: arrays [

	<command: #glDeleteVertexArraysOES>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'arrays' type: 'GLuint*' size: 'n'>

	<apicall: void 'glDeleteVertexArraysOES' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> deleteVertexShaderEXT: id [

	<command: #glDeleteVertexShaderEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glDeleteVertexShaderEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthBoundsEXT: zmin with: zmax [

	<command: #glDepthBoundsEXT>
	<return: 'void'>
	<arg: 'zmin' type: 'GLclampd' group: #ClampedFloat64>
	<arg: 'zmax' type: 'GLclampd' group: #ClampedFloat64>

	<apicall: void 'glDepthBoundsEXT' (GLclampd GLclampd)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthBoundsdNV: zmin with: zmax [

	<command: #glDepthBoundsdNV>
	<return: 'void'>
	<arg: 'zmin' type: 'GLdouble'>
	<arg: 'zmax' type: 'GLdouble'>

	<apicall: void 'glDepthBoundsdNV' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthFunc: func [

	<command: #glDepthFunc>
	<return: 'void'>
	<arg: 'func' type: 'GLenum' group: #DepthFunction>

	<apicall: void 'glDepthFunc' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthMask: flag [

	<command: #glDepthMask>
	<return: 'void'>
	<arg: 'flag' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glDepthMask' (GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRange: n with: f [

	<command: #glDepthRange>
	<return: 'void'>
	<arg: 'n' type: 'GLdouble'>
	<arg: 'f' type: 'GLdouble'>

	<apicall: void 'glDepthRange' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangeArraydvNV: first with: count with: v [

	<command: #glDepthRangeArraydvNV>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*'>

	<apicall: void 'glDepthRangeArraydvNV' (GLuint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangeArrayfvNV: first with: count with: v [

	<command: #glDepthRangeArrayfvNV>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glDepthRangeArrayfvNV' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangeArrayfvOES: first with: count with: v [

	<command: #glDepthRangeArrayfvOES>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glDepthRangeArrayfvOES' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangeArrayv: first with: count with: v [

	<command: #glDepthRangeArrayv>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*' size: 'COMPSIZE(count)'>

	<apicall: void 'glDepthRangeArrayv' (GLuint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangeIndexed: index with: n with: f [

	<command: #glDepthRangeIndexed>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'n' type: 'GLdouble'>
	<arg: 'f' type: 'GLdouble'>

	<apicall: void 'glDepthRangeIndexed' (GLuint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangeIndexeddNV: index with: n with: f [

	<command: #glDepthRangeIndexeddNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'n' type: 'GLdouble'>
	<arg: 'f' type: 'GLdouble'>

	<apicall: void 'glDepthRangeIndexeddNV' (GLuint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangeIndexedfNV: index with: n with: f [

	<command: #glDepthRangeIndexedfNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'n' type: 'GLfloat'>
	<arg: 'f' type: 'GLfloat'>

	<apicall: void 'glDepthRangeIndexedfNV' (GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangeIndexedfOES: index with: n with: f [

	<command: #glDepthRangeIndexedfOES>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'n' type: 'GLfloat'>
	<arg: 'f' type: 'GLfloat'>

	<apicall: void 'glDepthRangeIndexedfOES' (GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangedNV: zNear with: zFar [

	<command: #glDepthRangedNV>
	<return: 'void'>
	<arg: 'zNear' type: 'GLdouble'>
	<arg: 'zFar' type: 'GLdouble'>

	<apicall: void 'glDepthRangedNV' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangef: n with: f [

	<command: #glDepthRangef>
	<return: 'void'>
	<arg: 'n' type: 'GLfloat'>
	<arg: 'f' type: 'GLfloat'>

	<apicall: void 'glDepthRangef' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangefOES: n with: f [

	<command: #glDepthRangefOES>
	<return: 'void'>
	<arg: 'n' type: 'GLclampf' group: #ClampedFloat32>
	<arg: 'f' type: 'GLclampf' group: #ClampedFloat32>

	<apicall: void 'glDepthRangefOES' (GLclampf GLclampf)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangex: n with: f [

	<command: #glDepthRangex>
	<return: 'void'>
	<arg: 'n' type: 'GLfixed'>
	<arg: 'f' type: 'GLfixed'>

	<apicall: void 'glDepthRangex' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> depthRangexOES: n with: f [

	<command: #glDepthRangexOES>
	<return: 'void'>
	<arg: 'n' type: 'GLfixed' group: #ClampedFixed>
	<arg: 'f' type: 'GLfixed' group: #ClampedFixed>

	<apicall: void 'glDepthRangexOES' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> detachObjectARB: containerObj with: attachedObj [

	<command: #glDetachObjectARB>
	<return: 'void'>
	<arg: 'containerObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'attachedObj' type: 'GLhandleARB' group: #handleARB>

	<apicall: void 'glDetachObjectARB' (GLhandleARB GLhandleARB)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> detachShader: program with: shader [

	<command: #glDetachShader>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shader' type: 'GLuint'>

	<apicall: void 'glDetachShader' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> detailTexFuncSGIS: target with: n with: points [

	<command: #glDetailTexFuncSGIS>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'points' type: 'GLfloat*' size: 'n*2'>

	<apicall: void 'glDetailTexFuncSGIS' (GLenum GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disable: cap [

	<command: #glDisable>
	<return: 'void'>
	<arg: 'cap' type: 'GLenum' group: #EnableCap>

	<apicall: void 'glDisable' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableClientState: array [

	<command: #glDisableClientState>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>

	<apicall: void 'glDisableClientState' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableClientStateIndexedEXT: array with: index [

	<command: #glDisableClientStateIndexedEXT>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableClientStateIndexedEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableClientStateiEXT: array with: index [

	<command: #glDisableClientStateiEXT>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableClientStateiEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableDriverControlQCOM: driverControl [

	<command: #glDisableDriverControlQCOM>
	<return: 'void'>
	<arg: 'driverControl' type: 'GLuint'>

	<apicall: void 'glDisableDriverControlQCOM' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableIndexedEXT: target with: index [

	<command: #glDisableIndexedEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableIndexedEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableVariantClientStateEXT: id [

	<command: #glDisableVariantClientStateEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glDisableVariantClientStateEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableVertexArrayAttrib: vaobj with: index [

	<command: #glDisableVertexArrayAttrib>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableVertexArrayAttrib' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableVertexArrayAttribEXT: vaobj with: index [

	<command: #glDisableVertexArrayAttribEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableVertexArrayAttribEXT' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableVertexArrayEXT: vaobj with: array [

	<command: #glDisableVertexArrayEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>

	<apicall: void 'glDisableVertexArrayEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableVertexAttribAPPLE: index with: pname [

	<command: #glDisableVertexAttribAPPLE>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>

	<apicall: void 'glDisableVertexAttribAPPLE' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableVertexAttribArray: index [

	<command: #glDisableVertexAttribArray>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableVertexAttribArray' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableVertexAttribArrayARB: index [

	<command: #glDisableVertexAttribArrayARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableVertexAttribArrayARB' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disablei: target with: index [

	<command: #glDisablei>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisablei' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableiEXT: target with: index [

	<command: #glDisableiEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableiEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableiNV: target with: index [

	<command: #glDisableiNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableiNV' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> disableiOES: target with: index [

	<command: #glDisableiOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glDisableiOES' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> discardFramebufferEXT: target with: numAttachments with: attachments [

	<command: #glDiscardFramebufferEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'numAttachments' type: 'GLsizei'>
	<arg: 'attachments' type: 'GLenum*' group: #InvalidateFramebufferAttachment size: 'numAttachments'>

	<apicall: void 'glDiscardFramebufferEXT' (GLenum GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> dispatchCompute: num_groups_x with: num_groups_y with: num_groups_z [

	<command: #glDispatchCompute>
	<return: 'void'>
	<arg: 'num_groups_x' type: 'GLuint'>
	<arg: 'num_groups_y' type: 'GLuint'>
	<arg: 'num_groups_z' type: 'GLuint'>

	<apicall: void 'glDispatchCompute' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> dispatchComputeGroupSizeARB: num_groups_x with: num_groups_y with: num_groups_z with: group_size_x with: group_size_y with: group_size_z [

	<command: #glDispatchComputeGroupSizeARB>
	<return: 'void'>
	<arg: 'num_groups_x' type: 'GLuint'>
	<arg: 'num_groups_y' type: 'GLuint'>
	<arg: 'num_groups_z' type: 'GLuint'>
	<arg: 'group_size_x' type: 'GLuint'>
	<arg: 'group_size_y' type: 'GLuint'>
	<arg: 'group_size_z' type: 'GLuint'>

	<apicall: void 'glDispatchComputeGroupSizeARB' (GLuint GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> dispatchComputeIndirect: indirect [

	<command: #glDispatchComputeIndirect>
	<return: 'void'>
	<arg: 'indirect' type: 'GLintptr' group: #BufferOffset>

	<apicall: void 'glDispatchComputeIndirect' (GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArrays: mode with: first with: count [

	<command: #glDrawArrays>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>

	<apicall: void 'glDrawArrays' (GLenum GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysEXT: mode with: first with: count [

	<command: #glDrawArraysEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>

	<apicall: void 'glDrawArraysEXT' (GLenum GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysIndirect: mode with: indirect [

	<command: #glDrawArraysIndirect>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indirect' type: 'void*'>

	<apicall: void 'glDrawArraysIndirect' (GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysInstanced: mode with: first with: count with: instancecount [

	<command: #glDrawArraysInstanced>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'instancecount' type: 'GLsizei'>

	<apicall: void 'glDrawArraysInstanced' (GLenum GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysInstancedANGLE: mode with: first with: count with: primcount [

	<command: #glDrawArraysInstancedANGLE>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glDrawArraysInstancedANGLE' (GLenum GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysInstancedARB: mode with: first with: count with: primcount [

	<command: #glDrawArraysInstancedARB>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glDrawArraysInstancedARB' (GLenum GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysInstancedBaseInstance: mode with: first with: count with: instancecount with: baseinstance [

	<command: #glDrawArraysInstancedBaseInstance>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'baseinstance' type: 'GLuint'>

	<apicall: void 'glDrawArraysInstancedBaseInstance' (GLenum GLint GLsizei GLsizei GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysInstancedBaseInstanceEXT: mode with: first with: count with: instancecount with: baseinstance [

	<command: #glDrawArraysInstancedBaseInstanceEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'baseinstance' type: 'GLuint'>

	<apicall: void 'glDrawArraysInstancedBaseInstanceEXT' (GLenum GLint GLsizei GLsizei GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysInstancedEXT: mode with: start with: count with: primcount [

	<command: #glDrawArraysInstancedEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glDrawArraysInstancedEXT' (GLenum GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawArraysInstancedNV: mode with: first with: count with: primcount [

	<command: #glDrawArraysInstancedNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glDrawArraysInstancedNV' (GLenum GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawBuffer: buf [

	<command: #glDrawBuffer>
	<return: 'void'>
	<arg: 'buf' type: 'GLenum' group: #DrawBufferMode>

	<apicall: void 'glDrawBuffer' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawBuffers: n with: bufs [

	<command: #glDrawBuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'bufs' type: 'GLenum*' group: #DrawBufferMode size: 'n'>

	<apicall: void 'glDrawBuffers' (GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawBuffersARB: n with: bufs [

	<command: #glDrawBuffersARB>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'bufs' type: 'GLenum*' group: #DrawBufferMode size: 'n'>

	<apicall: void 'glDrawBuffersARB' (GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawBuffersATI: n with: bufs [

	<command: #glDrawBuffersATI>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'bufs' type: 'GLenum*' group: #DrawBufferMode size: 'n'>

	<apicall: void 'glDrawBuffersATI' (GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawBuffersEXT: n with: bufs [

	<command: #glDrawBuffersEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'bufs' type: 'GLenum*' size: 'n'>

	<apicall: void 'glDrawBuffersEXT' (GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawBuffersIndexedEXT: n with: location with: indices [

	<command: #glDrawBuffersIndexedEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLint'>
	<arg: 'location' type: 'GLenum*' size: 'n'>
	<arg: 'indices' type: 'GLint*' size: 'n'>

	<apicall: void 'glDrawBuffersIndexedEXT' (GLint GLenum* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawBuffersNV: n with: bufs [

	<command: #glDrawBuffersNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'bufs' type: 'GLenum*' size: 'n'>

	<apicall: void 'glDrawBuffersNV' (GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawCommandsAddressNV: primitiveMode with: indirects with: sizes with: count [

	<command: #glDrawCommandsAddressNV>
	<return: 'void'>
	<arg: 'primitiveMode' type: 'GLenum'>
	<arg: 'indirects' type: 'GLuint64*'>
	<arg: 'sizes' type: 'GLsizei*'>
	<arg: 'count' type: 'GLuint'>

	<apicall: void 'glDrawCommandsAddressNV' (GLenum GLuint64* GLsizei* GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawCommandsNV: primitiveMode with: buffer with: indirects with: sizes with: count [

	<command: #glDrawCommandsNV>
	<return: 'void'>
	<arg: 'primitiveMode' type: 'GLenum'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'indirects' type: 'GLintptr*'>
	<arg: 'sizes' type: 'GLsizei*'>
	<arg: 'count' type: 'GLuint'>

	<apicall: void 'glDrawCommandsNV' (GLenum GLuint GLintptr* GLsizei* GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawCommandsStatesAddressNV: indirects with: sizes with: states with: fbos with: count [

	<command: #glDrawCommandsStatesAddressNV>
	<return: 'void'>
	<arg: 'indirects' type: 'GLuint64*'>
	<arg: 'sizes' type: 'GLsizei*'>
	<arg: 'states' type: 'GLuint*'>
	<arg: 'fbos' type: 'GLuint*'>
	<arg: 'count' type: 'GLuint'>

	<apicall: void 'glDrawCommandsStatesAddressNV' (GLuint64* GLsizei* GLuint* GLuint* GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawCommandsStatesNV: buffer with: indirects with: sizes with: states with: fbos with: count [

	<command: #glDrawCommandsStatesNV>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'indirects' type: 'GLintptr*'>
	<arg: 'sizes' type: 'GLsizei*'>
	<arg: 'states' type: 'GLuint*'>
	<arg: 'fbos' type: 'GLuint*'>
	<arg: 'count' type: 'GLuint'>

	<apicall: void 'glDrawCommandsStatesNV' (GLuint GLintptr* GLsizei* GLuint* GLuint* GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementArrayAPPLE: mode with: first with: count [

	<command: #glDrawElementArrayAPPLE>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>

	<apicall: void 'glDrawElementArrayAPPLE' (GLenum GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementArrayATI: mode with: count [

	<command: #glDrawElementArrayATI>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>

	<apicall: void 'glDrawElementArrayATI' (GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElements: mode with: count with: type with: indices [

	<command: #glDrawElements>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>

	<apicall: void 'glDrawElements' (GLenum GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsBaseVertex: mode with: count with: type with: indices with: basevertex [

	<command: #glDrawElementsBaseVertex>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawElementsBaseVertex' (GLenum GLsizei GLenum void* GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsBaseVertexEXT: mode with: count with: type with: indices with: basevertex [

	<command: #glDrawElementsBaseVertexEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawElementsBaseVertexEXT' (GLenum GLsizei GLenum void* GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsBaseVertexOES: mode with: count with: type with: indices with: basevertex [

	<command: #glDrawElementsBaseVertexOES>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawElementsBaseVertexOES' (GLenum GLsizei GLenum void* GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsIndirect: mode with: type with: indirect [

	<command: #glDrawElementsIndirect>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indirect' type: 'void*'>

	<apicall: void 'glDrawElementsIndirect' (GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstanced: mode with: count with: type with: indices with: instancecount [

	<command: #glDrawElementsInstanced>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'instancecount' type: 'GLsizei'>

	<apicall: void 'glDrawElementsInstanced' (GLenum GLsizei GLenum void* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedANGLE: mode with: count with: type with: indices with: primcount [

	<command: #glDrawElementsInstancedANGLE>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glDrawElementsInstancedANGLE' (GLenum GLsizei GLenum void* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedARB: mode with: count with: type with: indices with: primcount [

	<command: #glDrawElementsInstancedARB>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glDrawElementsInstancedARB' (GLenum GLsizei GLenum void* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedBaseInstance: mode with: count with: type with: indices with: instancecount with: baseinstance [

	<command: #glDrawElementsInstancedBaseInstance>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indices' type: 'void*' size: 'count'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'baseinstance' type: 'GLuint'>

	<apicall: void 'glDrawElementsInstancedBaseInstance' (GLenum GLsizei GLenum void* GLsizei GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedBaseInstanceEXT: mode with: count with: type with: indices with: instancecount with: baseinstance [

	<command: #glDrawElementsInstancedBaseInstanceEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indices' type: 'void*' size: 'count'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'baseinstance' type: 'GLuint'>

	<apicall: void 'glDrawElementsInstancedBaseInstanceEXT' (GLenum GLsizei GLenum void* GLsizei GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedBaseVertex: mode with: count with: type with: indices with: instancecount with: basevertex [

	<command: #glDrawElementsInstancedBaseVertex>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawElementsInstancedBaseVertex' (GLenum GLsizei GLenum void* GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedBaseVertexBaseInstance: mode with: count with: type with: indices with: instancecount with: basevertex with: baseinstance [

	<command: #glDrawElementsInstancedBaseVertexBaseInstance>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'count'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'basevertex' type: 'GLint'>
	<arg: 'baseinstance' type: 'GLuint'>

	<apicall: void 'glDrawElementsInstancedBaseVertexBaseInstance' (GLenum GLsizei GLenum void* GLsizei GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedBaseVertexBaseInstanceEXT: mode with: count with: type with: indices with: instancecount with: basevertex with: baseinstance [

	<command: #glDrawElementsInstancedBaseVertexBaseInstanceEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'count'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'basevertex' type: 'GLint'>
	<arg: 'baseinstance' type: 'GLuint'>

	<apicall: void 'glDrawElementsInstancedBaseVertexBaseInstanceEXT' (GLenum GLsizei GLenum void* GLsizei GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedBaseVertexEXT: mode with: count with: type with: indices with: instancecount with: basevertex [

	<command: #glDrawElementsInstancedBaseVertexEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawElementsInstancedBaseVertexEXT' (GLenum GLsizei GLenum void* GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedBaseVertexOES: mode with: count with: type with: indices with: instancecount with: basevertex [

	<command: #glDrawElementsInstancedBaseVertexOES>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'instancecount' type: 'GLsizei'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawElementsInstancedBaseVertexOES' (GLenum GLsizei GLenum void* GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedEXT: mode with: count with: type with: indices with: primcount [

	<command: #glDrawElementsInstancedEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glDrawElementsInstancedEXT' (GLenum GLsizei GLenum void* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawElementsInstancedNV: mode with: count with: type with: indices with: primcount [

	<command: #glDrawElementsInstancedNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glDrawElementsInstancedNV' (GLenum GLsizei GLenum void* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawMeshArraysSUN: mode with: first with: count with: width [

	<command: #glDrawMeshArraysSUN>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glDrawMeshArraysSUN' (GLenum GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawMeshTasksIndirectNV: indirect [

	<command: #glDrawMeshTasksIndirectNV>
	<return: 'void'>
	<arg: 'indirect' type: 'GLintptr'>

	<apicall: void 'glDrawMeshTasksIndirectNV' (GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawMeshTasksNV: first with: count [

	<command: #glDrawMeshTasksNV>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLuint'>

	<apicall: void 'glDrawMeshTasksNV' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawPixels: width with: height with: format with: type with: pixels [

	<command: #glDrawPixels>
	<return: 'void'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glDrawPixels' (GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawRangeElementArrayAPPLE: mode with: start with: end with: first with: count [

	<command: #glDrawRangeElementArrayAPPLE>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLuint'>
	<arg: 'end' type: 'GLuint'>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>

	<apicall: void 'glDrawRangeElementArrayAPPLE' (GLenum GLuint GLuint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawRangeElementArrayATI: mode with: start with: end with: count [

	<command: #glDrawRangeElementArrayATI>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLuint'>
	<arg: 'end' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>

	<apicall: void 'glDrawRangeElementArrayATI' (GLenum GLuint GLuint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawRangeElements: mode with: start with: end with: count with: type with: indices [

	<command: #glDrawRangeElements>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLuint'>
	<arg: 'end' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>

	<apicall: void 'glDrawRangeElements' (GLenum GLuint GLuint GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawRangeElementsBaseVertex: mode with: start with: end with: count with: type with: indices with: basevertex [

	<command: #glDrawRangeElementsBaseVertex>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLuint'>
	<arg: 'end' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawRangeElementsBaseVertex' (GLenum GLuint GLuint GLsizei GLenum void* GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawRangeElementsBaseVertexEXT: mode with: start with: end with: count with: type with: indices with: basevertex [

	<command: #glDrawRangeElementsBaseVertexEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLuint'>
	<arg: 'end' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawRangeElementsBaseVertexEXT' (GLenum GLuint GLuint GLsizei GLenum void* GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawRangeElementsBaseVertexOES: mode with: start with: end with: count with: type with: indices with: basevertex [

	<command: #glDrawRangeElementsBaseVertexOES>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLuint'>
	<arg: 'end' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>
	<arg: 'basevertex' type: 'GLint'>

	<apicall: void 'glDrawRangeElementsBaseVertexOES' (GLenum GLuint GLuint GLsizei GLenum void* GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawRangeElementsEXT: mode with: start with: end with: count with: type with: indices [

	<command: #glDrawRangeElementsEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLuint'>
	<arg: 'end' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void*' size: 'COMPSIZE(count,type)'>

	<apicall: void 'glDrawRangeElementsEXT' (GLenum GLuint GLuint GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTexfOES: x with: y with: z with: width with: height [

	<command: #glDrawTexfOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'width' type: 'GLfloat'>
	<arg: 'height' type: 'GLfloat'>

	<apicall: void 'glDrawTexfOES' (GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTexfvOES: coords [

	<command: #glDrawTexfvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfloat*' size: '5'>

	<apicall: void 'glDrawTexfvOES' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTexiOES: x with: y with: z with: width with: height [

	<command: #glDrawTexiOES>
	<return: 'void'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>
	<arg: 'width' type: 'GLint'>
	<arg: 'height' type: 'GLint'>

	<apicall: void 'glDrawTexiOES' (GLint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTexivOES: coords [

	<command: #glDrawTexivOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLint*' size: '5'>

	<apicall: void 'glDrawTexivOES' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTexsOES: x with: y with: z with: width with: height [

	<command: #glDrawTexsOES>
	<return: 'void'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>
	<arg: 'width' type: 'GLshort'>
	<arg: 'height' type: 'GLshort'>

	<apicall: void 'glDrawTexsOES' (GLshort GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTexsvOES: coords [

	<command: #glDrawTexsvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLshort*' size: '5'>

	<apicall: void 'glDrawTexsvOES' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTextureNV: texture with: sampler with: x0 with: y0 with: x1 with: y1 with: z with: s0 with: t0 with: s1 with: t1 [

	<command: #glDrawTextureNV>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'x0' type: 'GLfloat'>
	<arg: 'y0' type: 'GLfloat'>
	<arg: 'x1' type: 'GLfloat'>
	<arg: 'y1' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 's0' type: 'GLfloat'>
	<arg: 't0' type: 'GLfloat'>
	<arg: 's1' type: 'GLfloat'>
	<arg: 't1' type: 'GLfloat'>

	<apicall: void 'glDrawTextureNV' (GLuint GLuint GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTexxOES: x with: y with: z with: width with: height [

	<command: #glDrawTexxOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>
	<arg: 'width' type: 'GLfixed'>
	<arg: 'height' type: 'GLfixed'>

	<apicall: void 'glDrawTexxOES' (GLfixed GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTexxvOES: coords [

	<command: #glDrawTexxvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '5'>

	<apicall: void 'glDrawTexxvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTransformFeedback: mode with: id [

	<command: #glDrawTransformFeedback>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glDrawTransformFeedback' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTransformFeedbackEXT: mode with: id [

	<command: #glDrawTransformFeedbackEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glDrawTransformFeedbackEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTransformFeedbackInstanced: mode with: id with: instancecount [

	<command: #glDrawTransformFeedbackInstanced>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'id' type: 'GLuint'>
	<arg: 'instancecount' type: 'GLsizei'>

	<apicall: void 'glDrawTransformFeedbackInstanced' (GLenum GLuint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTransformFeedbackInstancedEXT: mode with: id with: instancecount [

	<command: #glDrawTransformFeedbackInstancedEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'id' type: 'GLuint'>
	<arg: 'instancecount' type: 'GLsizei'>

	<apicall: void 'glDrawTransformFeedbackInstancedEXT' (GLenum GLuint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTransformFeedbackNV: mode with: id [

	<command: #glDrawTransformFeedbackNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glDrawTransformFeedbackNV' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTransformFeedbackStream: mode with: id with: stream [

	<command: #glDrawTransformFeedbackStream>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'id' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>

	<apicall: void 'glDrawTransformFeedbackStream' (GLenum GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawTransformFeedbackStreamInstanced: mode with: id with: stream with: instancecount [

	<command: #glDrawTransformFeedbackStreamInstanced>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'id' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'instancecount' type: 'GLsizei'>

	<apicall: void 'glDrawTransformFeedbackStreamInstanced' (GLenum GLuint GLuint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> drawVkImageNV: vkImage with: sampler with: x0 with: y0 with: x1 with: y1 with: z with: s0 with: t0 with: s1 with: t1 [

	<command: #glDrawVkImageNV>
	<return: 'void'>
	<arg: 'vkImage' type: 'GLuint64'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'x0' type: 'GLfloat'>
	<arg: 'y0' type: 'GLfloat'>
	<arg: 'x1' type: 'GLfloat'>
	<arg: 'y1' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 's0' type: 'GLfloat'>
	<arg: 't0' type: 'GLfloat'>
	<arg: 's1' type: 'GLfloat'>
	<arg: 't1' type: 'GLfloat'>

	<apicall: void 'glDrawVkImageNV' (GLuint64 GLuint GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> edgeFlag: flag [

	<command: #glEdgeFlag>
	<return: 'void'>
	<arg: 'flag' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glEdgeFlag' (GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> edgeFlagFormatNV: stride [

	<command: #glEdgeFlagFormatNV>
	<return: 'void'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glEdgeFlagFormatNV' (GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> edgeFlagPointer: stride with: pointer [

	<command: #glEdgeFlagPointer>
	<return: 'void'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(stride)'>

	<apicall: void 'glEdgeFlagPointer' (GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> edgeFlagPointerEXT: stride with: count with: pointer [

	<command: #glEdgeFlagPointerEXT>
	<return: 'void'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'pointer' type: 'GLboolean*' group: #Boolean size: 'COMPSIZE(stride,count)'>

	<apicall: void 'glEdgeFlagPointerEXT' (GLsizei GLsizei GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> edgeFlagPointerListIBM: stride with: pointer with: ptrstride [

	<command: #glEdgeFlagPointerListIBM>
	<return: 'void'>
	<arg: 'stride' type: 'GLint'>
	<arg: 'pointer' type: 'GLboolean**' group: #BooleanPointer size: 'COMPSIZE(stride)'>
	<arg: 'ptrstride' type: 'GLint'>

	<apicall: void 'glEdgeFlagPointerListIBM' (GLint GLboolean** GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> edgeFlagv: flag [

	<command: #glEdgeFlagv>
	<return: 'void'>
	<arg: 'flag' type: 'GLboolean*' group: #Boolean size: '1'>

	<apicall: void 'glEdgeFlagv' (GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> eglImageTargetRenderbufferStorageOES: target with: image [

	<command: #glEGLImageTargetRenderbufferStorageOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'image' type: 'GLeglImageOES'>

	<apicall: void 'glEGLImageTargetRenderbufferStorageOES' (GLenum GLeglImageOES)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> eglImageTargetTexStorageEXT: target with: image with: attrib_list [

	<command: #glEGLImageTargetTexStorageEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'image' type: 'GLeglImageOES'>
	<arg: 'attrib_list' type: 'GLint*'>

	<apicall: void 'glEGLImageTargetTexStorageEXT' (GLenum GLeglImageOES GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> eglImageTargetTexture2DOES: target with: image [

	<command: #glEGLImageTargetTexture2DOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'image' type: 'GLeglImageOES'>

	<apicall: void 'glEGLImageTargetTexture2DOES' (GLenum GLeglImageOES)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> eglImageTargetTextureStorageEXT: texture with: image with: attrib_list [

	<command: #glEGLImageTargetTextureStorageEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'image' type: 'GLeglImageOES'>
	<arg: 'attrib_list' type: 'GLint*'>

	<apicall: void 'glEGLImageTargetTextureStorageEXT' (GLuint GLeglImageOES GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> elementPointerAPPLE: type with: pointer [

	<command: #glElementPointerAPPLE>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ElementPointerTypeATI>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type)'>

	<apicall: void 'glElementPointerAPPLE' (GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> elementPointerATI: type with: pointer [

	<command: #glElementPointerATI>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ElementPointerTypeATI>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type)'>

	<apicall: void 'glElementPointerATI' (GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enable: cap [

	<command: #glEnable>
	<return: 'void'>
	<arg: 'cap' type: 'GLenum' group: #EnableCap>

	<apicall: void 'glEnable' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableClientState: array [

	<command: #glEnableClientState>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>

	<apicall: void 'glEnableClientState' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableClientStateIndexedEXT: array with: index [

	<command: #glEnableClientStateIndexedEXT>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableClientStateIndexedEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableClientStateiEXT: array with: index [

	<command: #glEnableClientStateiEXT>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableClientStateiEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableDriverControlQCOM: driverControl [

	<command: #glEnableDriverControlQCOM>
	<return: 'void'>
	<arg: 'driverControl' type: 'GLuint'>

	<apicall: void 'glEnableDriverControlQCOM' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableIndexedEXT: target with: index [

	<command: #glEnableIndexedEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableIndexedEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableVariantClientStateEXT: id [

	<command: #glEnableVariantClientStateEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>

	<apicall: void 'glEnableVariantClientStateEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableVertexArrayAttrib: vaobj with: index [

	<command: #glEnableVertexArrayAttrib>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableVertexArrayAttrib' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableVertexArrayAttribEXT: vaobj with: index [

	<command: #glEnableVertexArrayAttribEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableVertexArrayAttribEXT' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableVertexArrayEXT: vaobj with: array [

	<command: #glEnableVertexArrayEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>

	<apicall: void 'glEnableVertexArrayEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableVertexAttribAPPLE: index with: pname [

	<command: #glEnableVertexAttribAPPLE>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>

	<apicall: void 'glEnableVertexAttribAPPLE' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableVertexAttribArray: index [

	<command: #glEnableVertexAttribArray>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableVertexAttribArray' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableVertexAttribArrayARB: index [

	<command: #glEnableVertexAttribArrayARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableVertexAttribArrayARB' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enablei: target with: index [

	<command: #glEnablei>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnablei' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableiEXT: target with: index [

	<command: #glEnableiEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableiEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableiNV: target with: index [

	<command: #glEnableiNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableiNV' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> enableiOES: target with: index [

	<command: #glEnableiOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEnableiOES' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> end [

	<command: #glEnd>
	<return: 'void'>

	<apicall: void 'glEnd' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endConditionalRender [

	<command: #glEndConditionalRender>
	<return: 'void'>

	<apicall: void 'glEndConditionalRender' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endConditionalRenderNV [

	<command: #glEndConditionalRenderNV>
	<return: 'void'>

	<apicall: void 'glEndConditionalRenderNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endConditionalRenderNVX [

	<command: #glEndConditionalRenderNVX>
	<return: 'void'>

	<apicall: void 'glEndConditionalRenderNVX' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endFragmentShaderATI [

	<command: #glEndFragmentShaderATI>
	<return: 'void'>

	<apicall: void 'glEndFragmentShaderATI' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endList [

	<command: #glEndList>
	<return: 'void'>

	<apicall: void 'glEndList' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endOcclusionQueryNV [

	<command: #glEndOcclusionQueryNV>
	<return: 'void'>

	<apicall: void 'glEndOcclusionQueryNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endPerfMonitorAMD: monitor [

	<command: #glEndPerfMonitorAMD>
	<return: 'void'>
	<arg: 'monitor' type: 'GLuint'>

	<apicall: void 'glEndPerfMonitorAMD' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endPerfQueryINTEL: queryHandle [

	<command: #glEndPerfQueryINTEL>
	<return: 'void'>
	<arg: 'queryHandle' type: 'GLuint'>

	<apicall: void 'glEndPerfQueryINTEL' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endQuery: target [

	<command: #glEndQuery>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>

	<apicall: void 'glEndQuery' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endQueryARB: target [

	<command: #glEndQueryARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>

	<apicall: void 'glEndQueryARB' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endQueryEXT: target [

	<command: #glEndQueryEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>

	<apicall: void 'glEndQueryEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endQueryIndexed: target with: index [

	<command: #glEndQueryIndexed>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glEndQueryIndexed' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endTilingQCOM: preserveMask [

	<command: #glEndTilingQCOM>
	<return: 'void'>
	<arg: 'preserveMask' type: 'GLbitfield' group: #BufferBitQCOM>

	<apicall: void 'glEndTilingQCOM' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endTransformFeedback [

	<command: #glEndTransformFeedback>
	<return: 'void'>

	<apicall: void 'glEndTransformFeedback' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endTransformFeedbackEXT [

	<command: #glEndTransformFeedbackEXT>
	<return: 'void'>

	<apicall: void 'glEndTransformFeedbackEXT' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endTransformFeedbackNV [

	<command: #glEndTransformFeedbackNV>
	<return: 'void'>

	<apicall: void 'glEndTransformFeedbackNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endVertexShaderEXT [

	<command: #glEndVertexShaderEXT>
	<return: 'void'>

	<apicall: void 'glEndVertexShaderEXT' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> endVideoCaptureNV: video_capture_slot [

	<command: #glEndVideoCaptureNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>

	<apicall: void 'glEndVideoCaptureNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord1d: u [

	<command: #glEvalCoord1d>
	<return: 'void'>
	<arg: 'u' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glEvalCoord1d' (GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord1dv: u [

	<command: #glEvalCoord1dv>
	<return: 'void'>
	<arg: 'u' type: 'GLdouble*' group: #CoordD size: '1'>

	<apicall: void 'glEvalCoord1dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord1f: u [

	<command: #glEvalCoord1f>
	<return: 'void'>
	<arg: 'u' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glEvalCoord1f' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord1fv: u [

	<command: #glEvalCoord1fv>
	<return: 'void'>
	<arg: 'u' type: 'GLfloat*' group: #CoordF size: '1'>

	<apicall: void 'glEvalCoord1fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord1xOES: u [

	<command: #glEvalCoord1xOES>
	<return: 'void'>
	<arg: 'u' type: 'GLfixed'>

	<apicall: void 'glEvalCoord1xOES' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord1xvOES: coords [

	<command: #glEvalCoord1xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '1'>

	<apicall: void 'glEvalCoord1xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord2d: u with: v [

	<command: #glEvalCoord2d>
	<return: 'void'>
	<arg: 'u' type: 'GLdouble' group: #CoordD>
	<arg: 'v' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glEvalCoord2d' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord2dv: u [

	<command: #glEvalCoord2dv>
	<return: 'void'>
	<arg: 'u' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glEvalCoord2dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord2f: u with: v [

	<command: #glEvalCoord2f>
	<return: 'void'>
	<arg: 'u' type: 'GLfloat' group: #CoordF>
	<arg: 'v' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glEvalCoord2f' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord2fv: u [

	<command: #glEvalCoord2fv>
	<return: 'void'>
	<arg: 'u' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glEvalCoord2fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord2xOES: u with: v [

	<command: #glEvalCoord2xOES>
	<return: 'void'>
	<arg: 'u' type: 'GLfixed'>
	<arg: 'v' type: 'GLfixed'>

	<apicall: void 'glEvalCoord2xOES' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalCoord2xvOES: coords [

	<command: #glEvalCoord2xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '2'>

	<apicall: void 'glEvalCoord2xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalMapsNV: target with: mode [

	<command: #glEvalMapsNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'mode' type: 'GLenum' group: #EvalMapsModeNV>

	<apicall: void 'glEvalMapsNV' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalMesh1: mode with: i1 with: i2 [

	<command: #glEvalMesh1>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MeshMode1>
	<arg: 'i1' type: 'GLint' group: #CheckedInt32>
	<arg: 'i2' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glEvalMesh1' (GLenum GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalMesh2: mode with: i1 with: i2 with: j1 with: j2 [

	<command: #glEvalMesh2>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MeshMode2>
	<arg: 'i1' type: 'GLint' group: #CheckedInt32>
	<arg: 'i2' type: 'GLint' group: #CheckedInt32>
	<arg: 'j1' type: 'GLint' group: #CheckedInt32>
	<arg: 'j2' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glEvalMesh2' (GLenum GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalPoint1: i [

	<command: #glEvalPoint1>
	<return: 'void'>
	<arg: 'i' type: 'GLint'>

	<apicall: void 'glEvalPoint1' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evalPoint2: i with: j [

	<command: #glEvalPoint2>
	<return: 'void'>
	<arg: 'i' type: 'GLint' group: #CheckedInt32>
	<arg: 'j' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glEvalPoint2' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> evaluateDepthValuesARB [

	<command: #glEvaluateDepthValuesARB>
	<return: 'void'>

	<apicall: void 'glEvaluateDepthValuesARB' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> executeProgramNV: target with: id with: params [

	<command: #glExecuteProgramNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'id' type: 'GLuint'>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glExecuteProgramNV' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetBufferPointervQCOM: target with: params [

	<command: #glExtGetBufferPointervQCOM>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glExtGetBufferPointervQCOM' (GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetBuffersQCOM: buffers with: maxBuffers with: numBuffers [

	<command: #glExtGetBuffersQCOM>
	<return: 'void'>
	<arg: 'buffers' type: 'GLuint*' size: 'maxBuffers'>
	<arg: 'maxBuffers' type: 'GLint'>
	<arg: 'numBuffers' type: 'GLint*' size: '1'>

	<apicall: void 'glExtGetBuffersQCOM' (GLuint* GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetFramebuffersQCOM: framebuffers with: maxFramebuffers with: numFramebuffers [

	<command: #glExtGetFramebuffersQCOM>
	<return: 'void'>
	<arg: 'framebuffers' type: 'GLuint*' size: 'maxFramebuffers'>
	<arg: 'maxFramebuffers' type: 'GLint'>
	<arg: 'numFramebuffers' type: 'GLint*' size: '1'>

	<apicall: void 'glExtGetFramebuffersQCOM' (GLuint* GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetProgramBinarySourceQCOM: program with: shadertype with: source with: length [

	<command: #glExtGetProgramBinarySourceQCOM>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'source' type: 'GLchar*'>
	<arg: 'length' type: 'GLint*'>

	<apicall: void 'glExtGetProgramBinarySourceQCOM' (GLuint GLenum GLchar* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetProgramsQCOM: programs with: maxPrograms with: numPrograms [

	<command: #glExtGetProgramsQCOM>
	<return: 'void'>
	<arg: 'programs' type: 'GLuint*' size: 'maxPrograms'>
	<arg: 'maxPrograms' type: 'GLint'>
	<arg: 'numPrograms' type: 'GLint*' size: '1'>

	<apicall: void 'glExtGetProgramsQCOM' (GLuint* GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetRenderbuffersQCOM: renderbuffers with: maxRenderbuffers with: numRenderbuffers [

	<command: #glExtGetRenderbuffersQCOM>
	<return: 'void'>
	<arg: 'renderbuffers' type: 'GLuint*' size: 'maxRenderbuffers'>
	<arg: 'maxRenderbuffers' type: 'GLint'>
	<arg: 'numRenderbuffers' type: 'GLint*' size: '1'>

	<apicall: void 'glExtGetRenderbuffersQCOM' (GLuint* GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetShadersQCOM: shaders with: maxShaders with: numShaders [

	<command: #glExtGetShadersQCOM>
	<return: 'void'>
	<arg: 'shaders' type: 'GLuint*' size: 'maxShaders'>
	<arg: 'maxShaders' type: 'GLint'>
	<arg: 'numShaders' type: 'GLint*' size: '1'>

	<apicall: void 'glExtGetShadersQCOM' (GLuint* GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetTexLevelParameterivQCOM: texture with: face with: level with: pname with: params [

	<command: #glExtGetTexLevelParameterivQCOM>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'face' type: 'GLenum'>
	<arg: 'level' type: 'GLint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glExtGetTexLevelParameterivQCOM' (GLuint GLenum GLint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetTexSubImageQCOM: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: texels [

	<command: #glExtGetTexSubImageQCOM>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'texels' type: 'void*'>

	<apicall: void 'glExtGetTexSubImageQCOM' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extGetTexturesQCOM: textures with: maxTextures with: numTextures [

	<command: #glExtGetTexturesQCOM>
	<return: 'void'>
	<arg: 'textures' type: 'GLuint*'>
	<arg: 'maxTextures' type: 'GLint'>
	<arg: 'numTextures' type: 'GLint*'>

	<apicall: void 'glExtGetTexturesQCOM' (GLuint* GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extIsProgramBinaryQCOM: program [

	<command: #glExtIsProgramBinaryQCOM>
	<return: 'GLboolean'>
	<arg: 'program' type: 'GLuint'>

	<apicall: GLboolean 'glExtIsProgramBinaryQCOM' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extTexObjectStateOverrideiQCOM: target with: pname with: param [

	<command: #glExtTexObjectStateOverrideiQCOM>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glExtTexObjectStateOverrideiQCOM' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extractComponentEXT: res with: src with: num [

	<command: #glExtractComponentEXT>
	<return: 'void'>
	<arg: 'res' type: 'GLuint'>
	<arg: 'src' type: 'GLuint'>
	<arg: 'num' type: 'GLuint'>

	<apicall: void 'glExtractComponentEXT' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> extrapolateTex2DQCOM: src1 with: src2 with: output with: scaleFactor [

	<command: #glExtrapolateTex2DQCOM>
	<return: 'void'>
	<arg: 'src1' type: 'GLuint'>
	<arg: 'src2' type: 'GLuint'>
	<arg: 'output' type: 'GLuint'>
	<arg: 'scaleFactor' type: 'GLfloat'>

	<apicall: void 'glExtrapolateTex2DQCOM' (GLuint GLuint GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> feedbackBuffer: size with: type with: buffer [

	<command: #glFeedbackBuffer>
	<return: 'void'>
	<arg: 'size' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #FeedbackType>
	<arg: 'buffer' type: 'GLfloat*' group: #FeedbackElement size: 'size'>

	<apicall: void 'glFeedbackBuffer' (GLsizei GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> feedbackBufferxOES: n with: type with: buffer [

	<command: #glFeedbackBufferxOES>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'buffer' type: 'GLfixed*' size: 'n'>

	<apicall: void 'glFeedbackBufferxOES' (GLsizei GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fenceSync: condition with: flags [

	<command: #glFenceSync>
	<return: 'GLsync'>
	<arg: 'condition' type: 'GLenum' group: #SyncCondition>
	<arg: 'flags' type: 'GLbitfield' group: #SyncBehaviorFlags>

	<apicall: GLsync 'glFenceSync' (GLenum GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fenceSyncAPPLE: condition with: flags [

	<command: #glFenceSyncAPPLE>
	<return: 'GLsync'>
	<arg: 'condition' type: 'GLenum' group: #SyncCondition>
	<arg: 'flags' type: 'GLbitfield' group: #SyncBehaviorFlags>

	<apicall: GLsync 'glFenceSyncAPPLE' (GLenum GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> finalCombinerInputNV: variable with: input with: mapping with: componentUsage [

	<command: #glFinalCombinerInputNV>
	<return: 'void'>
	<arg: 'variable' type: 'GLenum' group: #CombinerVariableNV>
	<arg: 'input' type: 'GLenum' group: #CombinerRegisterNV>
	<arg: 'mapping' type: 'GLenum' group: #CombinerMappingNV>
	<arg: 'componentUsage' type: 'GLenum' group: #CombinerComponentUsageNV>

	<apicall: void 'glFinalCombinerInputNV' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> finish [

	<command: #glFinish>
	<return: 'void'>

	<apicall: void 'glFinish' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> finishAsyncSGIX: markerp [

	<command: #glFinishAsyncSGIX>
	<return: 'GLint'>
	<arg: 'markerp' type: 'GLuint*' size: '1'>

	<apicall: GLint 'glFinishAsyncSGIX' (GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> finishFenceAPPLE: fence [

	<command: #glFinishFenceAPPLE>
	<return: 'void'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>

	<apicall: void 'glFinishFenceAPPLE' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> finishFenceNV: fence [

	<command: #glFinishFenceNV>
	<return: 'void'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>

	<apicall: void 'glFinishFenceNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> finishObjectAPPLE: object with: name [

	<command: #glFinishObjectAPPLE>
	<return: 'void'>
	<arg: 'object' type: 'GLenum' group: #ObjectTypeAPPLE>
	<arg: 'name' type: 'GLint'>

	<apicall: void 'glFinishObjectAPPLE' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> finishTextureSUNX [

	<command: #glFinishTextureSUNX>
	<return: 'void'>

	<apicall: void 'glFinishTextureSUNX' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flush [

	<command: #glFlush>
	<return: 'void'>

	<apicall: void 'glFlush' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushMappedBufferRange: target with: offset with: length [

	<command: #glFlushMappedBufferRange>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'length' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glFlushMappedBufferRange' (GLenum GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushMappedBufferRangeAPPLE: target with: offset with: size [

	<command: #glFlushMappedBufferRangeAPPLE>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glFlushMappedBufferRangeAPPLE' (GLenum GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushMappedBufferRangeEXT: target with: offset with: length [

	<command: #glFlushMappedBufferRangeEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'length' type: 'GLsizeiptr'>

	<apicall: void 'glFlushMappedBufferRangeEXT' (GLenum GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushMappedNamedBufferRange: buffer with: offset with: length [

	<command: #glFlushMappedNamedBufferRange>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'length' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glFlushMappedNamedBufferRange' (GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushMappedNamedBufferRangeEXT: buffer with: offset with: length [

	<command: #glFlushMappedNamedBufferRangeEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'length' type: 'GLsizeiptr'>

	<apicall: void 'glFlushMappedNamedBufferRangeEXT' (GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushPixelDataRangeNV: target [

	<command: #glFlushPixelDataRangeNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #PixelDataRangeTargetNV>

	<apicall: void 'glFlushPixelDataRangeNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushRasterSGIX [

	<command: #glFlushRasterSGIX>
	<return: 'void'>

	<apicall: void 'glFlushRasterSGIX' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushStaticDataIBM: target [

	<command: #glFlushStaticDataIBM>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>

	<apicall: void 'glFlushStaticDataIBM' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushVertexArrayRangeAPPLE: length with: pointer [

	<command: #glFlushVertexArrayRangeAPPLE>
	<return: 'void'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'length'>

	<apicall: void 'glFlushVertexArrayRangeAPPLE' (GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> flushVertexArrayRangeNV [

	<command: #glFlushVertexArrayRangeNV>
	<return: 'void'>

	<apicall: void 'glFlushVertexArrayRangeNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordFormatNV: type with: stride [

	<command: #glFogCoordFormatNV>
	<return: 'void'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glFogCoordFormatNV' (GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordPointer: type with: stride with: pointer [

	<command: #glFogCoordPointer>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #FogPointerTypeEXT>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glFogCoordPointer' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordPointerEXT: type with: stride with: pointer [

	<command: #glFogCoordPointerEXT>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #FogPointerTypeEXT>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glFogCoordPointerEXT' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordPointerListIBM: type with: stride with: pointer with: ptrstride [

	<command: #glFogCoordPointerListIBM>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #FogPointerTypeIBM>
	<arg: 'stride' type: 'GLint'>
	<arg: 'pointer' type: 'void**' size: 'COMPSIZE(type,stride)'>
	<arg: 'ptrstride' type: 'GLint'>

	<apicall: void 'glFogCoordPointerListIBM' (GLenum GLint void** GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordd: coord [

	<command: #glFogCoordd>
	<return: 'void'>
	<arg: 'coord' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glFogCoordd' (GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoorddEXT: coord [

	<command: #glFogCoorddEXT>
	<return: 'void'>
	<arg: 'coord' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glFogCoorddEXT' (GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoorddv: coord [

	<command: #glFogCoorddv>
	<return: 'void'>
	<arg: 'coord' type: 'GLdouble*' group: #CoordD size: '1'>

	<apicall: void 'glFogCoorddv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoorddvEXT: coord [

	<command: #glFogCoorddvEXT>
	<return: 'void'>
	<arg: 'coord' type: 'GLdouble*' group: #CoordD size: '1'>

	<apicall: void 'glFogCoorddvEXT' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordf: coord [

	<command: #glFogCoordf>
	<return: 'void'>
	<arg: 'coord' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glFogCoordf' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordfEXT: coord [

	<command: #glFogCoordfEXT>
	<return: 'void'>
	<arg: 'coord' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glFogCoordfEXT' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordfv: coord [

	<command: #glFogCoordfv>
	<return: 'void'>
	<arg: 'coord' type: 'GLfloat*' group: #CoordF size: '1'>

	<apicall: void 'glFogCoordfv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordfvEXT: coord [

	<command: #glFogCoordfvEXT>
	<return: 'void'>
	<arg: 'coord' type: 'GLfloat*' group: #CoordF size: '1'>

	<apicall: void 'glFogCoordfvEXT' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordhNV: fog [

	<command: #glFogCoordhNV>
	<return: 'void'>
	<arg: 'fog' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glFogCoordhNV' (GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogCoordhvNV: fog [

	<command: #glFogCoordhvNV>
	<return: 'void'>
	<arg: 'fog' type: 'GLhalfNV*' group: #Half16NV size: '1'>

	<apicall: void 'glFogCoordhvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogFuncSGIS: n with: points [

	<command: #glFogFuncSGIS>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'points' type: 'GLfloat*' size: 'n*2'>

	<apicall: void 'glFogFuncSGIS' (GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogf: pname with: param [

	<command: #glFogf>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FogParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glFogf' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogfv: pname with: params [

	<command: #glFogfv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FogParameter>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glFogfv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogi: pname with: param [

	<command: #glFogi>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FogParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFogi' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogiv: pname with: params [

	<command: #glFogiv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FogParameter>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glFogiv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogx: pname with: param [

	<command: #glFogx>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FogPName>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glFogx' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogxOES: pname with: param [

	<command: #glFogxOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FogPName>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glFogxOES' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogxv: pname with: param [

	<command: #glFogxv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FogPName>
	<arg: 'param' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glFogxv' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fogxvOES: pname with: param [

	<command: #glFogxvOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FogPName>
	<arg: 'param' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glFogxvOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentColorMaterialSGIX: face with: mode [

	<command: #glFragmentColorMaterialSGIX>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'mode' type: 'GLenum' group: #MaterialParameter>

	<apicall: void 'glFragmentColorMaterialSGIX' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentCoverageColorNV: color [

	<command: #glFragmentCoverageColorNV>
	<return: 'void'>
	<arg: 'color' type: 'GLuint'>

	<apicall: void 'glFragmentCoverageColorNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentLightModelfSGIX: pname with: param [

	<command: #glFragmentLightModelfSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightModelParameterSGIX>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glFragmentLightModelfSGIX' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentLightModelfvSGIX: pname with: params [

	<command: #glFragmentLightModelfvSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightModelParameterSGIX>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glFragmentLightModelfvSGIX' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentLightModeliSGIX: pname with: param [

	<command: #glFragmentLightModeliSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightModelParameterSGIX>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFragmentLightModeliSGIX' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentLightModelivSGIX: pname with: params [

	<command: #glFragmentLightModelivSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightModelParameterSGIX>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glFragmentLightModelivSGIX' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentLightfSGIX: light with: pname with: param [

	<command: #glFragmentLightfSGIX>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #FragmentLightNameSGIX>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightParameterSGIX>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glFragmentLightfSGIX' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentLightfvSGIX: light with: pname with: params [

	<command: #glFragmentLightfvSGIX>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #FragmentLightNameSGIX>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightParameterSGIX>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glFragmentLightfvSGIX' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentLightiSGIX: light with: pname with: param [

	<command: #glFragmentLightiSGIX>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #FragmentLightNameSGIX>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightParameterSGIX>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFragmentLightiSGIX' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentLightivSGIX: light with: pname with: params [

	<command: #glFragmentLightivSGIX>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #FragmentLightNameSGIX>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightParameterSGIX>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glFragmentLightivSGIX' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentMaterialfSGIX: face with: pname with: param [

	<command: #glFragmentMaterialfSGIX>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glFragmentMaterialfSGIX' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentMaterialfvSGIX: face with: pname with: params [

	<command: #glFragmentMaterialfvSGIX>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glFragmentMaterialfvSGIX' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentMaterialiSGIX: face with: pname with: param [

	<command: #glFragmentMaterialiSGIX>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFragmentMaterialiSGIX' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> fragmentMaterialivSGIX: face with: pname with: params [

	<command: #glFragmentMaterialivSGIX>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glFragmentMaterialivSGIX' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> frameTerminatorGREMEDY [

	<command: #glFrameTerminatorGREMEDY>
	<return: 'void'>

	<apicall: void 'glFrameTerminatorGREMEDY' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> frameZoomSGIX: factor [

	<command: #glFrameZoomSGIX>
	<return: 'void'>
	<arg: 'factor' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFrameZoomSGIX' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferDrawBufferEXT: framebuffer with: mode [

	<command: #glFramebufferDrawBufferEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'mode' type: 'GLenum' group: #DrawBufferMode>

	<apicall: void 'glFramebufferDrawBufferEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferDrawBuffersEXT: framebuffer with: n with: bufs [

	<command: #glFramebufferDrawBuffersEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'bufs' type: 'GLenum*' group: #DrawBufferMode size: 'n'>

	<apicall: void 'glFramebufferDrawBuffersEXT' (GLuint GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferFetchBarrierEXT [

	<command: #glFramebufferFetchBarrierEXT>
	<return: 'void'>

	<apicall: void 'glFramebufferFetchBarrierEXT' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferFetchBarrierQCOM [

	<command: #glFramebufferFetchBarrierQCOM>
	<return: 'void'>

	<apicall: void 'glFramebufferFetchBarrierQCOM' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferFoveationConfigQCOM: framebuffer with: numLayers with: focalPointsPerLayer with: requestedFeatures with: providedFeatures [

	<command: #glFramebufferFoveationConfigQCOM>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'numLayers' type: 'GLuint'>
	<arg: 'focalPointsPerLayer' type: 'GLuint'>
	<arg: 'requestedFeatures' type: 'GLuint'>
	<arg: 'providedFeatures' type: 'GLuint*' size: '1'>

	<apicall: void 'glFramebufferFoveationConfigQCOM' (GLuint GLuint GLuint GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferFoveationParametersQCOM: framebuffer with: layer with: focalPoint with: focalX with: focalY with: gainX with: gainY with: foveaArea [

	<command: #glFramebufferFoveationParametersQCOM>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'layer' type: 'GLuint'>
	<arg: 'focalPoint' type: 'GLuint'>
	<arg: 'focalX' type: 'GLfloat' group: #CheckedFloat32>
	<arg: 'focalY' type: 'GLfloat' group: #CheckedFloat32>
	<arg: 'gainX' type: 'GLfloat' group: #CheckedFloat32>
	<arg: 'gainY' type: 'GLfloat' group: #CheckedFloat32>
	<arg: 'foveaArea' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glFramebufferFoveationParametersQCOM' (GLuint GLuint GLuint GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferParameteri: target with: pname with: param [

	<command: #glFramebufferParameteri>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'pname' type: 'GLenum' group: #FramebufferParameterName>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glFramebufferParameteri' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferParameteriMESA: target with: pname with: param [

	<command: #glFramebufferParameteriMESA>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'pname' type: 'GLenum' group: #FramebufferParameterName>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glFramebufferParameteriMESA' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferPixelLocalStorageSizeEXT: target with: size [

	<command: #glFramebufferPixelLocalStorageSizeEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLuint'>
	<arg: 'size' type: 'GLsizei'>

	<apicall: void 'glFramebufferPixelLocalStorageSizeEXT' (GLuint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferReadBufferEXT: framebuffer with: mode [

	<command: #glFramebufferReadBufferEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'mode' type: 'GLenum' group: #ReadBufferMode>

	<apicall: void 'glFramebufferReadBufferEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferRenderbuffer: target with: attachment with: renderbuffertarget with: renderbuffer [

	<command: #glFramebufferRenderbuffer>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'renderbuffertarget' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glFramebufferRenderbuffer' (GLenum GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferRenderbufferEXT: target with: attachment with: renderbuffertarget with: renderbuffer [

	<command: #glFramebufferRenderbufferEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'renderbuffertarget' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glFramebufferRenderbufferEXT' (GLenum GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferRenderbufferOES: target with: attachment with: renderbuffertarget with: renderbuffer [

	<command: #glFramebufferRenderbufferOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'renderbuffertarget' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glFramebufferRenderbufferOES' (GLenum GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferSampleLocationsfvARB: target with: start with: count with: v [

	<command: #glFramebufferSampleLocationsfvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'start' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glFramebufferSampleLocationsfvARB' (GLenum GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferSampleLocationsfvNV: target with: start with: count with: v [

	<command: #glFramebufferSampleLocationsfvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'start' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glFramebufferSampleLocationsfvNV' (GLenum GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferSamplePositionsfvAMD: target with: numsamples with: pixelindex with: values [

	<command: #glFramebufferSamplePositionsfvAMD>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'numsamples' type: 'GLuint'>
	<arg: 'pixelindex' type: 'GLuint'>
	<arg: 'values' type: 'GLfloat*'>

	<apicall: void 'glFramebufferSamplePositionsfvAMD' (GLenum GLuint GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture1D: target with: attachment with: textarget with: texture with: level [

	<command: #glFramebufferTexture1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glFramebufferTexture1D' (GLenum GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture1DEXT: target with: attachment with: textarget with: texture with: level [

	<command: #glFramebufferTexture1DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glFramebufferTexture1DEXT' (GLenum GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture2D: target with: attachment with: textarget with: texture with: level [

	<command: #glFramebufferTexture2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glFramebufferTexture2D' (GLenum GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture2DDownsampleIMG: target with: attachment with: textarget with: texture with: level with: xscale with: yscale [

	<command: #glFramebufferTexture2DDownsampleIMG>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xscale' type: 'GLint'>
	<arg: 'yscale' type: 'GLint'>

	<apicall: void 'glFramebufferTexture2DDownsampleIMG' (GLenum GLenum GLenum GLuint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture2DEXT: target with: attachment with: textarget with: texture with: level [

	<command: #glFramebufferTexture2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glFramebufferTexture2DEXT' (GLenum GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture2DMultisampleEXT: target with: attachment with: textarget with: texture with: level with: samples [

	<command: #glFramebufferTexture2DMultisampleEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'samples' type: 'GLsizei'>

	<apicall: void 'glFramebufferTexture2DMultisampleEXT' (GLenum GLenum GLenum GLuint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture2DMultisampleIMG: target with: attachment with: textarget with: texture with: level with: samples [

	<command: #glFramebufferTexture2DMultisampleIMG>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'samples' type: 'GLsizei'>

	<apicall: void 'glFramebufferTexture2DMultisampleIMG' (GLenum GLenum GLenum GLuint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture2DOES: target with: attachment with: textarget with: texture with: level [

	<command: #glFramebufferTexture2DOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glFramebufferTexture2DOES' (GLenum GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture3D: target with: attachment with: textarget with: texture with: level with: zoffset [

	<command: #glFramebufferTexture3D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>

	<apicall: void 'glFramebufferTexture3D' (GLenum GLenum GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture3DEXT: target with: attachment with: textarget with: texture with: level with: zoffset [

	<command: #glFramebufferTexture3DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>

	<apicall: void 'glFramebufferTexture3DEXT' (GLenum GLenum GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture3DOES: target with: attachment with: textarget with: texture with: level with: zoffset [

	<command: #glFramebufferTexture3DOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>

	<apicall: void 'glFramebufferTexture3DOES' (GLenum GLenum GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTexture: target with: attachment with: texture with: level [

	<command: #glFramebufferTexture>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glFramebufferTexture' (GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureARB: target with: attachment with: texture with: level [

	<command: #glFramebufferTextureARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFramebufferTextureARB' (GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureEXT: target with: attachment with: texture with: level [

	<command: #glFramebufferTextureEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFramebufferTextureEXT' (GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureFaceARB: target with: attachment with: texture with: level with: face [

	<command: #glFramebufferTextureFaceARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'face' type: 'GLenum' group: #TextureTarget>

	<apicall: void 'glFramebufferTextureFaceARB' (GLenum GLenum GLuint GLint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureFaceEXT: target with: attachment with: texture with: level with: face [

	<command: #glFramebufferTextureFaceEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'face' type: 'GLenum' group: #TextureTarget>

	<apicall: void 'glFramebufferTextureFaceEXT' (GLenum GLenum GLuint GLint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureLayer: target with: attachment with: texture with: level with: layer [

	<command: #glFramebufferTextureLayer>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'layer' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFramebufferTextureLayer' (GLenum GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureLayerARB: target with: attachment with: texture with: level with: layer [

	<command: #glFramebufferTextureLayerARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'layer' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFramebufferTextureLayerARB' (GLenum GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureLayerDownsampleIMG: target with: attachment with: texture with: level with: layer with: xscale with: yscale [

	<command: #glFramebufferTextureLayerDownsampleIMG>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'layer' type: 'GLint' group: #CheckedInt32>
	<arg: 'xscale' type: 'GLint'>
	<arg: 'yscale' type: 'GLint'>

	<apicall: void 'glFramebufferTextureLayerDownsampleIMG' (GLenum GLenum GLuint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureLayerEXT: target with: attachment with: texture with: level with: layer [

	<command: #glFramebufferTextureLayerEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'layer' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFramebufferTextureLayerEXT' (GLenum GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureMultisampleMultiviewOVR: target with: attachment with: texture with: level with: samples with: baseViewIndex with: numViews [

	<command: #glFramebufferTextureMultisampleMultiviewOVR>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'baseViewIndex' type: 'GLint'>
	<arg: 'numViews' type: 'GLsizei'>

	<apicall: void 'glFramebufferTextureMultisampleMultiviewOVR' (GLenum GLenum GLuint GLint GLsizei GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureMultiviewOVR: target with: attachment with: texture with: level with: baseViewIndex with: numViews [

	<command: #glFramebufferTextureMultiviewOVR>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'baseViewIndex' type: 'GLint'>
	<arg: 'numViews' type: 'GLsizei'>

	<apicall: void 'glFramebufferTextureMultiviewOVR' (GLenum GLenum GLuint GLint GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> framebufferTextureOES: target with: attachment with: texture with: level [

	<command: #glFramebufferTextureOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glFramebufferTextureOES' (GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> freeObjectBufferATI: buffer [

	<command: #glFreeObjectBufferATI>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glFreeObjectBufferATI' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> frontFace: mode [

	<command: #glFrontFace>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #FrontFaceDirection>

	<apicall: void 'glFrontFace' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> frustum: left with: right with: bottom with: top with: zNear with: zFar [

	<command: #glFrustum>
	<return: 'void'>
	<arg: 'left' type: 'GLdouble'>
	<arg: 'right' type: 'GLdouble'>
	<arg: 'bottom' type: 'GLdouble'>
	<arg: 'top' type: 'GLdouble'>
	<arg: 'zNear' type: 'GLdouble'>
	<arg: 'zFar' type: 'GLdouble'>

	<apicall: void 'glFrustum' (GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> frustumf: l with: r with: b with: t with: n with: f [

	<command: #glFrustumf>
	<return: 'void'>
	<arg: 'l' type: 'GLfloat'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'n' type: 'GLfloat'>
	<arg: 'f' type: 'GLfloat'>

	<apicall: void 'glFrustumf' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> frustumfOES: l with: r with: b with: t with: n with: f [

	<command: #glFrustumfOES>
	<return: 'void'>
	<arg: 'l' type: 'GLfloat'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'n' type: 'GLfloat'>
	<arg: 'f' type: 'GLfloat'>

	<apicall: void 'glFrustumfOES' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> frustumx: l with: r with: b with: t with: n with: f [

	<command: #glFrustumx>
	<return: 'void'>
	<arg: 'l' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>
	<arg: 'b' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'n' type: 'GLfixed'>
	<arg: 'f' type: 'GLfixed'>

	<apicall: void 'glFrustumx' (GLfixed GLfixed GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> frustumxOES: l with: r with: b with: t with: n with: f [

	<command: #glFrustumxOES>
	<return: 'void'>
	<arg: 'l' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>
	<arg: 'b' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'n' type: 'GLfixed'>
	<arg: 'f' type: 'GLfixed'>

	<apicall: void 'glFrustumxOES' (GLfixed GLfixed GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genAsyncMarkersSGIX: range [

	<command: #glGenAsyncMarkersSGIX>
	<return: 'GLuint'>
	<arg: 'range' type: 'GLsizei'>

	<apicall: GLuint 'glGenAsyncMarkersSGIX' (GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genBuffers: n with: buffers [

	<command: #glGenBuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenBuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genBuffersARB: n with: buffers [

	<command: #glGenBuffersARB>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenBuffersARB' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genFencesAPPLE: n with: fences [

	<command: #glGenFencesAPPLE>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'fences' type: 'GLuint*' group: #FenceNV size: 'n'>

	<apicall: void 'glGenFencesAPPLE' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genFencesNV: n with: fences [

	<command: #glGenFencesNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'fences' type: 'GLuint*' group: #FenceNV size: 'n'>

	<apicall: void 'glGenFencesNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genFragmentShadersATI: range [

	<command: #glGenFragmentShadersATI>
	<return: 'GLuint'>
	<arg: 'range' type: 'GLuint'>

	<apicall: GLuint 'glGenFragmentShadersATI' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genFramebuffers: n with: framebuffers [

	<command: #glGenFramebuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'framebuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenFramebuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genFramebuffersEXT: n with: framebuffers [

	<command: #glGenFramebuffersEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'framebuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenFramebuffersEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genFramebuffersOES: n with: framebuffers [

	<command: #glGenFramebuffersOES>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'framebuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenFramebuffersOES' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genLists: range [

	<command: #glGenLists>
	<return: 'GLuint'>
	<arg: 'range' type: 'GLsizei'>

	<apicall: GLuint 'glGenLists' (GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genNamesAMD: identifier with: num with: names [

	<command: #glGenNamesAMD>
	<return: 'void'>
	<arg: 'identifier' type: 'GLenum'>
	<arg: 'num' type: 'GLuint'>
	<arg: 'names' type: 'GLuint*' size: 'num'>

	<apicall: void 'glGenNamesAMD' (GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genOcclusionQueriesNV: n with: ids [

	<command: #glGenOcclusionQueriesNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenOcclusionQueriesNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genPathsNV: range [

	<command: #glGenPathsNV>
	<return: 'GLuint'>
	<arg: 'range' type: 'GLsizei'>

	<apicall: GLuint 'glGenPathsNV' (GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genPerfMonitorsAMD: n with: monitors [

	<command: #glGenPerfMonitorsAMD>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'monitors' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenPerfMonitorsAMD' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genProgramPipelines: n with: pipelines [

	<command: #glGenProgramPipelines>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'pipelines' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenProgramPipelines' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genProgramPipelinesEXT: n with: pipelines [

	<command: #glGenProgramPipelinesEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'pipelines' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenProgramPipelinesEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genProgramsARB: n with: programs [

	<command: #glGenProgramsARB>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'programs' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenProgramsARB' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genProgramsNV: n with: programs [

	<command: #glGenProgramsNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'programs' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenProgramsNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genQueries: n with: ids [

	<command: #glGenQueries>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenQueries' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genQueriesARB: n with: ids [

	<command: #glGenQueriesARB>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenQueriesARB' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genQueriesEXT: n with: ids [

	<command: #glGenQueriesEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenQueriesEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genQueryResourceTagNV: n with: tagIds [

	<command: #glGenQueryResourceTagNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'tagIds' type: 'GLint*' size: 'n'>

	<apicall: void 'glGenQueryResourceTagNV' (GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genRenderbuffers: n with: renderbuffers [

	<command: #glGenRenderbuffers>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'renderbuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenRenderbuffers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genRenderbuffersEXT: n with: renderbuffers [

	<command: #glGenRenderbuffersEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'renderbuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenRenderbuffersEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genRenderbuffersOES: n with: renderbuffers [

	<command: #glGenRenderbuffersOES>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'renderbuffers' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenRenderbuffersOES' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genSamplers: count with: samplers [

	<command: #glGenSamplers>
	<return: 'void'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'samplers' type: 'GLuint*' size: 'count'>

	<apicall: void 'glGenSamplers' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genSemaphoresEXT: n with: semaphores [

	<command: #glGenSemaphoresEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'semaphores' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenSemaphoresEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genSymbolsEXT: datatype with: storagetype with: range with: components [

	<command: #glGenSymbolsEXT>
	<return: 'GLuint'>
	<arg: 'datatype' type: 'GLenum' group: #DataTypeEXT>
	<arg: 'storagetype' type: 'GLenum' group: #VertexShaderStorageTypeEXT>
	<arg: 'range' type: 'GLenum' group: #ParameterRangeEXT>
	<arg: 'components' type: 'GLuint'>

	<apicall: GLuint 'glGenSymbolsEXT' (GLenum GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genTextures: n with: textures [

	<command: #glGenTextures>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' group: #Texture size: 'n'>

	<apicall: void 'glGenTextures' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genTexturesEXT: n with: textures [

	<command: #glGenTexturesEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' group: #Texture size: 'n'>

	<apicall: void 'glGenTexturesEXT' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genTransformFeedbacks: n with: ids [

	<command: #glGenTransformFeedbacks>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenTransformFeedbacks' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genTransformFeedbacksNV: n with: ids [

	<command: #glGenTransformFeedbacksNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'ids' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenTransformFeedbacksNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genVertexArrays: n with: arrays [

	<command: #glGenVertexArrays>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'arrays' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenVertexArrays' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genVertexArraysAPPLE: n with: arrays [

	<command: #glGenVertexArraysAPPLE>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'arrays' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenVertexArraysAPPLE' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genVertexArraysOES: n with: arrays [

	<command: #glGenVertexArraysOES>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'arrays' type: 'GLuint*' size: 'n'>

	<apicall: void 'glGenVertexArraysOES' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> genVertexShadersEXT: range [

	<command: #glGenVertexShadersEXT>
	<return: 'GLuint'>
	<arg: 'range' type: 'GLuint'>

	<apicall: GLuint 'glGenVertexShadersEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> generateMipmap: target [

	<command: #glGenerateMipmap>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>

	<apicall: void 'glGenerateMipmap' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> generateMipmapEXT: target [

	<command: #glGenerateMipmapEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>

	<apicall: void 'glGenerateMipmapEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> generateMipmapOES: target [

	<command: #glGenerateMipmapOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>

	<apicall: void 'glGenerateMipmapOES' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> generateMultiTexMipmapEXT: texunit with: target [

	<command: #glGenerateMultiTexMipmapEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>

	<apicall: void 'glGenerateMultiTexMipmapEXT' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> generateTextureMipmap: texture [

	<command: #glGenerateTextureMipmap>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>

	<apicall: void 'glGenerateTextureMipmap' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> generateTextureMipmapEXT: texture with: target [

	<command: #glGenerateTextureMipmapEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>

	<apicall: void 'glGenerateTextureMipmapEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveAtomicCounterBufferiv: program with: bufferIndex with: pname with: params [

	<command: #glGetActiveAtomicCounterBufferiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'bufferIndex' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #AtomicCounterBufferPName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetActiveAtomicCounterBufferiv' (GLuint GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveAttrib: program with: index with: bufSize with: length with: size with: type with: name [

	<command: #glGetActiveAttrib>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'size' type: 'GLint*' size: '1'>
	<arg: 'type' type: 'GLenum*' group: #AttributeType size: '1'>
	<arg: 'name' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetActiveAttrib' (GLuint GLuint GLsizei GLsizei* GLint* GLenum* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveAttribARB: programObj with: index with: maxLength with: length with: size with: type with: name [

	<command: #glGetActiveAttribARB>
	<return: 'void'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'maxLength' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'size' type: 'GLint*' size: '1'>
	<arg: 'type' type: 'GLenum*' group: #AttributeType size: '1'>
	<arg: 'name' type: 'GLcharARB*' size: 'maxLength'>

	<apicall: void 'glGetActiveAttribARB' (GLhandleARB GLuint GLsizei GLsizei* GLint* GLenum* GLcharARB*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveSubroutineName: program with: shadertype with: index with: bufSize with: length with: name [

	<command: #glGetActiveSubroutineName>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'index' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'name' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetActiveSubroutineName' (GLuint GLenum GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveSubroutineUniformName: program with: shadertype with: index with: bufSize with: length with: name [

	<command: #glGetActiveSubroutineUniformName>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'index' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'name' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetActiveSubroutineUniformName' (GLuint GLenum GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveSubroutineUniformiv: program with: shadertype with: index with: pname with: values [

	<command: #glGetActiveSubroutineUniformiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SubroutineParameterName>
	<arg: 'values' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetActiveSubroutineUniformiv' (GLuint GLenum GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveUniform: program with: index with: bufSize with: length with: size with: type with: name [

	<command: #glGetActiveUniform>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'size' type: 'GLint*' size: '1'>
	<arg: 'type' type: 'GLenum*' group: #UniformType size: '1'>
	<arg: 'name' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetActiveUniform' (GLuint GLuint GLsizei GLsizei* GLint* GLenum* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveUniformARB: programObj with: index with: maxLength with: length with: size with: type with: name [

	<command: #glGetActiveUniformARB>
	<return: 'void'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'maxLength' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'size' type: 'GLint*' size: '1'>
	<arg: 'type' type: 'GLenum*' group: #UniformType size: '1'>
	<arg: 'name' type: 'GLcharARB*' size: 'maxLength'>

	<apicall: void 'glGetActiveUniformARB' (GLhandleARB GLuint GLsizei GLsizei* GLint* GLenum* GLcharARB*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveUniformBlockName: program with: uniformBlockIndex with: bufSize with: length with: uniformBlockName [

	<command: #glGetActiveUniformBlockName>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'uniformBlockIndex' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'uniformBlockName' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetActiveUniformBlockName' (GLuint GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveUniformBlockiv: program with: uniformBlockIndex with: pname with: params [

	<command: #glGetActiveUniformBlockiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'uniformBlockIndex' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #UniformBlockPName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(program,uniformBlockIndex,pname)'>

	<apicall: void 'glGetActiveUniformBlockiv' (GLuint GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveUniformName: program with: uniformIndex with: bufSize with: length with: uniformName [

	<command: #glGetActiveUniformName>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'uniformIndex' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'uniformName' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetActiveUniformName' (GLuint GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveUniformsiv: program with: uniformCount with: uniformIndices with: pname with: params [

	<command: #glGetActiveUniformsiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'uniformCount' type: 'GLsizei'>
	<arg: 'uniformIndices' type: 'GLuint*' size: 'uniformCount'>
	<arg: 'pname' type: 'GLenum' group: #UniformPName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(uniformCount,pname)'>

	<apicall: void 'glGetActiveUniformsiv' (GLuint GLsizei GLuint* GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getActiveVaryingNV: program with: index with: bufSize with: length with: size with: type with: name [

	<command: #glGetActiveVaryingNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'size' type: 'GLsizei*' size: '1'>
	<arg: 'type' type: 'GLenum*' size: '1'>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(program,index,bufSize)'>

	<apicall: void 'glGetActiveVaryingNV' (GLuint GLuint GLsizei GLsizei* GLsizei* GLenum* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getArrayObjectfvATI: array with: pname with: params [

	<command: #glGetArrayObjectfvATI>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>
	<arg: 'pname' type: 'GLenum' group: #ArrayObjectPNameATI>
	<arg: 'params' type: 'GLfloat*' size: '1'>

	<apicall: void 'glGetArrayObjectfvATI' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getArrayObjectivATI: array with: pname with: params [

	<command: #glGetArrayObjectivATI>
	<return: 'void'>
	<arg: 'array' type: 'GLenum' group: #EnableCap>
	<arg: 'pname' type: 'GLenum' group: #ArrayObjectPNameATI>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetArrayObjectivATI' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getAttachedObjectsARB: containerObj with: maxCount with: count with: obj [

	<command: #glGetAttachedObjectsARB>
	<return: 'void'>
	<arg: 'containerObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'maxCount' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei*' size: '1'>
	<arg: 'obj' type: 'GLhandleARB*' group: #handleARB size: 'maxCount'>

	<apicall: void 'glGetAttachedObjectsARB' (GLhandleARB GLsizei GLsizei* GLhandleARB*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getAttachedShaders: program with: maxCount with: count with: shaders [

	<command: #glGetAttachedShaders>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'maxCount' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei*' size: '1'>
	<arg: 'shaders' type: 'GLuint*' size: 'maxCount'>

	<apicall: void 'glGetAttachedShaders' (GLuint GLsizei GLsizei* GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getAttribLocation: program with: name [

	<command: #glGetAttribLocation>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*'>

	<apicall: GLint 'glGetAttribLocation' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getAttribLocationARB: programObj with: name [

	<command: #glGetAttribLocationARB>
	<return: 'GLint'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'name' type: 'GLcharARB*'>

	<apicall: GLint 'glGetAttribLocationARB' (GLhandleARB GLcharARB*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBooleanIndexedvEXT: target with: index with: data [

	<command: #glGetBooleanIndexedvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLboolean*' group: #Boolean size: 'COMPSIZE(target)'>

	<apicall: void 'glGetBooleanIndexedvEXT' (GLenum GLuint GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBooleani_v: target with: index with: data [

	<command: #'glGetBooleani_v'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLboolean*' group: #Boolean size: 'COMPSIZE(target)'>

	<apicall: void 'glGetBooleani_v' (GLenum GLuint GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBooleanv: pname with: data [

	<command: #glGetBooleanv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'data' type: 'GLboolean*' group: #Boolean size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetBooleanv' (GLenum GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferParameteri64v: target with: pname with: params [

	<command: #glGetBufferParameteri64v>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'pname' type: 'GLenum' group: #BufferPNameARB>
	<arg: 'params' type: 'GLint64*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetBufferParameteri64v' (GLenum GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferParameteriv: target with: pname with: params [

	<command: #glGetBufferParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'pname' type: 'GLenum' group: #BufferPNameARB>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetBufferParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferParameterivARB: target with: pname with: params [

	<command: #glGetBufferParameterivARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'pname' type: 'GLenum' group: #BufferPNameARB>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetBufferParameterivARB' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferParameterui64vNV: target with: pname with: params [

	<command: #glGetBufferParameterui64vNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLuint64EXT*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetBufferParameterui64vNV' (GLenum GLenum GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferPointerv: target with: pname with: params [

	<command: #glGetBufferPointerv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'pname' type: 'GLenum' group: #BufferPointerNameARB>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetBufferPointerv' (GLenum GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferPointervARB: target with: pname with: params [

	<command: #glGetBufferPointervARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'pname' type: 'GLenum' group: #BufferPointerNameARB>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetBufferPointervARB' (GLenum GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferPointervOES: target with: pname with: params [

	<command: #glGetBufferPointervOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'pname' type: 'GLenum' group: #BufferPointerNameARB>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetBufferPointervOES' (GLenum GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferSubData: target with: offset with: size with: data [

	<command: #glGetBufferSubData>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*' size: 'size'>

	<apicall: void 'glGetBufferSubData' (GLenum GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getBufferSubDataARB: target with: offset with: size with: data [

	<command: #glGetBufferSubDataARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptrARB' group: #BufferOffsetARB>
	<arg: 'size' type: 'GLsizeiptrARB' group: #BufferSizeARB>
	<arg: 'data' type: 'void*' size: 'size'>

	<apicall: void 'glGetBufferSubDataARB' (GLenum GLintptrARB GLsizeiptrARB void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getClipPlane: plane with: equation [

	<command: #glGetClipPlane>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLdouble*' size: '4'>

	<apicall: void 'glGetClipPlane' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getClipPlanef: plane with: equation [

	<command: #glGetClipPlanef>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetClipPlanef' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getClipPlanefOES: plane with: equation [

	<command: #glGetClipPlanefOES>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetClipPlanefOES' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getClipPlanex: plane with: equation [

	<command: #glGetClipPlanex>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLfixed*' size: '4'>

	<apicall: void 'glGetClipPlanex' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getClipPlanexOES: plane with: equation [

	<command: #glGetClipPlanexOES>
	<return: 'void'>
	<arg: 'plane' type: 'GLenum' group: #ClipPlaneName>
	<arg: 'equation' type: 'GLfixed*' size: '4'>

	<apicall: void 'glGetClipPlanexOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTable: target with: format with: type with: table [

	<command: #glGetColorTable>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'table' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetColorTable' (GLenum GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTableEXT: target with: format with: type with: data [

	<command: #glGetColorTableEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetColorTableEXT' (GLenum GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTableParameterfv: target with: pname with: params [

	<command: #glGetColorTableParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'pname' type: 'GLenum' group: #GetColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetColorTableParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTableParameterfvEXT: target with: pname with: params [

	<command: #glGetColorTableParameterfvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'pname' type: 'GLenum' group: #GetColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetColorTableParameterfvEXT' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTableParameterfvSGI: target with: pname with: params [

	<command: #glGetColorTableParameterfvSGI>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTargetSGI>
	<arg: 'pname' type: 'GLenum' group: #GetColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetColorTableParameterfvSGI' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTableParameteriv: target with: pname with: params [

	<command: #glGetColorTableParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'pname' type: 'GLenum' group: #GetColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetColorTableParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTableParameterivEXT: target with: pname with: params [

	<command: #glGetColorTableParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'pname' type: 'GLenum' group: #GetColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetColorTableParameterivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTableParameterivSGI: target with: pname with: params [

	<command: #glGetColorTableParameterivSGI>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTargetSGI>
	<arg: 'pname' type: 'GLenum' group: #GetColorTableParameterPNameSGI>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetColorTableParameterivSGI' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getColorTableSGI: target with: format with: type with: table [

	<command: #glGetColorTableSGI>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTargetSGI>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'table' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetColorTableSGI' (GLenum GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCombinerInputParameterfvNV: stage with: portion with: variable with: pname with: params [

	<command: #glGetCombinerInputParameterfvNV>
	<return: 'void'>
	<arg: 'stage' type: 'GLenum' group: #CombinerStageNV>
	<arg: 'portion' type: 'GLenum' group: #CombinerPortionNV>
	<arg: 'variable' type: 'GLenum' group: #CombinerVariableNV>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetCombinerInputParameterfvNV' (GLenum GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCombinerInputParameterivNV: stage with: portion with: variable with: pname with: params [

	<command: #glGetCombinerInputParameterivNV>
	<return: 'void'>
	<arg: 'stage' type: 'GLenum' group: #CombinerStageNV>
	<arg: 'portion' type: 'GLenum' group: #CombinerPortionNV>
	<arg: 'variable' type: 'GLenum' group: #CombinerVariableNV>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetCombinerInputParameterivNV' (GLenum GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCombinerOutputParameterfvNV: stage with: portion with: pname with: params [

	<command: #glGetCombinerOutputParameterfvNV>
	<return: 'void'>
	<arg: 'stage' type: 'GLenum' group: #CombinerStageNV>
	<arg: 'portion' type: 'GLenum' group: #CombinerPortionNV>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetCombinerOutputParameterfvNV' (GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCombinerOutputParameterivNV: stage with: portion with: pname with: params [

	<command: #glGetCombinerOutputParameterivNV>
	<return: 'void'>
	<arg: 'stage' type: 'GLenum' group: #CombinerStageNV>
	<arg: 'portion' type: 'GLenum' group: #CombinerPortionNV>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetCombinerOutputParameterivNV' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCombinerStageParameterfvNV: stage with: pname with: params [

	<command: #glGetCombinerStageParameterfvNV>
	<return: 'void'>
	<arg: 'stage' type: 'GLenum' group: #CombinerStageNV>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetCombinerStageParameterfvNV' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCommandHeaderNV: tokenID with: size [

	<command: #glGetCommandHeaderNV>
	<return: 'GLuint'>
	<arg: 'tokenID' type: 'GLenum'>
	<arg: 'size' type: 'GLuint'>

	<apicall: GLuint 'glGetCommandHeaderNV' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCompressedMultiTexImageEXT: texunit with: target with: lod with: img [

	<command: #glGetCompressedMultiTexImageEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'lod' type: 'GLint' group: #CheckedInt32>
	<arg: 'img' type: 'void*' size: 'COMPSIZE(target,lod)'>

	<apicall: void 'glGetCompressedMultiTexImageEXT' (GLenum GLenum GLint void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCompressedTexImage: target with: level with: img [

	<command: #glGetCompressedTexImage>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'img' type: 'void*' group: #CompressedTextureARB size: 'COMPSIZE(target,level)'>

	<apicall: void 'glGetCompressedTexImage' (GLenum GLint void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCompressedTexImageARB: target with: level with: img [

	<command: #glGetCompressedTexImageARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'img' type: 'void*' group: #CompressedTextureARB size: 'COMPSIZE(target,level)'>

	<apicall: void 'glGetCompressedTexImageARB' (GLenum GLint void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCompressedTextureImage: texture with: level with: bufSize with: pixels [

	<command: #glGetCompressedTextureImage>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'pixels' type: 'void*'>

	<apicall: void 'glGetCompressedTextureImage' (GLuint GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCompressedTextureImageEXT: texture with: target with: lod with: img [

	<command: #glGetCompressedTextureImageEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'lod' type: 'GLint' group: #CheckedInt32>
	<arg: 'img' type: 'void*' size: 'COMPSIZE(target,lod)'>

	<apicall: void 'glGetCompressedTextureImageEXT' (GLuint GLenum GLint void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCompressedTextureSubImage: texture with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: bufSize with: pixels [

	<command: #glGetCompressedTextureSubImage>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'pixels' type: 'void*'>

	<apicall: void 'glGetCompressedTextureSubImage' (GLuint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getConvolutionFilter: target with: format with: type with: image [

	<command: #glGetConvolutionFilter>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'image' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetConvolutionFilter' (GLenum GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getConvolutionFilterEXT: target with: format with: type with: image [

	<command: #glGetConvolutionFilterEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'image' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetConvolutionFilterEXT' (GLenum GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getConvolutionParameterfv: target with: pname with: params [

	<command: #glGetConvolutionParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetConvolutionParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getConvolutionParameterfvEXT: target with: pname with: params [

	<command: #glGetConvolutionParameterfvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetConvolutionParameterfvEXT' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getConvolutionParameteriv: target with: pname with: params [

	<command: #glGetConvolutionParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetConvolutionParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getConvolutionParameterivEXT: target with: pname with: params [

	<command: #glGetConvolutionParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #ConvolutionParameterEXT>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetConvolutionParameterivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getConvolutionParameterxvOES: target with: pname with: params [

	<command: #glGetConvolutionParameterxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetConvolutionParameterxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getCoverageModulationTableNV: bufSize with: v [

	<command: #glGetCoverageModulationTableNV>
	<return: 'void'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glGetCoverageModulationTableNV' (GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDebugMessageLog: count with: bufSize with: sources with: types with: ids with: severities with: lengths with: messageLog [

	<command: #glGetDebugMessageLog>
	<return: 'GLuint'>
	<arg: 'count' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'sources' type: 'GLenum*' group: #DebugSource size: 'count'>
	<arg: 'types' type: 'GLenum*' group: #DebugType size: 'count'>
	<arg: 'ids' type: 'GLuint*' size: 'count'>
	<arg: 'severities' type: 'GLenum*' group: #DebugSeverity size: 'count'>
	<arg: 'lengths' type: 'GLsizei*' size: 'count'>
	<arg: 'messageLog' type: 'GLchar*' size: 'bufSize'>

	<apicall: GLuint 'glGetDebugMessageLog' (GLuint GLsizei GLenum* GLenum* GLuint* GLenum* GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDebugMessageLogAMD: count with: bufSize with: categories with: severities with: ids with: lengths with: message [

	<command: #glGetDebugMessageLogAMD>
	<return: 'GLuint'>
	<arg: 'count' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'categories' type: 'GLenum*' size: 'count'>
	<arg: 'severities' type: 'GLuint*' group: #DebugSeverity size: 'count'>
	<arg: 'ids' type: 'GLuint*' size: 'count'>
	<arg: 'lengths' type: 'GLsizei*' size: 'count'>
	<arg: 'message' type: 'GLchar*' size: 'bufSize'>

	<apicall: GLuint 'glGetDebugMessageLogAMD' (GLuint GLsizei GLenum* GLuint* GLuint* GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDebugMessageLogARB: count with: bufSize with: sources with: types with: ids with: severities with: lengths with: messageLog [

	<command: #glGetDebugMessageLogARB>
	<return: 'GLuint'>
	<arg: 'count' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'sources' type: 'GLenum*' group: #DebugSource size: 'count'>
	<arg: 'types' type: 'GLenum*' group: #DebugType size: 'count'>
	<arg: 'ids' type: 'GLuint*' size: 'count'>
	<arg: 'severities' type: 'GLenum*' group: #DebugSeverity size: 'count'>
	<arg: 'lengths' type: 'GLsizei*' size: 'count'>
	<arg: 'messageLog' type: 'GLchar*' size: 'bufSize'>

	<apicall: GLuint 'glGetDebugMessageLogARB' (GLuint GLsizei GLenum* GLenum* GLuint* GLenum* GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDebugMessageLogKHR: count with: bufSize with: sources with: types with: ids with: severities with: lengths with: messageLog [

	<command: #glGetDebugMessageLogKHR>
	<return: 'GLuint'>
	<arg: 'count' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'sources' type: 'GLenum*' group: #DebugSource size: 'count'>
	<arg: 'types' type: 'GLenum*' group: #DebugType size: 'count'>
	<arg: 'ids' type: 'GLuint*' size: 'count'>
	<arg: 'severities' type: 'GLenum*' group: #DebugSeverity size: 'count'>
	<arg: 'lengths' type: 'GLsizei*' size: 'count'>
	<arg: 'messageLog' type: 'GLchar*' size: 'bufSize'>

	<apicall: GLuint 'glGetDebugMessageLogKHR' (GLuint GLsizei GLenum* GLenum* GLuint* GLenum* GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDetailTexFuncSGIS: target with: points [

	<command: #glGetDetailTexFuncSGIS>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'points' type: 'GLfloat*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetDetailTexFuncSGIS' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDoubleIndexedvEXT: target with: index with: data [

	<command: #glGetDoubleIndexedvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLdouble*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetDoubleIndexedvEXT' (GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDoublei_v: target with: index with: data [

	<command: #'glGetDoublei_v'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLdouble*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetDoublei_v' (GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDoublei_vEXT: pname with: index with: params [

	<command: #'glGetDoublei_vEXT'>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetDoublei_vEXT' (GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDoublev: pname with: data [

	<command: #glGetDoublev>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'data' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetDoublev' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDriverControlStringQCOM: driverControl with: bufSize with: length with: driverControlString [

	<command: #glGetDriverControlStringQCOM>
	<return: 'void'>
	<arg: 'driverControl' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*'>
	<arg: 'driverControlString' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetDriverControlStringQCOM' (GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getDriverControlsQCOM: num with: size with: driverControls [

	<command: #glGetDriverControlsQCOM>
	<return: 'void'>
	<arg: 'num' type: 'GLint*'>
	<arg: 'size' type: 'GLsizei'>
	<arg: 'driverControls' type: 'GLuint*' size: 'size'>

	<apicall: void 'glGetDriverControlsQCOM' (GLint* GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getError [

	<command: #glGetError>
	<return: 'GLenum'>

	<apicall: GLenum 'glGetError' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFenceivNV: fence with: pname with: params [

	<command: #glGetFenceivNV>
	<return: 'void'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>
	<arg: 'pname' type: 'GLenum' group: #FenceParameterNameNV>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFenceivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFinalCombinerInputParameterfvNV: variable with: pname with: params [

	<command: #glGetFinalCombinerInputParameterfvNV>
	<return: 'void'>
	<arg: 'variable' type: 'GLenum' group: #CombinerVariableNV>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFinalCombinerInputParameterfvNV' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFinalCombinerInputParameterivNV: variable with: pname with: params [

	<command: #glGetFinalCombinerInputParameterivNV>
	<return: 'void'>
	<arg: 'variable' type: 'GLenum' group: #CombinerVariableNV>
	<arg: 'pname' type: 'GLenum' group: #CombinerParameterNV>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFinalCombinerInputParameterivNV' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFirstPerfQueryIdINTEL: queryId [

	<command: #glGetFirstPerfQueryIdINTEL>
	<return: 'void'>
	<arg: 'queryId' type: 'GLuint*'>

	<apicall: void 'glGetFirstPerfQueryIdINTEL' (GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFixedv: pname with: params [

	<command: #glGetFixedv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'params' type: 'GLfixed*'>

	<apicall: void 'glGetFixedv' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFixedvOES: pname with: params [

	<command: #glGetFixedvOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFixedvOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFloatIndexedvEXT: target with: index with: data [

	<command: #glGetFloatIndexedvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLfloat*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetFloatIndexedvEXT' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFloati_v: target with: index with: data [

	<command: #'glGetFloati_v'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLfloat*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetFloati_v' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFloati_vEXT: pname with: index with: params [

	<command: #'glGetFloati_vEXT'>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFloati_vEXT' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFloati_vNV: target with: index with: data [

	<command: #'glGetFloati_vNV'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLfloat*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetFloati_vNV' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFloati_vOES: target with: index with: data [

	<command: #'glGetFloati_vOES'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLfloat*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetFloati_vOES' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFloatv: pname with: data [

	<command: #glGetFloatv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'data' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFloatv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFogFuncSGIS: points [

	<command: #glGetFogFuncSGIS>
	<return: 'void'>
	<arg: 'points' type: 'GLfloat*' size: 'COMPSIZE()'>

	<apicall: void 'glGetFogFuncSGIS' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFragDataIndex: program with: name [

	<command: #glGetFragDataIndex>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*'>

	<apicall: GLint 'glGetFragDataIndex' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFragDataIndexEXT: program with: name [

	<command: #glGetFragDataIndexEXT>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*'>

	<apicall: GLint 'glGetFragDataIndexEXT' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFragDataLocation: program with: name [

	<command: #glGetFragDataLocation>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: GLint 'glGetFragDataLocation' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFragDataLocationEXT: program with: name [

	<command: #glGetFragDataLocationEXT>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: GLint 'glGetFragDataLocationEXT' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFragmentLightfvSGIX: light with: pname with: params [

	<command: #glGetFragmentLightfvSGIX>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #FragmentLightNameSGIX>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightParameterSGIX>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFragmentLightfvSGIX' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFragmentLightivSGIX: light with: pname with: params [

	<command: #glGetFragmentLightivSGIX>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #FragmentLightNameSGIX>
	<arg: 'pname' type: 'GLenum' group: #FragmentLightParameterSGIX>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFragmentLightivSGIX' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFragmentMaterialfvSGIX: face with: pname with: params [

	<command: #glGetFragmentMaterialfvSGIX>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFragmentMaterialfvSGIX' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFragmentMaterialivSGIX: face with: pname with: params [

	<command: #glGetFragmentMaterialivSGIX>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFragmentMaterialivSGIX' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFramebufferAttachmentParameteriv: target with: attachment with: pname with: params [

	<command: #glGetFramebufferAttachmentParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'pname' type: 'GLenum' group: #FramebufferAttachmentParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFramebufferAttachmentParameteriv' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFramebufferAttachmentParameterivEXT: target with: attachment with: pname with: params [

	<command: #glGetFramebufferAttachmentParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'pname' type: 'GLenum' group: #FramebufferAttachmentParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFramebufferAttachmentParameterivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFramebufferAttachmentParameterivOES: target with: attachment with: pname with: params [

	<command: #glGetFramebufferAttachmentParameterivOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'pname' type: 'GLenum' group: #FramebufferAttachmentParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFramebufferAttachmentParameterivOES' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFramebufferParameterfvAMD: target with: pname with: numsamples with: pixelindex with: size with: values [

	<command: #glGetFramebufferParameterfvAMD>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'pname' type: 'GLenum' group: #FramebufferAttachmentParameterName>
	<arg: 'numsamples' type: 'GLuint'>
	<arg: 'pixelindex' type: 'GLuint'>
	<arg: 'size' type: 'GLsizei'>
	<arg: 'values' type: 'GLfloat*'>

	<apicall: void 'glGetFramebufferParameterfvAMD' (GLenum GLenum GLuint GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFramebufferParameteriv: target with: pname with: params [

	<command: #glGetFramebufferParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'pname' type: 'GLenum' group: #FramebufferAttachmentParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFramebufferParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFramebufferParameterivEXT: framebuffer with: pname with: params [

	<command: #glGetFramebufferParameterivEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'pname' type: 'GLenum' group: #GetFramebufferParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFramebufferParameterivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFramebufferParameterivMESA: target with: pname with: params [

	<command: #glGetFramebufferParameterivMESA>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'pname' type: 'GLenum' group: #FramebufferAttachmentParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetFramebufferParameterivMESA' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getFramebufferPixelLocalStorageSizeEXT: target [

	<command: #glGetFramebufferPixelLocalStorageSizeEXT>
	<return: 'GLsizei'>
	<arg: 'target' type: 'GLuint' group: #FramebufferTarget>

	<apicall: GLsizei 'glGetFramebufferPixelLocalStorageSizeEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getGraphicsResetStatus [

	<command: #glGetGraphicsResetStatus>
	<return: 'GLenum'>

	<apicall: GLenum 'glGetGraphicsResetStatus' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getGraphicsResetStatusARB [

	<command: #glGetGraphicsResetStatusARB>
	<return: 'GLenum'>

	<apicall: GLenum 'glGetGraphicsResetStatusARB' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getGraphicsResetStatusEXT [

	<command: #glGetGraphicsResetStatusEXT>
	<return: 'GLenum'>

	<apicall: GLenum 'glGetGraphicsResetStatusEXT' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getGraphicsResetStatusKHR [

	<command: #glGetGraphicsResetStatusKHR>
	<return: 'GLenum'>

	<apicall: GLenum 'glGetGraphicsResetStatusKHR' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getHandleARB: pname [

	<command: #glGetHandleARB>
	<return: 'GLhandleARB'>
	<arg: 'pname' type: 'GLenum'>

	<apicall: GLhandleARB 'glGetHandleARB' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getHistogram: target with: reset with: format with: type with: values [

	<command: #glGetHistogram>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'reset' type: 'GLboolean' group: #Boolean>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'values' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetHistogram' (GLenum GLboolean GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getHistogramEXT: target with: reset with: format with: type with: values [

	<command: #glGetHistogramEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'reset' type: 'GLboolean' group: #Boolean>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'values' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetHistogramEXT' (GLenum GLboolean GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getHistogramParameterfv: target with: pname with: params [

	<command: #glGetHistogramParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetHistogramParameterPNameEXT>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetHistogramParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getHistogramParameterfvEXT: target with: pname with: params [

	<command: #glGetHistogramParameterfvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetHistogramParameterPNameEXT>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetHistogramParameterfvEXT' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getHistogramParameteriv: target with: pname with: params [

	<command: #glGetHistogramParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetHistogramParameterPNameEXT>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetHistogramParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getHistogramParameterivEXT: target with: pname with: params [

	<command: #glGetHistogramParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetHistogramParameterPNameEXT>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetHistogramParameterivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getHistogramParameterxvOES: target with: pname with: params [

	<command: #glGetHistogramParameterxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetHistogramParameterPNameEXT>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetHistogramParameterxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getImageHandleARB: texture with: level with: layered with: layer with: format [

	<command: #glGetImageHandleARB>
	<return: 'GLuint64'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'layered' type: 'GLboolean' group: #Boolean>
	<arg: 'layer' type: 'GLint'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>

	<apicall: GLuint64 'glGetImageHandleARB' (GLuint GLint GLboolean GLint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getImageHandleNV: texture with: level with: layered with: layer with: format [

	<command: #glGetImageHandleNV>
	<return: 'GLuint64'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'layered' type: 'GLboolean' group: #Boolean>
	<arg: 'layer' type: 'GLint'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>

	<apicall: GLuint64 'glGetImageHandleNV' (GLuint GLint GLboolean GLint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getImageTransformParameterfvHP: target with: pname with: params [

	<command: #glGetImageTransformParameterfvHP>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ImageTransformTargetHP>
	<arg: 'pname' type: 'GLenum' group: #ImageTransformPNameHP>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetImageTransformParameterfvHP' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getImageTransformParameterivHP: target with: pname with: params [

	<command: #glGetImageTransformParameterivHP>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ImageTransformTargetHP>
	<arg: 'pname' type: 'GLenum' group: #ImageTransformPNameHP>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetImageTransformParameterivHP' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInfoLogARB: obj with: maxLength with: length with: infoLog [

	<command: #glGetInfoLogARB>
	<return: 'void'>
	<arg: 'obj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'maxLength' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'infoLog' type: 'GLcharARB*' size: 'maxLength'>

	<apicall: void 'glGetInfoLogARB' (GLhandleARB GLsizei GLsizei* GLcharARB*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInstrumentsSGIX [

	<command: #glGetInstrumentsSGIX>
	<return: 'GLint'>

	<apicall: GLint 'glGetInstrumentsSGIX' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInteger64i_v: target with: index with: data [

	<command: #'glGetInteger64i_v'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLint64*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetInteger64i_v' (GLenum GLuint GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInteger64v: pname with: data [

	<command: #glGetInteger64v>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'data' type: 'GLint64*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetInteger64v' (GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInteger64vAPPLE: pname with: params [

	<command: #glGetInteger64vAPPLE>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'params' type: 'GLint64*'>

	<apicall: void 'glGetInteger64vAPPLE' (GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInteger64vEXT: pname with: data [

	<command: #glGetInteger64vEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'data' type: 'GLint64*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetInteger64vEXT' (GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getIntegerIndexedvEXT: target with: index with: data [

	<command: #glGetIntegerIndexedvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLint*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetIntegerIndexedvEXT' (GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getIntegeri_v: target with: index with: data [

	<command: #'glGetIntegeri_v'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLint*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetIntegeri_v' (GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getIntegeri_vEXT: target with: index with: data [

	<command: #'glGetIntegeri_vEXT'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #GetPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLint*'>

	<apicall: void 'glGetIntegeri_vEXT' (GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getIntegerui64i_vNV: value with: index with: result [

	<command: #'glGetIntegerui64i_vNV'>
	<return: 'void'>
	<arg: 'value' type: 'GLenum'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'result' type: 'GLuint64EXT*' size: 'COMPSIZE(value)'>

	<apicall: void 'glGetIntegerui64i_vNV' (GLenum GLuint GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getIntegerui64vNV: value with: result [

	<command: #glGetIntegerui64vNV>
	<return: 'void'>
	<arg: 'value' type: 'GLenum'>
	<arg: 'result' type: 'GLuint64EXT*' size: 'COMPSIZE(value)'>

	<apicall: void 'glGetIntegerui64vNV' (GLenum GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getIntegerv: pname with: data [

	<command: #glGetIntegerv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'data' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetIntegerv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInternalformatSampleivNV: target with: internalformat with: samples with: pname with: count with: params [

	<command: #glGetInternalformatSampleivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'pname' type: 'GLenum' group: #InternalFormatPName>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'count'>

	<apicall: void 'glGetInternalformatSampleivNV' (GLenum GLenum GLsizei GLenum GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInternalformati64v: target with: internalformat with: pname with: count with: params [

	<command: #glGetInternalformati64v>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'pname' type: 'GLenum' group: #InternalFormatPName>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLint64*' size: 'count'>

	<apicall: void 'glGetInternalformati64v' (GLenum GLenum GLenum GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInternalformativ: target with: internalformat with: pname with: count with: params [

	<command: #glGetInternalformativ>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'pname' type: 'GLenum' group: #InternalFormatPName>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'count'>

	<apicall: void 'glGetInternalformativ' (GLenum GLenum GLenum GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInvariantBooleanvEXT: id with: value with: data [

	<command: #glGetInvariantBooleanvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLboolean*' group: #Boolean size: 'COMPSIZE(id)'>

	<apicall: void 'glGetInvariantBooleanvEXT' (GLuint GLenum GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInvariantFloatvEXT: id with: value with: data [

	<command: #glGetInvariantFloatvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLfloat*' size: 'COMPSIZE(id)'>

	<apicall: void 'glGetInvariantFloatvEXT' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getInvariantIntegervEXT: id with: value with: data [

	<command: #glGetInvariantIntegervEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLint*' size: 'COMPSIZE(id)'>

	<apicall: void 'glGetInvariantIntegervEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getLightfv: light with: pname with: params [

	<command: #glGetLightfv>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetLightfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getLightiv: light with: pname with: params [

	<command: #glGetLightiv>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetLightiv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getLightxOES: light with: pname with: params [

	<command: #glGetLightxOES>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetLightxOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getLightxv: light with: pname with: params [

	<command: #glGetLightxv>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetLightxv' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getLightxvOES: light with: pname with: params [

	<command: #glGetLightxvOES>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetLightxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getListParameterfvSGIX: list with: pname with: params [

	<command: #glGetListParameterfvSGIX>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>
	<arg: 'pname' type: 'GLenum' group: #ListParameterName>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetListParameterfvSGIX' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getListParameterivSGIX: list with: pname with: params [

	<command: #glGetListParameterivSGIX>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>
	<arg: 'pname' type: 'GLenum' group: #ListParameterName>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetListParameterivSGIX' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getLocalConstantBooleanvEXT: id with: value with: data [

	<command: #glGetLocalConstantBooleanvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLboolean*' group: #Boolean size: 'COMPSIZE(id)'>

	<apicall: void 'glGetLocalConstantBooleanvEXT' (GLuint GLenum GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getLocalConstantFloatvEXT: id with: value with: data [

	<command: #glGetLocalConstantFloatvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLfloat*' size: 'COMPSIZE(id)'>

	<apicall: void 'glGetLocalConstantFloatvEXT' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getLocalConstantIntegervEXT: id with: value with: data [

	<command: #glGetLocalConstantIntegervEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLint*' size: 'COMPSIZE(id)'>

	<apicall: void 'glGetLocalConstantIntegervEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapAttribParameterfvNV: target with: index with: pname with: params [

	<command: #glGetMapAttribParameterfvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #MapAttribParameterNV>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMapAttribParameterfvNV' (GLenum GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapAttribParameterivNV: target with: index with: pname with: params [

	<command: #glGetMapAttribParameterivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #MapAttribParameterNV>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMapAttribParameterivNV' (GLenum GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapControlPointsNV: target with: index with: type with: ustride with: vstride with: packed with: points [

	<command: #glGetMapControlPointsNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #MapTypeNV>
	<arg: 'ustride' type: 'GLsizei'>
	<arg: 'vstride' type: 'GLsizei'>
	<arg: 'packed' type: 'GLboolean' group: #Boolean>
	<arg: 'points' type: 'void*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetMapControlPointsNV' (GLenum GLuint GLenum GLsizei GLsizei GLboolean void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapParameterfvNV: target with: pname with: params [

	<command: #glGetMapParameterfvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'pname' type: 'GLenum' group: #MapParameterNV>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(target,pname)'>

	<apicall: void 'glGetMapParameterfvNV' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapParameterivNV: target with: pname with: params [

	<command: #glGetMapParameterivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'pname' type: 'GLenum' group: #MapParameterNV>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(target,pname)'>

	<apicall: void 'glGetMapParameterivNV' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapdv: target with: query with: v [

	<command: #glGetMapdv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #GetMapQuery>
	<arg: 'v' type: 'GLdouble*' size: 'COMPSIZE(target,query)'>

	<apicall: void 'glGetMapdv' (GLenum GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapfv: target with: query with: v [

	<command: #glGetMapfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #GetMapQuery>
	<arg: 'v' type: 'GLfloat*' size: 'COMPSIZE(target,query)'>

	<apicall: void 'glGetMapfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapiv: target with: query with: v [

	<command: #glGetMapiv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #GetMapQuery>
	<arg: 'v' type: 'GLint*' size: 'COMPSIZE(target,query)'>

	<apicall: void 'glGetMapiv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMapxvOES: target with: query with: v [

	<command: #glGetMapxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #GetMapQuery>
	<arg: 'v' type: 'GLfixed*' size: 'COMPSIZE(query)'>

	<apicall: void 'glGetMapxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMaterialfv: face with: pname with: params [

	<command: #glGetMaterialfv>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMaterialfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMaterialiv: face with: pname with: params [

	<command: #glGetMaterialiv>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMaterialiv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMaterialxOES: face with: pname with: param [

	<command: #glGetMaterialxOES>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glGetMaterialxOES' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMaterialxv: face with: pname with: params [

	<command: #glGetMaterialxv>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMaterialxv' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMaterialxvOES: face with: pname with: params [

	<command: #glGetMaterialxvOES>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMaterialxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMemoryObjectDetachedResourcesuivNV: memory with: pname with: first with: count with: params [

	<command: #glGetMemoryObjectDetachedResourcesuivNV>
	<return: 'void'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*'>

	<apicall: void 'glGetMemoryObjectDetachedResourcesuivNV' (GLuint GLenum GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMemoryObjectParameterivEXT: memoryObject with: pname with: params [

	<command: #glGetMemoryObjectParameterivEXT>
	<return: 'void'>
	<arg: 'memoryObject' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #MemoryObjectParameterName>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetMemoryObjectParameterivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMinmax: target with: reset with: format with: type with: values [

	<command: #glGetMinmax>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'reset' type: 'GLboolean' group: #Boolean>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'values' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetMinmax' (GLenum GLboolean GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMinmaxEXT: target with: reset with: format with: type with: values [

	<command: #glGetMinmaxEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'reset' type: 'GLboolean' group: #Boolean>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'values' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetMinmaxEXT' (GLenum GLboolean GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMinmaxParameterfv: target with: pname with: params [

	<command: #glGetMinmaxParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetMinmaxParameterPNameEXT>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMinmaxParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMinmaxParameterfvEXT: target with: pname with: params [

	<command: #glGetMinmaxParameterfvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetMinmaxParameterPNameEXT>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMinmaxParameterfvEXT' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMinmaxParameteriv: target with: pname with: params [

	<command: #glGetMinmaxParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetMinmaxParameterPNameEXT>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMinmaxParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMinmaxParameterivEXT: target with: pname with: params [

	<command: #glGetMinmaxParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #GetMinmaxParameterPNameEXT>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMinmaxParameterivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexEnvfvEXT: texunit with: target with: pname with: params [

	<command: #glGetMultiTexEnvfvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexEnvfvEXT' (GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexEnvivEXT: texunit with: target with: pname with: params [

	<command: #glGetMultiTexEnvivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexEnvivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexGendvEXT: texunit with: coord with: pname with: params [

	<command: #glGetMultiTexGendvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexGendvEXT' (GLenum GLenum GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexGenfvEXT: texunit with: coord with: pname with: params [

	<command: #glGetMultiTexGenfvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexGenfvEXT' (GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexGenivEXT: texunit with: coord with: pname with: params [

	<command: #glGetMultiTexGenivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexGenivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexImageEXT: texunit with: target with: level with: format with: type with: pixels [

	<command: #glGetMultiTexImageEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(target,level,format,type)'>

	<apicall: void 'glGetMultiTexImageEXT' (GLenum GLenum GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexLevelParameterfvEXT: texunit with: target with: level with: pname with: params [

	<command: #glGetMultiTexLevelParameterfvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexLevelParameterfvEXT' (GLenum GLenum GLint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexLevelParameterivEXT: texunit with: target with: level with: pname with: params [

	<command: #glGetMultiTexLevelParameterivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexLevelParameterivEXT' (GLenum GLenum GLint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexParameterIivEXT: texunit with: target with: pname with: params [

	<command: #glGetMultiTexParameterIivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexParameterIivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexParameterIuivEXT: texunit with: target with: pname with: params [

	<command: #glGetMultiTexParameterIuivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexParameterIuivEXT' (GLenum GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexParameterfvEXT: texunit with: target with: pname with: params [

	<command: #glGetMultiTexParameterfvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexParameterfvEXT' (GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultiTexParameterivEXT: texunit with: target with: pname with: params [

	<command: #glGetMultiTexParameterivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultiTexParameterivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultisamplefv: pname with: index with: val [

	<command: #glGetMultisamplefv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetMultisamplePNameNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'val' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetMultisamplefv' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getMultisamplefvNV: pname with: index with: val [

	<command: #glGetMultisamplefvNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetMultisamplePNameNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'val' type: 'GLfloat*' size: '2'>

	<apicall: void 'glGetMultisamplefvNV' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedBufferParameteri64v: buffer with: pname with: params [

	<command: #glGetNamedBufferParameteri64v>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #BufferPNameARB>
	<arg: 'params' type: 'GLint64*'>

	<apicall: void 'glGetNamedBufferParameteri64v' (GLuint GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedBufferParameteriv: buffer with: pname with: params [

	<command: #glGetNamedBufferParameteriv>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #BufferPNameARB>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetNamedBufferParameteriv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedBufferParameterivEXT: buffer with: pname with: params [

	<command: #glGetNamedBufferParameterivEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #BufferPNameARB>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetNamedBufferParameterivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedBufferParameterui64vNV: buffer with: pname with: params [

	<command: #glGetNamedBufferParameterui64vNV>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #BufferPNameARB>
	<arg: 'params' type: 'GLuint64EXT*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetNamedBufferParameterui64vNV' (GLuint GLenum GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedBufferPointerv: buffer with: pname with: params [

	<command: #glGetNamedBufferPointerv>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #BufferPointerNameARB>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetNamedBufferPointerv' (GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedBufferPointervEXT: buffer with: pname with: params [

	<command: #glGetNamedBufferPointervEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #BufferPointerNameARB>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetNamedBufferPointervEXT' (GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedBufferSubData: buffer with: offset with: size with: data [

	<command: #glGetNamedBufferSubData>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*'>

	<apicall: void 'glGetNamedBufferSubData' (GLuint GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedBufferSubDataEXT: buffer with: offset with: size with: data [

	<command: #glGetNamedBufferSubDataEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(size)'>

	<apicall: void 'glGetNamedBufferSubDataEXT' (GLuint GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedFramebufferAttachmentParameteriv: framebuffer with: attachment with: pname with: params [

	<command: #glGetNamedFramebufferAttachmentParameteriv>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'pname' type: 'GLenum' group: #FramebufferAttachmentParameterName>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetNamedFramebufferAttachmentParameteriv' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedFramebufferAttachmentParameterivEXT: framebuffer with: attachment with: pname with: params [

	<command: #glGetNamedFramebufferAttachmentParameterivEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'pname' type: 'GLenum' group: #FramebufferAttachmentParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetNamedFramebufferAttachmentParameterivEXT' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedFramebufferParameterfvAMD: framebuffer with: pname with: numsamples with: pixelindex with: size with: values [

	<command: #glGetNamedFramebufferParameterfvAMD>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'numsamples' type: 'GLuint'>
	<arg: 'pixelindex' type: 'GLuint'>
	<arg: 'size' type: 'GLsizei'>
	<arg: 'values' type: 'GLfloat*'>

	<apicall: void 'glGetNamedFramebufferParameterfvAMD' (GLuint GLenum GLuint GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedFramebufferParameteriv: framebuffer with: pname with: param [

	<command: #glGetNamedFramebufferParameteriv>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #GetFramebufferParameter>
	<arg: 'param' type: 'GLint*'>

	<apicall: void 'glGetNamedFramebufferParameteriv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedFramebufferParameterivEXT: framebuffer with: pname with: params [

	<command: #glGetNamedFramebufferParameterivEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'pname' type: 'GLenum' group: #GetFramebufferParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetNamedFramebufferParameterivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedProgramLocalParameterIivEXT: program with: target with: index with: params [

	<command: #glGetNamedProgramLocalParameterIivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glGetNamedProgramLocalParameterIivEXT' (GLuint GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedProgramLocalParameterIuivEXT: program with: target with: index with: params [

	<command: #glGetNamedProgramLocalParameterIuivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLuint*' size: '4'>

	<apicall: void 'glGetNamedProgramLocalParameterIuivEXT' (GLuint GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedProgramLocalParameterdvEXT: program with: target with: index with: params [

	<command: #glGetNamedProgramLocalParameterdvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glGetNamedProgramLocalParameterdvEXT' (GLuint GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedProgramLocalParameterfvEXT: program with: target with: index with: params [

	<command: #glGetNamedProgramLocalParameterfvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetNamedProgramLocalParameterfvEXT' (GLuint GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedProgramStringEXT: program with: target with: pname with: string [

	<command: #glGetNamedProgramStringEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'pname' type: 'GLenum' group: #ProgramStringProperty>
	<arg: 'string' type: 'void*' size: 'COMPSIZE(program,pname)'>

	<apicall: void 'glGetNamedProgramStringEXT' (GLuint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedProgramivEXT: program with: target with: pname with: params [

	<command: #glGetNamedProgramivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'pname' type: 'GLenum' group: #ProgramPropertyARB>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetNamedProgramivEXT' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedRenderbufferParameteriv: renderbuffer with: pname with: params [

	<command: #glGetNamedRenderbufferParameteriv>
	<return: 'void'>
	<arg: 'renderbuffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #RenderbufferParameterName>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetNamedRenderbufferParameteriv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedRenderbufferParameterivEXT: renderbuffer with: pname with: params [

	<command: #glGetNamedRenderbufferParameterivEXT>
	<return: 'void'>
	<arg: 'renderbuffer' type: 'GLuint' group: #Renderbuffer>
	<arg: 'pname' type: 'GLenum' group: #RenderbufferParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetNamedRenderbufferParameterivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedStringARB: namelen with: name with: bufSize with: stringlen with: string [

	<command: #glGetNamedStringARB>
	<return: 'void'>
	<arg: 'namelen' type: 'GLint'>
	<arg: 'name' type: 'GLchar*' size: 'namelen'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'stringlen' type: 'GLint*' size: '1'>
	<arg: 'string' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetNamedStringARB' (GLint GLchar* GLsizei GLint* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNamedStringivARB: namelen with: name with: pname with: params [

	<command: #glGetNamedStringivARB>
	<return: 'void'>
	<arg: 'namelen' type: 'GLint'>
	<arg: 'name' type: 'GLchar*' size: 'namelen'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetNamedStringivARB' (GLint GLchar* GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getNextPerfQueryIdINTEL: queryId with: nextQueryId [

	<command: #glGetNextPerfQueryIdINTEL>
	<return: 'void'>
	<arg: 'queryId' type: 'GLuint'>
	<arg: 'nextQueryId' type: 'GLuint*'>

	<apicall: void 'glGetNextPerfQueryIdINTEL' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectBufferfvATI: buffer with: pname with: params [

	<command: #glGetObjectBufferfvATI>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ArrayObjectPNameATI>
	<arg: 'params' type: 'GLfloat*' size: '1'>

	<apicall: void 'glGetObjectBufferfvATI' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectBufferivATI: buffer with: pname with: params [

	<command: #glGetObjectBufferivATI>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ArrayObjectPNameATI>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetObjectBufferivATI' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectLabel: identifier with: name with: bufSize with: length with: label [

	<command: #glGetObjectLabel>
	<return: 'void'>
	<arg: 'identifier' type: 'GLenum' group: #ObjectIdentifier>
	<arg: 'name' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'label' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetObjectLabel' (GLenum GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectLabelEXT: type with: object with: bufSize with: length with: label [

	<command: #glGetObjectLabelEXT>
	<return: 'void'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'object' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'label' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetObjectLabelEXT' (GLenum GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectLabelKHR: identifier with: name with: bufSize with: length with: label [

	<command: #glGetObjectLabelKHR>
	<return: 'void'>
	<arg: 'identifier' type: 'GLenum'>
	<arg: 'name' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*'>
	<arg: 'label' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetObjectLabelKHR' (GLenum GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectParameterfvARB: obj with: pname with: params [

	<command: #glGetObjectParameterfvARB>
	<return: 'void'>
	<arg: 'obj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetObjectParameterfvARB' (GLhandleARB GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectParameterivAPPLE: objectType with: name with: pname with: params [

	<command: #glGetObjectParameterivAPPLE>
	<return: 'void'>
	<arg: 'objectType' type: 'GLenum'>
	<arg: 'name' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetObjectParameterivAPPLE' (GLenum GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectParameterivARB: obj with: pname with: params [

	<command: #glGetObjectParameterivARB>
	<return: 'void'>
	<arg: 'obj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetObjectParameterivARB' (GLhandleARB GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectPtrLabel: ptr with: bufSize with: length with: label [

	<command: #glGetObjectPtrLabel>
	<return: 'void'>
	<arg: 'ptr' type: 'void*'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'label' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetObjectPtrLabel' (void* GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getObjectPtrLabelKHR: ptr with: bufSize with: length with: label [

	<command: #glGetObjectPtrLabelKHR>
	<return: 'void'>
	<arg: 'ptr' type: 'void*'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'label' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetObjectPtrLabelKHR' (void* GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getOcclusionQueryivNV: id with: pname with: params [

	<command: #glGetOcclusionQueryivNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #OcclusionQueryParameterNameNV>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetOcclusionQueryivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getOcclusionQueryuivNV: id with: pname with: params [

	<command: #glGetOcclusionQueryuivNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #OcclusionQueryParameterNameNV>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetOcclusionQueryuivNV' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathColorGenfvNV: color with: pname with: value [

	<command: #glGetPathColorGenfvNV>
	<return: 'void'>
	<arg: 'color' type: 'GLenum' group: #PathColor>
	<arg: 'pname' type: 'GLenum' group: #PathGenMode>
	<arg: 'value' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPathColorGenfvNV' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathColorGenivNV: color with: pname with: value [

	<command: #glGetPathColorGenivNV>
	<return: 'void'>
	<arg: 'color' type: 'GLenum' group: #PathColor>
	<arg: 'pname' type: 'GLenum' group: #PathGenMode>
	<arg: 'value' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPathColorGenivNV' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathCommandsNV: path with: commands [

	<command: #glGetPathCommandsNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'commands' type: 'GLubyte*' group: #PathCommand size: 'COMPSIZE(path)'>

	<apicall: void 'glGetPathCommandsNV' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathCoordsNV: path with: coords [

	<command: #glGetPathCoordsNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'coords' type: 'GLfloat*' size: 'COMPSIZE(path)'>

	<apicall: void 'glGetPathCoordsNV' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathDashArrayNV: path with: dashArray [

	<command: #glGetPathDashArrayNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'dashArray' type: 'GLfloat*' size: 'COMPSIZE(path)'>

	<apicall: void 'glGetPathDashArrayNV' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathLengthNV: path with: startSegment with: numSegments [

	<command: #glGetPathLengthNV>
	<return: 'GLfloat'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'startSegment' type: 'GLsizei'>
	<arg: 'numSegments' type: 'GLsizei'>

	<apicall: GLfloat 'glGetPathLengthNV' (GLuint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathMetricRangeNV: metricQueryMask with: firstPathName with: numPaths with: stride with: metrics [

	<command: #glGetPathMetricRangeNV>
	<return: 'void'>
	<arg: 'metricQueryMask' type: 'GLbitfield' group: #PathMetricMask>
	<arg: 'firstPathName' type: 'GLuint' group: #Path>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'metrics' type: 'GLfloat*' size: 'COMPSIZE(metricQueryMask,numPaths,stride)'>

	<apicall: void 'glGetPathMetricRangeNV' (GLbitfield GLuint GLsizei GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathMetricsNV: metricQueryMask with: numPaths with: pathNameType with: paths with: pathBase with: stride with: metrics [

	<command: #glGetPathMetricsNV>
	<return: 'void'>
	<arg: 'metricQueryMask' type: 'GLbitfield' group: #PathMetricMask>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'pathNameType' type: 'GLenum' group: #PathElementType>
	<arg: 'paths' type: 'void*' group: #PathElement size: 'COMPSIZE(numPaths,pathNameType,paths)'>
	<arg: 'pathBase' type: 'GLuint' group: #Path>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'metrics' type: 'GLfloat*' size: 'COMPSIZE(metricQueryMask,numPaths,stride)'>

	<apicall: void 'glGetPathMetricsNV' (GLbitfield GLsizei GLenum void* GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathParameterfvNV: path with: pname with: value [

	<command: #glGetPathParameterfvNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'pname' type: 'GLenum' group: #PathParameter>
	<arg: 'value' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetPathParameterfvNV' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathParameterivNV: path with: pname with: value [

	<command: #glGetPathParameterivNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'pname' type: 'GLenum' group: #PathParameter>
	<arg: 'value' type: 'GLint*' size: '4'>

	<apicall: void 'glGetPathParameterivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathSpacingNV: pathListMode with: numPaths with: pathNameType with: paths with: pathBase with: advanceScale with: kerningScale with: transformType with: returnedSpacing [

	<command: #glGetPathSpacingNV>
	<return: 'void'>
	<arg: 'pathListMode' type: 'GLenum' group: #PathListMode>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'pathNameType' type: 'GLenum' group: #PathElementType>
	<arg: 'paths' type: 'void*' group: #PathElement size: 'COMPSIZE(numPaths,pathNameType,paths)'>
	<arg: 'pathBase' type: 'GLuint' group: #Path>
	<arg: 'advanceScale' type: 'GLfloat'>
	<arg: 'kerningScale' type: 'GLfloat'>
	<arg: 'transformType' type: 'GLenum' group: #PathTransformType>
	<arg: 'returnedSpacing' type: 'GLfloat*' size: 'COMPSIZE(pathListMode,numPaths)'>

	<apicall: void 'glGetPathSpacingNV' (GLenum GLsizei GLenum void* GLuint GLfloat GLfloat GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathTexGenfvNV: texCoordSet with: pname with: value [

	<command: #glGetPathTexGenfvNV>
	<return: 'void'>
	<arg: 'texCoordSet' type: 'GLenum' group: #TextureUnit>
	<arg: 'pname' type: 'GLenum' group: #PathGenMode>
	<arg: 'value' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPathTexGenfvNV' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPathTexGenivNV: texCoordSet with: pname with: value [

	<command: #glGetPathTexGenivNV>
	<return: 'void'>
	<arg: 'texCoordSet' type: 'GLenum' group: #TextureUnit>
	<arg: 'pname' type: 'GLenum' group: #PathGenMode>
	<arg: 'value' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPathTexGenivNV' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfCounterInfoINTEL: queryId with: counterId with: counterNameLength with: counterName with: counterDescLength with: counterDesc with: counterOffset with: counterDataSize with: counterTypeEnum with: counterDataTypeEnum with: rawCounterMaxValue [

	<command: #glGetPerfCounterInfoINTEL>
	<return: 'void'>
	<arg: 'queryId' type: 'GLuint'>
	<arg: 'counterId' type: 'GLuint'>
	<arg: 'counterNameLength' type: 'GLuint'>
	<arg: 'counterName' type: 'GLchar*'>
	<arg: 'counterDescLength' type: 'GLuint'>
	<arg: 'counterDesc' type: 'GLchar*'>
	<arg: 'counterOffset' type: 'GLuint*'>
	<arg: 'counterDataSize' type: 'GLuint*'>
	<arg: 'counterTypeEnum' type: 'GLuint*'>
	<arg: 'counterDataTypeEnum' type: 'GLuint*'>
	<arg: 'rawCounterMaxValue' type: 'GLuint64*'>

	<apicall: void 'glGetPerfCounterInfoINTEL' (GLuint GLuint GLuint GLchar* GLuint GLchar* GLuint* GLuint* GLuint* GLuint* GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfMonitorCounterDataAMD: monitor with: pname with: dataSize with: data with: bytesWritten [

	<command: #glGetPerfMonitorCounterDataAMD>
	<return: 'void'>
	<arg: 'monitor' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'dataSize' type: 'GLsizei'>
	<arg: 'data' type: 'GLuint*' size: 'dataSize / 4'>
	<arg: 'bytesWritten' type: 'GLint*' size: '1'>

	<apicall: void 'glGetPerfMonitorCounterDataAMD' (GLuint GLenum GLsizei GLuint* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfMonitorCounterInfoAMD: group with: counter with: pname with: data [

	<command: #glGetPerfMonitorCounterInfoAMD>
	<return: 'void'>
	<arg: 'group' type: 'GLuint'>
	<arg: 'counter' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPerfMonitorCounterInfoAMD' (GLuint GLuint GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfMonitorCounterStringAMD: group with: counter with: bufSize with: length with: counterString [

	<command: #glGetPerfMonitorCounterStringAMD>
	<return: 'void'>
	<arg: 'group' type: 'GLuint'>
	<arg: 'counter' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'counterString' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetPerfMonitorCounterStringAMD' (GLuint GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfMonitorCountersAMD: group with: numCounters with: maxActiveCounters with: counterSize with: counters [

	<command: #glGetPerfMonitorCountersAMD>
	<return: 'void'>
	<arg: 'group' type: 'GLuint'>
	<arg: 'numCounters' type: 'GLint*' size: '1'>
	<arg: 'maxActiveCounters' type: 'GLint*' size: '1'>
	<arg: 'counterSize' type: 'GLsizei'>
	<arg: 'counters' type: 'GLuint*' size: 'counterSize'>

	<apicall: void 'glGetPerfMonitorCountersAMD' (GLuint GLint* GLint* GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfMonitorGroupStringAMD: group with: bufSize with: length with: groupString [

	<command: #glGetPerfMonitorGroupStringAMD>
	<return: 'void'>
	<arg: 'group' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'groupString' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetPerfMonitorGroupStringAMD' (GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfMonitorGroupsAMD: numGroups with: groupsSize with: groups [

	<command: #glGetPerfMonitorGroupsAMD>
	<return: 'void'>
	<arg: 'numGroups' type: 'GLint*' size: '1'>
	<arg: 'groupsSize' type: 'GLsizei'>
	<arg: 'groups' type: 'GLuint*' size: 'groupsSize'>

	<apicall: void 'glGetPerfMonitorGroupsAMD' (GLint* GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfQueryDataINTEL: queryHandle with: flags with: dataSize with: data with: bytesWritten [

	<command: #glGetPerfQueryDataINTEL>
	<return: 'void'>
	<arg: 'queryHandle' type: 'GLuint'>
	<arg: 'flags' type: 'GLuint'>
	<arg: 'dataSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*'>
	<arg: 'bytesWritten' type: 'GLuint*'>

	<apicall: void 'glGetPerfQueryDataINTEL' (GLuint GLuint GLsizei void* GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfQueryIdByNameINTEL: queryName with: queryId [

	<command: #glGetPerfQueryIdByNameINTEL>
	<return: 'void'>
	<arg: 'queryName' type: 'GLchar*'>
	<arg: 'queryId' type: 'GLuint*'>

	<apicall: void 'glGetPerfQueryIdByNameINTEL' (GLchar* GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPerfQueryInfoINTEL: queryId with: queryNameLength with: queryName with: dataSize with: noCounters with: noInstances with: capsMask [

	<command: #glGetPerfQueryInfoINTEL>
	<return: 'void'>
	<arg: 'queryId' type: 'GLuint'>
	<arg: 'queryNameLength' type: 'GLuint'>
	<arg: 'queryName' type: 'GLchar*'>
	<arg: 'dataSize' type: 'GLuint*'>
	<arg: 'noCounters' type: 'GLuint*'>
	<arg: 'noInstances' type: 'GLuint*'>
	<arg: 'capsMask' type: 'GLuint*'>

	<apicall: void 'glGetPerfQueryInfoINTEL' (GLuint GLuint GLchar* GLuint* GLuint* GLuint* GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPixelMapfv: map with: values [

	<command: #glGetPixelMapfv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'values' type: 'GLfloat*' size: 'COMPSIZE(map)'>

	<apicall: void 'glGetPixelMapfv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPixelMapuiv: map with: values [

	<command: #glGetPixelMapuiv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'values' type: 'GLuint*' size: 'COMPSIZE(map)'>

	<apicall: void 'glGetPixelMapuiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPixelMapusv: map with: values [

	<command: #glGetPixelMapusv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'values' type: 'GLushort*' size: 'COMPSIZE(map)'>

	<apicall: void 'glGetPixelMapusv' (GLenum GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPixelMapxv: map with: size with: values [

	<command: #glGetPixelMapxv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'size' type: 'GLint'>
	<arg: 'values' type: 'GLfixed*' size: 'size'>

	<apicall: void 'glGetPixelMapxv' (GLenum GLint GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPixelTexGenParameterfvSGIS: pname with: params [

	<command: #glGetPixelTexGenParameterfvSGIS>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTexGenParameterNameSGIS>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPixelTexGenParameterfvSGIS' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPixelTexGenParameterivSGIS: pname with: params [

	<command: #glGetPixelTexGenParameterivSGIS>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTexGenParameterNameSGIS>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPixelTexGenParameterivSGIS' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPixelTransformParameterfvEXT: target with: pname with: params [

	<command: #glGetPixelTransformParameterfvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPixelTransformParameterfvEXT' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPixelTransformParameterivEXT: target with: pname with: params [

	<command: #glGetPixelTransformParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetPixelTransformParameterivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPointerIndexedvEXT: target with: index with: data [

	<command: #glGetPointerIndexedvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'void**' size: '1'>

	<apicall: void 'glGetPointerIndexedvEXT' (GLenum GLuint void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPointeri_vEXT: pname with: index with: params [

	<command: #'glGetPointeri_vEXT'>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetPointeri_vEXT' (GLenum GLuint void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPointerv: pname with: params [

	<command: #glGetPointerv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPointervPName>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetPointerv' (GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPointervEXT: pname with: params [

	<command: #glGetPointervEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPointervPName>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetPointervEXT' (GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPointervKHR: pname with: params [

	<command: #glGetPointervKHR>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetPointervKHR' (GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getPolygonStipple: mask [

	<command: #glGetPolygonStipple>
	<return: 'void'>
	<arg: 'mask' type: 'GLubyte*' size: 'COMPSIZE()'>

	<apicall: void 'glGetPolygonStipple' (GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramBinary: program with: bufSize with: length with: binaryFormat with: binary [

	<command: #glGetProgramBinary>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'binaryFormat' type: 'GLenum*' size: '1'>
	<arg: 'binary' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetProgramBinary' (GLuint GLsizei GLsizei* GLenum* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramBinaryOES: program with: bufSize with: length with: binaryFormat with: binary [

	<command: #glGetProgramBinaryOES>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'binaryFormat' type: 'GLenum*' size: '1'>
	<arg: 'binary' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetProgramBinaryOES' (GLuint GLsizei GLsizei* GLenum* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramEnvParameterIivNV: target with: index with: params [

	<command: #glGetProgramEnvParameterIivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glGetProgramEnvParameterIivNV' (GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramEnvParameterIuivNV: target with: index with: params [

	<command: #glGetProgramEnvParameterIuivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLuint*' size: '4'>

	<apicall: void 'glGetProgramEnvParameterIuivNV' (GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramEnvParameterdvARB: target with: index with: params [

	<command: #glGetProgramEnvParameterdvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glGetProgramEnvParameterdvARB' (GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramEnvParameterfvARB: target with: index with: params [

	<command: #glGetProgramEnvParameterfvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetProgramEnvParameterfvARB' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramInfoLog: program with: bufSize with: length with: infoLog [

	<command: #glGetProgramInfoLog>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'infoLog' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetProgramInfoLog' (GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramInterfaceiv: program with: programInterface with: pname with: params [

	<command: #glGetProgramInterfaceiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'programInterface' type: 'GLenum' group: #ProgramInterface>
	<arg: 'pname' type: 'GLenum' group: #ProgramInterfacePName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetProgramInterfaceiv' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramLocalParameterIivNV: target with: index with: params [

	<command: #glGetProgramLocalParameterIivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glGetProgramLocalParameterIivNV' (GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramLocalParameterIuivNV: target with: index with: params [

	<command: #glGetProgramLocalParameterIuivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLuint*' size: '4'>

	<apicall: void 'glGetProgramLocalParameterIuivNV' (GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramLocalParameterdvARB: target with: index with: params [

	<command: #glGetProgramLocalParameterdvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glGetProgramLocalParameterdvARB' (GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramLocalParameterfvARB: target with: index with: params [

	<command: #glGetProgramLocalParameterfvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetProgramLocalParameterfvARB' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramNamedParameterdvNV: id with: len with: name with: params [

	<command: #glGetProgramNamedParameterdvNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'name' type: 'GLubyte*' size: '1'>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glGetProgramNamedParameterdvNV' (GLuint GLsizei GLubyte* GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramNamedParameterfvNV: id with: len with: name with: params [

	<command: #glGetProgramNamedParameterfvNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'name' type: 'GLubyte*' size: '1'>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetProgramNamedParameterfvNV' (GLuint GLsizei GLubyte* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramParameterdvNV: target with: index with: pname with: params [

	<command: #glGetProgramParameterdvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glGetProgramParameterdvNV' (GLenum GLuint GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramParameterfvNV: target with: index with: pname with: params [

	<command: #glGetProgramParameterfvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetProgramParameterfvNV' (GLenum GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramPipelineInfoLog: pipeline with: bufSize with: length with: infoLog [

	<command: #glGetProgramPipelineInfoLog>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'infoLog' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetProgramPipelineInfoLog' (GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramPipelineInfoLogEXT: pipeline with: bufSize with: length with: infoLog [

	<command: #glGetProgramPipelineInfoLogEXT>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'infoLog' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetProgramPipelineInfoLogEXT' (GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramPipelineiv: pipeline with: pname with: params [

	<command: #glGetProgramPipelineiv>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #PipelineParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetProgramPipelineiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramPipelineivEXT: pipeline with: pname with: params [

	<command: #glGetProgramPipelineivEXT>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #PipelineParameterName>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetProgramPipelineivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramResourceIndex: program with: programInterface with: name [

	<command: #glGetProgramResourceIndex>
	<return: 'GLuint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'programInterface' type: 'GLenum' group: #ProgramInterface>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: GLuint 'glGetProgramResourceIndex' (GLuint GLenum GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramResourceLocation: program with: programInterface with: name [

	<command: #glGetProgramResourceLocation>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'programInterface' type: 'GLenum' group: #ProgramInterface>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: GLint 'glGetProgramResourceLocation' (GLuint GLenum GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramResourceLocationIndex: program with: programInterface with: name [

	<command: #glGetProgramResourceLocationIndex>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'programInterface' type: 'GLenum' group: #ProgramInterface>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: GLint 'glGetProgramResourceLocationIndex' (GLuint GLenum GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramResourceLocationIndexEXT: program with: programInterface with: name [

	<command: #glGetProgramResourceLocationIndexEXT>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'programInterface' type: 'GLenum' group: #ProgramInterface>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: GLint 'glGetProgramResourceLocationIndexEXT' (GLuint GLenum GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramResourceName: program with: programInterface with: index with: bufSize with: length with: name [

	<command: #glGetProgramResourceName>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'programInterface' type: 'GLenum' group: #ProgramInterface>
	<arg: 'index' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'name' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetProgramResourceName' (GLuint GLenum GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramResourcefvNV: program with: programInterface with: index with: propCount with: props with: count with: length with: params [

	<command: #glGetProgramResourcefvNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'programInterface' type: 'GLenum' group: #ProgramInterface>
	<arg: 'index' type: 'GLuint'>
	<arg: 'propCount' type: 'GLsizei'>
	<arg: 'props' type: 'GLenum*'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'params' type: 'GLfloat*' size: 'count'>

	<apicall: void 'glGetProgramResourcefvNV' (GLuint GLenum GLuint GLsizei GLenum* GLsizei GLsizei* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramResourceiv: program with: programInterface with: index with: propCount with: props with: count with: length with: params [

	<command: #glGetProgramResourceiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'programInterface' type: 'GLenum' group: #ProgramInterface>
	<arg: 'index' type: 'GLuint'>
	<arg: 'propCount' type: 'GLsizei'>
	<arg: 'props' type: 'GLenum*' group: #ProgramResourceProperty size: 'propCount'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'params' type: 'GLint*' size: 'count'>

	<apicall: void 'glGetProgramResourceiv' (GLuint GLenum GLuint GLsizei GLenum* GLsizei GLsizei* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramStageiv: program with: shadertype with: pname with: values [

	<command: #glGetProgramStageiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'pname' type: 'GLenum' group: #ProgramStagePName>
	<arg: 'values' type: 'GLint*' size: '1'>

	<apicall: void 'glGetProgramStageiv' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramStringARB: target with: pname with: string [

	<command: #glGetProgramStringARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'pname' type: 'GLenum' group: #ProgramStringProperty>
	<arg: 'string' type: 'void*' size: 'COMPSIZE(target,pname)'>

	<apicall: void 'glGetProgramStringARB' (GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramStringNV: id with: pname with: program [

	<command: #glGetProgramStringNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'program' type: 'GLubyte*' group: #ProgramCharacterNV size: 'COMPSIZE(id,pname)'>

	<apicall: void 'glGetProgramStringNV' (GLuint GLenum GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramSubroutineParameteruivNV: target with: index with: param [

	<command: #glGetProgramSubroutineParameteruivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'param' type: 'GLuint*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetProgramSubroutineParameteruivNV' (GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramiv: program with: pname with: params [

	<command: #glGetProgramiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ProgramPropertyARB>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetProgramiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramivARB: target with: pname with: params [

	<command: #glGetProgramivARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'pname' type: 'GLenum' group: #ProgramPropertyARB>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetProgramivARB' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getProgramivNV: id with: pname with: params [

	<command: #glGetProgramivNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glGetProgramivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryBufferObjecti64v: id with: buffer with: pname with: offset [

	<command: #glGetQueryBufferObjecti64v>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glGetQueryBufferObjecti64v' (GLuint GLuint GLenum GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryBufferObjectiv: id with: buffer with: pname with: offset [

	<command: #glGetQueryBufferObjectiv>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glGetQueryBufferObjectiv' (GLuint GLuint GLenum GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryBufferObjectui64v: id with: buffer with: pname with: offset [

	<command: #glGetQueryBufferObjectui64v>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glGetQueryBufferObjectui64v' (GLuint GLuint GLenum GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryBufferObjectuiv: id with: buffer with: pname with: offset [

	<command: #glGetQueryBufferObjectuiv>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glGetQueryBufferObjectuiv' (GLuint GLuint GLenum GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryIndexediv: target with: index with: pname with: params [

	<command: #glGetQueryIndexediv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryIndexediv' (GLenum GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjecti64v: id with: pname with: params [

	<command: #glGetQueryObjecti64v>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLint64*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjecti64v' (GLuint GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjecti64vEXT: id with: pname with: params [

	<command: #glGetQueryObjecti64vEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLint64*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjecti64vEXT' (GLuint GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjectiv: id with: pname with: params [

	<command: #glGetQueryObjectiv>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjectiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjectivARB: id with: pname with: params [

	<command: #glGetQueryObjectivARB>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjectivARB' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjectivEXT: id with: pname with: params [

	<command: #glGetQueryObjectivEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjectivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjectui64v: id with: pname with: params [

	<command: #glGetQueryObjectui64v>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLuint64*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjectui64v' (GLuint GLenum GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjectui64vEXT: id with: pname with: params [

	<command: #glGetQueryObjectui64vEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLuint64*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjectui64vEXT' (GLuint GLenum GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjectuiv: id with: pname with: params [

	<command: #glGetQueryObjectuiv>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjectuiv' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjectuivARB: id with: pname with: params [

	<command: #glGetQueryObjectuivARB>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjectuivARB' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryObjectuivEXT: id with: pname with: params [

	<command: #glGetQueryObjectuivEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #QueryObjectParameterName>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryObjectuivEXT' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryiv: target with: pname with: params [

	<command: #glGetQueryiv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'pname' type: 'GLenum' group: #QueryParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryiv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryivARB: target with: pname with: params [

	<command: #glGetQueryivARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'pname' type: 'GLenum' group: #QueryParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryivARB' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getQueryivEXT: target with: pname with: params [

	<command: #glGetQueryivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'pname' type: 'GLenum' group: #QueryParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetQueryivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getRenderbufferParameteriv: target with: pname with: params [

	<command: #glGetRenderbufferParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'pname' type: 'GLenum' group: #RenderbufferParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetRenderbufferParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getRenderbufferParameterivEXT: target with: pname with: params [

	<command: #glGetRenderbufferParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'pname' type: 'GLenum' group: #RenderbufferParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetRenderbufferParameterivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getRenderbufferParameterivOES: target with: pname with: params [

	<command: #glGetRenderbufferParameterivOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'pname' type: 'GLenum' group: #RenderbufferParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetRenderbufferParameterivOES' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSamplerParameterIiv: sampler with: pname with: params [

	<command: #glGetSamplerParameterIiv>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetSamplerParameterIiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSamplerParameterIivEXT: sampler with: pname with: params [

	<command: #glGetSamplerParameterIivEXT>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetSamplerParameterIivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSamplerParameterIivOES: sampler with: pname with: params [

	<command: #glGetSamplerParameterIivOES>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetSamplerParameterIivOES' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSamplerParameterIuiv: sampler with: pname with: params [

	<command: #glGetSamplerParameterIuiv>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetSamplerParameterIuiv' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSamplerParameterIuivEXT: sampler with: pname with: params [

	<command: #glGetSamplerParameterIuivEXT>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetSamplerParameterIuivEXT' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSamplerParameterIuivOES: sampler with: pname with: params [

	<command: #glGetSamplerParameterIuivOES>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetSamplerParameterIuivOES' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSamplerParameterfv: sampler with: pname with: params [

	<command: #glGetSamplerParameterfv>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterF>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetSamplerParameterfv' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSamplerParameteriv: sampler with: pname with: params [

	<command: #glGetSamplerParameteriv>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetSamplerParameteriv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSemaphoreParameterivNV: semaphore with: pname with: params [

	<command: #glGetSemaphoreParameterivNV>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SemaphoreParameterName>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetSemaphoreParameterivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSemaphoreParameterui64vEXT: semaphore with: pname with: params [

	<command: #glGetSemaphoreParameterui64vEXT>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SemaphoreParameterName>
	<arg: 'params' type: 'GLuint64*'>

	<apicall: void 'glGetSemaphoreParameterui64vEXT' (GLuint GLenum GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSeparableFilter: target with: format with: type with: row with: column with: span [

	<command: #glGetSeparableFilter>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #SeparableTargetEXT>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'row' type: 'void*' size: 'COMPSIZE(target,format,type)'>
	<arg: 'column' type: 'void*' size: 'COMPSIZE(target,format,type)'>
	<arg: 'span' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetSeparableFilter' (GLenum GLenum GLenum void* void* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSeparableFilterEXT: target with: format with: type with: row with: column with: span [

	<command: #glGetSeparableFilterEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #SeparableTargetEXT>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'row' type: 'void*' size: 'COMPSIZE(target,format,type)'>
	<arg: 'column' type: 'void*' size: 'COMPSIZE(target,format,type)'>
	<arg: 'span' type: 'void*' size: 'COMPSIZE(target,format,type)'>

	<apicall: void 'glGetSeparableFilterEXT' (GLenum GLenum GLenum void* void* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getShaderInfoLog: shader with: bufSize with: length with: infoLog [

	<command: #glGetShaderInfoLog>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'infoLog' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetShaderInfoLog' (GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getShaderPrecisionFormat: shadertype with: precisiontype with: range with: precision [

	<command: #glGetShaderPrecisionFormat>
	<return: 'void'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'precisiontype' type: 'GLenum' group: #PrecisionType>
	<arg: 'range' type: 'GLint*' size: '2'>
	<arg: 'precision' type: 'GLint*' size: '1'>

	<apicall: void 'glGetShaderPrecisionFormat' (GLenum GLenum GLint* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getShaderSource: shader with: bufSize with: length with: source [

	<command: #glGetShaderSource>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'source' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetShaderSource' (GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getShaderSourceARB: obj with: maxLength with: length with: source [

	<command: #glGetShaderSourceARB>
	<return: 'void'>
	<arg: 'obj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'maxLength' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'source' type: 'GLcharARB*' size: 'maxLength'>

	<apicall: void 'glGetShaderSourceARB' (GLhandleARB GLsizei GLsizei* GLcharARB*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getShaderiv: shader with: pname with: params [

	<command: #glGetShaderiv>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ShaderParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetShaderiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getShadingRateImagePaletteNV: viewport with: entry with: rate [

	<command: #glGetShadingRateImagePaletteNV>
	<return: 'void'>
	<arg: 'viewport' type: 'GLuint'>
	<arg: 'entry' type: 'GLuint'>
	<arg: 'rate' type: 'GLenum*' size: '1'>

	<apicall: void 'glGetShadingRateImagePaletteNV' (GLuint GLuint GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getShadingRateSampleLocationivNV: rate with: samples with: index with: location [

	<command: #glGetShadingRateSampleLocationivNV>
	<return: 'void'>
	<arg: 'rate' type: 'GLenum'>
	<arg: 'samples' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'location' type: 'GLint*' size: '3'>

	<apicall: void 'glGetShadingRateSampleLocationivNV' (GLenum GLuint GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSharpenTexFuncSGIS: target with: points [

	<command: #glGetSharpenTexFuncSGIS>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'points' type: 'GLfloat*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetSharpenTexFuncSGIS' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getStageIndexNV: shadertype [

	<command: #glGetStageIndexNV>
	<return: 'GLushort'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>

	<apicall: GLushort 'glGetStageIndexNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getString: name [

	<command: #glGetString>
	<return: 'GLubyte*'>
	<arg: 'name' type: 'GLenum' group: #StringName>

	<apicall: GLubyte* 'glGetString' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getStringi: name with: index [

	<command: #glGetStringi>
	<return: 'GLubyte*'>
	<arg: 'name' type: 'GLenum' group: #StringName>
	<arg: 'index' type: 'GLuint'>

	<apicall: GLubyte* 'glGetStringi' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSubroutineIndex: program with: shadertype with: name [

	<command: #glGetSubroutineIndex>
	<return: 'GLuint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'name' type: 'GLchar*'>

	<apicall: GLuint 'glGetSubroutineIndex' (GLuint GLenum GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSubroutineUniformLocation: program with: shadertype with: name [

	<command: #glGetSubroutineUniformLocation>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'name' type: 'GLchar*'>

	<apicall: GLint 'glGetSubroutineUniformLocation' (GLuint GLenum GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSynciv: sync with: pname with: count with: length with: values [

	<command: #glGetSynciv>
	<return: 'void'>
	<arg: 'sync' type: 'GLsync' group: #sync>
	<arg: 'pname' type: 'GLenum' group: #SyncParameterName>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'values' type: 'GLint*' size: 'count'>

	<apicall: void 'glGetSynciv' (GLsync GLenum GLsizei GLsizei* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getSyncivAPPLE: sync with: pname with: count with: length with: values [

	<command: #glGetSyncivAPPLE>
	<return: 'void'>
	<arg: 'sync' type: 'GLsync'>
	<arg: 'pname' type: 'GLenum' group: #SyncParameterName>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*'>
	<arg: 'values' type: 'GLint*' size: 'count'>

	<apicall: void 'glGetSyncivAPPLE' (GLsync GLenum GLsizei GLsizei* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexBumpParameterfvATI: pname with: param [

	<command: #glGetTexBumpParameterfvATI>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetTexBumpParameterATI>
	<arg: 'param' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexBumpParameterfvATI' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexBumpParameterivATI: pname with: param [

	<command: #glGetTexBumpParameterivATI>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetTexBumpParameterATI>
	<arg: 'param' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexBumpParameterivATI' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexEnvfv: target with: pname with: params [

	<command: #glGetTexEnvfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexEnvfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexEnviv: target with: pname with: params [

	<command: #glGetTexEnviv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexEnviv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexEnvxv: target with: pname with: params [

	<command: #glGetTexEnvxv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexEnvxv' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexEnvxvOES: target with: pname with: params [

	<command: #glGetTexEnvxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexEnvxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexFilterFuncSGIS: target with: filter with: weights [

	<command: #glGetTexFilterFuncSGIS>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'filter' type: 'GLenum' group: #TextureFilterSGIS>
	<arg: 'weights' type: 'GLfloat*' size: 'COMPSIZE(target,filter)'>

	<apicall: void 'glGetTexFilterFuncSGIS' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexGendv: coord with: pname with: params [

	<command: #glGetTexGendv>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexGendv' (GLenum GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexGenfv: coord with: pname with: params [

	<command: #glGetTexGenfv>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexGenfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexGenfvOES: coord with: pname with: params [

	<command: #glGetTexGenfvOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexGenfvOES' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexGeniv: coord with: pname with: params [

	<command: #glGetTexGeniv>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexGeniv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexGenivOES: coord with: pname with: params [

	<command: #glGetTexGenivOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexGenivOES' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexGenxvOES: coord with: pname with: params [

	<command: #glGetTexGenxvOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexGenxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexImage: target with: level with: format with: type with: pixels [

	<command: #glGetTexImage>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(target,level,format,type)'>

	<apicall: void 'glGetTexImage' (GLenum GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexLevelParameterfv: target with: level with: pname with: params [

	<command: #glGetTexLevelParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexLevelParameterfv' (GLenum GLint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexLevelParameteriv: target with: level with: pname with: params [

	<command: #glGetTexLevelParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexLevelParameteriv' (GLenum GLint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexLevelParameterxvOES: target with: level with: pname with: params [

	<command: #glGetTexLevelParameterxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint'>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexLevelParameterxvOES' (GLenum GLint GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterIiv: target with: pname with: params [

	<command: #glGetTexParameterIiv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterIiv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterIivEXT: target with: pname with: params [

	<command: #glGetTexParameterIivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterIivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterIivOES: target with: pname with: params [

	<command: #glGetTexParameterIivOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterIivOES' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterIuiv: target with: pname with: params [

	<command: #glGetTexParameterIuiv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterIuiv' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterIuivEXT: target with: pname with: params [

	<command: #glGetTexParameterIuivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterIuivEXT' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterIuivOES: target with: pname with: params [

	<command: #glGetTexParameterIuivOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterIuivOES' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterPointervAPPLE: target with: pname with: params [

	<command: #glGetTexParameterPointervAPPLE>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'void**' size: '1'>

	<apicall: void 'glGetTexParameterPointervAPPLE' (GLenum GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterfv: target with: pname with: params [

	<command: #glGetTexParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameteriv: target with: pname with: params [

	<command: #glGetTexParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterxv: target with: pname with: params [

	<command: #glGetTexParameterxv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterxv' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTexParameterxvOES: target with: pname with: params [

	<command: #glGetTexParameterxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTexParameterxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureHandleARB: texture [

	<command: #glGetTextureHandleARB>
	<return: 'GLuint64'>
	<arg: 'texture' type: 'GLuint'>

	<apicall: GLuint64 'glGetTextureHandleARB' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureHandleIMG: texture [

	<command: #glGetTextureHandleIMG>
	<return: 'GLuint64'>
	<arg: 'texture' type: 'GLuint'>

	<apicall: GLuint64 'glGetTextureHandleIMG' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureHandleNV: texture [

	<command: #glGetTextureHandleNV>
	<return: 'GLuint64'>
	<arg: 'texture' type: 'GLuint'>

	<apicall: GLuint64 'glGetTextureHandleNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureImage: texture with: level with: format with: type with: bufSize with: pixels [

	<command: #glGetTextureImage>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'pixels' type: 'void*'>

	<apicall: void 'glGetTextureImage' (GLuint GLint GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureImageEXT: texture with: target with: level with: format with: type with: pixels [

	<command: #glGetTextureImageEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(target,level,format,type)'>

	<apicall: void 'glGetTextureImageEXT' (GLuint GLenum GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureLevelParameterfv: texture with: level with: pname with: params [

	<command: #glGetTextureLevelParameterfv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfloat*'>

	<apicall: void 'glGetTextureLevelParameterfv' (GLuint GLint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureLevelParameterfvEXT: texture with: target with: level with: pname with: params [

	<command: #glGetTextureLevelParameterfvEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTextureLevelParameterfvEXT' (GLuint GLenum GLint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureLevelParameteriv: texture with: level with: pname with: params [

	<command: #glGetTextureLevelParameteriv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetTextureLevelParameteriv' (GLuint GLint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureLevelParameterivEXT: texture with: target with: level with: pname with: params [

	<command: #glGetTextureLevelParameterivEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTextureLevelParameterivEXT' (GLuint GLenum GLint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureParameterIiv: texture with: pname with: params [

	<command: #glGetTextureParameterIiv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetTextureParameterIiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureParameterIivEXT: texture with: target with: pname with: params [

	<command: #glGetTextureParameterIivEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTextureParameterIivEXT' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureParameterIuiv: texture with: pname with: params [

	<command: #glGetTextureParameterIuiv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLuint*'>

	<apicall: void 'glGetTextureParameterIuiv' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureParameterIuivEXT: texture with: target with: pname with: params [

	<command: #glGetTextureParameterIuivEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTextureParameterIuivEXT' (GLuint GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureParameterfv: texture with: pname with: params [

	<command: #glGetTextureParameterfv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfloat*'>

	<apicall: void 'glGetTextureParameterfv' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureParameterfvEXT: texture with: target with: pname with: params [

	<command: #glGetTextureParameterfvEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTextureParameterfvEXT' (GLuint GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureParameteriv: texture with: pname with: params [

	<command: #glGetTextureParameteriv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glGetTextureParameteriv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureParameterivEXT: texture with: target with: pname with: params [

	<command: #glGetTextureParameterivEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetTextureParameterivEXT' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureSamplerHandleARB: texture with: sampler [

	<command: #glGetTextureSamplerHandleARB>
	<return: 'GLuint64'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'sampler' type: 'GLuint'>

	<apicall: GLuint64 'glGetTextureSamplerHandleARB' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureSamplerHandleIMG: texture with: sampler [

	<command: #glGetTextureSamplerHandleIMG>
	<return: 'GLuint64'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'sampler' type: 'GLuint'>

	<apicall: GLuint64 'glGetTextureSamplerHandleIMG' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureSamplerHandleNV: texture with: sampler [

	<command: #glGetTextureSamplerHandleNV>
	<return: 'GLuint64'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'sampler' type: 'GLuint'>

	<apicall: GLuint64 'glGetTextureSamplerHandleNV' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTextureSubImage: texture with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: bufSize with: pixels [

	<command: #glGetTextureSubImage>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'pixels' type: 'void*'>

	<apicall: void 'glGetTextureSubImage' (GLuint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTrackMatrixivNV: target with: address with: pname with: params [

	<command: #glGetTrackMatrixivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'address' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetTrackMatrixivNV' (GLenum GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTransformFeedbackVarying: program with: index with: bufSize with: length with: size with: type with: name [

	<command: #glGetTransformFeedbackVarying>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'size' type: 'GLsizei*' size: '1'>
	<arg: 'type' type: 'GLenum*' group: #AttributeType size: '1'>
	<arg: 'name' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetTransformFeedbackVarying' (GLuint GLuint GLsizei GLsizei* GLsizei* GLenum* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTransformFeedbackVaryingEXT: program with: index with: bufSize with: length with: size with: type with: name [

	<command: #glGetTransformFeedbackVaryingEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'size' type: 'GLsizei*' size: '1'>
	<arg: 'type' type: 'GLenum*' group: #AttributeType size: '1'>
	<arg: 'name' type: 'GLchar*' size: 'bufSize'>

	<apicall: void 'glGetTransformFeedbackVaryingEXT' (GLuint GLuint GLsizei GLsizei* GLsizei* GLenum* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTransformFeedbackVaryingNV: program with: index with: location [

	<command: #glGetTransformFeedbackVaryingNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'location' type: 'GLint*' size: '1'>

	<apicall: void 'glGetTransformFeedbackVaryingNV' (GLuint GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTransformFeedbacki64_v: xfb with: pname with: index with: param [

	<command: #'glGetTransformFeedbacki64_v'>
	<return: 'void'>
	<arg: 'xfb' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TransformFeedbackPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'param' type: 'GLint64*'>

	<apicall: void 'glGetTransformFeedbacki64_v' (GLuint GLenum GLuint GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTransformFeedbacki_v: xfb with: pname with: index with: param [

	<command: #'glGetTransformFeedbacki_v'>
	<return: 'void'>
	<arg: 'xfb' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TransformFeedbackPName>
	<arg: 'index' type: 'GLuint'>
	<arg: 'param' type: 'GLint*'>

	<apicall: void 'glGetTransformFeedbacki_v' (GLuint GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTransformFeedbackiv: xfb with: pname with: param [

	<command: #glGetTransformFeedbackiv>
	<return: 'void'>
	<arg: 'xfb' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TransformFeedbackPName>
	<arg: 'param' type: 'GLint*'>

	<apicall: void 'glGetTransformFeedbackiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getTranslatedShaderSourceANGLE: shader with: bufSize with: length with: source [

	<command: #glGetTranslatedShaderSourceANGLE>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*' size: '1'>
	<arg: 'source' type: 'GLchar*'>

	<apicall: void 'glGetTranslatedShaderSourceANGLE' (GLuint GLsizei GLsizei* GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformBlockIndex: program with: uniformBlockName [

	<command: #glGetUniformBlockIndex>
	<return: 'GLuint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'uniformBlockName' type: 'GLchar*' size: 'COMPSIZE()'>

	<apicall: GLuint 'glGetUniformBlockIndex' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformBufferSizeEXT: program with: location [

	<command: #glGetUniformBufferSizeEXT>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>

	<apicall: GLint 'glGetUniformBufferSizeEXT' (GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformIndices: program with: uniformCount with: uniformNames with: uniformIndices [

	<command: #glGetUniformIndices>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'uniformCount' type: 'GLsizei'>
	<arg: 'uniformNames' type: 'GLchar**' size: 'COMPSIZE(uniformCount)'>
	<arg: 'uniformIndices' type: 'GLuint*' size: 'COMPSIZE(uniformCount)'>

	<apicall: void 'glGetUniformIndices' (GLuint GLsizei GLchar** GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformLocation: program with: name [

	<command: #glGetUniformLocation>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*'>

	<apicall: GLint 'glGetUniformLocation' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformLocationARB: programObj with: name [

	<command: #glGetUniformLocationARB>
	<return: 'GLint'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'name' type: 'GLcharARB*'>

	<apicall: GLint 'glGetUniformLocationARB' (GLhandleARB GLcharARB*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformOffsetEXT: program with: location [

	<command: #glGetUniformOffsetEXT>
	<return: 'GLintptr'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>

	<apicall: GLintptr 'glGetUniformOffsetEXT' (GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformSubroutineuiv: shadertype with: location with: params [

	<command: #glGetUniformSubroutineuiv>
	<return: 'void'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLuint*' size: '1'>

	<apicall: void 'glGetUniformSubroutineuiv' (GLenum GLint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformdv: program with: location with: params [

	<command: #glGetUniformdv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformdv' (GLuint GLint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformfv: program with: location with: params [

	<command: #glGetUniformfv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformfv' (GLuint GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformfvARB: programObj with: location with: params [

	<command: #glGetUniformfvARB>
	<return: 'void'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(programObj,location)'>

	<apicall: void 'glGetUniformfvARB' (GLhandleARB GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformi64vARB: program with: location with: params [

	<command: #glGetUniformi64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLint64*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformi64vARB' (GLuint GLint GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformi64vNV: program with: location with: params [

	<command: #glGetUniformi64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLint64EXT*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformi64vNV' (GLuint GLint GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformiv: program with: location with: params [

	<command: #glGetUniformiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformiv' (GLuint GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformivARB: programObj with: location with: params [

	<command: #glGetUniformivARB>
	<return: 'void'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(programObj,location)'>

	<apicall: void 'glGetUniformivARB' (GLhandleARB GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformui64vARB: program with: location with: params [

	<command: #glGetUniformui64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLuint64*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformui64vARB' (GLuint GLint GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformui64vNV: program with: location with: params [

	<command: #glGetUniformui64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLuint64EXT*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformui64vNV' (GLuint GLint GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformuiv: program with: location with: params [

	<command: #glGetUniformuiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformuiv' (GLuint GLint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUniformuivEXT: program with: location with: params [

	<command: #glGetUniformuivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(program,location)'>

	<apicall: void 'glGetUniformuivEXT' (GLuint GLint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUnsignedBytei_vEXT: target with: index with: data [

	<command: #'glGetUnsignedBytei_vEXT'>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'data' type: 'GLubyte*' size: 'COMPSIZE(target)'>

	<apicall: void 'glGetUnsignedBytei_vEXT' (GLenum GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getUnsignedBytevEXT: pname with: data [

	<command: #glGetUnsignedBytevEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #GetPName>
	<arg: 'data' type: 'GLubyte*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetUnsignedBytevEXT' (GLenum GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVariantArrayObjectfvATI: id with: pname with: params [

	<command: #glGetVariantArrayObjectfvATI>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ArrayObjectPNameATI>
	<arg: 'params' type: 'GLfloat*' size: '1'>

	<apicall: void 'glGetVariantArrayObjectfvATI' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVariantArrayObjectivATI: id with: pname with: params [

	<command: #glGetVariantArrayObjectivATI>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ArrayObjectPNameATI>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetVariantArrayObjectivATI' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVariantBooleanvEXT: id with: value with: data [

	<command: #glGetVariantBooleanvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLboolean*' group: #Boolean size: 'COMPSIZE(id)'>

	<apicall: void 'glGetVariantBooleanvEXT' (GLuint GLenum GLboolean*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVariantFloatvEXT: id with: value with: data [

	<command: #glGetVariantFloatvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLfloat*' size: 'COMPSIZE(id)'>

	<apicall: void 'glGetVariantFloatvEXT' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVariantIntegervEXT: id with: value with: data [

	<command: #glGetVariantIntegervEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'GLint*' size: 'COMPSIZE(id)'>

	<apicall: void 'glGetVariantIntegervEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVariantPointervEXT: id with: value with: data [

	<command: #glGetVariantPointervEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'value' type: 'GLenum' group: #GetVariantValueEXT>
	<arg: 'data' type: 'void**' size: 'COMPSIZE(id)'>

	<apicall: void 'glGetVariantPointervEXT' (GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVaryingLocationNV: program with: name [

	<command: #glGetVaryingLocationNV>
	<return: 'GLint'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: GLint 'glGetVaryingLocationNV' (GLuint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexArrayIndexed64iv: vaobj with: index with: pname with: param [

	<command: #glGetVertexArrayIndexed64iv>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexArrayPName>
	<arg: 'param' type: 'GLint64*'>

	<apicall: void 'glGetVertexArrayIndexed64iv' (GLuint GLuint GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexArrayIndexediv: vaobj with: index with: pname with: param [

	<command: #glGetVertexArrayIndexediv>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexArrayPName>
	<arg: 'param' type: 'GLint*'>

	<apicall: void 'glGetVertexArrayIndexediv' (GLuint GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexArrayIntegeri_vEXT: vaobj with: index with: pname with: param [

	<command: #'glGetVertexArrayIntegeri_vEXT'>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexArrayPName>
	<arg: 'param' type: 'GLint*'>

	<apicall: void 'glGetVertexArrayIntegeri_vEXT' (GLuint GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexArrayIntegervEXT: vaobj with: pname with: param [

	<command: #glGetVertexArrayIntegervEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexArrayPName>
	<arg: 'param' type: 'GLint*'>

	<apicall: void 'glGetVertexArrayIntegervEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexArrayPointeri_vEXT: vaobj with: index with: pname with: param [

	<command: #'glGetVertexArrayPointeri_vEXT'>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexArrayPName>
	<arg: 'param' type: 'void**' size: '1'>

	<apicall: void 'glGetVertexArrayPointeri_vEXT' (GLuint GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexArrayPointervEXT: vaobj with: pname with: param [

	<command: #glGetVertexArrayPointervEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexArrayPName>
	<arg: 'param' type: 'void**' size: '1'>

	<apicall: void 'glGetVertexArrayPointervEXT' (GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexArrayiv: vaobj with: pname with: param [

	<command: #glGetVertexArrayiv>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexArrayPName>
	<arg: 'param' type: 'GLint*'>

	<apicall: void 'glGetVertexArrayiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribArrayObjectfvATI: index with: pname with: params [

	<command: #glGetVertexAttribArrayObjectfvATI>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ArrayObjectPNameATI>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVertexAttribArrayObjectfvATI' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribArrayObjectivATI: index with: pname with: params [

	<command: #glGetVertexAttribArrayObjectivATI>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ArrayObjectPNameATI>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVertexAttribArrayObjectivATI' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribIiv: index with: pname with: params [

	<command: #glGetVertexAttribIiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetVertexAttribIiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribIivEXT: index with: pname with: params [

	<command: #glGetVertexAttribIivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetVertexAttribIivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribIuiv: index with: pname with: params [

	<command: #glGetVertexAttribIuiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLuint*' size: '1'>

	<apicall: void 'glGetVertexAttribIuiv' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribIuivEXT: index with: pname with: params [

	<command: #glGetVertexAttribIuivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLuint*' size: '1'>

	<apicall: void 'glGetVertexAttribIuivEXT' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribLdv: index with: pname with: params [

	<command: #glGetVertexAttribLdv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVertexAttribLdv' (GLuint GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribLdvEXT: index with: pname with: params [

	<command: #glGetVertexAttribLdvEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVertexAttribLdvEXT' (GLuint GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribLi64vNV: index with: pname with: params [

	<command: #glGetVertexAttribLi64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLint64EXT*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVertexAttribLi64vNV' (GLuint GLenum GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribLui64vARB: index with: pname with: params [

	<command: #glGetVertexAttribLui64vARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLuint64EXT*'>

	<apicall: void 'glGetVertexAttribLui64vARB' (GLuint GLenum GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribLui64vNV: index with: pname with: params [

	<command: #glGetVertexAttribLui64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnum>
	<arg: 'params' type: 'GLuint64EXT*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVertexAttribLui64vNV' (GLuint GLenum GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribPointerv: index with: pname with: pointer [

	<command: #glGetVertexAttribPointerv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribPointerPropertyARB>
	<arg: 'pointer' type: 'void**' size: '1'>

	<apicall: void 'glGetVertexAttribPointerv' (GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribPointervARB: index with: pname with: pointer [

	<command: #glGetVertexAttribPointervARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribPointerPropertyARB>
	<arg: 'pointer' type: 'void**' size: '1'>

	<apicall: void 'glGetVertexAttribPointervARB' (GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribPointervNV: index with: pname with: pointer [

	<command: #glGetVertexAttribPointervNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'pointer' type: 'void**' size: '1'>

	<apicall: void 'glGetVertexAttribPointervNV' (GLuint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribdv: index with: pname with: params [

	<command: #glGetVertexAttribdv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribPropertyARB>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glGetVertexAttribdv' (GLuint GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribdvARB: index with: pname with: params [

	<command: #glGetVertexAttribdvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribPropertyARB>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glGetVertexAttribdvARB' (GLuint GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribdvNV: index with: pname with: params [

	<command: #glGetVertexAttribdvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'params' type: 'GLdouble*' size: '1'>

	<apicall: void 'glGetVertexAttribdvNV' (GLuint GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribfv: index with: pname with: params [

	<command: #glGetVertexAttribfv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribPropertyARB>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetVertexAttribfv' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribfvARB: index with: pname with: params [

	<command: #glGetVertexAttribfvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribPropertyARB>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glGetVertexAttribfvARB' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribfvNV: index with: pname with: params [

	<command: #glGetVertexAttribfvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'params' type: 'GLfloat*' size: '1'>

	<apicall: void 'glGetVertexAttribfvNV' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribiv: index with: pname with: params [

	<command: #glGetVertexAttribiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribPropertyARB>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glGetVertexAttribiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribivARB: index with: pname with: params [

	<command: #glGetVertexAttribivARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribPropertyARB>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glGetVertexAttribivARB' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVertexAttribivNV: index with: pname with: params [

	<command: #glGetVertexAttribivNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glGetVertexAttribivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVideoCaptureStreamdvNV: video_capture_slot with: stream with: pname with: params [

	<command: #glGetVideoCaptureStreamdvNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVideoCaptureStreamdvNV' (GLuint GLuint GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVideoCaptureStreamfvNV: video_capture_slot with: stream with: pname with: params [

	<command: #glGetVideoCaptureStreamfvNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVideoCaptureStreamfvNV' (GLuint GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVideoCaptureStreamivNV: video_capture_slot with: stream with: pname with: params [

	<command: #glGetVideoCaptureStreamivNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVideoCaptureStreamivNV' (GLuint GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVideoCaptureivNV: video_capture_slot with: pname with: params [

	<command: #glGetVideoCaptureivNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVideoCaptureivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVideoi64vNV: video_slot with: pname with: params [

	<command: #glGetVideoi64vNV>
	<return: 'void'>
	<arg: 'video_slot' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint64EXT*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVideoi64vNV' (GLuint GLenum GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVideoivNV: video_slot with: pname with: params [

	<command: #glGetVideoivNV>
	<return: 'void'>
	<arg: 'video_slot' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVideoivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVideoui64vNV: video_slot with: pname with: params [

	<command: #glGetVideoui64vNV>
	<return: 'void'>
	<arg: 'video_slot' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLuint64EXT*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVideoui64vNV' (GLuint GLenum GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVideouivNV: video_slot with: pname with: params [

	<command: #glGetVideouivNV>
	<return: 'void'>
	<arg: 'video_slot' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glGetVideouivNV' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getVkProcAddrNV: name [

	<command: #glGetVkProcAddrNV>
	<return: 'GLVULKANPROCNV'>
	<arg: 'name' type: 'GLchar*' size: 'COMPSIZE(name)'>

	<apicall: GLVULKANPROCNV 'glGetVkProcAddrNV' (GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnColorTable: target with: format with: type with: bufSize with: table [

	<command: #glGetnColorTable>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'table' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnColorTable' (GLenum GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnColorTableARB: target with: format with: type with: bufSize with: table [

	<command: #glGetnColorTableARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ColorTableTarget>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'table' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnColorTableARB' (GLenum GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnCompressedTexImage: target with: lod with: bufSize with: pixels [

	<command: #glGetnCompressedTexImage>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'lod' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'pixels' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnCompressedTexImage' (GLenum GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnCompressedTexImageARB: target with: lod with: bufSize with: img [

	<command: #glGetnCompressedTexImageARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'lod' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'img' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnCompressedTexImageARB' (GLenum GLint GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnConvolutionFilter: target with: format with: type with: bufSize with: image [

	<command: #glGetnConvolutionFilter>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'image' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnConvolutionFilter' (GLenum GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnConvolutionFilterARB: target with: format with: type with: bufSize with: image [

	<command: #glGetnConvolutionFilterARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ConvolutionTarget>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'image' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnConvolutionFilterARB' (GLenum GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnHistogram: target with: reset with: format with: type with: bufSize with: values [

	<command: #glGetnHistogram>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTarget>
	<arg: 'reset' type: 'GLboolean' group: #Boolean>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnHistogram' (GLenum GLboolean GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnHistogramARB: target with: reset with: format with: type with: bufSize with: values [

	<command: #glGetnHistogramARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'reset' type: 'GLboolean' group: #Boolean>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnHistogramARB' (GLenum GLboolean GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnMapdv: target with: query with: bufSize with: v [

	<command: #glGetnMapdv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #MapQuery>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*' size: 'COMPSIZE(bufSize)'>

	<apicall: void 'glGetnMapdv' (GLenum GLenum GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnMapdvARB: target with: query with: bufSize with: v [

	<command: #glGetnMapdvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #MapQuery>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*' size: 'bufSize / 8'>

	<apicall: void 'glGetnMapdvARB' (GLenum GLenum GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnMapfv: target with: query with: bufSize with: v [

	<command: #glGetnMapfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #MapQuery>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glGetnMapfv' (GLenum GLenum GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnMapfvARB: target with: query with: bufSize with: v [

	<command: #glGetnMapfvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #MapQuery>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'bufSize'>

	<apicall: void 'glGetnMapfvARB' (GLenum GLenum GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnMapiv: target with: query with: bufSize with: v [

	<command: #glGetnMapiv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #MapQuery>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'v' type: 'GLint*'>

	<apicall: void 'glGetnMapiv' (GLenum GLenum GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnMapivARB: target with: query with: bufSize with: v [

	<command: #glGetnMapivARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'query' type: 'GLenum' group: #MapQuery>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'v' type: 'GLint*' size: 'bufSize'>

	<apicall: void 'glGetnMapivARB' (GLenum GLenum GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnMinmax: target with: reset with: format with: type with: bufSize with: values [

	<command: #glGetnMinmax>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTarget>
	<arg: 'reset' type: 'GLboolean' group: #Boolean>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnMinmax' (GLenum GLboolean GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnMinmaxARB: target with: reset with: format with: type with: bufSize with: values [

	<command: #glGetnMinmaxARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'reset' type: 'GLboolean' group: #Boolean>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnMinmaxARB' (GLenum GLboolean GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnPixelMapfv: map with: bufSize with: values [

	<command: #glGetnPixelMapfv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'GLfloat*' size: 'COMPSIZE(bufSize)'>

	<apicall: void 'glGetnPixelMapfv' (GLenum GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnPixelMapfvARB: map with: bufSize with: values [

	<command: #glGetnPixelMapfvARB>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'GLfloat*' size: 'bufSize / 4'>

	<apicall: void 'glGetnPixelMapfvARB' (GLenum GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnPixelMapuiv: map with: bufSize with: values [

	<command: #glGetnPixelMapuiv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'GLuint*'>

	<apicall: void 'glGetnPixelMapuiv' (GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnPixelMapuivARB: map with: bufSize with: values [

	<command: #glGetnPixelMapuivARB>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'GLuint*' size: 'bufSize'>

	<apicall: void 'glGetnPixelMapuivARB' (GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnPixelMapusv: map with: bufSize with: values [

	<command: #glGetnPixelMapusv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'GLushort*'>

	<apicall: void 'glGetnPixelMapusv' (GLenum GLsizei GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnPixelMapusvARB: map with: bufSize with: values [

	<command: #glGetnPixelMapusvARB>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'values' type: 'GLushort*' size: 'bufSize'>

	<apicall: void 'glGetnPixelMapusvARB' (GLenum GLsizei GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnPolygonStipple: bufSize with: pattern [

	<command: #glGetnPolygonStipple>
	<return: 'void'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'pattern' type: 'GLubyte*' size: 'bufSize'>

	<apicall: void 'glGetnPolygonStipple' (GLsizei GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnPolygonStippleARB: bufSize with: pattern [

	<command: #glGetnPolygonStippleARB>
	<return: 'void'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'pattern' type: 'GLubyte*' size: 'bufSize'>

	<apicall: void 'glGetnPolygonStippleARB' (GLsizei GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnSeparableFilter: target with: format with: type with: rowBufSize with: row with: columnBufSize with: column with: span [

	<command: #glGetnSeparableFilter>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #SeparableTarget>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'rowBufSize' type: 'GLsizei'>
	<arg: 'row' type: 'void*' size: 'rowBufSize'>
	<arg: 'columnBufSize' type: 'GLsizei'>
	<arg: 'column' type: 'void*' size: 'columnBufSize'>
	<arg: 'span' type: 'void*' size: '0'>

	<apicall: void 'glGetnSeparableFilter' (GLenum GLenum GLenum GLsizei void* GLsizei void* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnSeparableFilterARB: target with: format with: type with: rowBufSize with: row with: columnBufSize with: column with: span [

	<command: #glGetnSeparableFilterARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #SeparableTargetEXT>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'rowBufSize' type: 'GLsizei'>
	<arg: 'row' type: 'void*' size: 'rowBufSize'>
	<arg: 'columnBufSize' type: 'GLsizei'>
	<arg: 'column' type: 'void*' size: 'columnBufSize'>
	<arg: 'span' type: 'void*' size: '0'>

	<apicall: void 'glGetnSeparableFilterARB' (GLenum GLenum GLenum GLsizei void* GLsizei void* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnTexImage: target with: level with: format with: type with: bufSize with: pixels [

	<command: #glGetnTexImage>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'pixels' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnTexImage' (GLenum GLint GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnTexImageARB: target with: level with: format with: type with: bufSize with: img [

	<command: #glGetnTexImageARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'img' type: 'void*' size: 'bufSize'>

	<apicall: void 'glGetnTexImageARB' (GLenum GLint GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformdv: program with: location with: bufSize with: params [

	<command: #glGetnUniformdv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLdouble*' size: 'bufSize / 8'>

	<apicall: void 'glGetnUniformdv' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformdvARB: program with: location with: bufSize with: params [

	<command: #glGetnUniformdvARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLdouble*' size: 'bufSize / 8'>

	<apicall: void 'glGetnUniformdvARB' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformfv: program with: location with: bufSize with: params [

	<command: #glGetnUniformfv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLfloat*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformfv' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformfvARB: program with: location with: bufSize with: params [

	<command: #glGetnUniformfvARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLfloat*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformfvARB' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformfvEXT: program with: location with: bufSize with: params [

	<command: #glGetnUniformfvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLfloat*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformfvEXT' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformfvKHR: program with: location with: bufSize with: params [

	<command: #glGetnUniformfvKHR>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLfloat*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformfvKHR' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformi64vARB: program with: location with: bufSize with: params [

	<command: #glGetnUniformi64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLint64*' size: 'bufSize / 8'>

	<apicall: void 'glGetnUniformi64vARB' (GLuint GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformiv: program with: location with: bufSize with: params [

	<command: #glGetnUniformiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformiv' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformivARB: program with: location with: bufSize with: params [

	<command: #glGetnUniformivARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformivARB' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformivEXT: program with: location with: bufSize with: params [

	<command: #glGetnUniformivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformivEXT' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformivKHR: program with: location with: bufSize with: params [

	<command: #glGetnUniformivKHR>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformivKHR' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformui64vARB: program with: location with: bufSize with: params [

	<command: #glGetnUniformui64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint64*' size: 'bufSize / 8'>

	<apicall: void 'glGetnUniformui64vARB' (GLuint GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformuiv: program with: location with: bufSize with: params [

	<command: #glGetnUniformuiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformuiv' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformuivARB: program with: location with: bufSize with: params [

	<command: #glGetnUniformuivARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformuivARB' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> getnUniformuivKHR: program with: location with: bufSize with: params [

	<command: #glGetnUniformuivKHR>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*' size: 'bufSize / 4'>

	<apicall: void 'glGetnUniformuivKHR' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> globalAlphaFactorbSUN: factor [

	<command: #glGlobalAlphaFactorbSUN>
	<return: 'void'>
	<arg: 'factor' type: 'GLbyte'>

	<apicall: void 'glGlobalAlphaFactorbSUN' (GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> globalAlphaFactordSUN: factor [

	<command: #glGlobalAlphaFactordSUN>
	<return: 'void'>
	<arg: 'factor' type: 'GLdouble'>

	<apicall: void 'glGlobalAlphaFactordSUN' (GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> globalAlphaFactorfSUN: factor [

	<command: #glGlobalAlphaFactorfSUN>
	<return: 'void'>
	<arg: 'factor' type: 'GLfloat'>

	<apicall: void 'glGlobalAlphaFactorfSUN' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> globalAlphaFactoriSUN: factor [

	<command: #glGlobalAlphaFactoriSUN>
	<return: 'void'>
	<arg: 'factor' type: 'GLint'>

	<apicall: void 'glGlobalAlphaFactoriSUN' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> globalAlphaFactorsSUN: factor [

	<command: #glGlobalAlphaFactorsSUN>
	<return: 'void'>
	<arg: 'factor' type: 'GLshort'>

	<apicall: void 'glGlobalAlphaFactorsSUN' (GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> globalAlphaFactorubSUN: factor [

	<command: #glGlobalAlphaFactorubSUN>
	<return: 'void'>
	<arg: 'factor' type: 'GLubyte'>

	<apicall: void 'glGlobalAlphaFactorubSUN' (GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> globalAlphaFactoruiSUN: factor [

	<command: #glGlobalAlphaFactoruiSUN>
	<return: 'void'>
	<arg: 'factor' type: 'GLuint'>

	<apicall: void 'glGlobalAlphaFactoruiSUN' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> globalAlphaFactorusSUN: factor [

	<command: #glGlobalAlphaFactorusSUN>
	<return: 'void'>
	<arg: 'factor' type: 'GLushort'>

	<apicall: void 'glGlobalAlphaFactorusSUN' (GLushort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> hint: target with: mode [

	<command: #glHint>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HintTarget>
	<arg: 'mode' type: 'GLenum' group: #HintMode>

	<apicall: void 'glHint' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> hintPGI: target with: mode [

	<command: #glHintPGI>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HintTargetPGI>
	<arg: 'mode' type: 'GLint'>

	<apicall: void 'glHintPGI' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> histogram: target with: width with: internalformat with: sink [

	<command: #glHistogram>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'sink' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glHistogram' (GLenum GLsizei GLenum GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> histogramEXT: target with: width with: internalformat with: sink [

	<command: #glHistogramEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'sink' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glHistogramEXT' (GLenum GLsizei GLenum GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> iglooInterfaceSGIX: pname with: params [

	<command: #glIglooInterfaceSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'void*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glIglooInterfaceSGIX' (GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> imageTransformParameterfHP: target with: pname with: param [

	<command: #glImageTransformParameterfHP>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ImageTransformTargetHP>
	<arg: 'pname' type: 'GLenum' group: #ImageTransformPNameHP>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glImageTransformParameterfHP' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> imageTransformParameterfvHP: target with: pname with: params [

	<command: #glImageTransformParameterfvHP>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ImageTransformTargetHP>
	<arg: 'pname' type: 'GLenum' group: #ImageTransformPNameHP>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glImageTransformParameterfvHP' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> imageTransformParameteriHP: target with: pname with: param [

	<command: #glImageTransformParameteriHP>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ImageTransformTargetHP>
	<arg: 'pname' type: 'GLenum' group: #ImageTransformPNameHP>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glImageTransformParameteriHP' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> imageTransformParameterivHP: target with: pname with: params [

	<command: #glImageTransformParameterivHP>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ImageTransformTargetHP>
	<arg: 'pname' type: 'GLenum' group: #ImageTransformPNameHP>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glImageTransformParameterivHP' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> importMemoryFdEXT: memory with: size with: handleType with: fd [

	<command: #glImportMemoryFdEXT>
	<return: 'void'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'size' type: 'GLuint64'>
	<arg: 'handleType' type: 'GLenum' group: #ExternalHandleType>
	<arg: 'fd' type: 'GLint'>

	<apicall: void 'glImportMemoryFdEXT' (GLuint GLuint64 GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> importMemoryWin32HandleEXT: memory with: size with: handleType with: handle [

	<command: #glImportMemoryWin32HandleEXT>
	<return: 'void'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'size' type: 'GLuint64'>
	<arg: 'handleType' type: 'GLenum' group: #ExternalHandleType>
	<arg: 'handle' type: 'void*'>

	<apicall: void 'glImportMemoryWin32HandleEXT' (GLuint GLuint64 GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> importMemoryWin32NameEXT: memory with: size with: handleType with: name [

	<command: #glImportMemoryWin32NameEXT>
	<return: 'void'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'size' type: 'GLuint64'>
	<arg: 'handleType' type: 'GLenum' group: #ExternalHandleType>
	<arg: 'name' type: 'void*'>

	<apicall: void 'glImportMemoryWin32NameEXT' (GLuint GLuint64 GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> importSemaphoreFdEXT: semaphore with: handleType with: fd [

	<command: #glImportSemaphoreFdEXT>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'handleType' type: 'GLenum' group: #ExternalHandleType>
	<arg: 'fd' type: 'GLint'>

	<apicall: void 'glImportSemaphoreFdEXT' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> importSemaphoreWin32HandleEXT: semaphore with: handleType with: handle [

	<command: #glImportSemaphoreWin32HandleEXT>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'handleType' type: 'GLenum' group: #ExternalHandleType>
	<arg: 'handle' type: 'void*'>

	<apicall: void 'glImportSemaphoreWin32HandleEXT' (GLuint GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> importSemaphoreWin32NameEXT: semaphore with: handleType with: name [

	<command: #glImportSemaphoreWin32NameEXT>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'handleType' type: 'GLenum' group: #ExternalHandleType>
	<arg: 'name' type: 'void*'>

	<apicall: void 'glImportSemaphoreWin32NameEXT' (GLuint GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> importSyncEXT: external_sync_type with: external_sync with: flags [

	<command: #glImportSyncEXT>
	<return: 'GLsync'>
	<arg: 'external_sync_type' type: 'GLenum'>
	<arg: 'external_sync' type: 'GLintptr'>
	<arg: 'flags' type: 'GLbitfield'>

	<apicall: GLsync 'glImportSyncEXT' (GLenum GLintptr GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexFormatNV: type with: stride [

	<command: #glIndexFormatNV>
	<return: 'void'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glIndexFormatNV' (GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexFuncEXT: func with: ref [

	<command: #glIndexFuncEXT>
	<return: 'void'>
	<arg: 'func' type: 'GLenum' group: #IndexFunctionEXT>
	<arg: 'ref' type: 'GLclampf' group: #ClampedFloat32>

	<apicall: void 'glIndexFuncEXT' (GLenum GLclampf)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexMask: mask [

	<command: #glIndexMask>
	<return: 'void'>
	<arg: 'mask' type: 'GLuint' group: #MaskedColorIndexValueI>

	<apicall: void 'glIndexMask' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexMaterialEXT: face with: mode [

	<command: #glIndexMaterialEXT>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'mode' type: 'GLenum' group: #IndexMaterialParameterEXT>

	<apicall: void 'glIndexMaterialEXT' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexPointer: type with: stride with: pointer [

	<command: #glIndexPointer>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #IndexPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glIndexPointer' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexPointerEXT: type with: stride with: count with: pointer [

	<command: #glIndexPointerEXT>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #IndexPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride,count)'>

	<apicall: void 'glIndexPointerEXT' (GLenum GLsizei GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexPointerListIBM: type with: stride with: pointer with: ptrstride [

	<command: #glIndexPointerListIBM>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #IndexPointerType>
	<arg: 'stride' type: 'GLint'>
	<arg: 'pointer' type: 'void**' size: 'COMPSIZE(type,stride)'>
	<arg: 'ptrstride' type: 'GLint'>

	<apicall: void 'glIndexPointerListIBM' (GLenum GLint void** GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexd: c [

	<command: #glIndexd>
	<return: 'void'>
	<arg: 'c' type: 'GLdouble' group: #ColorIndexValueD>

	<apicall: void 'glIndexd' (GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexdv: c [

	<command: #glIndexdv>
	<return: 'void'>
	<arg: 'c' type: 'GLdouble*' group: #ColorIndexValueD size: '1'>

	<apicall: void 'glIndexdv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexf: c [

	<command: #glIndexf>
	<return: 'void'>
	<arg: 'c' type: 'GLfloat' group: #ColorIndexValueF>

	<apicall: void 'glIndexf' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexfv: c [

	<command: #glIndexfv>
	<return: 'void'>
	<arg: 'c' type: 'GLfloat*' group: #ColorIndexValueF size: '1'>

	<apicall: void 'glIndexfv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexi: c [

	<command: #glIndexi>
	<return: 'void'>
	<arg: 'c' type: 'GLint' group: #ColorIndexValueI>

	<apicall: void 'glIndexi' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexiv: c [

	<command: #glIndexiv>
	<return: 'void'>
	<arg: 'c' type: 'GLint*' group: #ColorIndexValueI size: '1'>

	<apicall: void 'glIndexiv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexs: c [

	<command: #glIndexs>
	<return: 'void'>
	<arg: 'c' type: 'GLshort' group: #ColorIndexValueS>

	<apicall: void 'glIndexs' (GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexsv: c [

	<command: #glIndexsv>
	<return: 'void'>
	<arg: 'c' type: 'GLshort*' group: #ColorIndexValueS size: '1'>

	<apicall: void 'glIndexsv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexub: c [

	<command: #glIndexub>
	<return: 'void'>
	<arg: 'c' type: 'GLubyte' group: #ColorIndexValueUB>

	<apicall: void 'glIndexub' (GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexubv: c [

	<command: #glIndexubv>
	<return: 'void'>
	<arg: 'c' type: 'GLubyte*' group: #ColorIndexValueUB size: '1'>

	<apicall: void 'glIndexubv' (GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexxOES: component [

	<command: #glIndexxOES>
	<return: 'void'>
	<arg: 'component' type: 'GLfixed'>

	<apicall: void 'glIndexxOES' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> indexxvOES: component [

	<command: #glIndexxvOES>
	<return: 'void'>
	<arg: 'component' type: 'GLfixed*' size: '1'>

	<apicall: void 'glIndexxvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> initNames [

	<command: #glInitNames>
	<return: 'void'>

	<apicall: void 'glInitNames' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> insertComponentEXT: res with: src with: num [

	<command: #glInsertComponentEXT>
	<return: 'void'>
	<arg: 'res' type: 'GLuint'>
	<arg: 'src' type: 'GLuint'>
	<arg: 'num' type: 'GLuint'>

	<apicall: void 'glInsertComponentEXT' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> insertEventMarkerEXT: length with: marker [

	<command: #glInsertEventMarkerEXT>
	<return: 'void'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'marker' type: 'GLchar*'>

	<apicall: void 'glInsertEventMarkerEXT' (GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> instrumentsBufferSGIX: size with: buffer [

	<command: #glInstrumentsBufferSGIX>
	<return: 'void'>
	<arg: 'size' type: 'GLsizei'>
	<arg: 'buffer' type: 'GLint*' size: 'size'>

	<apicall: void 'glInstrumentsBufferSGIX' (GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> interleavedArrays: format with: stride with: pointer [

	<command: #glInterleavedArrays>
	<return: 'void'>
	<arg: 'format' type: 'GLenum' group: #InterleavedArrayFormat>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(format,stride)'>

	<apicall: void 'glInterleavedArrays' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> interpolatePathsNV: resultPath with: pathA with: pathB with: weight [

	<command: #glInterpolatePathsNV>
	<return: 'void'>
	<arg: 'resultPath' type: 'GLuint' group: #Path>
	<arg: 'pathA' type: 'GLuint' group: #Path>
	<arg: 'pathB' type: 'GLuint' group: #Path>
	<arg: 'weight' type: 'GLfloat'>

	<apicall: void 'glInterpolatePathsNV' (GLuint GLuint GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> invalidateBufferData: buffer [

	<command: #glInvalidateBufferData>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glInvalidateBufferData' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> invalidateBufferSubData: buffer with: offset with: length [

	<command: #glInvalidateBufferSubData>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'length' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glInvalidateBufferSubData' (GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> invalidateFramebuffer: target with: numAttachments with: attachments [

	<command: #glInvalidateFramebuffer>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'numAttachments' type: 'GLsizei'>
	<arg: 'attachments' type: 'GLenum*' group: #InvalidateFramebufferAttachment size: 'numAttachments'>

	<apicall: void 'glInvalidateFramebuffer' (GLenum GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> invalidateNamedFramebufferData: framebuffer with: numAttachments with: attachments [

	<command: #glInvalidateNamedFramebufferData>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'numAttachments' type: 'GLsizei'>
	<arg: 'attachments' type: 'GLenum*' group: #FramebufferAttachment>

	<apicall: void 'glInvalidateNamedFramebufferData' (GLuint GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> invalidateNamedFramebufferSubData: framebuffer with: numAttachments with: attachments with: x with: y with: width with: height [

	<command: #glInvalidateNamedFramebufferSubData>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'numAttachments' type: 'GLsizei'>
	<arg: 'attachments' type: 'GLenum*' group: #FramebufferAttachment>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glInvalidateNamedFramebufferSubData' (GLuint GLsizei GLenum* GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> invalidateSubFramebuffer: target with: numAttachments with: attachments with: x with: y with: width with: height [

	<command: #glInvalidateSubFramebuffer>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #FramebufferTarget>
	<arg: 'numAttachments' type: 'GLsizei'>
	<arg: 'attachments' type: 'GLenum*' group: #InvalidateFramebufferAttachment size: 'numAttachments'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glInvalidateSubFramebuffer' (GLenum GLsizei GLenum* GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> invalidateTexImage: texture with: level [

	<command: #glInvalidateTexImage>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glInvalidateTexImage' (GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> invalidateTexSubImage: texture with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth [

	<command: #glInvalidateTexSubImage>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>

	<apicall: void 'glInvalidateTexSubImage' (GLuint GLint GLint GLint GLint GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isAsyncMarkerSGIX: marker [

	<command: #glIsAsyncMarkerSGIX>
	<return: 'GLboolean'>
	<arg: 'marker' type: 'GLuint'>

	<apicall: GLboolean 'glIsAsyncMarkerSGIX' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isBuffer: buffer [

	<command: #glIsBuffer>
	<return: 'GLboolean'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsBuffer' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isBufferARB: buffer [

	<command: #glIsBufferARB>
	<return: 'GLboolean'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsBufferARB' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isBufferResidentNV: target [

	<command: #glIsBufferResidentNV>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum'>

	<apicall: GLboolean 'glIsBufferResidentNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isCommandListNV: list [

	<command: #glIsCommandListNV>
	<return: 'GLboolean'>
	<arg: 'list' type: 'GLuint'>

	<apicall: GLboolean 'glIsCommandListNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isEnabled: cap [

	<command: #glIsEnabled>
	<return: 'GLboolean'>
	<arg: 'cap' type: 'GLenum' group: #EnableCap>

	<apicall: GLboolean 'glIsEnabled' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isEnabledIndexedEXT: target with: index [

	<command: #glIsEnabledIndexedEXT>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: GLboolean 'glIsEnabledIndexedEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isEnabledi: target with: index [

	<command: #glIsEnabledi>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: GLboolean 'glIsEnabledi' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isEnablediEXT: target with: index [

	<command: #glIsEnablediEXT>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: GLboolean 'glIsEnablediEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isEnablediNV: target with: index [

	<command: #glIsEnablediNV>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: GLboolean 'glIsEnablediNV' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isEnablediOES: target with: index [

	<command: #glIsEnablediOES>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum' group: #EnableCap>
	<arg: 'index' type: 'GLuint'>

	<apicall: GLboolean 'glIsEnablediOES' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isFenceAPPLE: fence [

	<command: #glIsFenceAPPLE>
	<return: 'GLboolean'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>

	<apicall: GLboolean 'glIsFenceAPPLE' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isFenceNV: fence [

	<command: #glIsFenceNV>
	<return: 'GLboolean'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>

	<apicall: GLboolean 'glIsFenceNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isFramebuffer: framebuffer [

	<command: #glIsFramebuffer>
	<return: 'GLboolean'>
	<arg: 'framebuffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsFramebuffer' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isFramebufferEXT: framebuffer [

	<command: #glIsFramebufferEXT>
	<return: 'GLboolean'>
	<arg: 'framebuffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsFramebufferEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isFramebufferOES: framebuffer [

	<command: #glIsFramebufferOES>
	<return: 'GLboolean'>
	<arg: 'framebuffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsFramebufferOES' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isImageHandleResidentARB: handle [

	<command: #glIsImageHandleResidentARB>
	<return: 'GLboolean'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: GLboolean 'glIsImageHandleResidentARB' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isImageHandleResidentNV: handle [

	<command: #glIsImageHandleResidentNV>
	<return: 'GLboolean'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: GLboolean 'glIsImageHandleResidentNV' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isList: list [

	<command: #glIsList>
	<return: 'GLboolean'>
	<arg: 'list' type: 'GLuint' group: #List>

	<apicall: GLboolean 'glIsList' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isMemoryObjectEXT: memoryObject [

	<command: #glIsMemoryObjectEXT>
	<return: 'GLboolean'>
	<arg: 'memoryObject' type: 'GLuint'>

	<apicall: GLboolean 'glIsMemoryObjectEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isNameAMD: identifier with: name [

	<command: #glIsNameAMD>
	<return: 'GLboolean'>
	<arg: 'identifier' type: 'GLenum'>
	<arg: 'name' type: 'GLuint'>

	<apicall: GLboolean 'glIsNameAMD' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isNamedBufferResidentNV: buffer [

	<command: #glIsNamedBufferResidentNV>
	<return: 'GLboolean'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsNamedBufferResidentNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isNamedStringARB: namelen with: name [

	<command: #glIsNamedStringARB>
	<return: 'GLboolean'>
	<arg: 'namelen' type: 'GLint'>
	<arg: 'name' type: 'GLchar*' size: 'namelen'>

	<apicall: GLboolean 'glIsNamedStringARB' (GLint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isObjectBufferATI: buffer [

	<command: #glIsObjectBufferATI>
	<return: 'GLboolean'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsObjectBufferATI' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isOcclusionQueryNV: id [

	<command: #glIsOcclusionQueryNV>
	<return: 'GLboolean'>
	<arg: 'id' type: 'GLuint'>

	<apicall: GLboolean 'glIsOcclusionQueryNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isPathNV: path [

	<command: #glIsPathNV>
	<return: 'GLboolean'>
	<arg: 'path' type: 'GLuint' group: #Path>

	<apicall: GLboolean 'glIsPathNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isPointInFillPathNV: path with: mask with: x with: y [

	<command: #glIsPointInFillPathNV>
	<return: 'GLboolean'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>

	<apicall: GLboolean 'glIsPointInFillPathNV' (GLuint GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isPointInStrokePathNV: path with: x with: y [

	<command: #glIsPointInStrokePathNV>
	<return: 'GLboolean'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>

	<apicall: GLboolean 'glIsPointInStrokePathNV' (GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isProgram: program [

	<command: #glIsProgram>
	<return: 'GLboolean'>
	<arg: 'program' type: 'GLuint'>

	<apicall: GLboolean 'glIsProgram' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isProgramARB: program [

	<command: #glIsProgramARB>
	<return: 'GLboolean'>
	<arg: 'program' type: 'GLuint'>

	<apicall: GLboolean 'glIsProgramARB' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isProgramNV: id [

	<command: #glIsProgramNV>
	<return: 'GLboolean'>
	<arg: 'id' type: 'GLuint'>

	<apicall: GLboolean 'glIsProgramNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isProgramPipeline: pipeline [

	<command: #glIsProgramPipeline>
	<return: 'GLboolean'>
	<arg: 'pipeline' type: 'GLuint'>

	<apicall: GLboolean 'glIsProgramPipeline' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isProgramPipelineEXT: pipeline [

	<command: #glIsProgramPipelineEXT>
	<return: 'GLboolean'>
	<arg: 'pipeline' type: 'GLuint'>

	<apicall: GLboolean 'glIsProgramPipelineEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isQuery: id [

	<command: #glIsQuery>
	<return: 'GLboolean'>
	<arg: 'id' type: 'GLuint'>

	<apicall: GLboolean 'glIsQuery' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isQueryARB: id [

	<command: #glIsQueryARB>
	<return: 'GLboolean'>
	<arg: 'id' type: 'GLuint'>

	<apicall: GLboolean 'glIsQueryARB' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isQueryEXT: id [

	<command: #glIsQueryEXT>
	<return: 'GLboolean'>
	<arg: 'id' type: 'GLuint'>

	<apicall: GLboolean 'glIsQueryEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isRenderbuffer: renderbuffer [

	<command: #glIsRenderbuffer>
	<return: 'GLboolean'>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsRenderbuffer' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isRenderbufferEXT: renderbuffer [

	<command: #glIsRenderbufferEXT>
	<return: 'GLboolean'>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsRenderbufferEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isRenderbufferOES: renderbuffer [

	<command: #glIsRenderbufferOES>
	<return: 'GLboolean'>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: GLboolean 'glIsRenderbufferOES' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isSampler: sampler [

	<command: #glIsSampler>
	<return: 'GLboolean'>
	<arg: 'sampler' type: 'GLuint'>

	<apicall: GLboolean 'glIsSampler' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isSemaphoreEXT: semaphore [

	<command: #glIsSemaphoreEXT>
	<return: 'GLboolean'>
	<arg: 'semaphore' type: 'GLuint'>

	<apicall: GLboolean 'glIsSemaphoreEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isShader: shader [

	<command: #glIsShader>
	<return: 'GLboolean'>
	<arg: 'shader' type: 'GLuint'>

	<apicall: GLboolean 'glIsShader' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isStateNV: state [

	<command: #glIsStateNV>
	<return: 'GLboolean'>
	<arg: 'state' type: 'GLuint'>

	<apicall: GLboolean 'glIsStateNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isSync: sync [

	<command: #glIsSync>
	<return: 'GLboolean'>
	<arg: 'sync' type: 'GLsync' group: #sync>

	<apicall: GLboolean 'glIsSync' (GLsync)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isSyncAPPLE: sync [

	<command: #glIsSyncAPPLE>
	<return: 'GLboolean'>
	<arg: 'sync' type: 'GLsync'>

	<apicall: GLboolean 'glIsSyncAPPLE' (GLsync)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isTexture: texture [

	<command: #glIsTexture>
	<return: 'GLboolean'>
	<arg: 'texture' type: 'GLuint' group: #Texture>

	<apicall: GLboolean 'glIsTexture' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isTextureEXT: texture [

	<command: #glIsTextureEXT>
	<return: 'GLboolean'>
	<arg: 'texture' type: 'GLuint' group: #Texture>

	<apicall: GLboolean 'glIsTextureEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isTextureHandleResidentARB: handle [

	<command: #glIsTextureHandleResidentARB>
	<return: 'GLboolean'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: GLboolean 'glIsTextureHandleResidentARB' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isTextureHandleResidentNV: handle [

	<command: #glIsTextureHandleResidentNV>
	<return: 'GLboolean'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: GLboolean 'glIsTextureHandleResidentNV' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isTransformFeedback: id [

	<command: #glIsTransformFeedback>
	<return: 'GLboolean'>
	<arg: 'id' type: 'GLuint'>

	<apicall: GLboolean 'glIsTransformFeedback' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isTransformFeedbackNV: id [

	<command: #glIsTransformFeedbackNV>
	<return: 'GLboolean'>
	<arg: 'id' type: 'GLuint'>

	<apicall: GLboolean 'glIsTransformFeedbackNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isVariantEnabledEXT: id with: cap [

	<command: #glIsVariantEnabledEXT>
	<return: 'GLboolean'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'cap' type: 'GLenum' group: #VariantCapEXT>

	<apicall: GLboolean 'glIsVariantEnabledEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isVertexArray: array [

	<command: #glIsVertexArray>
	<return: 'GLboolean'>
	<arg: 'array' type: 'GLuint'>

	<apicall: GLboolean 'glIsVertexArray' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isVertexArrayAPPLE: array [

	<command: #glIsVertexArrayAPPLE>
	<return: 'GLboolean'>
	<arg: 'array' type: 'GLuint'>

	<apicall: GLboolean 'glIsVertexArrayAPPLE' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isVertexArrayOES: array [

	<command: #glIsVertexArrayOES>
	<return: 'GLboolean'>
	<arg: 'array' type: 'GLuint'>

	<apicall: GLboolean 'glIsVertexArrayOES' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> isVertexAttribEnabledAPPLE: index with: pname [

	<command: #glIsVertexAttribEnabledAPPLE>
	<return: 'GLboolean'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>

	<apicall: GLboolean 'glIsVertexAttribEnabledAPPLE' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> labelObjectEXT: type with: object with: length with: label [

	<command: #glLabelObjectEXT>
	<return: 'void'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'object' type: 'GLuint'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'label' type: 'GLchar*'>

	<apicall: void 'glLabelObjectEXT' (GLenum GLuint GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lgpuInterlockNVX [

	<command: #glLGPUInterlockNVX>
	<return: 'void'>

	<apicall: void 'glLGPUInterlockNVX' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lgpuNamedBufferSubDataNVX: gpuMask with: buffer with: offset with: size with: data [

	<command: #glLGPUNamedBufferSubDataNVX>
	<return: 'void'>
	<arg: 'gpuMask' type: 'GLbitfield'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'data' type: 'void*'>

	<apicall: void 'glLGPUNamedBufferSubDataNVX' (GLbitfield GLuint GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightEnviSGIX: pname with: param [

	<command: #glLightEnviSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightEnvParameterSGIX>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glLightEnviSGIX' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightModelf: pname with: param [

	<command: #glLightModelf>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightModelParameter>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glLightModelf' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightModelfv: pname with: params [

	<command: #glLightModelfv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightModelParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glLightModelfv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightModeli: pname with: param [

	<command: #glLightModeli>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightModelParameter>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glLightModeli' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightModeliv: pname with: params [

	<command: #glLightModeliv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightModelParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glLightModeliv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightModelx: pname with: param [

	<command: #glLightModelx>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightModelParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glLightModelx' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightModelxOES: pname with: param [

	<command: #glLightModelxOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightModelParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glLightModelxOES' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightModelxv: pname with: param [

	<command: #glLightModelxv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightModelParameter>
	<arg: 'param' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glLightModelxv' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightModelxvOES: pname with: param [

	<command: #glLightModelxvOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightModelParameter>
	<arg: 'param' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glLightModelxvOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightf: light with: pname with: param [

	<command: #glLightf>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glLightf' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightfv: light with: pname with: params [

	<command: #glLightfv>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glLightfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lighti: light with: pname with: param [

	<command: #glLighti>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glLighti' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightiv: light with: pname with: params [

	<command: #glLightiv>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glLightiv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightx: light with: pname with: param [

	<command: #glLightx>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glLightx' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightxOES: light with: pname with: param [

	<command: #glLightxOES>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glLightxOES' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightxv: light with: pname with: params [

	<command: #glLightxv>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glLightxv' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lightxvOES: light with: pname with: params [

	<command: #glLightxvOES>
	<return: 'void'>
	<arg: 'light' type: 'GLenum' group: #LightName>
	<arg: 'pname' type: 'GLenum' group: #LightParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glLightxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lineStipple: factor with: pattern [

	<command: #glLineStipple>
	<return: 'void'>
	<arg: 'factor' type: 'GLint' group: #CheckedInt32>
	<arg: 'pattern' type: 'GLushort' group: #LineStipple>

	<apicall: void 'glLineStipple' (GLint GLushort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lineWidth: width [

	<command: #glLineWidth>
	<return: 'void'>
	<arg: 'width' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glLineWidth' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lineWidthx: width [

	<command: #glLineWidthx>
	<return: 'void'>
	<arg: 'width' type: 'GLfixed'>

	<apicall: void 'glLineWidthx' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lineWidthxOES: width [

	<command: #glLineWidthxOES>
	<return: 'void'>
	<arg: 'width' type: 'GLfixed'>

	<apicall: void 'glLineWidthxOES' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> linkProgram: program [

	<command: #glLinkProgram>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glLinkProgram' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> linkProgramARB: programObj [

	<command: #glLinkProgramARB>
	<return: 'void'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>

	<apicall: void 'glLinkProgramARB' (GLhandleARB)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> listBase: base [

	<command: #glListBase>
	<return: 'void'>
	<arg: 'base' type: 'GLuint' group: #List>

	<apicall: void 'glListBase' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> listDrawCommandsStatesClientNV: list with: segment with: indirects with: sizes with: states with: fbos with: count [

	<command: #glListDrawCommandsStatesClientNV>
	<return: 'void'>
	<arg: 'list' type: 'GLuint'>
	<arg: 'segment' type: 'GLuint'>
	<arg: 'indirects' type: 'void**' size: 'count'>
	<arg: 'sizes' type: 'GLsizei*' size: 'count'>
	<arg: 'states' type: 'GLuint*' size: 'count'>
	<arg: 'fbos' type: 'GLuint*' size: 'count'>
	<arg: 'count' type: 'GLuint'>

	<apicall: void 'glListDrawCommandsStatesClientNV' (GLuint GLuint void** GLsizei* GLuint* GLuint* GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> listParameterfSGIX: list with: pname with: param [

	<command: #glListParameterfSGIX>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>
	<arg: 'pname' type: 'GLenum' group: #ListParameterName>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glListParameterfSGIX' (GLuint GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> listParameterfvSGIX: list with: pname with: params [

	<command: #glListParameterfvSGIX>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>
	<arg: 'pname' type: 'GLenum' group: #ListParameterName>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glListParameterfvSGIX' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> listParameteriSGIX: list with: pname with: param [

	<command: #glListParameteriSGIX>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>
	<arg: 'pname' type: 'GLenum' group: #ListParameterName>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glListParameteriSGIX' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> listParameterivSGIX: list with: pname with: params [

	<command: #glListParameterivSGIX>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>
	<arg: 'pname' type: 'GLenum' group: #ListParameterName>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glListParameterivSGIX' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadIdentity [

	<command: #glLoadIdentity>
	<return: 'void'>

	<apicall: void 'glLoadIdentity' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadIdentityDeformationMapSGIX: mask [

	<command: #glLoadIdentityDeformationMapSGIX>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield' group: #FfdMaskSGIX>

	<apicall: void 'glLoadIdentityDeformationMapSGIX' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadMatrixd: m [

	<command: #glLoadMatrixd>
	<return: 'void'>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glLoadMatrixd' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadMatrixf: m [

	<command: #glLoadMatrixf>
	<return: 'void'>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glLoadMatrixf' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadMatrixx: m [

	<command: #glLoadMatrixx>
	<return: 'void'>
	<arg: 'm' type: 'GLfixed*' size: '16'>

	<apicall: void 'glLoadMatrixx' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadMatrixxOES: m [

	<command: #glLoadMatrixxOES>
	<return: 'void'>
	<arg: 'm' type: 'GLfixed*' size: '16'>

	<apicall: void 'glLoadMatrixxOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadName: name [

	<command: #glLoadName>
	<return: 'void'>
	<arg: 'name' type: 'GLuint' group: #SelectName>

	<apicall: void 'glLoadName' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadPaletteFromModelViewMatrixOES [

	<command: #glLoadPaletteFromModelViewMatrixOES>
	<return: 'void'>

	<apicall: void 'glLoadPaletteFromModelViewMatrixOES' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadProgramNV: target with: id with: len with: program [

	<command: #glLoadProgramNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'id' type: 'GLuint'>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'program' type: 'GLubyte*' size: 'len'>

	<apicall: void 'glLoadProgramNV' (GLenum GLuint GLsizei GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadTransposeMatrixd: m [

	<command: #glLoadTransposeMatrixd>
	<return: 'void'>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glLoadTransposeMatrixd' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadTransposeMatrixdARB: m [

	<command: #glLoadTransposeMatrixdARB>
	<return: 'void'>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glLoadTransposeMatrixdARB' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadTransposeMatrixf: m [

	<command: #glLoadTransposeMatrixf>
	<return: 'void'>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glLoadTransposeMatrixf' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadTransposeMatrixfARB: m [

	<command: #glLoadTransposeMatrixfARB>
	<return: 'void'>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glLoadTransposeMatrixfARB' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> loadTransposeMatrixxOES: m [

	<command: #glLoadTransposeMatrixxOES>
	<return: 'void'>
	<arg: 'm' type: 'GLfixed*' size: '16'>

	<apicall: void 'glLoadTransposeMatrixxOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> lockArraysEXT: first with: count [

	<command: #glLockArraysEXT>
	<return: 'void'>
	<arg: 'first' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>

	<apicall: void 'glLockArraysEXT' (GLint GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> logicOp: opcode [

	<command: #glLogicOp>
	<return: 'void'>
	<arg: 'opcode' type: 'GLenum' group: #LogicOp>

	<apicall: void 'glLogicOp' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeBufferNonResidentNV: target [

	<command: #glMakeBufferNonResidentNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>

	<apicall: void 'glMakeBufferNonResidentNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeBufferResidentNV: target with: access [

	<command: #glMakeBufferResidentNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'access' type: 'GLenum'>

	<apicall: void 'glMakeBufferResidentNV' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeImageHandleNonResidentARB: handle [

	<command: #glMakeImageHandleNonResidentARB>
	<return: 'void'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: void 'glMakeImageHandleNonResidentARB' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeImageHandleNonResidentNV: handle [

	<command: #glMakeImageHandleNonResidentNV>
	<return: 'void'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: void 'glMakeImageHandleNonResidentNV' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeImageHandleResidentARB: handle with: access [

	<command: #glMakeImageHandleResidentARB>
	<return: 'void'>
	<arg: 'handle' type: 'GLuint64'>
	<arg: 'access' type: 'GLenum'>

	<apicall: void 'glMakeImageHandleResidentARB' (GLuint64 GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeImageHandleResidentNV: handle with: access [

	<command: #glMakeImageHandleResidentNV>
	<return: 'void'>
	<arg: 'handle' type: 'GLuint64'>
	<arg: 'access' type: 'GLenum'>

	<apicall: void 'glMakeImageHandleResidentNV' (GLuint64 GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeNamedBufferNonResidentNV: buffer [

	<command: #glMakeNamedBufferNonResidentNV>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glMakeNamedBufferNonResidentNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeNamedBufferResidentNV: buffer with: access [

	<command: #glMakeNamedBufferResidentNV>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'access' type: 'GLenum'>

	<apicall: void 'glMakeNamedBufferResidentNV' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeTextureHandleNonResidentARB: handle [

	<command: #glMakeTextureHandleNonResidentARB>
	<return: 'void'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: void 'glMakeTextureHandleNonResidentARB' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeTextureHandleNonResidentNV: handle [

	<command: #glMakeTextureHandleNonResidentNV>
	<return: 'void'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: void 'glMakeTextureHandleNonResidentNV' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeTextureHandleResidentARB: handle [

	<command: #glMakeTextureHandleResidentARB>
	<return: 'void'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: void 'glMakeTextureHandleResidentARB' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> makeTextureHandleResidentNV: handle [

	<command: #glMakeTextureHandleResidentNV>
	<return: 'void'>
	<arg: 'handle' type: 'GLuint64'>

	<apicall: void 'glMakeTextureHandleResidentNV' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> map1d: target with: u1 with: u2 with: stride with: order with: points [

	<command: #glMap1d>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'u1' type: 'GLdouble' group: #CoordD>
	<arg: 'u2' type: 'GLdouble' group: #CoordD>
	<arg: 'stride' type: 'GLint'>
	<arg: 'order' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLdouble*' group: #CoordD size: 'COMPSIZE(target,stride,order)'>

	<apicall: void 'glMap1d' (GLenum GLdouble GLdouble GLint GLint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> map1f: target with: u1 with: u2 with: stride with: order with: points [

	<command: #glMap1f>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'u1' type: 'GLfloat' group: #CoordF>
	<arg: 'u2' type: 'GLfloat' group: #CoordF>
	<arg: 'stride' type: 'GLint'>
	<arg: 'order' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLfloat*' group: #CoordF size: 'COMPSIZE(target,stride,order)'>

	<apicall: void 'glMap1f' (GLenum GLfloat GLfloat GLint GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> map1xOES: target with: u1 with: u2 with: stride with: order with: points [

	<command: #glMap1xOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'u1' type: 'GLfixed'>
	<arg: 'u2' type: 'GLfixed'>
	<arg: 'stride' type: 'GLint'>
	<arg: 'order' type: 'GLint'>
	<arg: 'points' type: 'GLfixed'>

	<apicall: void 'glMap1xOES' (GLenum GLfixed GLfixed GLint GLint GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> map2d: target with: u1 with: u2 with: ustride with: uorder with: v1 with: v2 with: vstride with: vorder with: points [

	<command: #glMap2d>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'u1' type: 'GLdouble' group: #CoordD>
	<arg: 'u2' type: 'GLdouble' group: #CoordD>
	<arg: 'ustride' type: 'GLint'>
	<arg: 'uorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'v1' type: 'GLdouble' group: #CoordD>
	<arg: 'v2' type: 'GLdouble' group: #CoordD>
	<arg: 'vstride' type: 'GLint'>
	<arg: 'vorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLdouble*' group: #CoordD size: 'COMPSIZE(target,ustride,uorder,vstride,vorder)'>

	<apicall: void 'glMap2d' (GLenum GLdouble GLdouble GLint GLint GLdouble GLdouble GLint GLint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> map2f: target with: u1 with: u2 with: ustride with: uorder with: v1 with: v2 with: vstride with: vorder with: points [

	<command: #glMap2f>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'u1' type: 'GLfloat' group: #CoordF>
	<arg: 'u2' type: 'GLfloat' group: #CoordF>
	<arg: 'ustride' type: 'GLint'>
	<arg: 'uorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'v1' type: 'GLfloat' group: #CoordF>
	<arg: 'v2' type: 'GLfloat' group: #CoordF>
	<arg: 'vstride' type: 'GLint'>
	<arg: 'vorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLfloat*' group: #CoordF size: 'COMPSIZE(target,ustride,uorder,vstride,vorder)'>

	<apicall: void 'glMap2f' (GLenum GLfloat GLfloat GLint GLint GLfloat GLfloat GLint GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> map2xOES: target with: u1 with: u2 with: ustride with: uorder with: v1 with: v2 with: vstride with: vorder with: points [

	<command: #glMap2xOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MapTarget>
	<arg: 'u1' type: 'GLfixed'>
	<arg: 'u2' type: 'GLfixed'>
	<arg: 'ustride' type: 'GLint'>
	<arg: 'uorder' type: 'GLint'>
	<arg: 'v1' type: 'GLfixed'>
	<arg: 'v2' type: 'GLfixed'>
	<arg: 'vstride' type: 'GLint'>
	<arg: 'vorder' type: 'GLint'>
	<arg: 'points' type: 'GLfixed'>

	<apicall: void 'glMap2xOES' (GLenum GLfixed GLfixed GLint GLint GLfixed GLfixed GLint GLint GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapBuffer: target with: access [

	<command: #glMapBuffer>
	<return: 'void*'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'access' type: 'GLenum' group: #BufferAccessARB>

	<apicall: void* 'glMapBuffer' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapBufferARB: target with: access [

	<command: #glMapBufferARB>
	<return: 'void*'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'access' type: 'GLenum' group: #BufferAccessARB>

	<apicall: void* 'glMapBufferARB' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapBufferOES: target with: access [

	<command: #glMapBufferOES>
	<return: 'void*'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'access' type: 'GLenum' group: #BufferAccessARB>

	<apicall: void* 'glMapBufferOES' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapBufferRange: target with: offset with: length with: access [

	<command: #glMapBufferRange>
	<return: 'void*'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'length' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'access' type: 'GLbitfield' group: #MapBufferAccessMask>

	<apicall: void* 'glMapBufferRange' (GLenum GLintptr GLsizeiptr GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapBufferRangeEXT: target with: offset with: length with: access [

	<command: #glMapBufferRangeEXT>
	<return: 'void*'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'length' type: 'GLsizeiptr'>
	<arg: 'access' type: 'GLbitfield' group: #MapBufferAccessMask>

	<apicall: void* 'glMapBufferRangeEXT' (GLenum GLintptr GLsizeiptr GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapControlPointsNV: target with: index with: type with: ustride with: vstride with: uorder with: vorder with: packed with: points [

	<command: #glMapControlPointsNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #MapTypeNV>
	<arg: 'ustride' type: 'GLsizei'>
	<arg: 'vstride' type: 'GLsizei'>
	<arg: 'uorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'vorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'packed' type: 'GLboolean' group: #Boolean>
	<arg: 'points' type: 'void*' size: 'COMPSIZE(target,uorder,vorder)'>

	<apicall: void 'glMapControlPointsNV' (GLenum GLuint GLenum GLsizei GLsizei GLint GLint GLboolean void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapGrid1d: un with: u1 with: u2 [

	<command: #glMapGrid1d>
	<return: 'void'>
	<arg: 'un' type: 'GLint'>
	<arg: 'u1' type: 'GLdouble' group: #CoordD>
	<arg: 'u2' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMapGrid1d' (GLint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapGrid1f: un with: u1 with: u2 [

	<command: #glMapGrid1f>
	<return: 'void'>
	<arg: 'un' type: 'GLint'>
	<arg: 'u1' type: 'GLfloat' group: #CoordF>
	<arg: 'u2' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMapGrid1f' (GLint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapGrid1xOES: n with: u1 with: u2 [

	<command: #glMapGrid1xOES>
	<return: 'void'>
	<arg: 'n' type: 'GLint'>
	<arg: 'u1' type: 'GLfixed'>
	<arg: 'u2' type: 'GLfixed'>

	<apicall: void 'glMapGrid1xOES' (GLint GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapGrid2d: un with: u1 with: u2 with: vn with: v1 with: v2 [

	<command: #glMapGrid2d>
	<return: 'void'>
	<arg: 'un' type: 'GLint'>
	<arg: 'u1' type: 'GLdouble' group: #CoordD>
	<arg: 'u2' type: 'GLdouble' group: #CoordD>
	<arg: 'vn' type: 'GLint'>
	<arg: 'v1' type: 'GLdouble' group: #CoordD>
	<arg: 'v2' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMapGrid2d' (GLint GLdouble GLdouble GLint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapGrid2f: un with: u1 with: u2 with: vn with: v1 with: v2 [

	<command: #glMapGrid2f>
	<return: 'void'>
	<arg: 'un' type: 'GLint'>
	<arg: 'u1' type: 'GLfloat' group: #CoordF>
	<arg: 'u2' type: 'GLfloat' group: #CoordF>
	<arg: 'vn' type: 'GLint'>
	<arg: 'v1' type: 'GLfloat' group: #CoordF>
	<arg: 'v2' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMapGrid2f' (GLint GLfloat GLfloat GLint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapGrid2xOES: n with: u1 with: u2 with: v1 with: v2 [

	<command: #glMapGrid2xOES>
	<return: 'void'>
	<arg: 'n' type: 'GLint'>
	<arg: 'u1' type: 'GLfixed'>
	<arg: 'u2' type: 'GLfixed'>
	<arg: 'v1' type: 'GLfixed'>
	<arg: 'v2' type: 'GLfixed'>

	<apicall: void 'glMapGrid2xOES' (GLint GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapNamedBuffer: buffer with: access [

	<command: #glMapNamedBuffer>
	<return: 'void*'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'access' type: 'GLenum' group: #BufferAccessARB>

	<apicall: void* 'glMapNamedBuffer' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapNamedBufferEXT: buffer with: access [

	<command: #glMapNamedBufferEXT>
	<return: 'void*'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'access' type: 'GLenum' group: #BufferAccessARB>

	<apicall: void* 'glMapNamedBufferEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapNamedBufferRange: buffer with: offset with: length with: access [

	<command: #glMapNamedBufferRange>
	<return: 'void*'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'length' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'access' type: 'GLbitfield' group: #MapBufferAccessMask>

	<apicall: void* 'glMapNamedBufferRange' (GLuint GLintptr GLsizeiptr GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapNamedBufferRangeEXT: buffer with: offset with: length with: access [

	<command: #glMapNamedBufferRangeEXT>
	<return: 'void*'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'length' type: 'GLsizeiptr'>
	<arg: 'access' type: 'GLbitfield' group: #MapBufferAccessMask>

	<apicall: void* 'glMapNamedBufferRangeEXT' (GLuint GLintptr GLsizeiptr GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapObjectBufferATI: buffer [

	<command: #glMapObjectBufferATI>
	<return: 'void*'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void* 'glMapObjectBufferATI' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapParameterfvNV: target with: pname with: params [

	<command: #glMapParameterfvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'pname' type: 'GLenum' group: #MapParameterNV>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(target,pname)'>

	<apicall: void 'glMapParameterfvNV' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapParameterivNV: target with: pname with: params [

	<command: #glMapParameterivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #EvalTargetNV>
	<arg: 'pname' type: 'GLenum' group: #MapParameterNV>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(target,pname)'>

	<apicall: void 'glMapParameterivNV' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapTexture2DINTEL: texture with: level with: access with: stride with: layout [

	<command: #glMapTexture2DINTEL>
	<return: 'void*'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'access' type: 'GLbitfield'>
	<arg: 'stride' type: 'GLint*' size: '1'>
	<arg: 'layout' type: 'GLenum*' size: '1'>

	<apicall: void* 'glMapTexture2DINTEL' (GLuint GLint GLbitfield GLint* GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapVertexAttrib1dAPPLE: index with: size with: u1 with: u2 with: stride with: order with: points [

	<command: #glMapVertexAttrib1dAPPLE>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLuint'>
	<arg: 'u1' type: 'GLdouble' group: #CoordD>
	<arg: 'u2' type: 'GLdouble' group: #CoordD>
	<arg: 'stride' type: 'GLint'>
	<arg: 'order' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLdouble*' group: #CoordD size: 'COMPSIZE(size,stride,order)'>

	<apicall: void 'glMapVertexAttrib1dAPPLE' (GLuint GLuint GLdouble GLdouble GLint GLint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapVertexAttrib1fAPPLE: index with: size with: u1 with: u2 with: stride with: order with: points [

	<command: #glMapVertexAttrib1fAPPLE>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLuint'>
	<arg: 'u1' type: 'GLfloat' group: #CoordF>
	<arg: 'u2' type: 'GLfloat' group: #CoordF>
	<arg: 'stride' type: 'GLint'>
	<arg: 'order' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLfloat*' group: #CoordF size: 'COMPSIZE(size,stride,order)'>

	<apicall: void 'glMapVertexAttrib1fAPPLE' (GLuint GLuint GLfloat GLfloat GLint GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapVertexAttrib2dAPPLE: index with: size with: u1 with: u2 with: ustride with: uorder with: v1 with: v2 with: vstride with: vorder with: points [

	<command: #glMapVertexAttrib2dAPPLE>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLuint'>
	<arg: 'u1' type: 'GLdouble' group: #CoordD>
	<arg: 'u2' type: 'GLdouble' group: #CoordD>
	<arg: 'ustride' type: 'GLint'>
	<arg: 'uorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'v1' type: 'GLdouble' group: #CoordD>
	<arg: 'v2' type: 'GLdouble' group: #CoordD>
	<arg: 'vstride' type: 'GLint'>
	<arg: 'vorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLdouble*' group: #CoordD size: 'COMPSIZE(size,ustride,uorder,vstride,vorder)'>

	<apicall: void 'glMapVertexAttrib2dAPPLE' (GLuint GLuint GLdouble GLdouble GLint GLint GLdouble GLdouble GLint GLint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> mapVertexAttrib2fAPPLE: index with: size with: u1 with: u2 with: ustride with: uorder with: v1 with: v2 with: vstride with: vorder with: points [

	<command: #glMapVertexAttrib2fAPPLE>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLuint'>
	<arg: 'u1' type: 'GLfloat' group: #CoordF>
	<arg: 'u2' type: 'GLfloat' group: #CoordF>
	<arg: 'ustride' type: 'GLint'>
	<arg: 'uorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'v1' type: 'GLfloat' group: #CoordF>
	<arg: 'v2' type: 'GLfloat' group: #CoordF>
	<arg: 'vstride' type: 'GLint'>
	<arg: 'vorder' type: 'GLint' group: #CheckedInt32>
	<arg: 'points' type: 'GLfloat*' group: #CoordF size: 'COMPSIZE(size,ustride,uorder,vstride,vorder)'>

	<apicall: void 'glMapVertexAttrib2fAPPLE' (GLuint GLuint GLfloat GLfloat GLint GLint GLfloat GLfloat GLint GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> materialf: face with: pname with: param [

	<command: #glMaterialf>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glMaterialf' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> materialfv: face with: pname with: params [

	<command: #glMaterialfv>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMaterialfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> materiali: face with: pname with: param [

	<command: #glMateriali>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glMateriali' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> materialiv: face with: pname with: params [

	<command: #glMaterialiv>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMaterialiv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> materialx: face with: pname with: param [

	<command: #glMaterialx>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glMaterialx' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> materialxOES: face with: pname with: param [

	<command: #glMaterialxOES>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glMaterialxOES' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> materialxv: face with: pname with: param [

	<command: #glMaterialxv>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glMaterialxv' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> materialxvOES: face with: pname with: param [

	<command: #glMaterialxvOES>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'pname' type: 'GLenum' group: #MaterialParameter>
	<arg: 'param' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glMaterialxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixFrustumEXT: mode with: left with: right with: bottom with: top with: zNear with: zFar [

	<command: #glMatrixFrustumEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'left' type: 'GLdouble'>
	<arg: 'right' type: 'GLdouble'>
	<arg: 'bottom' type: 'GLdouble'>
	<arg: 'top' type: 'GLdouble'>
	<arg: 'zNear' type: 'GLdouble'>
	<arg: 'zFar' type: 'GLdouble'>

	<apicall: void 'glMatrixFrustumEXT' (GLenum GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixIndexPointerARB: size with: type with: stride with: pointer [

	<command: #glMatrixIndexPointerARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #MatrixIndexPointerTypeARB>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glMatrixIndexPointerARB' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixIndexPointerOES: size with: type with: stride with: pointer [

	<command: #glMatrixIndexPointerOES>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #MatrixIndexPointerTypeARB>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glMatrixIndexPointerOES' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixIndexubvARB: size with: indices [

	<command: #glMatrixIndexubvARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'indices' type: 'GLubyte*' size: 'size'>

	<apicall: void 'glMatrixIndexubvARB' (GLint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixIndexuivARB: size with: indices [

	<command: #glMatrixIndexuivARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'indices' type: 'GLuint*' size: 'size'>

	<apicall: void 'glMatrixIndexuivARB' (GLint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixIndexusvARB: size with: indices [

	<command: #glMatrixIndexusvARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'indices' type: 'GLushort*' size: 'size'>

	<apicall: void 'glMatrixIndexusvARB' (GLint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixLoad3x2fNV: matrixMode with: m [

	<command: #glMatrixLoad3x2fNV>
	<return: 'void'>
	<arg: 'matrixMode' type: 'GLenum'>
	<arg: 'm' type: 'GLfloat*'>

	<apicall: void 'glMatrixLoad3x2fNV' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixLoad3x3fNV: matrixMode with: m [

	<command: #glMatrixLoad3x3fNV>
	<return: 'void'>
	<arg: 'matrixMode' type: 'GLenum'>
	<arg: 'm' type: 'GLfloat*'>

	<apicall: void 'glMatrixLoad3x3fNV' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixLoadIdentityEXT: mode [

	<command: #glMatrixLoadIdentityEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>

	<apicall: void 'glMatrixLoadIdentityEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixLoadTranspose3x3fNV: matrixMode with: m [

	<command: #glMatrixLoadTranspose3x3fNV>
	<return: 'void'>
	<arg: 'matrixMode' type: 'GLenum'>
	<arg: 'm' type: 'GLfloat*'>

	<apicall: void 'glMatrixLoadTranspose3x3fNV' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixLoadTransposedEXT: mode with: m [

	<command: #glMatrixLoadTransposedEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glMatrixLoadTransposedEXT' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixLoadTransposefEXT: mode with: m [

	<command: #glMatrixLoadTransposefEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glMatrixLoadTransposefEXT' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixLoaddEXT: mode with: m [

	<command: #glMatrixLoaddEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glMatrixLoaddEXT' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixLoadfEXT: mode with: m [

	<command: #glMatrixLoadfEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glMatrixLoadfEXT' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixMode: mode [

	<command: #glMatrixMode>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>

	<apicall: void 'glMatrixMode' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixMult3x2fNV: matrixMode with: m [

	<command: #glMatrixMult3x2fNV>
	<return: 'void'>
	<arg: 'matrixMode' type: 'GLenum'>
	<arg: 'm' type: 'GLfloat*'>

	<apicall: void 'glMatrixMult3x2fNV' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixMult3x3fNV: matrixMode with: m [

	<command: #glMatrixMult3x3fNV>
	<return: 'void'>
	<arg: 'matrixMode' type: 'GLenum'>
	<arg: 'm' type: 'GLfloat*'>

	<apicall: void 'glMatrixMult3x3fNV' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixMultTranspose3x3fNV: matrixMode with: m [

	<command: #glMatrixMultTranspose3x3fNV>
	<return: 'void'>
	<arg: 'matrixMode' type: 'GLenum'>
	<arg: 'm' type: 'GLfloat*'>

	<apicall: void 'glMatrixMultTranspose3x3fNV' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixMultTransposedEXT: mode with: m [

	<command: #glMatrixMultTransposedEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glMatrixMultTransposedEXT' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixMultTransposefEXT: mode with: m [

	<command: #glMatrixMultTransposefEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glMatrixMultTransposefEXT' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixMultdEXT: mode with: m [

	<command: #glMatrixMultdEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glMatrixMultdEXT' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixMultfEXT: mode with: m [

	<command: #glMatrixMultfEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glMatrixMultfEXT' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixOrthoEXT: mode with: left with: right with: bottom with: top with: zNear with: zFar [

	<command: #glMatrixOrthoEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'left' type: 'GLdouble'>
	<arg: 'right' type: 'GLdouble'>
	<arg: 'bottom' type: 'GLdouble'>
	<arg: 'top' type: 'GLdouble'>
	<arg: 'zNear' type: 'GLdouble'>
	<arg: 'zFar' type: 'GLdouble'>

	<apicall: void 'glMatrixOrthoEXT' (GLenum GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixPopEXT: mode [

	<command: #glMatrixPopEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>

	<apicall: void 'glMatrixPopEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixPushEXT: mode [

	<command: #glMatrixPushEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>

	<apicall: void 'glMatrixPushEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixRotatedEXT: mode with: angle with: x with: y with: z [

	<command: #glMatrixRotatedEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'angle' type: 'GLdouble'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glMatrixRotatedEXT' (GLenum GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixRotatefEXT: mode with: angle with: x with: y with: z [

	<command: #glMatrixRotatefEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'angle' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glMatrixRotatefEXT' (GLenum GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixScaledEXT: mode with: x with: y with: z [

	<command: #glMatrixScaledEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glMatrixScaledEXT' (GLenum GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixScalefEXT: mode with: x with: y with: z [

	<command: #glMatrixScalefEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glMatrixScalefEXT' (GLenum GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixTranslatedEXT: mode with: x with: y with: z [

	<command: #glMatrixTranslatedEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glMatrixTranslatedEXT' (GLenum GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> matrixTranslatefEXT: mode with: x with: y with: z [

	<command: #glMatrixTranslatefEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #MatrixMode>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glMatrixTranslatefEXT' (GLenum GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> maxShaderCompilerThreadsARB: count [

	<command: #glMaxShaderCompilerThreadsARB>
	<return: 'void'>
	<arg: 'count' type: 'GLuint'>

	<apicall: void 'glMaxShaderCompilerThreadsARB' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> maxShaderCompilerThreadsKHR: count [

	<command: #glMaxShaderCompilerThreadsKHR>
	<return: 'void'>
	<arg: 'count' type: 'GLuint'>

	<apicall: void 'glMaxShaderCompilerThreadsKHR' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> memoryBarrier: barriers [

	<command: #glMemoryBarrier>
	<return: 'void'>
	<arg: 'barriers' type: 'GLbitfield' group: #MemoryBarrierMask>

	<apicall: void 'glMemoryBarrier' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> memoryBarrierByRegion: barriers [

	<command: #glMemoryBarrierByRegion>
	<return: 'void'>
	<arg: 'barriers' type: 'GLbitfield' group: #MemoryBarrierMask>

	<apicall: void 'glMemoryBarrierByRegion' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> memoryBarrierEXT: barriers [

	<command: #glMemoryBarrierEXT>
	<return: 'void'>
	<arg: 'barriers' type: 'GLbitfield' group: #MemoryBarrierMask>

	<apicall: void 'glMemoryBarrierEXT' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> memoryObjectParameterivEXT: memoryObject with: pname with: params [

	<command: #glMemoryObjectParameterivEXT>
	<return: 'void'>
	<arg: 'memoryObject' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #MemoryObjectParameterName>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glMemoryObjectParameterivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> minSampleShading: value [

	<command: #glMinSampleShading>
	<return: 'void'>
	<arg: 'value' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glMinSampleShading' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> minSampleShadingARB: value [

	<command: #glMinSampleShadingARB>
	<return: 'void'>
	<arg: 'value' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glMinSampleShadingARB' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> minSampleShadingOES: value [

	<command: #glMinSampleShadingOES>
	<return: 'void'>
	<arg: 'value' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glMinSampleShadingOES' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> minmax: target with: internalformat with: sink [

	<command: #glMinmax>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'sink' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glMinmax' (GLenum GLenum GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> minmaxEXT: target with: internalformat with: sink [

	<command: #glMinmaxEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'sink' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glMinmaxEXT' (GLenum GLenum GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multMatrixd: m [

	<command: #glMultMatrixd>
	<return: 'void'>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glMultMatrixd' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multMatrixf: m [

	<command: #glMultMatrixf>
	<return: 'void'>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glMultMatrixf' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multMatrixx: m [

	<command: #glMultMatrixx>
	<return: 'void'>
	<arg: 'm' type: 'GLfixed*' size: '16'>

	<apicall: void 'glMultMatrixx' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multMatrixxOES: m [

	<command: #glMultMatrixxOES>
	<return: 'void'>
	<arg: 'm' type: 'GLfixed*' size: '16'>

	<apicall: void 'glMultMatrixxOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multTransposeMatrixd: m [

	<command: #glMultTransposeMatrixd>
	<return: 'void'>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glMultTransposeMatrixd' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multTransposeMatrixdARB: m [

	<command: #glMultTransposeMatrixdARB>
	<return: 'void'>
	<arg: 'm' type: 'GLdouble*' size: '16'>

	<apicall: void 'glMultTransposeMatrixdARB' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multTransposeMatrixf: m [

	<command: #glMultTransposeMatrixf>
	<return: 'void'>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glMultTransposeMatrixf' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multTransposeMatrixfARB: m [

	<command: #glMultTransposeMatrixfARB>
	<return: 'void'>
	<arg: 'm' type: 'GLfloat*' size: '16'>

	<apicall: void 'glMultTransposeMatrixfARB' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multTransposeMatrixxOES: m [

	<command: #glMultTransposeMatrixxOES>
	<return: 'void'>
	<arg: 'm' type: 'GLfixed*' size: '16'>

	<apicall: void 'glMultTransposeMatrixxOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArrays: mode with: first with: count with: drawcount [

	<command: #glMultiDrawArrays>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint*' size: 'COMPSIZE(drawcount)'>
	<arg: 'count' type: 'GLsizei*' size: 'COMPSIZE(drawcount)'>
	<arg: 'drawcount' type: 'GLsizei'>

	<apicall: void 'glMultiDrawArrays' (GLenum GLint* GLsizei* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArraysEXT: mode with: first with: count with: primcount [

	<command: #glMultiDrawArraysEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint*' size: 'COMPSIZE(primcount)'>
	<arg: 'count' type: 'GLsizei*' size: 'COMPSIZE(primcount)'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glMultiDrawArraysEXT' (GLenum GLint* GLsizei* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArraysIndirect: mode with: indirect with: drawcount with: stride [

	<command: #glMultiDrawArraysIndirect>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indirect' type: 'void*' size: 'COMPSIZE(drawcount,stride)'>
	<arg: 'drawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawArraysIndirect' (GLenum void* GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArraysIndirectAMD: mode with: indirect with: primcount with: stride [

	<command: #glMultiDrawArraysIndirectAMD>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'primcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawArraysIndirectAMD' (GLenum void* GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArraysIndirectBindlessCountNV: mode with: indirect with: drawCount with: maxDrawCount with: stride with: vertexBufferCount [

	<command: #glMultiDrawArraysIndirectBindlessCountNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'drawCount' type: 'GLsizei'>
	<arg: 'maxDrawCount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'vertexBufferCount' type: 'GLint'>

	<apicall: void 'glMultiDrawArraysIndirectBindlessCountNV' (GLenum void* GLsizei GLsizei GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArraysIndirectBindlessNV: mode with: indirect with: drawCount with: stride with: vertexBufferCount [

	<command: #glMultiDrawArraysIndirectBindlessNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'drawCount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'vertexBufferCount' type: 'GLint'>

	<apicall: void 'glMultiDrawArraysIndirectBindlessNV' (GLenum void* GLsizei GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArraysIndirectCount: mode with: indirect with: drawcount with: maxdrawcount with: stride [

	<command: #glMultiDrawArraysIndirectCount>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'drawcount' type: 'GLintptr'>
	<arg: 'maxdrawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawArraysIndirectCount' (GLenum void* GLintptr GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArraysIndirectCountARB: mode with: indirect with: drawcount with: maxdrawcount with: stride [

	<command: #glMultiDrawArraysIndirectCountARB>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'drawcount' type: 'GLintptr'>
	<arg: 'maxdrawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawArraysIndirectCountARB' (GLenum void* GLintptr GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawArraysIndirectEXT: mode with: indirect with: drawcount with: stride [

	<command: #glMultiDrawArraysIndirectEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'indirect' type: 'void*' size: 'COMPSIZE(drawcount,stride)'>
	<arg: 'drawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawArraysIndirectEXT' (GLenum void* GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementArrayAPPLE: mode with: first with: count with: primcount [

	<command: #glMultiDrawElementArrayAPPLE>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'first' type: 'GLint*' size: 'primcount'>
	<arg: 'count' type: 'GLsizei*' size: 'primcount'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glMultiDrawElementArrayAPPLE' (GLenum GLint* GLsizei* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElements: mode with: count with: type with: indices with: drawcount [

	<command: #glMultiDrawElements>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei*' size: 'COMPSIZE(drawcount)'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void**' size: 'COMPSIZE(drawcount)'>
	<arg: 'drawcount' type: 'GLsizei'>

	<apicall: void 'glMultiDrawElements' (GLenum GLsizei* GLenum void** GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsBaseVertex: mode with: count with: type with: indices with: drawcount with: basevertex [

	<command: #glMultiDrawElementsBaseVertex>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei*' size: 'COMPSIZE(drawcount)'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void**' size: 'COMPSIZE(drawcount)'>
	<arg: 'drawcount' type: 'GLsizei'>
	<arg: 'basevertex' type: 'GLint*' size: 'COMPSIZE(drawcount)'>

	<apicall: void 'glMultiDrawElementsBaseVertex' (GLenum GLsizei* GLenum void** GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsBaseVertexEXT: mode with: count with: type with: indices with: drawcount with: basevertex [

	<command: #glMultiDrawElementsBaseVertexEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei*' size: 'COMPSIZE(drawcount)'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void**' size: 'COMPSIZE(drawcount)'>
	<arg: 'drawcount' type: 'GLsizei'>
	<arg: 'basevertex' type: 'GLint*' size: 'COMPSIZE(drawcount)'>

	<apicall: void 'glMultiDrawElementsBaseVertexEXT' (GLenum GLsizei* GLenum void** GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsEXT: mode with: count with: type with: indices with: primcount [

	<command: #glMultiDrawElementsEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'count' type: 'GLsizei*' size: 'COMPSIZE(primcount)'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void**' size: 'COMPSIZE(primcount)'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glMultiDrawElementsEXT' (GLenum GLsizei* GLenum void** GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsIndirect: mode with: type with: indirect with: drawcount with: stride [

	<command: #glMultiDrawElementsIndirect>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indirect' type: 'void*' size: 'COMPSIZE(drawcount,stride)'>
	<arg: 'drawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawElementsIndirect' (GLenum GLenum void* GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsIndirectAMD: mode with: type with: indirect with: primcount with: stride [

	<command: #glMultiDrawElementsIndirectAMD>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'primcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawElementsIndirectAMD' (GLenum GLenum void* GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsIndirectBindlessCountNV: mode with: type with: indirect with: drawCount with: maxDrawCount with: stride with: vertexBufferCount [

	<command: #glMultiDrawElementsIndirectBindlessCountNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'drawCount' type: 'GLsizei'>
	<arg: 'maxDrawCount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'vertexBufferCount' type: 'GLint'>

	<apicall: void 'glMultiDrawElementsIndirectBindlessCountNV' (GLenum GLenum void* GLsizei GLsizei GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsIndirectBindlessNV: mode with: type with: indirect with: drawCount with: stride with: vertexBufferCount [

	<command: #glMultiDrawElementsIndirectBindlessNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'drawCount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'vertexBufferCount' type: 'GLint'>

	<apicall: void 'glMultiDrawElementsIndirectBindlessNV' (GLenum GLenum void* GLsizei GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsIndirectCount: mode with: type with: indirect with: drawcount with: maxdrawcount with: stride [

	<command: #glMultiDrawElementsIndirectCount>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'drawcount' type: 'GLintptr'>
	<arg: 'maxdrawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawElementsIndirectCount' (GLenum GLenum void* GLintptr GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsIndirectCountARB: mode with: type with: indirect with: drawcount with: maxdrawcount with: stride [

	<command: #glMultiDrawElementsIndirectCountARB>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indirect' type: 'void*'>
	<arg: 'drawcount' type: 'GLintptr'>
	<arg: 'maxdrawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawElementsIndirectCountARB' (GLenum GLenum void* GLintptr GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawElementsIndirectEXT: mode with: type with: indirect with: drawcount with: stride [

	<command: #glMultiDrawElementsIndirectEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indirect' type: 'void*' size: 'COMPSIZE(drawcount,stride)'>
	<arg: 'drawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawElementsIndirectEXT' (GLenum GLenum void* GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawMeshTasksIndirectCountNV: indirect with: drawcount with: maxdrawcount with: stride [

	<command: #glMultiDrawMeshTasksIndirectCountNV>
	<return: 'void'>
	<arg: 'indirect' type: 'GLintptr'>
	<arg: 'drawcount' type: 'GLintptr'>
	<arg: 'maxdrawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawMeshTasksIndirectCountNV' (GLintptr GLintptr GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawMeshTasksIndirectNV: indirect with: drawcount with: stride [

	<command: #glMultiDrawMeshTasksIndirectNV>
	<return: 'void'>
	<arg: 'indirect' type: 'GLintptr'>
	<arg: 'drawcount' type: 'GLsizei'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glMultiDrawMeshTasksIndirectNV' (GLintptr GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiDrawRangeElementArrayAPPLE: mode with: start with: end with: first with: count with: primcount [

	<command: #glMultiDrawRangeElementArrayAPPLE>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PrimitiveType>
	<arg: 'start' type: 'GLuint'>
	<arg: 'end' type: 'GLuint'>
	<arg: 'first' type: 'GLint*' size: 'primcount'>
	<arg: 'count' type: 'GLsizei*' size: 'primcount'>
	<arg: 'primcount' type: 'GLsizei'>

	<apicall: void 'glMultiDrawRangeElementArrayAPPLE' (GLenum GLuint GLuint GLint* GLsizei* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiModeDrawArraysIBM: mode with: first with: count with: primcount with: modestride [

	<command: #glMultiModeDrawArraysIBM>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum*' group: #PrimitiveType size: 'COMPSIZE(primcount)'>
	<arg: 'first' type: 'GLint*' size: 'COMPSIZE(primcount)'>
	<arg: 'count' type: 'GLsizei*' size: 'COMPSIZE(primcount)'>
	<arg: 'primcount' type: 'GLsizei'>
	<arg: 'modestride' type: 'GLint'>

	<apicall: void 'glMultiModeDrawArraysIBM' (GLenum* GLint* GLsizei* GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiModeDrawElementsIBM: mode with: count with: type with: indices with: primcount with: modestride [

	<command: #glMultiModeDrawElementsIBM>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum*' group: #PrimitiveType size: 'COMPSIZE(primcount)'>
	<arg: 'count' type: 'GLsizei*' size: 'COMPSIZE(primcount)'>
	<arg: 'type' type: 'GLenum' group: #DrawElementsType>
	<arg: 'indices' type: 'void**' size: 'COMPSIZE(primcount)'>
	<arg: 'primcount' type: 'GLsizei'>
	<arg: 'modestride' type: 'GLint'>

	<apicall: void 'glMultiModeDrawElementsIBM' (GLenum* GLsizei* GLenum void** GLsizei GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexBufferEXT: texunit with: target with: internalformat with: buffer [

	<command: #glMultiTexBufferEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glMultiTexBufferEXT' (GLenum GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1bOES: texture with: s [

	<command: #glMultiTexCoord1bOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLbyte'>

	<apicall: void 'glMultiTexCoord1bOES' (GLenum GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1bvOES: texture with: coords [

	<command: #glMultiTexCoord1bvOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'coords' type: 'GLbyte*' size: '1'>

	<apicall: void 'glMultiTexCoord1bvOES' (GLenum GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1d: target with: s [

	<command: #glMultiTexCoord1d>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMultiTexCoord1d' (GLenum GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1dARB: target with: s [

	<command: #glMultiTexCoord1dARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMultiTexCoord1dARB' (GLenum GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1dv: target with: v [

	<command: #glMultiTexCoord1dv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '1'>

	<apicall: void 'glMultiTexCoord1dv' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1dvARB: target with: v [

	<command: #glMultiTexCoord1dvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '1'>

	<apicall: void 'glMultiTexCoord1dvARB' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1f: target with: s [

	<command: #glMultiTexCoord1f>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMultiTexCoord1f' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1fARB: target with: s [

	<command: #glMultiTexCoord1fARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMultiTexCoord1fARB' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1fv: target with: v [

	<command: #glMultiTexCoord1fv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '1'>

	<apicall: void 'glMultiTexCoord1fv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1fvARB: target with: v [

	<command: #glMultiTexCoord1fvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '1'>

	<apicall: void 'glMultiTexCoord1fvARB' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1hNV: target with: s [

	<command: #glMultiTexCoord1hNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glMultiTexCoord1hNV' (GLenum GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1hvNV: target with: v [

	<command: #glMultiTexCoord1hvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '1'>

	<apicall: void 'glMultiTexCoord1hvNV' (GLenum GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1i: target with: s [

	<command: #glMultiTexCoord1i>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLint' group: #CoordI>

	<apicall: void 'glMultiTexCoord1i' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1iARB: target with: s [

	<command: #glMultiTexCoord1iARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLint' group: #CoordI>

	<apicall: void 'glMultiTexCoord1iARB' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1iv: target with: v [

	<command: #glMultiTexCoord1iv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '1'>

	<apicall: void 'glMultiTexCoord1iv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1ivARB: target with: v [

	<command: #glMultiTexCoord1ivARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '1'>

	<apicall: void 'glMultiTexCoord1ivARB' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1s: target with: s [

	<command: #glMultiTexCoord1s>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLshort' group: #CoordS>

	<apicall: void 'glMultiTexCoord1s' (GLenum GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1sARB: target with: s [

	<command: #glMultiTexCoord1sARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLshort' group: #CoordS>

	<apicall: void 'glMultiTexCoord1sARB' (GLenum GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1sv: target with: v [

	<command: #glMultiTexCoord1sv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '1'>

	<apicall: void 'glMultiTexCoord1sv' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1svARB: target with: v [

	<command: #glMultiTexCoord1svARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '1'>

	<apicall: void 'glMultiTexCoord1svARB' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1xOES: texture with: s [

	<command: #glMultiTexCoord1xOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfixed'>

	<apicall: void 'glMultiTexCoord1xOES' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord1xvOES: texture with: coords [

	<command: #glMultiTexCoord1xvOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'coords' type: 'GLfixed*' size: '1'>

	<apicall: void 'glMultiTexCoord1xvOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2bOES: texture with: s with: t [

	<command: #glMultiTexCoord2bOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLbyte'>
	<arg: 't' type: 'GLbyte'>

	<apicall: void 'glMultiTexCoord2bOES' (GLenum GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2bvOES: texture with: coords [

	<command: #glMultiTexCoord2bvOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'coords' type: 'GLbyte*' size: '2'>

	<apicall: void 'glMultiTexCoord2bvOES' (GLenum GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2d: target with: s with: t [

	<command: #glMultiTexCoord2d>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMultiTexCoord2d' (GLenum GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2dARB: target with: s with: t [

	<command: #glMultiTexCoord2dARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMultiTexCoord2dARB' (GLenum GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2dv: target with: v [

	<command: #glMultiTexCoord2dv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glMultiTexCoord2dv' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2dvARB: target with: v [

	<command: #glMultiTexCoord2dvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glMultiTexCoord2dvARB' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2f: target with: s with: t [

	<command: #glMultiTexCoord2f>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMultiTexCoord2f' (GLenum GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2fARB: target with: s with: t [

	<command: #glMultiTexCoord2fARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMultiTexCoord2fARB' (GLenum GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2fv: target with: v [

	<command: #glMultiTexCoord2fv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glMultiTexCoord2fv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2fvARB: target with: v [

	<command: #glMultiTexCoord2fvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glMultiTexCoord2fvARB' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2hNV: target with: s with: t [

	<command: #glMultiTexCoord2hNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLhalfNV' group: #Half16NV>
	<arg: 't' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glMultiTexCoord2hNV' (GLenum GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2hvNV: target with: v [

	<command: #glMultiTexCoord2hvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '2'>

	<apicall: void 'glMultiTexCoord2hvNV' (GLenum GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2i: target with: s with: t [

	<command: #glMultiTexCoord2i>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>

	<apicall: void 'glMultiTexCoord2i' (GLenum GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2iARB: target with: s with: t [

	<command: #glMultiTexCoord2iARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>

	<apicall: void 'glMultiTexCoord2iARB' (GLenum GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2iv: target with: v [

	<command: #glMultiTexCoord2iv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glMultiTexCoord2iv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2ivARB: target with: v [

	<command: #glMultiTexCoord2ivARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glMultiTexCoord2ivARB' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2s: target with: s with: t [

	<command: #glMultiTexCoord2s>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>

	<apicall: void 'glMultiTexCoord2s' (GLenum GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2sARB: target with: s with: t [

	<command: #glMultiTexCoord2sARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>

	<apicall: void 'glMultiTexCoord2sARB' (GLenum GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2sv: target with: v [

	<command: #glMultiTexCoord2sv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glMultiTexCoord2sv' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2svARB: target with: v [

	<command: #glMultiTexCoord2svARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glMultiTexCoord2svARB' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2xOES: texture with: s with: t [

	<command: #glMultiTexCoord2xOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>

	<apicall: void 'glMultiTexCoord2xOES' (GLenum GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord2xvOES: texture with: coords [

	<command: #glMultiTexCoord2xvOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'coords' type: 'GLfixed*' size: '2'>

	<apicall: void 'glMultiTexCoord2xvOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3bOES: texture with: s with: t with: r [

	<command: #glMultiTexCoord3bOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLbyte'>
	<arg: 't' type: 'GLbyte'>
	<arg: 'r' type: 'GLbyte'>

	<apicall: void 'glMultiTexCoord3bOES' (GLenum GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3bvOES: texture with: coords [

	<command: #glMultiTexCoord3bvOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'coords' type: 'GLbyte*' size: '3'>

	<apicall: void 'glMultiTexCoord3bvOES' (GLenum GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3d: target with: s with: t with: r [

	<command: #glMultiTexCoord3d>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>
	<arg: 'r' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMultiTexCoord3d' (GLenum GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3dARB: target with: s with: t with: r [

	<command: #glMultiTexCoord3dARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>
	<arg: 'r' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMultiTexCoord3dARB' (GLenum GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3dv: target with: v [

	<command: #glMultiTexCoord3dv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glMultiTexCoord3dv' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3dvARB: target with: v [

	<command: #glMultiTexCoord3dvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glMultiTexCoord3dvARB' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3f: target with: s with: t with: r [

	<command: #glMultiTexCoord3f>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>
	<arg: 'r' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMultiTexCoord3f' (GLenum GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3fARB: target with: s with: t with: r [

	<command: #glMultiTexCoord3fARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>
	<arg: 'r' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMultiTexCoord3fARB' (GLenum GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3fv: target with: v [

	<command: #glMultiTexCoord3fv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glMultiTexCoord3fv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3fvARB: target with: v [

	<command: #glMultiTexCoord3fvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glMultiTexCoord3fvARB' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3hNV: target with: s with: t with: r [

	<command: #glMultiTexCoord3hNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLhalfNV' group: #Half16NV>
	<arg: 't' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'r' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glMultiTexCoord3hNV' (GLenum GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3hvNV: target with: v [

	<command: #glMultiTexCoord3hvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '3'>

	<apicall: void 'glMultiTexCoord3hvNV' (GLenum GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3i: target with: s with: t with: r [

	<command: #glMultiTexCoord3i>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>
	<arg: 'r' type: 'GLint' group: #CoordI>

	<apicall: void 'glMultiTexCoord3i' (GLenum GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3iARB: target with: s with: t with: r [

	<command: #glMultiTexCoord3iARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>
	<arg: 'r' type: 'GLint' group: #CoordI>

	<apicall: void 'glMultiTexCoord3iARB' (GLenum GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3iv: target with: v [

	<command: #glMultiTexCoord3iv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '3'>

	<apicall: void 'glMultiTexCoord3iv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3ivARB: target with: v [

	<command: #glMultiTexCoord3ivARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '3'>

	<apicall: void 'glMultiTexCoord3ivARB' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3s: target with: s with: t with: r [

	<command: #glMultiTexCoord3s>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>
	<arg: 'r' type: 'GLshort' group: #CoordS>

	<apicall: void 'glMultiTexCoord3s' (GLenum GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3sARB: target with: s with: t with: r [

	<command: #glMultiTexCoord3sARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>
	<arg: 'r' type: 'GLshort' group: #CoordS>

	<apicall: void 'glMultiTexCoord3sARB' (GLenum GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3sv: target with: v [

	<command: #glMultiTexCoord3sv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '3'>

	<apicall: void 'glMultiTexCoord3sv' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3svARB: target with: v [

	<command: #glMultiTexCoord3svARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '3'>

	<apicall: void 'glMultiTexCoord3svARB' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3xOES: texture with: s with: t with: r [

	<command: #glMultiTexCoord3xOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>

	<apicall: void 'glMultiTexCoord3xOES' (GLenum GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord3xvOES: texture with: coords [

	<command: #glMultiTexCoord3xvOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'coords' type: 'GLfixed*' size: '3'>

	<apicall: void 'glMultiTexCoord3xvOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4bOES: texture with: s with: t with: r with: q [

	<command: #glMultiTexCoord4bOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLbyte'>
	<arg: 't' type: 'GLbyte'>
	<arg: 'r' type: 'GLbyte'>
	<arg: 'q' type: 'GLbyte'>

	<apicall: void 'glMultiTexCoord4bOES' (GLenum GLbyte GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4bvOES: texture with: coords [

	<command: #glMultiTexCoord4bvOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'coords' type: 'GLbyte*' size: '4'>

	<apicall: void 'glMultiTexCoord4bvOES' (GLenum GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4d: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4d>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>
	<arg: 'r' type: 'GLdouble' group: #CoordD>
	<arg: 'q' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMultiTexCoord4d' (GLenum GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4dARB: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4dARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>
	<arg: 'r' type: 'GLdouble' group: #CoordD>
	<arg: 'q' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glMultiTexCoord4dARB' (GLenum GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4dv: target with: v [

	<command: #glMultiTexCoord4dv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '4'>

	<apicall: void 'glMultiTexCoord4dv' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4dvARB: target with: v [

	<command: #glMultiTexCoord4dvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '4'>

	<apicall: void 'glMultiTexCoord4dvARB' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4f: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4f>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>
	<arg: 'r' type: 'GLfloat' group: #CoordF>
	<arg: 'q' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMultiTexCoord4f' (GLenum GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4fARB: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4fARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>
	<arg: 'r' type: 'GLfloat' group: #CoordF>
	<arg: 'q' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glMultiTexCoord4fARB' (GLenum GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4fv: target with: v [

	<command: #glMultiTexCoord4fv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '4'>

	<apicall: void 'glMultiTexCoord4fv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4fvARB: target with: v [

	<command: #glMultiTexCoord4fvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '4'>

	<apicall: void 'glMultiTexCoord4fvARB' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4hNV: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4hNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLhalfNV' group: #Half16NV>
	<arg: 't' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'r' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'q' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glMultiTexCoord4hNV' (GLenum GLhalfNV GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4hvNV: target with: v [

	<command: #glMultiTexCoord4hvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '4'>

	<apicall: void 'glMultiTexCoord4hvNV' (GLenum GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4i: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4i>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>
	<arg: 'r' type: 'GLint' group: #CoordI>
	<arg: 'q' type: 'GLint' group: #CoordI>

	<apicall: void 'glMultiTexCoord4i' (GLenum GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4iARB: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4iARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>
	<arg: 'r' type: 'GLint' group: #CoordI>
	<arg: 'q' type: 'GLint' group: #CoordI>

	<apicall: void 'glMultiTexCoord4iARB' (GLenum GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4iv: target with: v [

	<command: #glMultiTexCoord4iv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '4'>

	<apicall: void 'glMultiTexCoord4iv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4ivARB: target with: v [

	<command: #glMultiTexCoord4ivARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '4'>

	<apicall: void 'glMultiTexCoord4ivARB' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4s: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4s>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>
	<arg: 'r' type: 'GLshort' group: #CoordS>
	<arg: 'q' type: 'GLshort' group: #CoordS>

	<apicall: void 'glMultiTexCoord4s' (GLenum GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4sARB: target with: s with: t with: r with: q [

	<command: #glMultiTexCoord4sARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>
	<arg: 'r' type: 'GLshort' group: #CoordS>
	<arg: 'q' type: 'GLshort' group: #CoordS>

	<apicall: void 'glMultiTexCoord4sARB' (GLenum GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4sv: target with: v [

	<command: #glMultiTexCoord4sv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '4'>

	<apicall: void 'glMultiTexCoord4sv' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4svARB: target with: v [

	<command: #glMultiTexCoord4svARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureUnit>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '4'>

	<apicall: void 'glMultiTexCoord4svARB' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4x: texture with: s with: t with: r with: q [

	<command: #glMultiTexCoord4x>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>
	<arg: 'q' type: 'GLfixed'>

	<apicall: void 'glMultiTexCoord4x' (GLenum GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4xOES: texture with: s with: t with: r with: q [

	<command: #glMultiTexCoord4xOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 's' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>
	<arg: 'q' type: 'GLfixed'>

	<apicall: void 'glMultiTexCoord4xOES' (GLenum GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoord4xvOES: texture with: coords [

	<command: #glMultiTexCoord4xvOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'coords' type: 'GLfixed*' size: '4'>

	<apicall: void 'glMultiTexCoord4xvOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordP1ui: texture with: type with: coords [

	<command: #glMultiTexCoordP1ui>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glMultiTexCoordP1ui' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordP1uiv: texture with: type with: coords [

	<command: #glMultiTexCoordP1uiv>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glMultiTexCoordP1uiv' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordP2ui: texture with: type with: coords [

	<command: #glMultiTexCoordP2ui>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glMultiTexCoordP2ui' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordP2uiv: texture with: type with: coords [

	<command: #glMultiTexCoordP2uiv>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glMultiTexCoordP2uiv' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordP3ui: texture with: type with: coords [

	<command: #glMultiTexCoordP3ui>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glMultiTexCoordP3ui' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordP3uiv: texture with: type with: coords [

	<command: #glMultiTexCoordP3uiv>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glMultiTexCoordP3uiv' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordP4ui: texture with: type with: coords [

	<command: #glMultiTexCoordP4ui>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glMultiTexCoordP4ui' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordP4uiv: texture with: type with: coords [

	<command: #glMultiTexCoordP4uiv>
	<return: 'void'>
	<arg: 'texture' type: 'GLenum' group: #TextureUnit>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glMultiTexCoordP4uiv' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexCoordPointerEXT: texunit with: size with: type with: stride with: pointer [

	<command: #glMultiTexCoordPointerEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glMultiTexCoordPointerEXT' (GLenum GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexEnvfEXT: texunit with: target with: pname with: param [

	<command: #glMultiTexEnvfEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glMultiTexEnvfEXT' (GLenum GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexEnvfvEXT: texunit with: target with: pname with: params [

	<command: #glMultiTexEnvfvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexEnvfvEXT' (GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexEnviEXT: texunit with: target with: pname with: param [

	<command: #glMultiTexEnviEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glMultiTexEnviEXT' (GLenum GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexEnvivEXT: texunit with: target with: pname with: params [

	<command: #glMultiTexEnvivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexEnvivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexGendEXT: texunit with: coord with: pname with: param [

	<command: #glMultiTexGendEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLdouble'>

	<apicall: void 'glMultiTexGendEXT' (GLenum GLenum GLenum GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexGendvEXT: texunit with: coord with: pname with: params [

	<command: #glMultiTexGendvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexGendvEXT' (GLenum GLenum GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexGenfEXT: texunit with: coord with: pname with: param [

	<command: #glMultiTexGenfEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glMultiTexGenfEXT' (GLenum GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexGenfvEXT: texunit with: coord with: pname with: params [

	<command: #glMultiTexGenfvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexGenfvEXT' (GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexGeniEXT: texunit with: coord with: pname with: param [

	<command: #glMultiTexGeniEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glMultiTexGeniEXT' (GLenum GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexGenivEXT: texunit with: coord with: pname with: params [

	<command: #glMultiTexGenivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexGenivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexImage1DEXT: texunit with: target with: level with: internalformat with: width with: border with: format with: type with: pixels [

	<command: #glMultiTexImage1DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glMultiTexImage1DEXT' (GLenum GLenum GLint GLint GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexImage2DEXT: texunit with: target with: level with: internalformat with: width with: height with: border with: format with: type with: pixels [

	<command: #glMultiTexImage2DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glMultiTexImage2DEXT' (GLenum GLenum GLint GLint GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexImage3DEXT: texunit with: target with: level with: internalformat with: width with: height with: depth with: border with: format with: type with: pixels [

	<command: #glMultiTexImage3DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glMultiTexImage3DEXT' (GLenum GLenum GLint GLint GLsizei GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexParameterIivEXT: texunit with: target with: pname with: params [

	<command: #glMultiTexParameterIivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexParameterIivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexParameterIuivEXT: texunit with: target with: pname with: params [

	<command: #glMultiTexParameterIuivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexParameterIuivEXT' (GLenum GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexParameterfEXT: texunit with: target with: pname with: param [

	<command: #glMultiTexParameterfEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glMultiTexParameterfEXT' (GLenum GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexParameterfvEXT: texunit with: target with: pname with: params [

	<command: #glMultiTexParameterfvEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexParameterfvEXT' (GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexParameteriEXT: texunit with: target with: pname with: param [

	<command: #glMultiTexParameteriEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glMultiTexParameteriEXT' (GLenum GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexParameterivEXT: texunit with: target with: pname with: params [

	<command: #glMultiTexParameterivEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glMultiTexParameterivEXT' (GLenum GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexRenderbufferEXT: texunit with: target with: renderbuffer [

	<command: #glMultiTexRenderbufferEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glMultiTexRenderbufferEXT' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexSubImage1DEXT: texunit with: target with: level with: xoffset with: width with: format with: type with: pixels [

	<command: #glMultiTexSubImage1DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glMultiTexSubImage1DEXT' (GLenum GLenum GLint GLint GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexSubImage2DEXT: texunit with: target with: level with: xoffset with: yoffset with: width with: height with: format with: type with: pixels [

	<command: #glMultiTexSubImage2DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glMultiTexSubImage2DEXT' (GLenum GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multiTexSubImage3DEXT: texunit with: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: pixels [

	<command: #glMultiTexSubImage3DEXT>
	<return: 'void'>
	<arg: 'texunit' type: 'GLenum' group: #TextureUnit>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glMultiTexSubImage3DEXT' (GLenum GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastBarrierNV [

	<command: #glMulticastBarrierNV>
	<return: 'void'>

	<apicall: void 'glMulticastBarrierNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastBlitFramebufferNV: srcGpu with: dstGpu with: srcX0 with: srcY0 with: srcX1 with: srcY1 with: dstX0 with: dstY0 with: dstX1 with: dstY1 with: mask with: filter [

	<command: #glMulticastBlitFramebufferNV>
	<return: 'void'>
	<arg: 'srcGpu' type: 'GLuint'>
	<arg: 'dstGpu' type: 'GLuint'>
	<arg: 'srcX0' type: 'GLint'>
	<arg: 'srcY0' type: 'GLint'>
	<arg: 'srcX1' type: 'GLint'>
	<arg: 'srcY1' type: 'GLint'>
	<arg: 'dstX0' type: 'GLint'>
	<arg: 'dstY0' type: 'GLint'>
	<arg: 'dstX1' type: 'GLint'>
	<arg: 'dstY1' type: 'GLint'>
	<arg: 'mask' type: 'GLbitfield' group: #ClearBufferMask>
	<arg: 'filter' type: 'GLenum'>

	<apicall: void 'glMulticastBlitFramebufferNV' (GLuint GLuint GLint GLint GLint GLint GLint GLint GLint GLint GLbitfield GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastBufferSubDataNV: gpuMask with: buffer with: offset with: size with: data [

	<command: #glMulticastBufferSubDataNV>
	<return: 'void'>
	<arg: 'gpuMask' type: 'GLbitfield'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'data' type: 'void*'>

	<apicall: void 'glMulticastBufferSubDataNV' (GLbitfield GLuint GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastCopyBufferSubDataNV: readGpu with: writeGpuMask with: readBuffer with: writeBuffer with: readOffset with: writeOffset with: size [

	<command: #glMulticastCopyBufferSubDataNV>
	<return: 'void'>
	<arg: 'readGpu' type: 'GLuint'>
	<arg: 'writeGpuMask' type: 'GLbitfield'>
	<arg: 'readBuffer' type: 'GLuint'>
	<arg: 'writeBuffer' type: 'GLuint'>
	<arg: 'readOffset' type: 'GLintptr'>
	<arg: 'writeOffset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>

	<apicall: void 'glMulticastCopyBufferSubDataNV' (GLuint GLbitfield GLuint GLuint GLintptr GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastFramebufferSampleLocationsfvNV: gpu with: framebuffer with: start with: count with: v [

	<command: #glMulticastFramebufferSampleLocationsfvNV>
	<return: 'void'>
	<arg: 'gpu' type: 'GLuint'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'start' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glMulticastFramebufferSampleLocationsfvNV' (GLuint GLuint GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastGetQueryObjecti64vNV: gpu with: id with: pname with: params [

	<command: #glMulticastGetQueryObjecti64vNV>
	<return: 'void'>
	<arg: 'gpu' type: 'GLuint'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint64*'>

	<apicall: void 'glMulticastGetQueryObjecti64vNV' (GLuint GLuint GLenum GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastGetQueryObjectivNV: gpu with: id with: pname with: params [

	<command: #glMulticastGetQueryObjectivNV>
	<return: 'void'>
	<arg: 'gpu' type: 'GLuint'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glMulticastGetQueryObjectivNV' (GLuint GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastGetQueryObjectui64vNV: gpu with: id with: pname with: params [

	<command: #glMulticastGetQueryObjectui64vNV>
	<return: 'void'>
	<arg: 'gpu' type: 'GLuint'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLuint64*'>

	<apicall: void 'glMulticastGetQueryObjectui64vNV' (GLuint GLuint GLenum GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastGetQueryObjectuivNV: gpu with: id with: pname with: params [

	<command: #glMulticastGetQueryObjectuivNV>
	<return: 'void'>
	<arg: 'gpu' type: 'GLuint'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLuint*'>

	<apicall: void 'glMulticastGetQueryObjectuivNV' (GLuint GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastScissorArrayvNVX: gpu with: first with: count with: v [

	<command: #glMulticastScissorArrayvNVX>
	<return: 'void'>
	<arg: 'gpu' type: 'GLuint'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLint*' size: 'COMPSIZE(count)'>

	<apicall: void 'glMulticastScissorArrayvNVX' (GLuint GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastViewportArrayvNVX: gpu with: first with: count with: v [

	<command: #glMulticastViewportArrayvNVX>
	<return: 'void'>
	<arg: 'gpu' type: 'GLuint'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'COMPSIZE(count)'>

	<apicall: void 'glMulticastViewportArrayvNVX' (GLuint GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastViewportPositionWScaleNVX: gpu with: index with: xcoeff with: ycoeff [

	<command: #glMulticastViewportPositionWScaleNVX>
	<return: 'void'>
	<arg: 'gpu' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'xcoeff' type: 'GLfloat'>
	<arg: 'ycoeff' type: 'GLfloat'>

	<apicall: void 'glMulticastViewportPositionWScaleNVX' (GLuint GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> multicastWaitSyncNV: signalGpu with: waitGpuMask [

	<command: #glMulticastWaitSyncNV>
	<return: 'void'>
	<arg: 'signalGpu' type: 'GLuint'>
	<arg: 'waitGpuMask' type: 'GLbitfield'>

	<apicall: void 'glMulticastWaitSyncNV' (GLuint GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferAttachMemoryNV: buffer with: memory with: offset [

	<command: #glNamedBufferAttachMemoryNV>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glNamedBufferAttachMemoryNV' (GLuint GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferData: buffer with: size with: data with: usage [

	<command: #glNamedBufferData>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*'>
	<arg: 'usage' type: 'GLenum' group: #VertexBufferObjectUsage>

	<apicall: void 'glNamedBufferData' (GLuint GLsizeiptr void* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferDataEXT: buffer with: size with: data with: usage [

	<command: #glNamedBufferDataEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(size)'>
	<arg: 'usage' type: 'GLenum' group: #VertexBufferObjectUsage>

	<apicall: void 'glNamedBufferDataEXT' (GLuint GLsizeiptr void* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferPageCommitmentARB: buffer with: offset with: size with: commit [

	<command: #glNamedBufferPageCommitmentARB>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glNamedBufferPageCommitmentARB' (GLuint GLintptr GLsizeiptr GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferPageCommitmentEXT: buffer with: offset with: size with: commit [

	<command: #glNamedBufferPageCommitmentEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glNamedBufferPageCommitmentEXT' (GLuint GLintptr GLsizeiptr GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferPageCommitmentMemNV: buffer with: offset with: size with: memory with: memOffset with: commit [

	<command: #glNamedBufferPageCommitmentMemNV>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'memOffset' type: 'GLuint64'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glNamedBufferPageCommitmentMemNV' (GLuint GLintptr GLsizeiptr GLuint GLuint64 GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferStorage: buffer with: size with: data with: flags [

	<command: #glNamedBufferStorage>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*' size: 'size'>
	<arg: 'flags' type: 'GLbitfield' group: #BufferStorageMask>

	<apicall: void 'glNamedBufferStorage' (GLuint GLsizeiptr void* GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferStorageEXT: buffer with: size with: data with: flags [

	<command: #glNamedBufferStorageEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*' size: 'size'>
	<arg: 'flags' type: 'GLbitfield' group: #BufferStorageMask>

	<apicall: void 'glNamedBufferStorageEXT' (GLuint GLsizeiptr void* GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferStorageExternalEXT: buffer with: offset with: size with: clientBuffer with: flags [

	<command: #glNamedBufferStorageExternalEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>
	<arg: 'clientBuffer' type: 'GLeglClientBufferEXT'>
	<arg: 'flags' type: 'GLbitfield' group: #BufferStorageMask>

	<apicall: void 'glNamedBufferStorageExternalEXT' (GLuint GLintptr GLsizeiptr GLeglClientBufferEXT GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferStorageMemEXT: buffer with: size with: memory with: offset [

	<command: #glNamedBufferStorageMemEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glNamedBufferStorageMemEXT' (GLuint GLsizeiptr GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferSubData: buffer with: offset with: size with: data [

	<command: #glNamedBufferSubData>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(size)'>

	<apicall: void 'glNamedBufferSubData' (GLuint GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedBufferSubDataEXT: buffer with: offset with: size with: data [

	<command: #glNamedBufferSubDataEXT>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>
	<arg: 'data' type: 'void*' size: 'COMPSIZE(size)'>

	<apicall: void 'glNamedBufferSubDataEXT' (GLuint GLintptr GLsizeiptr void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedCopyBufferSubDataEXT: readBuffer with: writeBuffer with: readOffset with: writeOffset with: size [

	<command: #glNamedCopyBufferSubDataEXT>
	<return: 'void'>
	<arg: 'readBuffer' type: 'GLuint'>
	<arg: 'writeBuffer' type: 'GLuint'>
	<arg: 'readOffset' type: 'GLintptr'>
	<arg: 'writeOffset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr'>

	<apicall: void 'glNamedCopyBufferSubDataEXT' (GLuint GLuint GLintptr GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferDrawBuffer: framebuffer with: buf [

	<command: #glNamedFramebufferDrawBuffer>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'buf' type: 'GLenum' group: #ColorBuffer>

	<apicall: void 'glNamedFramebufferDrawBuffer' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferDrawBuffers: framebuffer with: n with: bufs [

	<command: #glNamedFramebufferDrawBuffers>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'bufs' type: 'GLenum*' group: #ColorBuffer>

	<apicall: void 'glNamedFramebufferDrawBuffers' (GLuint GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferParameteri: framebuffer with: pname with: param [

	<command: #glNamedFramebufferParameteri>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #FramebufferParameterName>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glNamedFramebufferParameteri' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferParameteriEXT: framebuffer with: pname with: param [

	<command: #glNamedFramebufferParameteriEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'pname' type: 'GLenum' group: #FramebufferParameterName>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glNamedFramebufferParameteriEXT' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferReadBuffer: framebuffer with: src [

	<command: #glNamedFramebufferReadBuffer>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'src' type: 'GLenum' group: #ColorBuffer>

	<apicall: void 'glNamedFramebufferReadBuffer' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferRenderbuffer: framebuffer with: attachment with: renderbuffertarget with: renderbuffer [

	<command: #glNamedFramebufferRenderbuffer>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'renderbuffertarget' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glNamedFramebufferRenderbuffer' (GLuint GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferRenderbufferEXT: framebuffer with: attachment with: renderbuffertarget with: renderbuffer [

	<command: #glNamedFramebufferRenderbufferEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'renderbuffertarget' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'renderbuffer' type: 'GLuint' group: #Renderbuffer>

	<apicall: void 'glNamedFramebufferRenderbufferEXT' (GLuint GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferSampleLocationsfvARB: framebuffer with: start with: count with: v [

	<command: #glNamedFramebufferSampleLocationsfvARB>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'start' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glNamedFramebufferSampleLocationsfvARB' (GLuint GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferSampleLocationsfvNV: framebuffer with: start with: count with: v [

	<command: #glNamedFramebufferSampleLocationsfvNV>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'start' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*'>

	<apicall: void 'glNamedFramebufferSampleLocationsfvNV' (GLuint GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferSamplePositionsfvAMD: framebuffer with: numsamples with: pixelindex with: values [

	<command: #glNamedFramebufferSamplePositionsfvAMD>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'numsamples' type: 'GLuint'>
	<arg: 'pixelindex' type: 'GLuint'>
	<arg: 'values' type: 'GLfloat*'>

	<apicall: void 'glNamedFramebufferSamplePositionsfvAMD' (GLuint GLuint GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferTexture1DEXT: framebuffer with: attachment with: textarget with: texture with: level [

	<command: #glNamedFramebufferTexture1DEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glNamedFramebufferTexture1DEXT' (GLuint GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferTexture2DEXT: framebuffer with: attachment with: textarget with: texture with: level [

	<command: #glNamedFramebufferTexture2DEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glNamedFramebufferTexture2DEXT' (GLuint GLenum GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferTexture3DEXT: framebuffer with: attachment with: textarget with: texture with: level with: zoffset [

	<command: #glNamedFramebufferTexture3DEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'textarget' type: 'GLenum' group: #TextureTarget>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glNamedFramebufferTexture3DEXT' (GLuint GLenum GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferTexture: framebuffer with: attachment with: texture with: level [

	<command: #glNamedFramebufferTexture>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glNamedFramebufferTexture' (GLuint GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferTextureEXT: framebuffer with: attachment with: texture with: level [

	<command: #glNamedFramebufferTextureEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glNamedFramebufferTextureEXT' (GLuint GLenum GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferTextureFaceEXT: framebuffer with: attachment with: texture with: level with: face [

	<command: #glNamedFramebufferTextureFaceEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'face' type: 'GLenum' group: #TextureTarget>

	<apicall: void 'glNamedFramebufferTextureFaceEXT' (GLuint GLenum GLuint GLint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferTextureLayer: framebuffer with: attachment with: texture with: level with: layer [

	<command: #glNamedFramebufferTextureLayer>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint'>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'layer' type: 'GLint'>

	<apicall: void 'glNamedFramebufferTextureLayer' (GLuint GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedFramebufferTextureLayerEXT: framebuffer with: attachment with: texture with: level with: layer [

	<command: #glNamedFramebufferTextureLayerEXT>
	<return: 'void'>
	<arg: 'framebuffer' type: 'GLuint' group: #Framebuffer>
	<arg: 'attachment' type: 'GLenum' group: #FramebufferAttachment>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'layer' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glNamedFramebufferTextureLayerEXT' (GLuint GLenum GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameter4dEXT: program with: target with: index with: x with: y with: z with: w [

	<command: #glNamedProgramLocalParameter4dEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glNamedProgramLocalParameter4dEXT' (GLuint GLenum GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameter4dvEXT: program with: target with: index with: params [

	<command: #glNamedProgramLocalParameter4dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glNamedProgramLocalParameter4dvEXT' (GLuint GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameter4fEXT: program with: target with: index with: x with: y with: z with: w [

	<command: #glNamedProgramLocalParameter4fEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glNamedProgramLocalParameter4fEXT' (GLuint GLenum GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameter4fvEXT: program with: target with: index with: params [

	<command: #glNamedProgramLocalParameter4fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glNamedProgramLocalParameter4fvEXT' (GLuint GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameterI4iEXT: program with: target with: index with: x with: y with: z with: w [

	<command: #glNamedProgramLocalParameterI4iEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>
	<arg: 'w' type: 'GLint'>

	<apicall: void 'glNamedProgramLocalParameterI4iEXT' (GLuint GLenum GLuint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameterI4ivEXT: program with: target with: index with: params [

	<command: #glNamedProgramLocalParameterI4ivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glNamedProgramLocalParameterI4ivEXT' (GLuint GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameterI4uiEXT: program with: target with: index with: x with: y with: z with: w [

	<command: #glNamedProgramLocalParameterI4uiEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>
	<arg: 'z' type: 'GLuint'>
	<arg: 'w' type: 'GLuint'>

	<apicall: void 'glNamedProgramLocalParameterI4uiEXT' (GLuint GLenum GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameterI4uivEXT: program with: target with: index with: params [

	<command: #glNamedProgramLocalParameterI4uivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLuint*' size: '4'>

	<apicall: void 'glNamedProgramLocalParameterI4uivEXT' (GLuint GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParameters4fvEXT: program with: target with: index with: count with: params [

	<command: #glNamedProgramLocalParameters4fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glNamedProgramLocalParameters4fvEXT' (GLuint GLenum GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParametersI4ivEXT: program with: target with: index with: count with: params [

	<command: #glNamedProgramLocalParametersI4ivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'count*4'>

	<apicall: void 'glNamedProgramLocalParametersI4ivEXT' (GLuint GLenum GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramLocalParametersI4uivEXT: program with: target with: index with: count with: params [

	<command: #glNamedProgramLocalParametersI4uivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*' size: 'count*4'>

	<apicall: void 'glNamedProgramLocalParametersI4uivEXT' (GLuint GLenum GLuint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedProgramStringEXT: program with: target with: format with: len with: string [

	<command: #glNamedProgramStringEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'format' type: 'GLenum' group: #ProgramFormat>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'string' type: 'void*' size: 'len'>

	<apicall: void 'glNamedProgramStringEXT' (GLuint GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedRenderbufferStorage: renderbuffer with: internalformat with: width with: height [

	<command: #glNamedRenderbufferStorage>
	<return: 'void'>
	<arg: 'renderbuffer' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glNamedRenderbufferStorage' (GLuint GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedRenderbufferStorageEXT: renderbuffer with: internalformat with: width with: height [

	<command: #glNamedRenderbufferStorageEXT>
	<return: 'void'>
	<arg: 'renderbuffer' type: 'GLuint' group: #Renderbuffer>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glNamedRenderbufferStorageEXT' (GLuint GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedRenderbufferStorageMultisample: renderbuffer with: samples with: internalformat with: width with: height [

	<command: #glNamedRenderbufferStorageMultisample>
	<return: 'void'>
	<arg: 'renderbuffer' type: 'GLuint'>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glNamedRenderbufferStorageMultisample' (GLuint GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedRenderbufferStorageMultisampleAdvancedAMD: renderbuffer with: samples with: storageSamples with: internalformat with: width with: height [

	<command: #glNamedRenderbufferStorageMultisampleAdvancedAMD>
	<return: 'void'>
	<arg: 'renderbuffer' type: 'GLuint' group: #Renderbuffer>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'storageSamples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glNamedRenderbufferStorageMultisampleAdvancedAMD' (GLuint GLsizei GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedRenderbufferStorageMultisampleCoverageEXT: renderbuffer with: coverageSamples with: colorSamples with: internalformat with: width with: height [

	<command: #glNamedRenderbufferStorageMultisampleCoverageEXT>
	<return: 'void'>
	<arg: 'renderbuffer' type: 'GLuint' group: #Renderbuffer>
	<arg: 'coverageSamples' type: 'GLsizei'>
	<arg: 'colorSamples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glNamedRenderbufferStorageMultisampleCoverageEXT' (GLuint GLsizei GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedRenderbufferStorageMultisampleEXT: renderbuffer with: samples with: internalformat with: width with: height [

	<command: #glNamedRenderbufferStorageMultisampleEXT>
	<return: 'void'>
	<arg: 'renderbuffer' type: 'GLuint' group: #Renderbuffer>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glNamedRenderbufferStorageMultisampleEXT' (GLuint GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> namedStringARB: type with: namelen with: name with: stringlen with: string [

	<command: #glNamedStringARB>
	<return: 'void'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'namelen' type: 'GLint'>
	<arg: 'name' type: 'GLchar*' size: 'namelen'>
	<arg: 'stringlen' type: 'GLint'>
	<arg: 'string' type: 'GLchar*' size: 'stringlen'>

	<apicall: void 'glNamedStringARB' (GLenum GLint GLchar* GLint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> newList: list with: mode [

	<command: #glNewList>
	<return: 'void'>
	<arg: 'list' type: 'GLuint' group: #List>
	<arg: 'mode' type: 'GLenum' group: #ListMode>

	<apicall: void 'glNewList' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> newObjectBufferATI: size with: pointer with: usage [

	<command: #glNewObjectBufferATI>
	<return: 'GLuint'>
	<arg: 'size' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'size'>
	<arg: 'usage' type: 'GLenum' group: #ArrayObjectUsageATI>

	<apicall: GLuint 'glNewObjectBufferATI' (GLsizei void* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3b: nx with: ny with: nz [

	<command: #glNormal3b>
	<return: 'void'>
	<arg: 'nx' type: 'GLbyte'>
	<arg: 'ny' type: 'GLbyte'>
	<arg: 'nz' type: 'GLbyte'>

	<apicall: void 'glNormal3b' (GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3bv: v [

	<command: #glNormal3bv>
	<return: 'void'>
	<arg: 'v' type: 'GLbyte*' size: '3'>

	<apicall: void 'glNormal3bv' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3d: nx with: ny with: nz [

	<command: #glNormal3d>
	<return: 'void'>
	<arg: 'nx' type: 'GLdouble' group: #CoordD>
	<arg: 'ny' type: 'GLdouble' group: #CoordD>
	<arg: 'nz' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glNormal3d' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3dv: v [

	<command: #glNormal3dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glNormal3dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3f: nx with: ny with: nz [

	<command: #glNormal3f>
	<return: 'void'>
	<arg: 'nx' type: 'GLfloat' group: #CoordF>
	<arg: 'ny' type: 'GLfloat' group: #CoordF>
	<arg: 'nz' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glNormal3f' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3fVertex3fSUN: nx with: ny with: nz with: x with: y with: z [

	<command: #glNormal3fVertex3fSUN>
	<return: 'void'>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glNormal3fVertex3fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3fVertex3fvSUN: n with: v [

	<command: #glNormal3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glNormal3fVertex3fvSUN' (GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3fv: v [

	<command: #glNormal3fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glNormal3fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3hNV: nx with: ny with: nz [

	<command: #glNormal3hNV>
	<return: 'void'>
	<arg: 'nx' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'ny' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'nz' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glNormal3hNV' (GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3hvNV: v [

	<command: #glNormal3hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '3'>

	<apicall: void 'glNormal3hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3i: nx with: ny with: nz [

	<command: #glNormal3i>
	<return: 'void'>
	<arg: 'nx' type: 'GLint'>
	<arg: 'ny' type: 'GLint'>
	<arg: 'nz' type: 'GLint'>

	<apicall: void 'glNormal3i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3iv: v [

	<command: #glNormal3iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' size: '3'>

	<apicall: void 'glNormal3iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3s: nx with: ny with: nz [

	<command: #glNormal3s>
	<return: 'void'>
	<arg: 'nx' type: 'GLshort'>
	<arg: 'ny' type: 'GLshort'>
	<arg: 'nz' type: 'GLshort'>

	<apicall: void 'glNormal3s' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3sv: v [

	<command: #glNormal3sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' size: '3'>

	<apicall: void 'glNormal3sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3x: nx with: ny with: nz [

	<command: #glNormal3x>
	<return: 'void'>
	<arg: 'nx' type: 'GLfixed'>
	<arg: 'ny' type: 'GLfixed'>
	<arg: 'nz' type: 'GLfixed'>

	<apicall: void 'glNormal3x' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3xOES: nx with: ny with: nz [

	<command: #glNormal3xOES>
	<return: 'void'>
	<arg: 'nx' type: 'GLfixed'>
	<arg: 'ny' type: 'GLfixed'>
	<arg: 'nz' type: 'GLfixed'>

	<apicall: void 'glNormal3xOES' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normal3xvOES: coords [

	<command: #glNormal3xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '3'>

	<apicall: void 'glNormal3xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalFormatNV: type with: stride [

	<command: #glNormalFormatNV>
	<return: 'void'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glNormalFormatNV' (GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalP3ui: type with: coords [

	<command: #glNormalP3ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #NormalPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glNormalP3ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalP3uiv: type with: coords [

	<command: #glNormalP3uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #NormalPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glNormalP3uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalPointer: type with: stride with: pointer [

	<command: #glNormalPointer>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #NormalPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glNormalPointer' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalPointerEXT: type with: stride with: count with: pointer [

	<command: #glNormalPointerEXT>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #NormalPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride,count)'>

	<apicall: void 'glNormalPointerEXT' (GLenum GLsizei GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalPointerListIBM: type with: stride with: pointer with: ptrstride [

	<command: #glNormalPointerListIBM>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #NormalPointerType>
	<arg: 'stride' type: 'GLint'>
	<arg: 'pointer' type: 'void**' size: 'COMPSIZE(type,stride)'>
	<arg: 'ptrstride' type: 'GLint'>

	<apicall: void 'glNormalPointerListIBM' (GLenum GLint void** GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalPointervINTEL: type with: pointer [

	<command: #glNormalPointervINTEL>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #NormalPointerType>
	<arg: 'pointer' type: 'void**' size: '4'>

	<apicall: void 'glNormalPointervINTEL' (GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3bATI: stream with: nx with: ny with: nz [

	<command: #glNormalStream3bATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'nx' type: 'GLbyte'>
	<arg: 'ny' type: 'GLbyte'>
	<arg: 'nz' type: 'GLbyte'>

	<apicall: void 'glNormalStream3bATI' (GLenum GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3bvATI: stream with: coords [

	<command: #glNormalStream3bvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLbyte*' size: '3'>

	<apicall: void 'glNormalStream3bvATI' (GLenum GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3dATI: stream with: nx with: ny with: nz [

	<command: #glNormalStream3dATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'nx' type: 'GLdouble'>
	<arg: 'ny' type: 'GLdouble'>
	<arg: 'nz' type: 'GLdouble'>

	<apicall: void 'glNormalStream3dATI' (GLenum GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3dvATI: stream with: coords [

	<command: #glNormalStream3dvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLdouble*' size: '3'>

	<apicall: void 'glNormalStream3dvATI' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3fATI: stream with: nx with: ny with: nz [

	<command: #glNormalStream3fATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>

	<apicall: void 'glNormalStream3fATI' (GLenum GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3fvATI: stream with: coords [

	<command: #glNormalStream3fvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLfloat*' size: '3'>

	<apicall: void 'glNormalStream3fvATI' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3iATI: stream with: nx with: ny with: nz [

	<command: #glNormalStream3iATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'nx' type: 'GLint'>
	<arg: 'ny' type: 'GLint'>
	<arg: 'nz' type: 'GLint'>

	<apicall: void 'glNormalStream3iATI' (GLenum GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3ivATI: stream with: coords [

	<command: #glNormalStream3ivATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLint*' size: '3'>

	<apicall: void 'glNormalStream3ivATI' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3sATI: stream with: nx with: ny with: nz [

	<command: #glNormalStream3sATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'nx' type: 'GLshort'>
	<arg: 'ny' type: 'GLshort'>
	<arg: 'nz' type: 'GLshort'>

	<apicall: void 'glNormalStream3sATI' (GLenum GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> normalStream3svATI: stream with: coords [

	<command: #glNormalStream3svATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLshort*' size: '3'>

	<apicall: void 'glNormalStream3svATI' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> objectLabel: identifier with: name with: length with: label [

	<command: #glObjectLabel>
	<return: 'void'>
	<arg: 'identifier' type: 'GLenum' group: #ObjectIdentifier>
	<arg: 'name' type: 'GLuint'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'label' type: 'GLchar*' size: 'COMPSIZE(label,length)'>

	<apicall: void 'glObjectLabel' (GLenum GLuint GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> objectLabelKHR: identifier with: name with: length with: label [

	<command: #glObjectLabelKHR>
	<return: 'void'>
	<arg: 'identifier' type: 'GLenum' group: #ObjectIdentifier>
	<arg: 'name' type: 'GLuint'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'label' type: 'GLchar*'>

	<apicall: void 'glObjectLabelKHR' (GLenum GLuint GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> objectPtrLabel: ptr with: length with: label [

	<command: #glObjectPtrLabel>
	<return: 'void'>
	<arg: 'ptr' type: 'void*'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'label' type: 'GLchar*' size: 'COMPSIZE(label,length)'>

	<apicall: void 'glObjectPtrLabel' (void* GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> objectPtrLabelKHR: ptr with: length with: label [

	<command: #glObjectPtrLabelKHR>
	<return: 'void'>
	<arg: 'ptr' type: 'void*'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'label' type: 'GLchar*'>

	<apicall: void 'glObjectPtrLabelKHR' (void* GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> objectPurgeableAPPLE: objectType with: name with: option [

	<command: #glObjectPurgeableAPPLE>
	<return: 'GLenum'>
	<arg: 'objectType' type: 'GLenum'>
	<arg: 'name' type: 'GLuint'>
	<arg: 'option' type: 'GLenum'>

	<apicall: GLenum 'glObjectPurgeableAPPLE' (GLenum GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> objectUnpurgeableAPPLE: objectType with: name with: option [

	<command: #glObjectUnpurgeableAPPLE>
	<return: 'GLenum'>
	<arg: 'objectType' type: 'GLenum'>
	<arg: 'name' type: 'GLuint'>
	<arg: 'option' type: 'GLenum'>

	<apicall: GLenum 'glObjectUnpurgeableAPPLE' (GLenum GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> ortho: left with: right with: bottom with: top with: zNear with: zFar [

	<command: #glOrtho>
	<return: 'void'>
	<arg: 'left' type: 'GLdouble'>
	<arg: 'right' type: 'GLdouble'>
	<arg: 'bottom' type: 'GLdouble'>
	<arg: 'top' type: 'GLdouble'>
	<arg: 'zNear' type: 'GLdouble'>
	<arg: 'zFar' type: 'GLdouble'>

	<apicall: void 'glOrtho' (GLdouble GLdouble GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> orthof: l with: r with: b with: t with: n with: f [

	<command: #glOrthof>
	<return: 'void'>
	<arg: 'l' type: 'GLfloat'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'n' type: 'GLfloat'>
	<arg: 'f' type: 'GLfloat'>

	<apicall: void 'glOrthof' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> orthofOES: l with: r with: b with: t with: n with: f [

	<command: #glOrthofOES>
	<return: 'void'>
	<arg: 'l' type: 'GLfloat'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'n' type: 'GLfloat'>
	<arg: 'f' type: 'GLfloat'>

	<apicall: void 'glOrthofOES' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> orthox: l with: r with: b with: t with: n with: f [

	<command: #glOrthox>
	<return: 'void'>
	<arg: 'l' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>
	<arg: 'b' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'n' type: 'GLfixed'>
	<arg: 'f' type: 'GLfixed'>

	<apicall: void 'glOrthox' (GLfixed GLfixed GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> orthoxOES: l with: r with: b with: t with: n with: f [

	<command: #glOrthoxOES>
	<return: 'void'>
	<arg: 'l' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>
	<arg: 'b' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'n' type: 'GLfixed'>
	<arg: 'f' type: 'GLfixed'>

	<apicall: void 'glOrthoxOES' (GLfixed GLfixed GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> passTexCoordATI: dst with: coord with: swizzle [

	<command: #glPassTexCoordATI>
	<return: 'void'>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'coord' type: 'GLuint'>
	<arg: 'swizzle' type: 'GLenum' group: #SwizzleOpATI>

	<apicall: void 'glPassTexCoordATI' (GLuint GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> passThrough: token [

	<command: #glPassThrough>
	<return: 'void'>
	<arg: 'token' type: 'GLfloat' group: #FeedbackElement>

	<apicall: void 'glPassThrough' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> passThroughxOES: token [

	<command: #glPassThroughxOES>
	<return: 'void'>
	<arg: 'token' type: 'GLfixed'>

	<apicall: void 'glPassThroughxOES' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> patchParameterfv: pname with: values [

	<command: #glPatchParameterfv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PatchParameterName>
	<arg: 'values' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glPatchParameterfv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> patchParameteri: pname with: value [

	<command: #glPatchParameteri>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PatchParameterName>
	<arg: 'value' type: 'GLint'>

	<apicall: void 'glPatchParameteri' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> patchParameteriEXT: pname with: value [

	<command: #glPatchParameteriEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PatchParameterName>
	<arg: 'value' type: 'GLint'>

	<apicall: void 'glPatchParameteriEXT' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> patchParameteriOES: pname with: value [

	<command: #glPatchParameteriOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PatchParameterName>
	<arg: 'value' type: 'GLint'>

	<apicall: void 'glPatchParameteriOES' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathColorGenNV: color with: genMode with: colorFormat with: coeffs [

	<command: #glPathColorGenNV>
	<return: 'void'>
	<arg: 'color' type: 'GLenum' group: #PathColor>
	<arg: 'genMode' type: 'GLenum' group: #PathGenMode>
	<arg: 'colorFormat' type: 'GLenum' group: #PathColorFormat>
	<arg: 'coeffs' type: 'GLfloat*' size: 'COMPSIZE(genMode,colorFormat)'>

	<apicall: void 'glPathColorGenNV' (GLenum GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathCommandsNV: path with: numCommands with: commands with: numCoords with: coordType with: coords [

	<command: #glPathCommandsNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'numCommands' type: 'GLsizei'>
	<arg: 'commands' type: 'GLubyte*' group: #PathCommand size: 'numCommands'>
	<arg: 'numCoords' type: 'GLsizei'>
	<arg: 'coordType' type: 'GLenum' group: #PathCoordType>
	<arg: 'coords' type: 'void*' size: 'COMPSIZE(numCoords,coordType)'>

	<apicall: void 'glPathCommandsNV' (GLuint GLsizei GLubyte* GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathCoordsNV: path with: numCoords with: coordType with: coords [

	<command: #glPathCoordsNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'numCoords' type: 'GLsizei'>
	<arg: 'coordType' type: 'GLenum' group: #PathCoordType>
	<arg: 'coords' type: 'void*' size: 'COMPSIZE(numCoords,coordType)'>

	<apicall: void 'glPathCoordsNV' (GLuint GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathCoverDepthFuncNV: func [

	<command: #glPathCoverDepthFuncNV>
	<return: 'void'>
	<arg: 'func' type: 'GLenum' group: #DepthFunction>

	<apicall: void 'glPathCoverDepthFuncNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathDashArrayNV: path with: dashCount with: dashArray [

	<command: #glPathDashArrayNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'dashCount' type: 'GLsizei'>
	<arg: 'dashArray' type: 'GLfloat*' size: 'dashCount'>

	<apicall: void 'glPathDashArrayNV' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathFogGenNV: genMode [

	<command: #glPathFogGenNV>
	<return: 'void'>
	<arg: 'genMode' type: 'GLenum' group: #PathGenMode>

	<apicall: void 'glPathFogGenNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathGlyphIndexArrayNV: firstPathName with: fontTarget with: fontName with: fontStyle with: firstGlyphIndex with: numGlyphs with: pathParameterTemplate with: emScale [

	<command: #glPathGlyphIndexArrayNV>
	<return: 'GLenum'>
	<arg: 'firstPathName' type: 'GLuint'>
	<arg: 'fontTarget' type: 'GLenum'>
	<arg: 'fontName' type: 'void*'>
	<arg: 'fontStyle' type: 'GLbitfield' group: #PathFontStyle>
	<arg: 'firstGlyphIndex' type: 'GLuint'>
	<arg: 'numGlyphs' type: 'GLsizei'>
	<arg: 'pathParameterTemplate' type: 'GLuint'>
	<arg: 'emScale' type: 'GLfloat'>

	<apicall: GLenum 'glPathGlyphIndexArrayNV' (GLuint GLenum void* GLbitfield GLuint GLsizei GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathGlyphRangeNV: firstPathName with: fontTarget with: fontName with: fontStyle with: firstGlyph with: numGlyphs with: handleMissingGlyphs with: pathParameterTemplate with: emScale [

	<command: #glPathGlyphRangeNV>
	<return: 'void'>
	<arg: 'firstPathName' type: 'GLuint' group: #Path>
	<arg: 'fontTarget' type: 'GLenum' group: #PathFontTarget>
	<arg: 'fontName' type: 'void*' size: 'COMPSIZE(fontTarget,fontName)'>
	<arg: 'fontStyle' type: 'GLbitfield' group: #PathFontStyle>
	<arg: 'firstGlyph' type: 'GLuint'>
	<arg: 'numGlyphs' type: 'GLsizei'>
	<arg: 'handleMissingGlyphs' type: 'GLenum' group: #PathHandleMissingGlyphs>
	<arg: 'pathParameterTemplate' type: 'GLuint' group: #Path>
	<arg: 'emScale' type: 'GLfloat'>

	<apicall: void 'glPathGlyphRangeNV' (GLuint GLenum void* GLbitfield GLuint GLsizei GLenum GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathGlyphsNV: firstPathName with: fontTarget with: fontName with: fontStyle with: numGlyphs with: type with: charcodes with: handleMissingGlyphs with: pathParameterTemplate with: emScale [

	<command: #glPathGlyphsNV>
	<return: 'void'>
	<arg: 'firstPathName' type: 'GLuint' group: #Path>
	<arg: 'fontTarget' type: 'GLenum' group: #PathFontTarget>
	<arg: 'fontName' type: 'void*' size: 'COMPSIZE(fontTarget,fontName)'>
	<arg: 'fontStyle' type: 'GLbitfield' group: #PathFontStyle>
	<arg: 'numGlyphs' type: 'GLsizei'>
	<arg: 'type' type: 'GLenum' group: #PathElementType>
	<arg: 'charcodes' type: 'void*' size: 'COMPSIZE(numGlyphs,type,charcodes)'>
	<arg: 'handleMissingGlyphs' type: 'GLenum' group: #PathHandleMissingGlyphs>
	<arg: 'pathParameterTemplate' type: 'GLuint' group: #Path>
	<arg: 'emScale' type: 'GLfloat'>

	<apicall: void 'glPathGlyphsNV' (GLuint GLenum void* GLbitfield GLsizei GLenum void* GLenum GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathMemoryGlyphIndexArrayNV: firstPathName with: fontTarget with: fontSize with: fontData with: faceIndex with: firstGlyphIndex with: numGlyphs with: pathParameterTemplate with: emScale [

	<command: #glPathMemoryGlyphIndexArrayNV>
	<return: 'GLenum'>
	<arg: 'firstPathName' type: 'GLuint'>
	<arg: 'fontTarget' type: 'GLenum'>
	<arg: 'fontSize' type: 'GLsizeiptr'>
	<arg: 'fontData' type: 'void*'>
	<arg: 'faceIndex' type: 'GLsizei'>
	<arg: 'firstGlyphIndex' type: 'GLuint'>
	<arg: 'numGlyphs' type: 'GLsizei'>
	<arg: 'pathParameterTemplate' type: 'GLuint'>
	<arg: 'emScale' type: 'GLfloat'>

	<apicall: GLenum 'glPathMemoryGlyphIndexArrayNV' (GLuint GLenum GLsizeiptr void* GLsizei GLuint GLsizei GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathParameterfNV: path with: pname with: value [

	<command: #glPathParameterfNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'pname' type: 'GLenum' group: #PathParameter>
	<arg: 'value' type: 'GLfloat'>

	<apicall: void 'glPathParameterfNV' (GLuint GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathParameterfvNV: path with: pname with: value [

	<command: #glPathParameterfvNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'pname' type: 'GLenum' group: #PathParameter>
	<arg: 'value' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glPathParameterfvNV' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathParameteriNV: path with: pname with: value [

	<command: #glPathParameteriNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'pname' type: 'GLenum' group: #PathParameter>
	<arg: 'value' type: 'GLint'>

	<apicall: void 'glPathParameteriNV' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathParameterivNV: path with: pname with: value [

	<command: #glPathParameterivNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'pname' type: 'GLenum' group: #PathParameter>
	<arg: 'value' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glPathParameterivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathStencilDepthOffsetNV: factor with: units [

	<command: #glPathStencilDepthOffsetNV>
	<return: 'void'>
	<arg: 'factor' type: 'GLfloat'>
	<arg: 'units' type: 'GLfloat'>

	<apicall: void 'glPathStencilDepthOffsetNV' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathStencilFuncNV: func with: ref with: mask [

	<command: #glPathStencilFuncNV>
	<return: 'void'>
	<arg: 'func' type: 'GLenum' group: #StencilFunction>
	<arg: 'ref' type: 'GLint' group: #ClampedStencilValue>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>

	<apicall: void 'glPathStencilFuncNV' (GLenum GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathStringNV: path with: format with: length with: pathString [

	<command: #glPathStringNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'format' type: 'GLenum' group: #PathStringFormat>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'pathString' type: 'void*' size: 'length'>

	<apicall: void 'glPathStringNV' (GLuint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathSubCommandsNV: path with: commandStart with: commandsToDelete with: numCommands with: commands with: numCoords with: coordType with: coords [

	<command: #glPathSubCommandsNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'commandStart' type: 'GLsizei'>
	<arg: 'commandsToDelete' type: 'GLsizei'>
	<arg: 'numCommands' type: 'GLsizei'>
	<arg: 'commands' type: 'GLubyte*' group: #PathCommand size: 'numCommands'>
	<arg: 'numCoords' type: 'GLsizei'>
	<arg: 'coordType' type: 'GLenum' group: #PathCoordType>
	<arg: 'coords' type: 'void*' size: 'COMPSIZE(numCoords,coordType)'>

	<apicall: void 'glPathSubCommandsNV' (GLuint GLsizei GLsizei GLsizei GLubyte* GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathSubCoordsNV: path with: coordStart with: numCoords with: coordType with: coords [

	<command: #glPathSubCoordsNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'coordStart' type: 'GLsizei'>
	<arg: 'numCoords' type: 'GLsizei'>
	<arg: 'coordType' type: 'GLenum' group: #PathCoordType>
	<arg: 'coords' type: 'void*' size: 'COMPSIZE(numCoords,coordType)'>

	<apicall: void 'glPathSubCoordsNV' (GLuint GLsizei GLsizei GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pathTexGenNV: texCoordSet with: genMode with: components with: coeffs [

	<command: #glPathTexGenNV>
	<return: 'void'>
	<arg: 'texCoordSet' type: 'GLenum' group: #PathColor>
	<arg: 'genMode' type: 'GLenum' group: #PathGenMode>
	<arg: 'components' type: 'GLint'>
	<arg: 'coeffs' type: 'GLfloat*' size: 'COMPSIZE(genMode,components)'>

	<apicall: void 'glPathTexGenNV' (GLenum GLenum GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pauseTransformFeedback [

	<command: #glPauseTransformFeedback>
	<return: 'void'>

	<apicall: void 'glPauseTransformFeedback' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pauseTransformFeedbackNV [

	<command: #glPauseTransformFeedbackNV>
	<return: 'void'>

	<apicall: void 'glPauseTransformFeedbackNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelDataRangeNV: target with: length with: pointer [

	<command: #glPixelDataRangeNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #PixelDataRangeTargetNV>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'length'>

	<apicall: void 'glPixelDataRangeNV' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelMapfv: map with: mapsize with: values [

	<command: #glPixelMapfv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'mapsize' type: 'GLsizei' group: #CheckedInt32>
	<arg: 'values' type: 'GLfloat*' size: 'mapsize'>

	<apicall: void 'glPixelMapfv' (GLenum GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelMapuiv: map with: mapsize with: values [

	<command: #glPixelMapuiv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'mapsize' type: 'GLsizei' group: #CheckedInt32>
	<arg: 'values' type: 'GLuint*' size: 'mapsize'>

	<apicall: void 'glPixelMapuiv' (GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelMapusv: map with: mapsize with: values [

	<command: #glPixelMapusv>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'mapsize' type: 'GLsizei' group: #CheckedInt32>
	<arg: 'values' type: 'GLushort*' size: 'mapsize'>

	<apicall: void 'glPixelMapusv' (GLenum GLsizei GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelMapx: map with: size with: values [

	<command: #glPixelMapx>
	<return: 'void'>
	<arg: 'map' type: 'GLenum' group: #PixelMap>
	<arg: 'size' type: 'GLint'>
	<arg: 'values' type: 'GLfixed*' size: 'size'>

	<apicall: void 'glPixelMapx' (GLenum GLint GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelStoref: pname with: param [

	<command: #glPixelStoref>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelStoreParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glPixelStoref' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelStorei: pname with: param [

	<command: #glPixelStorei>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelStoreParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glPixelStorei' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelStorex: pname with: param [

	<command: #glPixelStorex>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelStoreParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glPixelStorex' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTexGenParameterfSGIS: pname with: param [

	<command: #glPixelTexGenParameterfSGIS>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTexGenParameterNameSGIS>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glPixelTexGenParameterfSGIS' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTexGenParameterfvSGIS: pname with: params [

	<command: #glPixelTexGenParameterfvSGIS>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTexGenParameterNameSGIS>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glPixelTexGenParameterfvSGIS' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTexGenParameteriSGIS: pname with: param [

	<command: #glPixelTexGenParameteriSGIS>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTexGenParameterNameSGIS>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glPixelTexGenParameteriSGIS' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTexGenParameterivSGIS: pname with: params [

	<command: #glPixelTexGenParameterivSGIS>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTexGenParameterNameSGIS>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glPixelTexGenParameterivSGIS' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTexGenSGIX: mode [

	<command: #glPixelTexGenSGIX>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #PixelTexGenModeSGIX>

	<apicall: void 'glPixelTexGenSGIX' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTransferf: pname with: param [

	<command: #glPixelTransferf>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTransferParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glPixelTransferf' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTransferi: pname with: param [

	<command: #glPixelTransferi>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTransferParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glPixelTransferi' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTransferxOES: pname with: param [

	<command: #glPixelTransferxOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PixelTransferParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glPixelTransferxOES' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTransformParameterfEXT: target with: pname with: param [

	<command: #glPixelTransformParameterfEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #PixelTransformTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #PixelTransformPNameEXT>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glPixelTransformParameterfEXT' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTransformParameterfvEXT: target with: pname with: params [

	<command: #glPixelTransformParameterfvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #PixelTransformTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #PixelTransformPNameEXT>
	<arg: 'params' type: 'GLfloat*' size: '1'>

	<apicall: void 'glPixelTransformParameterfvEXT' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTransformParameteriEXT: target with: pname with: param [

	<command: #glPixelTransformParameteriEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #PixelTransformTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #PixelTransformPNameEXT>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glPixelTransformParameteriEXT' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelTransformParameterivEXT: target with: pname with: params [

	<command: #glPixelTransformParameterivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #PixelTransformTargetEXT>
	<arg: 'pname' type: 'GLenum' group: #PixelTransformPNameEXT>
	<arg: 'params' type: 'GLint*' size: '1'>

	<apicall: void 'glPixelTransformParameterivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelZoom: xfactor with: yfactor [

	<command: #glPixelZoom>
	<return: 'void'>
	<arg: 'xfactor' type: 'GLfloat'>
	<arg: 'yfactor' type: 'GLfloat'>

	<apicall: void 'glPixelZoom' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pixelZoomxOES: xfactor with: yfactor [

	<command: #glPixelZoomxOES>
	<return: 'void'>
	<arg: 'xfactor' type: 'GLfixed'>
	<arg: 'yfactor' type: 'GLfixed'>

	<apicall: void 'glPixelZoomxOES' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pnTrianglesfATI: pname with: param [

	<command: #glPNTrianglesfATI>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PNTrianglesPNameATI>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glPNTrianglesfATI' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pnTrianglesiATI: pname with: param [

	<command: #glPNTrianglesiATI>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PNTrianglesPNameATI>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glPNTrianglesiATI' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointAlongPathNV: path with: startSegment with: numSegments with: distance with: x with: y with: tangentX with: tangentY [

	<command: #glPointAlongPathNV>
	<return: 'GLboolean'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'startSegment' type: 'GLsizei'>
	<arg: 'numSegments' type: 'GLsizei'>
	<arg: 'distance' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat*' size: '1'>
	<arg: 'y' type: 'GLfloat*' size: '1'>
	<arg: 'tangentX' type: 'GLfloat*' size: '1'>
	<arg: 'tangentY' type: 'GLfloat*' size: '1'>

	<apicall: GLboolean 'glPointAlongPathNV' (GLuint GLsizei GLsizei GLfloat GLfloat* GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterf: pname with: param [

	<command: #glPointParameterf>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glPointParameterf' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterfARB: pname with: param [

	<command: #glPointParameterfARB>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glPointParameterfARB' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterfEXT: pname with: param [

	<command: #glPointParameterfEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glPointParameterfEXT' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterfSGIS: pname with: param [

	<command: #glPointParameterfSGIS>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glPointParameterfSGIS' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterfv: pname with: params [

	<command: #glPointParameterfv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glPointParameterfv' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterfvARB: pname with: params [

	<command: #glPointParameterfvARB>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glPointParameterfvARB' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterfvEXT: pname with: params [

	<command: #glPointParameterfvEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glPointParameterfvEXT' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterfvSGIS: pname with: params [

	<command: #glPointParameterfvSGIS>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glPointParameterfvSGIS' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameteri: pname with: param [

	<command: #glPointParameteri>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glPointParameteri' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameteriNV: pname with: param [

	<command: #glPointParameteriNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glPointParameteriNV' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameteriv: pname with: params [

	<command: #glPointParameteriv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glPointParameteriv' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterivNV: pname with: params [

	<command: #glPointParameterivNV>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glPointParameterivNV' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterx: pname with: param [

	<command: #glPointParameterx>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glPointParameterx' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterxOES: pname with: param [

	<command: #glPointParameterxOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glPointParameterxOES' (GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterxv: pname with: params [

	<command: #glPointParameterxv>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glPointParameterxv' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointParameterxvOES: pname with: params [

	<command: #glPointParameterxvOES>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #PointParameterNameARB>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glPointParameterxvOES' (GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointSize: size [

	<command: #glPointSize>
	<return: 'void'>
	<arg: 'size' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glPointSize' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointSizePointerOES: type with: stride with: pointer [

	<command: #glPointSizePointerOES>
	<return: 'void'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glPointSizePointerOES' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointSizex: size [

	<command: #glPointSizex>
	<return: 'void'>
	<arg: 'size' type: 'GLfixed'>

	<apicall: void 'glPointSizex' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pointSizexOES: size [

	<command: #glPointSizexOES>
	<return: 'void'>
	<arg: 'size' type: 'GLfixed'>

	<apicall: void 'glPointSizexOES' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pollAsyncSGIX: markerp [

	<command: #glPollAsyncSGIX>
	<return: 'GLint'>
	<arg: 'markerp' type: 'GLuint*' size: '1'>

	<apicall: GLint 'glPollAsyncSGIX' (GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pollInstrumentsSGIX: marker_p [

	<command: #glPollInstrumentsSGIX>
	<return: 'GLint'>
	<arg: 'marker_p' type: 'GLint*' size: '1'>

	<apicall: GLint 'glPollInstrumentsSGIX' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonMode: face with: mode [

	<command: #glPolygonMode>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'mode' type: 'GLenum' group: #PolygonMode>

	<apicall: void 'glPolygonMode' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonModeNV: face with: mode [

	<command: #glPolygonModeNV>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'mode' type: 'GLenum' group: #PolygonMode>

	<apicall: void 'glPolygonModeNV' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonOffset: factor with: units [

	<command: #glPolygonOffset>
	<return: 'void'>
	<arg: 'factor' type: 'GLfloat'>
	<arg: 'units' type: 'GLfloat'>

	<apicall: void 'glPolygonOffset' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonOffsetClamp: factor with: units with: clamp [

	<command: #glPolygonOffsetClamp>
	<return: 'void'>
	<arg: 'factor' type: 'GLfloat'>
	<arg: 'units' type: 'GLfloat'>
	<arg: 'clamp' type: 'GLfloat'>

	<apicall: void 'glPolygonOffsetClamp' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonOffsetClampEXT: factor with: units with: clamp [

	<command: #glPolygonOffsetClampEXT>
	<return: 'void'>
	<arg: 'factor' type: 'GLfloat'>
	<arg: 'units' type: 'GLfloat'>
	<arg: 'clamp' type: 'GLfloat'>

	<apicall: void 'glPolygonOffsetClampEXT' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonOffsetEXT: factor with: bias [

	<command: #glPolygonOffsetEXT>
	<return: 'void'>
	<arg: 'factor' type: 'GLfloat'>
	<arg: 'bias' type: 'GLfloat'>

	<apicall: void 'glPolygonOffsetEXT' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonOffsetx: factor with: units [

	<command: #glPolygonOffsetx>
	<return: 'void'>
	<arg: 'factor' type: 'GLfixed'>
	<arg: 'units' type: 'GLfixed'>

	<apicall: void 'glPolygonOffsetx' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonOffsetxOES: factor with: units [

	<command: #glPolygonOffsetxOES>
	<return: 'void'>
	<arg: 'factor' type: 'GLfixed'>
	<arg: 'units' type: 'GLfixed'>

	<apicall: void 'glPolygonOffsetxOES' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> polygonStipple: mask [

	<command: #glPolygonStipple>
	<return: 'void'>
	<arg: 'mask' type: 'GLubyte*' size: 'COMPSIZE()'>

	<apicall: void 'glPolygonStipple' (GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> popAttrib [

	<command: #glPopAttrib>
	<return: 'void'>

	<apicall: void 'glPopAttrib' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> popClientAttrib [

	<command: #glPopClientAttrib>
	<return: 'void'>

	<apicall: void 'glPopClientAttrib' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> popDebugGroup [

	<command: #glPopDebugGroup>
	<return: 'void'>

	<apicall: void 'glPopDebugGroup' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> popDebugGroupKHR [

	<command: #glPopDebugGroupKHR>
	<return: 'void'>

	<apicall: void 'glPopDebugGroupKHR' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> popGroupMarkerEXT [

	<command: #glPopGroupMarkerEXT>
	<return: 'void'>

	<apicall: void 'glPopGroupMarkerEXT' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> popMatrix [

	<command: #glPopMatrix>
	<return: 'void'>

	<apicall: void 'glPopMatrix' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> popName [

	<command: #glPopName>
	<return: 'void'>

	<apicall: void 'glPopName' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> presentFrameDualFillNV: video_slot with: minPresentTime with: beginPresentTimeId with: presentDurationId with: type with: target0 with: fill0 with: target1 with: fill1 with: target2 with: fill2 with: target3 with: fill3 [

	<command: #glPresentFrameDualFillNV>
	<return: 'void'>
	<arg: 'video_slot' type: 'GLuint'>
	<arg: 'minPresentTime' type: 'GLuint64EXT'>
	<arg: 'beginPresentTimeId' type: 'GLuint'>
	<arg: 'presentDurationId' type: 'GLuint'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'target0' type: 'GLenum'>
	<arg: 'fill0' type: 'GLuint'>
	<arg: 'target1' type: 'GLenum'>
	<arg: 'fill1' type: 'GLuint'>
	<arg: 'target2' type: 'GLenum'>
	<arg: 'fill2' type: 'GLuint'>
	<arg: 'target3' type: 'GLenum'>
	<arg: 'fill3' type: 'GLuint'>

	<apicall: void 'glPresentFrameDualFillNV' (GLuint GLuint64EXT GLuint GLuint GLenum GLenum GLuint GLenum GLuint GLenum GLuint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> presentFrameKeyedNV: video_slot with: minPresentTime with: beginPresentTimeId with: presentDurationId with: type with: target0 with: fill0 with: key0 with: target1 with: fill1 with: key1 [

	<command: #glPresentFrameKeyedNV>
	<return: 'void'>
	<arg: 'video_slot' type: 'GLuint'>
	<arg: 'minPresentTime' type: 'GLuint64EXT'>
	<arg: 'beginPresentTimeId' type: 'GLuint'>
	<arg: 'presentDurationId' type: 'GLuint'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'target0' type: 'GLenum'>
	<arg: 'fill0' type: 'GLuint'>
	<arg: 'key0' type: 'GLuint'>
	<arg: 'target1' type: 'GLenum'>
	<arg: 'fill1' type: 'GLuint'>
	<arg: 'key1' type: 'GLuint'>

	<apicall: void 'glPresentFrameKeyedNV' (GLuint GLuint64EXT GLuint GLuint GLenum GLenum GLuint GLuint GLenum GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> primitiveBoundingBox: minX with: minY with: minZ with: minW with: maxX with: maxY with: maxZ with: maxW [

	<command: #glPrimitiveBoundingBox>
	<return: 'void'>
	<arg: 'minX' type: 'GLfloat'>
	<arg: 'minY' type: 'GLfloat'>
	<arg: 'minZ' type: 'GLfloat'>
	<arg: 'minW' type: 'GLfloat'>
	<arg: 'maxX' type: 'GLfloat'>
	<arg: 'maxY' type: 'GLfloat'>
	<arg: 'maxZ' type: 'GLfloat'>
	<arg: 'maxW' type: 'GLfloat'>

	<apicall: void 'glPrimitiveBoundingBox' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> primitiveBoundingBoxARB: minX with: minY with: minZ with: minW with: maxX with: maxY with: maxZ with: maxW [

	<command: #glPrimitiveBoundingBoxARB>
	<return: 'void'>
	<arg: 'minX' type: 'GLfloat'>
	<arg: 'minY' type: 'GLfloat'>
	<arg: 'minZ' type: 'GLfloat'>
	<arg: 'minW' type: 'GLfloat'>
	<arg: 'maxX' type: 'GLfloat'>
	<arg: 'maxY' type: 'GLfloat'>
	<arg: 'maxZ' type: 'GLfloat'>
	<arg: 'maxW' type: 'GLfloat'>

	<apicall: void 'glPrimitiveBoundingBoxARB' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> primitiveBoundingBoxEXT: minX with: minY with: minZ with: minW with: maxX with: maxY with: maxZ with: maxW [

	<command: #glPrimitiveBoundingBoxEXT>
	<return: 'void'>
	<arg: 'minX' type: 'GLfloat'>
	<arg: 'minY' type: 'GLfloat'>
	<arg: 'minZ' type: 'GLfloat'>
	<arg: 'minW' type: 'GLfloat'>
	<arg: 'maxX' type: 'GLfloat'>
	<arg: 'maxY' type: 'GLfloat'>
	<arg: 'maxZ' type: 'GLfloat'>
	<arg: 'maxW' type: 'GLfloat'>

	<apicall: void 'glPrimitiveBoundingBoxEXT' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> primitiveBoundingBoxOES: minX with: minY with: minZ with: minW with: maxX with: maxY with: maxZ with: maxW [

	<command: #glPrimitiveBoundingBoxOES>
	<return: 'void'>
	<arg: 'minX' type: 'GLfloat'>
	<arg: 'minY' type: 'GLfloat'>
	<arg: 'minZ' type: 'GLfloat'>
	<arg: 'minW' type: 'GLfloat'>
	<arg: 'maxX' type: 'GLfloat'>
	<arg: 'maxY' type: 'GLfloat'>
	<arg: 'maxZ' type: 'GLfloat'>
	<arg: 'maxW' type: 'GLfloat'>

	<apicall: void 'glPrimitiveBoundingBoxOES' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> primitiveRestartIndex: index [

	<command: #glPrimitiveRestartIndex>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glPrimitiveRestartIndex' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> primitiveRestartIndexNV: index [

	<command: #glPrimitiveRestartIndexNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>

	<apicall: void 'glPrimitiveRestartIndexNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> primitiveRestartNV [

	<command: #glPrimitiveRestartNV>
	<return: 'void'>

	<apicall: void 'glPrimitiveRestartNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> prioritizeTextures: n with: textures with: priorities [

	<command: #glPrioritizeTextures>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' group: #Texture size: 'n'>
	<arg: 'priorities' type: 'GLfloat*' size: 'n'>

	<apicall: void 'glPrioritizeTextures' (GLsizei GLuint* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> prioritizeTexturesEXT: n with: textures with: priorities [

	<command: #glPrioritizeTexturesEXT>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' group: #Texture size: 'n'>
	<arg: 'priorities' type: 'GLclampf*' group: #ClampedFloat32 size: 'n'>

	<apicall: void 'glPrioritizeTexturesEXT' (GLsizei GLuint* GLclampf*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> prioritizeTexturesxOES: n with: textures with: priorities [

	<command: #glPrioritizeTexturesxOES>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'textures' type: 'GLuint*' size: 'n'>
	<arg: 'priorities' type: 'GLfixed*' group: #ClampedFixed size: 'n'>

	<apicall: void 'glPrioritizeTexturesxOES' (GLsizei GLuint* GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programBinary: program with: binaryFormat with: binary with: length [

	<command: #glProgramBinary>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'binaryFormat' type: 'GLenum'>
	<arg: 'binary' type: 'void*' size: 'length'>
	<arg: 'length' type: 'GLsizei'>

	<apicall: void 'glProgramBinary' (GLuint GLenum void* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programBinaryOES: program with: binaryFormat with: binary with: length [

	<command: #glProgramBinaryOES>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'binaryFormat' type: 'GLenum'>
	<arg: 'binary' type: 'void*' size: 'length'>
	<arg: 'length' type: 'GLint'>

	<apicall: void 'glProgramBinaryOES' (GLuint GLenum void* GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programBufferParametersIivNV: target with: bindingIndex with: wordIndex with: count with: params [

	<command: #glProgramBufferParametersIivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'bindingIndex' type: 'GLuint'>
	<arg: 'wordIndex' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'count'>

	<apicall: void 'glProgramBufferParametersIivNV' (GLenum GLuint GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programBufferParametersIuivNV: target with: bindingIndex with: wordIndex with: count with: params [

	<command: #glProgramBufferParametersIuivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'bindingIndex' type: 'GLuint'>
	<arg: 'wordIndex' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*' size: 'count'>

	<apicall: void 'glProgramBufferParametersIuivNV' (GLenum GLuint GLuint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programBufferParametersfvNV: target with: bindingIndex with: wordIndex with: count with: params [

	<command: #glProgramBufferParametersfvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'bindingIndex' type: 'GLuint'>
	<arg: 'wordIndex' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLfloat*' size: 'count'>

	<apicall: void 'glProgramBufferParametersfvNV' (GLenum GLuint GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameter4dARB: target with: index with: x with: y with: z with: w [

	<command: #glProgramEnvParameter4dARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glProgramEnvParameter4dARB' (GLenum GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameter4dvARB: target with: index with: params [

	<command: #glProgramEnvParameter4dvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glProgramEnvParameter4dvARB' (GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameter4fARB: target with: index with: x with: y with: z with: w [

	<command: #glProgramEnvParameter4fARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glProgramEnvParameter4fARB' (GLenum GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameter4fvARB: target with: index with: params [

	<command: #glProgramEnvParameter4fvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glProgramEnvParameter4fvARB' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameterI4iNV: target with: index with: x with: y with: z with: w [

	<command: #glProgramEnvParameterI4iNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>
	<arg: 'w' type: 'GLint'>

	<apicall: void 'glProgramEnvParameterI4iNV' (GLenum GLuint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameterI4ivNV: target with: index with: params [

	<command: #glProgramEnvParameterI4ivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glProgramEnvParameterI4ivNV' (GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameterI4uiNV: target with: index with: x with: y with: z with: w [

	<command: #glProgramEnvParameterI4uiNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>
	<arg: 'z' type: 'GLuint'>
	<arg: 'w' type: 'GLuint'>

	<apicall: void 'glProgramEnvParameterI4uiNV' (GLenum GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameterI4uivNV: target with: index with: params [

	<command: #glProgramEnvParameterI4uivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLuint*' size: '4'>

	<apicall: void 'glProgramEnvParameterI4uivNV' (GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParameters4fvEXT: target with: index with: count with: params [

	<command: #glProgramEnvParameters4fvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glProgramEnvParameters4fvEXT' (GLenum GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParametersI4ivNV: target with: index with: count with: params [

	<command: #glProgramEnvParametersI4ivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'count*4'>

	<apicall: void 'glProgramEnvParametersI4ivNV' (GLenum GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programEnvParametersI4uivNV: target with: index with: count with: params [

	<command: #glProgramEnvParametersI4uivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*' size: 'count*4'>

	<apicall: void 'glProgramEnvParametersI4uivNV' (GLenum GLuint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameter4dARB: target with: index with: x with: y with: z with: w [

	<command: #glProgramLocalParameter4dARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glProgramLocalParameter4dARB' (GLenum GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameter4dvARB: target with: index with: params [

	<command: #glProgramLocalParameter4dvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLdouble*' size: '4'>

	<apicall: void 'glProgramLocalParameter4dvARB' (GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameter4fARB: target with: index with: x with: y with: z with: w [

	<command: #glProgramLocalParameter4fARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glProgramLocalParameter4fARB' (GLenum GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameter4fvARB: target with: index with: params [

	<command: #glProgramLocalParameter4fvARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLfloat*' size: '4'>

	<apicall: void 'glProgramLocalParameter4fvARB' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameterI4iNV: target with: index with: x with: y with: z with: w [

	<command: #glProgramLocalParameterI4iNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>
	<arg: 'w' type: 'GLint'>

	<apicall: void 'glProgramLocalParameterI4iNV' (GLenum GLuint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameterI4ivNV: target with: index with: params [

	<command: #glProgramLocalParameterI4ivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLint*' size: '4'>

	<apicall: void 'glProgramLocalParameterI4ivNV' (GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameterI4uiNV: target with: index with: x with: y with: z with: w [

	<command: #glProgramLocalParameterI4uiNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>
	<arg: 'z' type: 'GLuint'>
	<arg: 'w' type: 'GLuint'>

	<apicall: void 'glProgramLocalParameterI4uiNV' (GLenum GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameterI4uivNV: target with: index with: params [

	<command: #glProgramLocalParameterI4uivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'params' type: 'GLuint*' size: '4'>

	<apicall: void 'glProgramLocalParameterI4uivNV' (GLenum GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParameters4fvEXT: target with: index with: count with: params [

	<command: #glProgramLocalParameters4fvEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glProgramLocalParameters4fvEXT' (GLenum GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParametersI4ivNV: target with: index with: count with: params [

	<command: #glProgramLocalParametersI4ivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLint*' size: 'count*4'>

	<apicall: void 'glProgramLocalParametersI4ivNV' (GLenum GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programLocalParametersI4uivNV: target with: index with: count with: params [

	<command: #glProgramLocalParametersI4uivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*' size: 'count*4'>

	<apicall: void 'glProgramLocalParametersI4uivNV' (GLenum GLuint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programNamedParameter4dNV: id with: len with: name with: x with: y with: z with: w [

	<command: #glProgramNamedParameter4dNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'name' type: 'GLubyte*' size: '1'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glProgramNamedParameter4dNV' (GLuint GLsizei GLubyte* GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programNamedParameter4dvNV: id with: len with: name with: v [

	<command: #glProgramNamedParameter4dvNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'name' type: 'GLubyte*' size: '1'>
	<arg: 'v' type: 'GLdouble*' size: '4'>

	<apicall: void 'glProgramNamedParameter4dvNV' (GLuint GLsizei GLubyte* GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programNamedParameter4fNV: id with: len with: name with: x with: y with: z with: w [

	<command: #glProgramNamedParameter4fNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'name' type: 'GLubyte*' size: '1'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glProgramNamedParameter4fNV' (GLuint GLsizei GLubyte* GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programNamedParameter4fvNV: id with: len with: name with: v [

	<command: #glProgramNamedParameter4fvNV>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'name' type: 'GLubyte*' size: '1'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glProgramNamedParameter4fvNV' (GLuint GLsizei GLubyte* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameter4dNV: target with: index with: x with: y with: z with: w [

	<command: #glProgramParameter4dNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glProgramParameter4dNV' (GLenum GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameter4dvNV: target with: index with: v [

	<command: #glProgramParameter4dvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '4'>

	<apicall: void 'glProgramParameter4dvNV' (GLenum GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameter4fNV: target with: index with: x with: y with: z with: w [

	<command: #glProgramParameter4fNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glProgramParameter4fNV' (GLenum GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameter4fvNV: target with: index with: v [

	<command: #glProgramParameter4fvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glProgramParameter4fvNV' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameteri: program with: pname with: value [

	<command: #glProgramParameteri>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ProgramParameterPName>
	<arg: 'value' type: 'GLint'>

	<apicall: void 'glProgramParameteri' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameteriARB: program with: pname with: value [

	<command: #glProgramParameteriARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ProgramParameterPName>
	<arg: 'value' type: 'GLint'>

	<apicall: void 'glProgramParameteriARB' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameteriEXT: program with: pname with: value [

	<command: #glProgramParameteriEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #ProgramParameterPName>
	<arg: 'value' type: 'GLint'>

	<apicall: void 'glProgramParameteriEXT' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameters4dvNV: target with: index with: count with: v [

	<command: #glProgramParameters4dvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*' size: 'count*4'>

	<apicall: void 'glProgramParameters4dvNV' (GLenum GLuint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programParameters4fvNV: target with: index with: count with: v [

	<command: #glProgramParameters4fvNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glProgramParameters4fvNV' (GLenum GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programPathFragmentInputGenNV: program with: location with: genMode with: components with: coeffs [

	<command: #glProgramPathFragmentInputGenNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'genMode' type: 'GLenum'>
	<arg: 'components' type: 'GLint'>
	<arg: 'coeffs' type: 'GLfloat*'>

	<apicall: void 'glProgramPathFragmentInputGenNV' (GLuint GLint GLenum GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programStringARB: target with: format with: len with: string [

	<command: #glProgramStringARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'format' type: 'GLenum' group: #ProgramFormat>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'string' type: 'void*' size: 'len'>

	<apicall: void 'glProgramStringARB' (GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programSubroutineParametersuivNV: target with: count with: params [

	<command: #glProgramSubroutineParametersuivNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'params' type: 'GLuint*' size: 'count'>

	<apicall: void 'glProgramSubroutineParametersuivNV' (GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1d: program with: location with: v0 [

	<command: #glProgramUniform1d>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLdouble'>

	<apicall: void 'glProgramUniform1d' (GLuint GLint GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1dEXT: program with: location with: x [

	<command: #glProgramUniform1dEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLdouble'>

	<apicall: void 'glProgramUniform1dEXT' (GLuint GLint GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1dv: program with: location with: count with: value [

	<command: #glProgramUniform1dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count'>

	<apicall: void 'glProgramUniform1dv' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1dvEXT: program with: location with: count with: value [

	<command: #glProgramUniform1dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count'>

	<apicall: void 'glProgramUniform1dvEXT' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1f: program with: location with: v0 [

	<command: #glProgramUniform1f>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>

	<apicall: void 'glProgramUniform1f' (GLuint GLint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1fEXT: program with: location with: v0 [

	<command: #glProgramUniform1fEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>

	<apicall: void 'glProgramUniform1fEXT' (GLuint GLint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1fv: program with: location with: count with: value [

	<command: #glProgramUniform1fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count'>

	<apicall: void 'glProgramUniform1fv' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1fvEXT: program with: location with: count with: value [

	<command: #glProgramUniform1fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count'>

	<apicall: void 'glProgramUniform1fvEXT' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1i64ARB: program with: location with: x [

	<command: #glProgramUniform1i64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64'>

	<apicall: void 'glProgramUniform1i64ARB' (GLuint GLint GLint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1i64NV: program with: location with: x [

	<command: #glProgramUniform1i64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64EXT'>

	<apicall: void 'glProgramUniform1i64NV' (GLuint GLint GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1i64vARB: program with: location with: count with: value [

	<command: #glProgramUniform1i64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64*' size: 'count'>

	<apicall: void 'glProgramUniform1i64vARB' (GLuint GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1i64vNV: program with: location with: count with: value [

	<command: #glProgramUniform1i64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64EXT*' size: 'count'>

	<apicall: void 'glProgramUniform1i64vNV' (GLuint GLint GLsizei GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1i: program with: location with: v0 [

	<command: #glProgramUniform1i>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>

	<apicall: void 'glProgramUniform1i' (GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1iEXT: program with: location with: v0 [

	<command: #glProgramUniform1iEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>

	<apicall: void 'glProgramUniform1iEXT' (GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1iv: program with: location with: count with: value [

	<command: #glProgramUniform1iv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count'>

	<apicall: void 'glProgramUniform1iv' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1ivEXT: program with: location with: count with: value [

	<command: #glProgramUniform1ivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count'>

	<apicall: void 'glProgramUniform1ivEXT' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1ui64ARB: program with: location with: x [

	<command: #glProgramUniform1ui64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64'>

	<apicall: void 'glProgramUniform1ui64ARB' (GLuint GLint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1ui64NV: program with: location with: x [

	<command: #glProgramUniform1ui64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64EXT'>

	<apicall: void 'glProgramUniform1ui64NV' (GLuint GLint GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1ui64vARB: program with: location with: count with: value [

	<command: #glProgramUniform1ui64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count'>

	<apicall: void 'glProgramUniform1ui64vARB' (GLuint GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1ui64vNV: program with: location with: count with: value [

	<command: #glProgramUniform1ui64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count'>

	<apicall: void 'glProgramUniform1ui64vNV' (GLuint GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1ui: program with: location with: v0 [

	<command: #glProgramUniform1ui>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>

	<apicall: void 'glProgramUniform1ui' (GLuint GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1uiEXT: program with: location with: v0 [

	<command: #glProgramUniform1uiEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>

	<apicall: void 'glProgramUniform1uiEXT' (GLuint GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1uiv: program with: location with: count with: value [

	<command: #glProgramUniform1uiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count'>

	<apicall: void 'glProgramUniform1uiv' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform1uivEXT: program with: location with: count with: value [

	<command: #glProgramUniform1uivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count'>

	<apicall: void 'glProgramUniform1uivEXT' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2d: program with: location with: v0 with: v1 [

	<command: #glProgramUniform2d>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLdouble'>
	<arg: 'v1' type: 'GLdouble'>

	<apicall: void 'glProgramUniform2d' (GLuint GLint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2dEXT: program with: location with: x with: y [

	<command: #glProgramUniform2dEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>

	<apicall: void 'glProgramUniform2dEXT' (GLuint GLint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2dv: program with: location with: count with: value [

	<command: #glProgramUniform2dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*2'>

	<apicall: void 'glProgramUniform2dv' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2dvEXT: program with: location with: count with: value [

	<command: #glProgramUniform2dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*2'>

	<apicall: void 'glProgramUniform2dvEXT' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2f: program with: location with: v0 with: v1 [

	<command: #glProgramUniform2f>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>

	<apicall: void 'glProgramUniform2f' (GLuint GLint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2fEXT: program with: location with: v0 with: v1 [

	<command: #glProgramUniform2fEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>

	<apicall: void 'glProgramUniform2fEXT' (GLuint GLint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2fv: program with: location with: count with: value [

	<command: #glProgramUniform2fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*2'>

	<apicall: void 'glProgramUniform2fv' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2fvEXT: program with: location with: count with: value [

	<command: #glProgramUniform2fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*2'>

	<apicall: void 'glProgramUniform2fvEXT' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2i64ARB: program with: location with: x with: y [

	<command: #glProgramUniform2i64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64'>
	<arg: 'y' type: 'GLint64'>

	<apicall: void 'glProgramUniform2i64ARB' (GLuint GLint GLint64 GLint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2i64NV: program with: location with: x with: y [

	<command: #glProgramUniform2i64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>

	<apicall: void 'glProgramUniform2i64NV' (GLuint GLint GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2i64vARB: program with: location with: count with: value [

	<command: #glProgramUniform2i64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64*' size: 'count*2'>

	<apicall: void 'glProgramUniform2i64vARB' (GLuint GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2i64vNV: program with: location with: count with: value [

	<command: #glProgramUniform2i64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64EXT*' size: 'count*2'>

	<apicall: void 'glProgramUniform2i64vNV' (GLuint GLint GLsizei GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2i: program with: location with: v0 with: v1 [

	<command: #glProgramUniform2i>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>

	<apicall: void 'glProgramUniform2i' (GLuint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2iEXT: program with: location with: v0 with: v1 [

	<command: #glProgramUniform2iEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>

	<apicall: void 'glProgramUniform2iEXT' (GLuint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2iv: program with: location with: count with: value [

	<command: #glProgramUniform2iv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*2'>

	<apicall: void 'glProgramUniform2iv' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2ivEXT: program with: location with: count with: value [

	<command: #glProgramUniform2ivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*2'>

	<apicall: void 'glProgramUniform2ivEXT' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2ui64ARB: program with: location with: x with: y [

	<command: #glProgramUniform2ui64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64'>
	<arg: 'y' type: 'GLuint64'>

	<apicall: void 'glProgramUniform2ui64ARB' (GLuint GLint GLuint64 GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2ui64NV: program with: location with: x with: y [

	<command: #glProgramUniform2ui64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>

	<apicall: void 'glProgramUniform2ui64NV' (GLuint GLint GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2ui64vARB: program with: location with: count with: value [

	<command: #glProgramUniform2ui64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count*2'>

	<apicall: void 'glProgramUniform2ui64vARB' (GLuint GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2ui64vNV: program with: location with: count with: value [

	<command: #glProgramUniform2ui64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count*2'>

	<apicall: void 'glProgramUniform2ui64vNV' (GLuint GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2ui: program with: location with: v0 with: v1 [

	<command: #glProgramUniform2ui>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>

	<apicall: void 'glProgramUniform2ui' (GLuint GLint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2uiEXT: program with: location with: v0 with: v1 [

	<command: #glProgramUniform2uiEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>

	<apicall: void 'glProgramUniform2uiEXT' (GLuint GLint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2uiv: program with: location with: count with: value [

	<command: #glProgramUniform2uiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*2'>

	<apicall: void 'glProgramUniform2uiv' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform2uivEXT: program with: location with: count with: value [

	<command: #glProgramUniform2uivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*2'>

	<apicall: void 'glProgramUniform2uivEXT' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3d: program with: location with: v0 with: v1 with: v2 [

	<command: #glProgramUniform3d>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLdouble'>
	<arg: 'v1' type: 'GLdouble'>
	<arg: 'v2' type: 'GLdouble'>

	<apicall: void 'glProgramUniform3d' (GLuint GLint GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3dEXT: program with: location with: x with: y with: z [

	<command: #glProgramUniform3dEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glProgramUniform3dEXT' (GLuint GLint GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3dv: program with: location with: count with: value [

	<command: #glProgramUniform3dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*3'>

	<apicall: void 'glProgramUniform3dv' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3dvEXT: program with: location with: count with: value [

	<command: #glProgramUniform3dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*3'>

	<apicall: void 'glProgramUniform3dvEXT' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3f: program with: location with: v0 with: v1 with: v2 [

	<command: #glProgramUniform3f>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>
	<arg: 'v2' type: 'GLfloat'>

	<apicall: void 'glProgramUniform3f' (GLuint GLint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3fEXT: program with: location with: v0 with: v1 with: v2 [

	<command: #glProgramUniform3fEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>
	<arg: 'v2' type: 'GLfloat'>

	<apicall: void 'glProgramUniform3fEXT' (GLuint GLint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3fv: program with: location with: count with: value [

	<command: #glProgramUniform3fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*3'>

	<apicall: void 'glProgramUniform3fv' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3fvEXT: program with: location with: count with: value [

	<command: #glProgramUniform3fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*3'>

	<apicall: void 'glProgramUniform3fvEXT' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3i64ARB: program with: location with: x with: y with: z [

	<command: #glProgramUniform3i64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64'>
	<arg: 'y' type: 'GLint64'>
	<arg: 'z' type: 'GLint64'>

	<apicall: void 'glProgramUniform3i64ARB' (GLuint GLint GLint64 GLint64 GLint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3i64NV: program with: location with: x with: y with: z [

	<command: #glProgramUniform3i64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>
	<arg: 'z' type: 'GLint64EXT'>

	<apicall: void 'glProgramUniform3i64NV' (GLuint GLint GLint64EXT GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3i64vARB: program with: location with: count with: value [

	<command: #glProgramUniform3i64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64*' size: 'count*3'>

	<apicall: void 'glProgramUniform3i64vARB' (GLuint GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3i64vNV: program with: location with: count with: value [

	<command: #glProgramUniform3i64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64EXT*' size: 'count*3'>

	<apicall: void 'glProgramUniform3i64vNV' (GLuint GLint GLsizei GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3i: program with: location with: v0 with: v1 with: v2 [

	<command: #glProgramUniform3i>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>
	<arg: 'v2' type: 'GLint'>

	<apicall: void 'glProgramUniform3i' (GLuint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3iEXT: program with: location with: v0 with: v1 with: v2 [

	<command: #glProgramUniform3iEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>
	<arg: 'v2' type: 'GLint'>

	<apicall: void 'glProgramUniform3iEXT' (GLuint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3iv: program with: location with: count with: value [

	<command: #glProgramUniform3iv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*3'>

	<apicall: void 'glProgramUniform3iv' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3ivEXT: program with: location with: count with: value [

	<command: #glProgramUniform3ivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*3'>

	<apicall: void 'glProgramUniform3ivEXT' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3ui64ARB: program with: location with: x with: y with: z [

	<command: #glProgramUniform3ui64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64'>
	<arg: 'y' type: 'GLuint64'>
	<arg: 'z' type: 'GLuint64'>

	<apicall: void 'glProgramUniform3ui64ARB' (GLuint GLint GLuint64 GLuint64 GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3ui64NV: program with: location with: x with: y with: z [

	<command: #glProgramUniform3ui64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>
	<arg: 'z' type: 'GLuint64EXT'>

	<apicall: void 'glProgramUniform3ui64NV' (GLuint GLint GLuint64EXT GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3ui64vARB: program with: location with: count with: value [

	<command: #glProgramUniform3ui64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count*3'>

	<apicall: void 'glProgramUniform3ui64vARB' (GLuint GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3ui64vNV: program with: location with: count with: value [

	<command: #glProgramUniform3ui64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count*3'>

	<apicall: void 'glProgramUniform3ui64vNV' (GLuint GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3ui: program with: location with: v0 with: v1 with: v2 [

	<command: #glProgramUniform3ui>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>
	<arg: 'v2' type: 'GLuint'>

	<apicall: void 'glProgramUniform3ui' (GLuint GLint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3uiEXT: program with: location with: v0 with: v1 with: v2 [

	<command: #glProgramUniform3uiEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>
	<arg: 'v2' type: 'GLuint'>

	<apicall: void 'glProgramUniform3uiEXT' (GLuint GLint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3uiv: program with: location with: count with: value [

	<command: #glProgramUniform3uiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*3'>

	<apicall: void 'glProgramUniform3uiv' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform3uivEXT: program with: location with: count with: value [

	<command: #glProgramUniform3uivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*3'>

	<apicall: void 'glProgramUniform3uivEXT' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4d: program with: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glProgramUniform4d>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLdouble'>
	<arg: 'v1' type: 'GLdouble'>
	<arg: 'v2' type: 'GLdouble'>
	<arg: 'v3' type: 'GLdouble'>

	<apicall: void 'glProgramUniform4d' (GLuint GLint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4dEXT: program with: location with: x with: y with: z with: w [

	<command: #glProgramUniform4dEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glProgramUniform4dEXT' (GLuint GLint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4dv: program with: location with: count with: value [

	<command: #glProgramUniform4dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*4'>

	<apicall: void 'glProgramUniform4dv' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4dvEXT: program with: location with: count with: value [

	<command: #glProgramUniform4dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*4'>

	<apicall: void 'glProgramUniform4dvEXT' (GLuint GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4f: program with: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glProgramUniform4f>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>
	<arg: 'v2' type: 'GLfloat'>
	<arg: 'v3' type: 'GLfloat'>

	<apicall: void 'glProgramUniform4f' (GLuint GLint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4fEXT: program with: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glProgramUniform4fEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>
	<arg: 'v2' type: 'GLfloat'>
	<arg: 'v3' type: 'GLfloat'>

	<apicall: void 'glProgramUniform4fEXT' (GLuint GLint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4fv: program with: location with: count with: value [

	<command: #glProgramUniform4fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glProgramUniform4fv' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4fvEXT: program with: location with: count with: value [

	<command: #glProgramUniform4fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glProgramUniform4fvEXT' (GLuint GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4i64ARB: program with: location with: x with: y with: z with: w [

	<command: #glProgramUniform4i64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64'>
	<arg: 'y' type: 'GLint64'>
	<arg: 'z' type: 'GLint64'>
	<arg: 'w' type: 'GLint64'>

	<apicall: void 'glProgramUniform4i64ARB' (GLuint GLint GLint64 GLint64 GLint64 GLint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4i64NV: program with: location with: x with: y with: z with: w [

	<command: #glProgramUniform4i64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>
	<arg: 'z' type: 'GLint64EXT'>
	<arg: 'w' type: 'GLint64EXT'>

	<apicall: void 'glProgramUniform4i64NV' (GLuint GLint GLint64EXT GLint64EXT GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4i64vARB: program with: location with: count with: value [

	<command: #glProgramUniform4i64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64*' size: 'count*4'>

	<apicall: void 'glProgramUniform4i64vARB' (GLuint GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4i64vNV: program with: location with: count with: value [

	<command: #glProgramUniform4i64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64EXT*' size: 'count*4'>

	<apicall: void 'glProgramUniform4i64vNV' (GLuint GLint GLsizei GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4i: program with: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glProgramUniform4i>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>
	<arg: 'v2' type: 'GLint'>
	<arg: 'v3' type: 'GLint'>

	<apicall: void 'glProgramUniform4i' (GLuint GLint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4iEXT: program with: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glProgramUniform4iEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>
	<arg: 'v2' type: 'GLint'>
	<arg: 'v3' type: 'GLint'>

	<apicall: void 'glProgramUniform4iEXT' (GLuint GLint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4iv: program with: location with: count with: value [

	<command: #glProgramUniform4iv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*4'>

	<apicall: void 'glProgramUniform4iv' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4ivEXT: program with: location with: count with: value [

	<command: #glProgramUniform4ivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*4'>

	<apicall: void 'glProgramUniform4ivEXT' (GLuint GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4ui64ARB: program with: location with: x with: y with: z with: w [

	<command: #glProgramUniform4ui64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64'>
	<arg: 'y' type: 'GLuint64'>
	<arg: 'z' type: 'GLuint64'>
	<arg: 'w' type: 'GLuint64'>

	<apicall: void 'glProgramUniform4ui64ARB' (GLuint GLint GLuint64 GLuint64 GLuint64 GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4ui64NV: program with: location with: x with: y with: z with: w [

	<command: #glProgramUniform4ui64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>
	<arg: 'z' type: 'GLuint64EXT'>
	<arg: 'w' type: 'GLuint64EXT'>

	<apicall: void 'glProgramUniform4ui64NV' (GLuint GLint GLuint64EXT GLuint64EXT GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4ui64vARB: program with: location with: count with: value [

	<command: #glProgramUniform4ui64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count*4'>

	<apicall: void 'glProgramUniform4ui64vARB' (GLuint GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4ui64vNV: program with: location with: count with: value [

	<command: #glProgramUniform4ui64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count*4'>

	<apicall: void 'glProgramUniform4ui64vNV' (GLuint GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4ui: program with: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glProgramUniform4ui>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>
	<arg: 'v2' type: 'GLuint'>
	<arg: 'v3' type: 'GLuint'>

	<apicall: void 'glProgramUniform4ui' (GLuint GLint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4uiEXT: program with: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glProgramUniform4uiEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>
	<arg: 'v2' type: 'GLuint'>
	<arg: 'v3' type: 'GLuint'>

	<apicall: void 'glProgramUniform4uiEXT' (GLuint GLint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4uiv: program with: location with: count with: value [

	<command: #glProgramUniform4uiv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*4'>

	<apicall: void 'glProgramUniform4uiv' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniform4uivEXT: program with: location with: count with: value [

	<command: #glProgramUniform4uivEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*4'>

	<apicall: void 'glProgramUniform4uivEXT' (GLuint GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformHandleui64ARB: program with: location with: value [

	<command: #glProgramUniformHandleui64ARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'value' type: 'GLuint64'>

	<apicall: void 'glProgramUniformHandleui64ARB' (GLuint GLint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformHandleui64IMG: program with: location with: value [

	<command: #glProgramUniformHandleui64IMG>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'value' type: 'GLuint64'>

	<apicall: void 'glProgramUniformHandleui64IMG' (GLuint GLint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformHandleui64NV: program with: location with: value [

	<command: #glProgramUniformHandleui64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'value' type: 'GLuint64'>

	<apicall: void 'glProgramUniformHandleui64NV' (GLuint GLint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformHandleui64vARB: program with: location with: count with: values [

	<command: #glProgramUniformHandleui64vARB>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'values' type: 'GLuint64*' size: 'count'>

	<apicall: void 'glProgramUniformHandleui64vARB' (GLuint GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformHandleui64vIMG: program with: location with: count with: values [

	<command: #glProgramUniformHandleui64vIMG>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'values' type: 'GLuint64*' size: 'count'>

	<apicall: void 'glProgramUniformHandleui64vIMG' (GLuint GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformHandleui64vNV: program with: location with: count with: values [

	<command: #glProgramUniformHandleui64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'values' type: 'GLuint64*' size: 'count'>

	<apicall: void 'glProgramUniformHandleui64vNV' (GLuint GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*4'>

	<apicall: void 'glProgramUniformMatrix2dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*4'>

	<apicall: void 'glProgramUniformMatrix2dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glProgramUniformMatrix2fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glProgramUniformMatrix2fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2x3dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2x3dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*6'>

	<apicall: void 'glProgramUniformMatrix2x3dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2x3dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2x3dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*6'>

	<apicall: void 'glProgramUniformMatrix2x3dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2x3fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2x3fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*6'>

	<apicall: void 'glProgramUniformMatrix2x3fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2x3fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2x3fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*6'>

	<apicall: void 'glProgramUniformMatrix2x3fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2x4dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2x4dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*8'>

	<apicall: void 'glProgramUniformMatrix2x4dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2x4dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2x4dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*8'>

	<apicall: void 'glProgramUniformMatrix2x4dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2x4fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2x4fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*8'>

	<apicall: void 'glProgramUniformMatrix2x4fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix2x4fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix2x4fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*8'>

	<apicall: void 'glProgramUniformMatrix2x4fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*9'>

	<apicall: void 'glProgramUniformMatrix3dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*9'>

	<apicall: void 'glProgramUniformMatrix3dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*9'>

	<apicall: void 'glProgramUniformMatrix3fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*9'>

	<apicall: void 'glProgramUniformMatrix3fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3x2dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3x2dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*6'>

	<apicall: void 'glProgramUniformMatrix3x2dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3x2dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3x2dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*6'>

	<apicall: void 'glProgramUniformMatrix3x2dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3x2fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3x2fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*6'>

	<apicall: void 'glProgramUniformMatrix3x2fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3x2fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3x2fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*6'>

	<apicall: void 'glProgramUniformMatrix3x2fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3x4dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3x4dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*12'>

	<apicall: void 'glProgramUniformMatrix3x4dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3x4dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3x4dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*12'>

	<apicall: void 'glProgramUniformMatrix3x4dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3x4fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3x4fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*12'>

	<apicall: void 'glProgramUniformMatrix3x4fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix3x4fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix3x4fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*12'>

	<apicall: void 'glProgramUniformMatrix3x4fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*16'>

	<apicall: void 'glProgramUniformMatrix4dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*16'>

	<apicall: void 'glProgramUniformMatrix4dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*16'>

	<apicall: void 'glProgramUniformMatrix4fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*16'>

	<apicall: void 'glProgramUniformMatrix4fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4x2dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4x2dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*8'>

	<apicall: void 'glProgramUniformMatrix4x2dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4x2dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4x2dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*8'>

	<apicall: void 'glProgramUniformMatrix4x2dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4x2fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4x2fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*8'>

	<apicall: void 'glProgramUniformMatrix4x2fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4x2fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4x2fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*8'>

	<apicall: void 'glProgramUniformMatrix4x2fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4x3dv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4x3dv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*12'>

	<apicall: void 'glProgramUniformMatrix4x3dv' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4x3dvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4x3dvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*12'>

	<apicall: void 'glProgramUniformMatrix4x3dvEXT' (GLuint GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4x3fv: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4x3fv>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*12'>

	<apicall: void 'glProgramUniformMatrix4x3fv' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformMatrix4x3fvEXT: program with: location with: count with: transpose with: value [

	<command: #glProgramUniformMatrix4x3fvEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*12'>

	<apicall: void 'glProgramUniformMatrix4x3fvEXT' (GLuint GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformui64NV: program with: location with: value [

	<command: #glProgramUniformui64NV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'value' type: 'GLuint64EXT'>

	<apicall: void 'glProgramUniformui64NV' (GLuint GLint GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programUniformui64vNV: program with: location with: count with: value [

	<command: #glProgramUniformui64vNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count'>

	<apicall: void 'glProgramUniformui64vNV' (GLuint GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> programVertexLimitNV: target with: limit [

	<command: #glProgramVertexLimitNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #ProgramTarget>
	<arg: 'limit' type: 'GLint'>

	<apicall: void 'glProgramVertexLimitNV' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> provokingVertex: mode [

	<command: #glProvokingVertex>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #VertexProvokingMode>

	<apicall: void 'glProvokingVertex' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> provokingVertexEXT: mode [

	<command: #glProvokingVertexEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #VertexProvokingMode>

	<apicall: void 'glProvokingVertexEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pushAttrib: mask [

	<command: #glPushAttrib>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield' group: #AttribMask>

	<apicall: void 'glPushAttrib' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pushClientAttrib: mask [

	<command: #glPushClientAttrib>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield' group: #ClientAttribMask>

	<apicall: void 'glPushClientAttrib' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pushClientAttribDefaultEXT: mask [

	<command: #glPushClientAttribDefaultEXT>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield' group: #ClientAttribMask>

	<apicall: void 'glPushClientAttribDefaultEXT' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pushDebugGroup: source with: id with: length with: message [

	<command: #glPushDebugGroup>
	<return: 'void'>
	<arg: 'source' type: 'GLenum' group: #DebugSource>
	<arg: 'id' type: 'GLuint'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'message' type: 'GLchar*' size: 'COMPSIZE(message,length)'>

	<apicall: void 'glPushDebugGroup' (GLenum GLuint GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pushDebugGroupKHR: source with: id with: length with: message [

	<command: #glPushDebugGroupKHR>
	<return: 'void'>
	<arg: 'source' type: 'GLenum' group: #DebugSource>
	<arg: 'id' type: 'GLuint'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'message' type: 'GLchar*'>

	<apicall: void 'glPushDebugGroupKHR' (GLenum GLuint GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pushGroupMarkerEXT: length with: marker [

	<command: #glPushGroupMarkerEXT>
	<return: 'void'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'marker' type: 'GLchar*'>

	<apicall: void 'glPushGroupMarkerEXT' (GLsizei GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pushMatrix [

	<command: #glPushMatrix>
	<return: 'void'>

	<apicall: void 'glPushMatrix' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> pushName: name [

	<command: #glPushName>
	<return: 'void'>
	<arg: 'name' type: 'GLuint' group: #SelectName>

	<apicall: void 'glPushName' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> queryCounter: id with: target [

	<command: #glQueryCounter>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #QueryCounterTarget>

	<apicall: void 'glQueryCounter' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> queryCounterEXT: id with: target [

	<command: #glQueryCounterEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #QueryCounterTarget>

	<apicall: void 'glQueryCounterEXT' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> queryMatrixxOES: mantissa with: exponent [

	<command: #glQueryMatrixxOES>
	<return: 'GLbitfield'>
	<arg: 'mantissa' type: 'GLfixed*' size: '16'>
	<arg: 'exponent' type: 'GLint*' size: '16'>

	<apicall: GLbitfield 'glQueryMatrixxOES' (GLfixed* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> queryObjectParameteruiAMD: target with: id with: pname with: param [

	<command: #glQueryObjectParameteruiAMD>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #QueryTarget>
	<arg: 'id' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'param' type: 'GLuint' group: #OcclusionQueryEventMaskAMD>

	<apicall: void 'glQueryObjectParameteruiAMD' (GLenum GLuint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> queryResourceNV: queryType with: tagId with: count with: buffer [

	<command: #glQueryResourceNV>
	<return: 'GLint'>
	<arg: 'queryType' type: 'GLenum'>
	<arg: 'tagId' type: 'GLint'>
	<arg: 'count' type: 'GLuint'>
	<arg: 'buffer' type: 'GLint*' size: 'count'>

	<apicall: GLint 'glQueryResourceNV' (GLenum GLint GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> queryResourceTagNV: tagId with: tagString [

	<command: #glQueryResourceTagNV>
	<return: 'void'>
	<arg: 'tagId' type: 'GLint'>
	<arg: 'tagString' type: 'GLchar*'>

	<apicall: void 'glQueryResourceTagNV' (GLint GLchar*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2d: x with: y [

	<command: #glRasterPos2d>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glRasterPos2d' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2dv: v [

	<command: #glRasterPos2dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glRasterPos2dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2f: x with: y [

	<command: #glRasterPos2f>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glRasterPos2f' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2fv: v [

	<command: #glRasterPos2fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glRasterPos2fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2i: x with: y [

	<command: #glRasterPos2i>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>

	<apicall: void 'glRasterPos2i' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2iv: v [

	<command: #glRasterPos2iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glRasterPos2iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2s: x with: y [

	<command: #glRasterPos2s>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>

	<apicall: void 'glRasterPos2s' (GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2sv: v [

	<command: #glRasterPos2sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glRasterPos2sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2xOES: x with: y [

	<command: #glRasterPos2xOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>

	<apicall: void 'glRasterPos2xOES' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos2xvOES: coords [

	<command: #glRasterPos2xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '2'>

	<apicall: void 'glRasterPos2xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3d: x with: y with: z [

	<command: #glRasterPos3d>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>
	<arg: 'z' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glRasterPos3d' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3dv: v [

	<command: #glRasterPos3dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glRasterPos3dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3f: x with: y with: z [

	<command: #glRasterPos3f>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>
	<arg: 'z' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glRasterPos3f' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3fv: v [

	<command: #glRasterPos3fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glRasterPos3fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3i: x with: y with: z [

	<command: #glRasterPos3i>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>
	<arg: 'z' type: 'GLint' group: #CoordI>

	<apicall: void 'glRasterPos3i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3iv: v [

	<command: #glRasterPos3iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '3'>

	<apicall: void 'glRasterPos3iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3s: x with: y with: z [

	<command: #glRasterPos3s>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>
	<arg: 'z' type: 'GLshort' group: #CoordS>

	<apicall: void 'glRasterPos3s' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3sv: v [

	<command: #glRasterPos3sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '3'>

	<apicall: void 'glRasterPos3sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3xOES: x with: y with: z [

	<command: #glRasterPos3xOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>

	<apicall: void 'glRasterPos3xOES' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos3xvOES: coords [

	<command: #glRasterPos3xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '3'>

	<apicall: void 'glRasterPos3xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4d: x with: y with: z with: w [

	<command: #glRasterPos4d>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>
	<arg: 'z' type: 'GLdouble' group: #CoordD>
	<arg: 'w' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glRasterPos4d' (GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4dv: v [

	<command: #glRasterPos4dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '4'>

	<apicall: void 'glRasterPos4dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4f: x with: y with: z with: w [

	<command: #glRasterPos4f>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>
	<arg: 'z' type: 'GLfloat' group: #CoordF>
	<arg: 'w' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glRasterPos4f' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4fv: v [

	<command: #glRasterPos4fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '4'>

	<apicall: void 'glRasterPos4fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4i: x with: y with: z with: w [

	<command: #glRasterPos4i>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>
	<arg: 'z' type: 'GLint' group: #CoordI>
	<arg: 'w' type: 'GLint' group: #CoordI>

	<apicall: void 'glRasterPos4i' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4iv: v [

	<command: #glRasterPos4iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '4'>

	<apicall: void 'glRasterPos4iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4s: x with: y with: z with: w [

	<command: #glRasterPos4s>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>
	<arg: 'z' type: 'GLshort' group: #CoordS>
	<arg: 'w' type: 'GLshort' group: #CoordS>

	<apicall: void 'glRasterPos4s' (GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4sv: v [

	<command: #glRasterPos4sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '4'>

	<apicall: void 'glRasterPos4sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4xOES: x with: y with: z with: w [

	<command: #glRasterPos4xOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>
	<arg: 'w' type: 'GLfixed'>

	<apicall: void 'glRasterPos4xOES' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterPos4xvOES: coords [

	<command: #glRasterPos4xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '4'>

	<apicall: void 'glRasterPos4xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rasterSamplesEXT: samples with: fixedsamplelocations [

	<command: #glRasterSamplesEXT>
	<return: 'void'>
	<arg: 'samples' type: 'GLuint'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glRasterSamplesEXT' (GLuint GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readBuffer: src [

	<command: #glReadBuffer>
	<return: 'void'>
	<arg: 'src' type: 'GLenum' group: #ReadBufferMode>

	<apicall: void 'glReadBuffer' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readBufferIndexedEXT: src with: index [

	<command: #glReadBufferIndexedEXT>
	<return: 'void'>
	<arg: 'src' type: 'GLenum' group: #ReadBufferMode>
	<arg: 'index' type: 'GLint'>

	<apicall: void 'glReadBufferIndexedEXT' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readBufferNV: mode [

	<command: #glReadBufferNV>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum'>

	<apicall: void 'glReadBufferNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readInstrumentsSGIX: marker [

	<command: #glReadInstrumentsSGIX>
	<return: 'void'>
	<arg: 'marker' type: 'GLint'>

	<apicall: void 'glReadInstrumentsSGIX' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readPixels: x with: y with: width with: height with: format with: type with: pixels [

	<command: #glReadPixels>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glReadPixels' (GLint GLint GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readnPixels: x with: y with: width with: height with: format with: type with: bufSize with: data [

	<command: #glReadnPixels>
	<return: 'void'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' size: 'bufSize'>

	<apicall: void 'glReadnPixels' (GLint GLint GLsizei GLsizei GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readnPixelsARB: x with: y with: width with: height with: format with: type with: bufSize with: data [

	<command: #glReadnPixelsARB>
	<return: 'void'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' size: 'bufSize'>

	<apicall: void 'glReadnPixelsARB' (GLint GLint GLsizei GLsizei GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readnPixelsEXT: x with: y with: width with: height with: format with: type with: bufSize with: data [

	<command: #glReadnPixelsEXT>
	<return: 'void'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' size: 'bufSize'>

	<apicall: void 'glReadnPixelsEXT' (GLint GLint GLsizei GLsizei GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> readnPixelsKHR: x with: y with: width with: height with: format with: type with: bufSize with: data [

	<command: #glReadnPixelsKHR>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'bufSize' type: 'GLsizei'>
	<arg: 'data' type: 'void*' size: 'bufSize'>

	<apicall: void 'glReadnPixelsKHR' (GLint GLint GLsizei GLsizei GLenum GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rectd: x1 with: y1 with: x2 with: y2 [

	<command: #glRectd>
	<return: 'void'>
	<arg: 'x1' type: 'GLdouble' group: #CoordD>
	<arg: 'y1' type: 'GLdouble' group: #CoordD>
	<arg: 'x2' type: 'GLdouble' group: #CoordD>
	<arg: 'y2' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glRectd' (GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rectdv: v1 with: v2 [

	<command: #glRectdv>
	<return: 'void'>
	<arg: 'v1' type: 'GLdouble*' group: #CoordD size: '2'>
	<arg: 'v2' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glRectdv' (GLdouble* GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rectf: x1 with: y1 with: x2 with: y2 [

	<command: #glRectf>
	<return: 'void'>
	<arg: 'x1' type: 'GLfloat' group: #CoordF>
	<arg: 'y1' type: 'GLfloat' group: #CoordF>
	<arg: 'x2' type: 'GLfloat' group: #CoordF>
	<arg: 'y2' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glRectf' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rectfv: v1 with: v2 [

	<command: #glRectfv>
	<return: 'void'>
	<arg: 'v1' type: 'GLfloat*' group: #CoordF size: '2'>
	<arg: 'v2' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glRectfv' (GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> recti: x1 with: y1 with: x2 with: y2 [

	<command: #glRecti>
	<return: 'void'>
	<arg: 'x1' type: 'GLint' group: #CoordI>
	<arg: 'y1' type: 'GLint' group: #CoordI>
	<arg: 'x2' type: 'GLint' group: #CoordI>
	<arg: 'y2' type: 'GLint' group: #CoordI>

	<apicall: void 'glRecti' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rectiv: v1 with: v2 [

	<command: #glRectiv>
	<return: 'void'>
	<arg: 'v1' type: 'GLint*' group: #CoordI size: '2'>
	<arg: 'v2' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glRectiv' (GLint* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rects: x1 with: y1 with: x2 with: y2 [

	<command: #glRects>
	<return: 'void'>
	<arg: 'x1' type: 'GLshort' group: #CoordS>
	<arg: 'y1' type: 'GLshort' group: #CoordS>
	<arg: 'x2' type: 'GLshort' group: #CoordS>
	<arg: 'y2' type: 'GLshort' group: #CoordS>

	<apicall: void 'glRects' (GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rectsv: v1 with: v2 [

	<command: #glRectsv>
	<return: 'void'>
	<arg: 'v1' type: 'GLshort*' group: #CoordS size: '2'>
	<arg: 'v2' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glRectsv' (GLshort* GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rectxOES: x1 with: y1 with: x2 with: y2 [

	<command: #glRectxOES>
	<return: 'void'>
	<arg: 'x1' type: 'GLfixed'>
	<arg: 'y1' type: 'GLfixed'>
	<arg: 'x2' type: 'GLfixed'>
	<arg: 'y2' type: 'GLfixed'>

	<apicall: void 'glRectxOES' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rectxvOES: v1 with: v2 [

	<command: #glRectxvOES>
	<return: 'void'>
	<arg: 'v1' type: 'GLfixed*' size: '2'>
	<arg: 'v2' type: 'GLfixed*' size: '2'>

	<apicall: void 'glRectxvOES' (GLfixed* GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> referencePlaneSGIX: equation [

	<command: #glReferencePlaneSGIX>
	<return: 'void'>
	<arg: 'equation' type: 'GLdouble*' size: '4'>

	<apicall: void 'glReferencePlaneSGIX' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> releaseKeyedMutexWin32EXT: memory with: key [

	<command: #glReleaseKeyedMutexWin32EXT>
	<return: 'GLboolean'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'key' type: 'GLuint64'>

	<apicall: GLboolean 'glReleaseKeyedMutexWin32EXT' (GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> releaseShaderCompiler [

	<command: #glReleaseShaderCompiler>
	<return: 'void'>

	<apicall: void 'glReleaseShaderCompiler' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderGpuMaskNV: mask [

	<command: #glRenderGpuMaskNV>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield'>

	<apicall: void 'glRenderGpuMaskNV' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderMode: mode [

	<command: #glRenderMode>
	<return: 'GLint'>
	<arg: 'mode' type: 'GLenum' group: #RenderingMode>

	<apicall: GLint 'glRenderMode' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorage: target with: internalformat with: width with: height [

	<command: #glRenderbufferStorage>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorage' (GLenum GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageEXT: target with: internalformat with: width with: height [

	<command: #glRenderbufferStorageEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageEXT' (GLenum GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageMultisample: target with: samples with: internalformat with: width with: height [

	<command: #glRenderbufferStorageMultisample>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageMultisample' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageMultisampleANGLE: target with: samples with: internalformat with: width with: height [

	<command: #glRenderbufferStorageMultisampleANGLE>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageMultisampleANGLE' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageMultisampleAPPLE: target with: samples with: internalformat with: width with: height [

	<command: #glRenderbufferStorageMultisampleAPPLE>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageMultisampleAPPLE' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageMultisampleAdvancedAMD: target with: samples with: storageSamples with: internalformat with: width with: height [

	<command: #glRenderbufferStorageMultisampleAdvancedAMD>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'storageSamples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageMultisampleAdvancedAMD' (GLenum GLsizei GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageMultisampleCoverageNV: target with: coverageSamples with: colorSamples with: internalformat with: width with: height [

	<command: #glRenderbufferStorageMultisampleCoverageNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'coverageSamples' type: 'GLsizei'>
	<arg: 'colorSamples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageMultisampleCoverageNV' (GLenum GLsizei GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageMultisampleEXT: target with: samples with: internalformat with: width with: height [

	<command: #glRenderbufferStorageMultisampleEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageMultisampleEXT' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageMultisampleIMG: target with: samples with: internalformat with: width with: height [

	<command: #glRenderbufferStorageMultisampleIMG>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageMultisampleIMG' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageMultisampleNV: target with: samples with: internalformat with: width with: height [

	<command: #glRenderbufferStorageMultisampleNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageMultisampleNV' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> renderbufferStorageOES: target with: internalformat with: width with: height [

	<command: #glRenderbufferStorageOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #RenderbufferTarget>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glRenderbufferStorageOES' (GLenum GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodePointerSUN: type with: stride with: pointer [

	<command: #glReplacementCodePointerSUN>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ReplacementCodeTypeSUN>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void**' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glReplacementCodePointerSUN' (GLenum GLsizei void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeubSUN: code [

	<command: #glReplacementCodeubSUN>
	<return: 'void'>
	<arg: 'code' type: 'GLubyte'>

	<apicall: void 'glReplacementCodeubSUN' (GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeubvSUN: code [

	<command: #glReplacementCodeubvSUN>
	<return: 'void'>
	<arg: 'code' type: 'GLubyte*' size: 'COMPSIZE()'>

	<apicall: void 'glReplacementCodeubvSUN' (GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiColor3fVertex3fSUN: rc with: r with: g with: b with: x with: y with: z [

	<command: #glReplacementCodeuiColor3fVertex3fSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint' group: #ReplacementCodeSUN>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'g' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glReplacementCodeuiColor3fVertex3fSUN' (GLuint GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiColor3fVertex3fvSUN: rc with: c with: v [

	<command: #glReplacementCodeuiColor3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint*' group: #ReplacementCodeSUN size: '1'>
	<arg: 'c' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glReplacementCodeuiColor3fVertex3fvSUN' (GLuint* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiColor4fNormal3fVertex3fSUN: rc with: r with: g with: b with: a with: nx with: ny with: nz with: x with: y with: z [

	<command: #glReplacementCodeuiColor4fNormal3fVertex3fSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint' group: #ReplacementCodeSUN>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'g' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 'a' type: 'GLfloat'>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glReplacementCodeuiColor4fNormal3fVertex3fSUN' (GLuint GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiColor4fNormal3fVertex3fvSUN: rc with: c with: n with: v [

	<command: #glReplacementCodeuiColor4fNormal3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint*' group: #ReplacementCodeSUN size: '1'>
	<arg: 'c' type: 'GLfloat*' size: '4'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glReplacementCodeuiColor4fNormal3fVertex3fvSUN' (GLuint* GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiColor4ubVertex3fSUN: rc with: r with: g with: b with: a with: x with: y with: z [

	<command: #glReplacementCodeuiColor4ubVertex3fSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint' group: #ReplacementCodeSUN>
	<arg: 'r' type: 'GLubyte'>
	<arg: 'g' type: 'GLubyte'>
	<arg: 'b' type: 'GLubyte'>
	<arg: 'a' type: 'GLubyte'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glReplacementCodeuiColor4ubVertex3fSUN' (GLuint GLubyte GLubyte GLubyte GLubyte GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiColor4ubVertex3fvSUN: rc with: c with: v [

	<command: #glReplacementCodeuiColor4ubVertex3fvSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint*' group: #ReplacementCodeSUN size: '1'>
	<arg: 'c' type: 'GLubyte*' size: '4'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glReplacementCodeuiColor4ubVertex3fvSUN' (GLuint* GLubyte* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiNormal3fVertex3fSUN: rc with: nx with: ny with: nz with: x with: y with: z [

	<command: #glReplacementCodeuiNormal3fVertex3fSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint' group: #ReplacementCodeSUN>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glReplacementCodeuiNormal3fVertex3fSUN' (GLuint GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiNormal3fVertex3fvSUN: rc with: n with: v [

	<command: #glReplacementCodeuiNormal3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint*' group: #ReplacementCodeSUN size: '1'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glReplacementCodeuiNormal3fVertex3fvSUN' (GLuint* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiSUN: code [

	<command: #glReplacementCodeuiSUN>
	<return: 'void'>
	<arg: 'code' type: 'GLuint'>

	<apicall: void 'glReplacementCodeuiSUN' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN: rc with: s with: t with: r with: g with: b with: a with: nx with: ny with: nz with: x with: y with: z [

	<command: #glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint' group: #ReplacementCodeSUN>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'g' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 'a' type: 'GLfloat'>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN' (GLuint GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN: rc with: tc with: c with: n with: v [

	<command: #glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint*' group: #ReplacementCodeSUN size: '1'>
	<arg: 'tc' type: 'GLfloat*' size: '2'>
	<arg: 'c' type: 'GLfloat*' size: '4'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN' (GLuint* GLfloat* GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiTexCoord2fNormal3fVertex3fSUN: rc with: s with: t with: nx with: ny with: nz with: x with: y with: z [

	<command: #glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint' group: #ReplacementCodeSUN>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN' (GLuint GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiTexCoord2fNormal3fVertex3fvSUN: rc with: tc with: n with: v [

	<command: #glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint*' group: #ReplacementCodeSUN size: '1'>
	<arg: 'tc' type: 'GLfloat*' size: '2'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN' (GLuint* GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiTexCoord2fVertex3fSUN: rc with: s with: t with: x with: y with: z [

	<command: #glReplacementCodeuiTexCoord2fVertex3fSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint' group: #ReplacementCodeSUN>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glReplacementCodeuiTexCoord2fVertex3fSUN' (GLuint GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiTexCoord2fVertex3fvSUN: rc with: tc with: v [

	<command: #glReplacementCodeuiTexCoord2fVertex3fvSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint*' group: #ReplacementCodeSUN size: '1'>
	<arg: 'tc' type: 'GLfloat*' size: '2'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glReplacementCodeuiTexCoord2fVertex3fvSUN' (GLuint* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiVertex3fSUN: rc with: x with: y with: z [

	<command: #glReplacementCodeuiVertex3fSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint' group: #ReplacementCodeSUN>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glReplacementCodeuiVertex3fSUN' (GLuint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuiVertex3fvSUN: rc with: v [

	<command: #glReplacementCodeuiVertex3fvSUN>
	<return: 'void'>
	<arg: 'rc' type: 'GLuint*' group: #ReplacementCodeSUN size: '1'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glReplacementCodeuiVertex3fvSUN' (GLuint* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeuivSUN: code [

	<command: #glReplacementCodeuivSUN>
	<return: 'void'>
	<arg: 'code' type: 'GLuint*' size: 'COMPSIZE()'>

	<apicall: void 'glReplacementCodeuivSUN' (GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeusSUN: code [

	<command: #glReplacementCodeusSUN>
	<return: 'void'>
	<arg: 'code' type: 'GLushort'>

	<apicall: void 'glReplacementCodeusSUN' (GLushort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> replacementCodeusvSUN: code [

	<command: #glReplacementCodeusvSUN>
	<return: 'void'>
	<arg: 'code' type: 'GLushort*' size: 'COMPSIZE()'>

	<apicall: void 'glReplacementCodeusvSUN' (GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> requestResidentProgramsNV: n with: programs [

	<command: #glRequestResidentProgramsNV>
	<return: 'void'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'programs' type: 'GLuint*' size: 'n'>

	<apicall: void 'glRequestResidentProgramsNV' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resetHistogram: target [

	<command: #glResetHistogram>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>

	<apicall: void 'glResetHistogram' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resetHistogramEXT: target [

	<command: #glResetHistogramEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #HistogramTargetEXT>

	<apicall: void 'glResetHistogramEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resetMemoryObjectParameterNV: memory with: pname [

	<command: #glResetMemoryObjectParameterNV>
	<return: 'void'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>

	<apicall: void 'glResetMemoryObjectParameterNV' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resetMinmax: target [

	<command: #glResetMinmax>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>

	<apicall: void 'glResetMinmax' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resetMinmaxEXT: target [

	<command: #glResetMinmaxEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #MinmaxTargetEXT>

	<apicall: void 'glResetMinmaxEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resizeBuffersMESA [

	<command: #glResizeBuffersMESA>
	<return: 'void'>

	<apicall: void 'glResizeBuffersMESA' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resolveDepthValuesNV [

	<command: #glResolveDepthValuesNV>
	<return: 'void'>

	<apicall: void 'glResolveDepthValuesNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resolveMultisampleFramebufferAPPLE [

	<command: #glResolveMultisampleFramebufferAPPLE>
	<return: 'void'>

	<apicall: void 'glResolveMultisampleFramebufferAPPLE' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resumeTransformFeedback [

	<command: #glResumeTransformFeedback>
	<return: 'void'>

	<apicall: void 'glResumeTransformFeedback' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> resumeTransformFeedbackNV [

	<command: #glResumeTransformFeedbackNV>
	<return: 'void'>

	<apicall: void 'glResumeTransformFeedbackNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rotated: angle with: x with: y with: z [

	<command: #glRotated>
	<return: 'void'>
	<arg: 'angle' type: 'GLdouble'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glRotated' (GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rotatef: angle with: x with: y with: z [

	<command: #glRotatef>
	<return: 'void'>
	<arg: 'angle' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glRotatef' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rotatex: angle with: x with: y with: z [

	<command: #glRotatex>
	<return: 'void'>
	<arg: 'angle' type: 'GLfixed'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>

	<apicall: void 'glRotatex' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> rotatexOES: angle with: x with: y with: z [

	<command: #glRotatexOES>
	<return: 'void'>
	<arg: 'angle' type: 'GLfixed'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>

	<apicall: void 'glRotatexOES' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleCoverage: value with: invert [

	<command: #glSampleCoverage>
	<return: 'void'>
	<arg: 'value' type: 'GLfloat'>
	<arg: 'invert' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glSampleCoverage' (GLfloat GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleCoverageARB: value with: invert [

	<command: #glSampleCoverageARB>
	<return: 'void'>
	<arg: 'value' type: 'GLfloat'>
	<arg: 'invert' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glSampleCoverageARB' (GLfloat GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleCoveragex: value with: invert [

	<command: #glSampleCoveragex>
	<return: 'void'>
	<arg: 'value' type: 'GLclampx'>
	<arg: 'invert' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glSampleCoveragex' (GLclampx GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleCoveragexOES: value with: invert [

	<command: #glSampleCoveragexOES>
	<return: 'void'>
	<arg: 'value' type: 'GLclampx'>
	<arg: 'invert' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glSampleCoveragexOES' (GLclampx GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleMapATI: dst with: interp with: swizzle [

	<command: #glSampleMapATI>
	<return: 'void'>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'interp' type: 'GLuint'>
	<arg: 'swizzle' type: 'GLenum' group: #SwizzleOpATI>

	<apicall: void 'glSampleMapATI' (GLuint GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleMaskEXT: value with: invert [

	<command: #glSampleMaskEXT>
	<return: 'void'>
	<arg: 'value' type: 'GLclampf' group: #ClampedFloat32>
	<arg: 'invert' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glSampleMaskEXT' (GLclampf GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleMaskIndexedNV: index with: mask [

	<command: #glSampleMaskIndexedNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'mask' type: 'GLbitfield' group: #SampleMaskNV>

	<apicall: void 'glSampleMaskIndexedNV' (GLuint GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleMaskSGIS: value with: invert [

	<command: #glSampleMaskSGIS>
	<return: 'void'>
	<arg: 'value' type: 'GLclampf' group: #ClampedFloat32>
	<arg: 'invert' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glSampleMaskSGIS' (GLclampf GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sampleMaski: maskNumber with: mask [

	<command: #glSampleMaski>
	<return: 'void'>
	<arg: 'maskNumber' type: 'GLuint'>
	<arg: 'mask' type: 'GLbitfield'>

	<apicall: void 'glSampleMaski' (GLuint GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplePatternEXT: pattern [

	<command: #glSamplePatternEXT>
	<return: 'void'>
	<arg: 'pattern' type: 'GLenum' group: #SamplePatternEXT>

	<apicall: void 'glSamplePatternEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplePatternSGIS: pattern [

	<command: #glSamplePatternSGIS>
	<return: 'void'>
	<arg: 'pattern' type: 'GLenum' group: #SamplePatternSGIS>

	<apicall: void 'glSamplePatternSGIS' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameterIiv: sampler with: pname with: param [

	<command: #glSamplerParameterIiv>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'param' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glSamplerParameterIiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameterIivEXT: sampler with: pname with: param [

	<command: #glSamplerParameterIivEXT>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'param' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glSamplerParameterIivEXT' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameterIivOES: sampler with: pname with: param [

	<command: #glSamplerParameterIivOES>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'param' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glSamplerParameterIivOES' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameterIuiv: sampler with: pname with: param [

	<command: #glSamplerParameterIuiv>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'param' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glSamplerParameterIuiv' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameterIuivEXT: sampler with: pname with: param [

	<command: #glSamplerParameterIuivEXT>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'param' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glSamplerParameterIuivEXT' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameterIuivOES: sampler with: pname with: param [

	<command: #glSamplerParameterIuivOES>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'param' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glSamplerParameterIuivOES' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameterf: sampler with: pname with: param [

	<command: #glSamplerParameterf>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterF>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glSamplerParameterf' (GLuint GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameterfv: sampler with: pname with: param [

	<command: #glSamplerParameterfv>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterF>
	<arg: 'param' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glSamplerParameterfv' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameteri: sampler with: pname with: param [

	<command: #glSamplerParameteri>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glSamplerParameteri' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> samplerParameteriv: sampler with: pname with: param [

	<command: #glSamplerParameteriv>
	<return: 'void'>
	<arg: 'sampler' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SamplerParameterI>
	<arg: 'param' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glSamplerParameteriv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scaled: x with: y with: z [

	<command: #glScaled>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glScaled' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scalef: x with: y with: z [

	<command: #glScalef>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glScalef' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scalex: x with: y with: z [

	<command: #glScalex>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>

	<apicall: void 'glScalex' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scalexOES: x with: y with: z [

	<command: #glScalexOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>

	<apicall: void 'glScalexOES' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissor: x with: y with: width with: height [

	<command: #glScissor>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glScissor' (GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorArrayv: first with: count with: v [

	<command: #glScissorArrayv>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLint*' size: 'COMPSIZE(count)'>

	<apicall: void 'glScissorArrayv' (GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorArrayvNV: first with: count with: v [

	<command: #glScissorArrayvNV>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLint*' size: 'COMPSIZE(count)'>

	<apicall: void 'glScissorArrayvNV' (GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorArrayvOES: first with: count with: v [

	<command: #glScissorArrayvOES>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLint*' size: 'COMPSIZE(count)'>

	<apicall: void 'glScissorArrayvOES' (GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorExclusiveArrayvNV: first with: count with: v [

	<command: #glScissorExclusiveArrayvNV>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLint*' size: 'COMPSIZE(count)'>

	<apicall: void 'glScissorExclusiveArrayvNV' (GLuint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorExclusiveNV: x with: y with: width with: height [

	<command: #glScissorExclusiveNV>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glScissorExclusiveNV' (GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorIndexed: index with: left with: bottom with: width with: height [

	<command: #glScissorIndexed>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'left' type: 'GLint'>
	<arg: 'bottom' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glScissorIndexed' (GLuint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorIndexedNV: index with: left with: bottom with: width with: height [

	<command: #glScissorIndexedNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'left' type: 'GLint'>
	<arg: 'bottom' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glScissorIndexedNV' (GLuint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorIndexedOES: index with: left with: bottom with: width with: height [

	<command: #glScissorIndexedOES>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'left' type: 'GLint'>
	<arg: 'bottom' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glScissorIndexedOES' (GLuint GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorIndexedv: index with: v [

	<command: #glScissorIndexedv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glScissorIndexedv' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorIndexedvNV: index with: v [

	<command: #glScissorIndexedvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glScissorIndexedvNV' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> scissorIndexedvOES: index with: v [

	<command: #glScissorIndexedvOES>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glScissorIndexedvOES' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3b: red with: green with: blue [

	<command: #glSecondaryColor3b>
	<return: 'void'>
	<arg: 'red' type: 'GLbyte' group: #ColorB>
	<arg: 'green' type: 'GLbyte' group: #ColorB>
	<arg: 'blue' type: 'GLbyte' group: #ColorB>

	<apicall: void 'glSecondaryColor3b' (GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3bEXT: red with: green with: blue [

	<command: #glSecondaryColor3bEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLbyte' group: #ColorB>
	<arg: 'green' type: 'GLbyte' group: #ColorB>
	<arg: 'blue' type: 'GLbyte' group: #ColorB>

	<apicall: void 'glSecondaryColor3bEXT' (GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3bv: v [

	<command: #glSecondaryColor3bv>
	<return: 'void'>
	<arg: 'v' type: 'GLbyte*' group: #ColorB size: '3'>

	<apicall: void 'glSecondaryColor3bv' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3bvEXT: v [

	<command: #glSecondaryColor3bvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLbyte*' group: #ColorB size: '3'>

	<apicall: void 'glSecondaryColor3bvEXT' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3d: red with: green with: blue [

	<command: #glSecondaryColor3d>
	<return: 'void'>
	<arg: 'red' type: 'GLdouble' group: #ColorD>
	<arg: 'green' type: 'GLdouble' group: #ColorD>
	<arg: 'blue' type: 'GLdouble' group: #ColorD>

	<apicall: void 'glSecondaryColor3d' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3dEXT: red with: green with: blue [

	<command: #glSecondaryColor3dEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLdouble' group: #ColorD>
	<arg: 'green' type: 'GLdouble' group: #ColorD>
	<arg: 'blue' type: 'GLdouble' group: #ColorD>

	<apicall: void 'glSecondaryColor3dEXT' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3dv: v [

	<command: #glSecondaryColor3dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #ColorD size: '3'>

	<apicall: void 'glSecondaryColor3dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3dvEXT: v [

	<command: #glSecondaryColor3dvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #ColorD size: '3'>

	<apicall: void 'glSecondaryColor3dvEXT' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3f: red with: green with: blue [

	<command: #glSecondaryColor3f>
	<return: 'void'>
	<arg: 'red' type: 'GLfloat' group: #ColorF>
	<arg: 'green' type: 'GLfloat' group: #ColorF>
	<arg: 'blue' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glSecondaryColor3f' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3fEXT: red with: green with: blue [

	<command: #glSecondaryColor3fEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLfloat' group: #ColorF>
	<arg: 'green' type: 'GLfloat' group: #ColorF>
	<arg: 'blue' type: 'GLfloat' group: #ColorF>

	<apicall: void 'glSecondaryColor3fEXT' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3fv: v [

	<command: #glSecondaryColor3fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #ColorF size: '3'>

	<apicall: void 'glSecondaryColor3fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3fvEXT: v [

	<command: #glSecondaryColor3fvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #ColorF size: '3'>

	<apicall: void 'glSecondaryColor3fvEXT' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3hNV: red with: green with: blue [

	<command: #glSecondaryColor3hNV>
	<return: 'void'>
	<arg: 'red' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'green' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'blue' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glSecondaryColor3hNV' (GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3hvNV: v [

	<command: #glSecondaryColor3hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '3'>

	<apicall: void 'glSecondaryColor3hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3i: red with: green with: blue [

	<command: #glSecondaryColor3i>
	<return: 'void'>
	<arg: 'red' type: 'GLint' group: #ColorI>
	<arg: 'green' type: 'GLint' group: #ColorI>
	<arg: 'blue' type: 'GLint' group: #ColorI>

	<apicall: void 'glSecondaryColor3i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3iEXT: red with: green with: blue [

	<command: #glSecondaryColor3iEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLint' group: #ColorI>
	<arg: 'green' type: 'GLint' group: #ColorI>
	<arg: 'blue' type: 'GLint' group: #ColorI>

	<apicall: void 'glSecondaryColor3iEXT' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3iv: v [

	<command: #glSecondaryColor3iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #ColorI size: '3'>

	<apicall: void 'glSecondaryColor3iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3ivEXT: v [

	<command: #glSecondaryColor3ivEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #ColorI size: '3'>

	<apicall: void 'glSecondaryColor3ivEXT' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3s: red with: green with: blue [

	<command: #glSecondaryColor3s>
	<return: 'void'>
	<arg: 'red' type: 'GLshort' group: #ColorS>
	<arg: 'green' type: 'GLshort' group: #ColorS>
	<arg: 'blue' type: 'GLshort' group: #ColorS>

	<apicall: void 'glSecondaryColor3s' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3sEXT: red with: green with: blue [

	<command: #glSecondaryColor3sEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLshort' group: #ColorS>
	<arg: 'green' type: 'GLshort' group: #ColorS>
	<arg: 'blue' type: 'GLshort' group: #ColorS>

	<apicall: void 'glSecondaryColor3sEXT' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3sv: v [

	<command: #glSecondaryColor3sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #ColorS size: '3'>

	<apicall: void 'glSecondaryColor3sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3svEXT: v [

	<command: #glSecondaryColor3svEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #ColorS size: '3'>

	<apicall: void 'glSecondaryColor3svEXT' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3ub: red with: green with: blue [

	<command: #glSecondaryColor3ub>
	<return: 'void'>
	<arg: 'red' type: 'GLubyte' group: #ColorUB>
	<arg: 'green' type: 'GLubyte' group: #ColorUB>
	<arg: 'blue' type: 'GLubyte' group: #ColorUB>

	<apicall: void 'glSecondaryColor3ub' (GLubyte GLubyte GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3ubEXT: red with: green with: blue [

	<command: #glSecondaryColor3ubEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLubyte' group: #ColorUB>
	<arg: 'green' type: 'GLubyte' group: #ColorUB>
	<arg: 'blue' type: 'GLubyte' group: #ColorUB>

	<apicall: void 'glSecondaryColor3ubEXT' (GLubyte GLubyte GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3ubv: v [

	<command: #glSecondaryColor3ubv>
	<return: 'void'>
	<arg: 'v' type: 'GLubyte*' group: #ColorUB size: '3'>

	<apicall: void 'glSecondaryColor3ubv' (GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3ubvEXT: v [

	<command: #glSecondaryColor3ubvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLubyte*' group: #ColorUB size: '3'>

	<apicall: void 'glSecondaryColor3ubvEXT' (GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3ui: red with: green with: blue [

	<command: #glSecondaryColor3ui>
	<return: 'void'>
	<arg: 'red' type: 'GLuint' group: #ColorUI>
	<arg: 'green' type: 'GLuint' group: #ColorUI>
	<arg: 'blue' type: 'GLuint' group: #ColorUI>

	<apicall: void 'glSecondaryColor3ui' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3uiEXT: red with: green with: blue [

	<command: #glSecondaryColor3uiEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLuint' group: #ColorUI>
	<arg: 'green' type: 'GLuint' group: #ColorUI>
	<arg: 'blue' type: 'GLuint' group: #ColorUI>

	<apicall: void 'glSecondaryColor3uiEXT' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3uiv: v [

	<command: #glSecondaryColor3uiv>
	<return: 'void'>
	<arg: 'v' type: 'GLuint*' group: #ColorUI size: '3'>

	<apicall: void 'glSecondaryColor3uiv' (GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3uivEXT: v [

	<command: #glSecondaryColor3uivEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLuint*' group: #ColorUI size: '3'>

	<apicall: void 'glSecondaryColor3uivEXT' (GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3us: red with: green with: blue [

	<command: #glSecondaryColor3us>
	<return: 'void'>
	<arg: 'red' type: 'GLushort' group: #ColorUS>
	<arg: 'green' type: 'GLushort' group: #ColorUS>
	<arg: 'blue' type: 'GLushort' group: #ColorUS>

	<apicall: void 'glSecondaryColor3us' (GLushort GLushort GLushort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3usEXT: red with: green with: blue [

	<command: #glSecondaryColor3usEXT>
	<return: 'void'>
	<arg: 'red' type: 'GLushort' group: #ColorUS>
	<arg: 'green' type: 'GLushort' group: #ColorUS>
	<arg: 'blue' type: 'GLushort' group: #ColorUS>

	<apicall: void 'glSecondaryColor3usEXT' (GLushort GLushort GLushort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3usv: v [

	<command: #glSecondaryColor3usv>
	<return: 'void'>
	<arg: 'v' type: 'GLushort*' group: #ColorUS size: '3'>

	<apicall: void 'glSecondaryColor3usv' (GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColor3usvEXT: v [

	<command: #glSecondaryColor3usvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLushort*' group: #ColorUS size: '3'>

	<apicall: void 'glSecondaryColor3usvEXT' (GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColorFormatNV: size with: type with: stride [

	<command: #glSecondaryColorFormatNV>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glSecondaryColorFormatNV' (GLint GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColorP3ui: type with: color [

	<command: #glSecondaryColorP3ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'color' type: 'GLuint'>

	<apicall: void 'glSecondaryColorP3ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColorP3uiv: type with: color [

	<command: #glSecondaryColorP3uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'color' type: 'GLuint*' size: '1'>

	<apicall: void 'glSecondaryColorP3uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColorPointer: size with: type with: stride with: pointer [

	<command: #glSecondaryColorPointer>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glSecondaryColorPointer' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColorPointerEXT: size with: type with: stride with: pointer [

	<command: #glSecondaryColorPointerEXT>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glSecondaryColorPointerEXT' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> secondaryColorPointerListIBM: size with: type with: stride with: pointer with: ptrstride [

	<command: #glSecondaryColorPointerListIBM>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #SecondaryColorPointerTypeIBM>
	<arg: 'stride' type: 'GLint'>
	<arg: 'pointer' type: 'void**' size: 'COMPSIZE(size,type,stride)'>
	<arg: 'ptrstride' type: 'GLint'>

	<apicall: void 'glSecondaryColorPointerListIBM' (GLint GLenum GLint void** GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> selectBuffer: size with: buffer [

	<command: #glSelectBuffer>
	<return: 'void'>
	<arg: 'size' type: 'GLsizei'>
	<arg: 'buffer' type: 'GLuint*' group: #SelectName size: 'size'>

	<apicall: void 'glSelectBuffer' (GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> selectPerfMonitorCountersAMD: monitor with: enable with: group with: numCounters with: counterList [

	<command: #glSelectPerfMonitorCountersAMD>
	<return: 'void'>
	<arg: 'monitor' type: 'GLuint'>
	<arg: 'enable' type: 'GLboolean' group: #Boolean>
	<arg: 'group' type: 'GLuint'>
	<arg: 'numCounters' type: 'GLint'>
	<arg: 'counterList' type: 'GLuint*' size: 'numCounters'>

	<apicall: void 'glSelectPerfMonitorCountersAMD' (GLuint GLboolean GLuint GLint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> semaphoreParameterivNV: semaphore with: pname with: params [

	<command: #glSemaphoreParameterivNV>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SemaphoreParameterName>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glSemaphoreParameterivNV' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> semaphoreParameterui64vEXT: semaphore with: pname with: params [

	<command: #glSemaphoreParameterui64vEXT>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #SemaphoreParameterName>
	<arg: 'params' type: 'GLuint64*'>

	<apicall: void 'glSemaphoreParameterui64vEXT' (GLuint GLenum GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> separableFilter2D: target with: internalformat with: width with: height with: format with: type with: row with: column [

	<command: #glSeparableFilter2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #SeparableTargetEXT>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'row' type: 'void*' size: 'COMPSIZE(target,format,type,width)'>
	<arg: 'column' type: 'void*' size: 'COMPSIZE(target,format,type,height)'>

	<apicall: void 'glSeparableFilter2D' (GLenum GLenum GLsizei GLsizei GLenum GLenum void* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> separableFilter2DEXT: target with: internalformat with: width with: height with: format with: type with: row with: column [

	<command: #glSeparableFilter2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #SeparableTargetEXT>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'row' type: 'void*' size: 'COMPSIZE(target,format,type,width)'>
	<arg: 'column' type: 'void*' size: 'COMPSIZE(target,format,type,height)'>

	<apicall: void 'glSeparableFilter2DEXT' (GLenum GLenum GLsizei GLsizei GLenum GLenum void* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> setFenceAPPLE: fence [

	<command: #glSetFenceAPPLE>
	<return: 'void'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>

	<apicall: void 'glSetFenceAPPLE' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> setFenceNV: fence with: condition [

	<command: #glSetFenceNV>
	<return: 'void'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>
	<arg: 'condition' type: 'GLenum' group: #FenceConditionNV>

	<apicall: void 'glSetFenceNV' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> setFragmentShaderConstantATI: dst with: value [

	<command: #glSetFragmentShaderConstantATI>
	<return: 'void'>
	<arg: 'dst' type: 'GLuint'>
	<arg: 'value' type: 'GLfloat*' size: '4'>

	<apicall: void 'glSetFragmentShaderConstantATI' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> setInvariantEXT: id with: type with: addr [

	<command: #glSetInvariantEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #ScalarType>
	<arg: 'addr' type: 'void*' size: 'COMPSIZE(id,type)'>

	<apicall: void 'glSetInvariantEXT' (GLuint GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> setLocalConstantEXT: id with: type with: addr [

	<command: #glSetLocalConstantEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #ScalarType>
	<arg: 'addr' type: 'void*' size: 'COMPSIZE(id,type)'>

	<apicall: void 'glSetLocalConstantEXT' (GLuint GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> setMultisamplefvAMD: pname with: index with: val [

	<command: #glSetMultisamplefvAMD>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'val' type: 'GLfloat*' size: '2'>

	<apicall: void 'glSetMultisamplefvAMD' (GLenum GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shadeModel: mode [

	<command: #glShadeModel>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #ShadingModel>

	<apicall: void 'glShadeModel' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shaderBinary: count with: shaders with: binaryFormat with: binary with: length [

	<command: #glShaderBinary>
	<return: 'void'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'shaders' type: 'GLuint*' size: 'count'>
	<arg: 'binaryFormat' type: 'GLenum' group: #ShaderBinaryFormat>
	<arg: 'binary' type: 'void*' size: 'length'>
	<arg: 'length' type: 'GLsizei'>

	<apicall: void 'glShaderBinary' (GLsizei GLuint* GLenum void* GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shaderOp1EXT: op with: res with: arg1 [

	<command: #glShaderOp1EXT>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #VertexShaderOpEXT>
	<arg: 'res' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>

	<apicall: void 'glShaderOp1EXT' (GLenum GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shaderOp2EXT: op with: res with: arg1 with: arg2 [

	<command: #glShaderOp2EXT>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #VertexShaderOpEXT>
	<arg: 'res' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>
	<arg: 'arg2' type: 'GLuint'>

	<apicall: void 'glShaderOp2EXT' (GLenum GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shaderOp3EXT: op with: res with: arg1 with: arg2 with: arg3 [

	<command: #glShaderOp3EXT>
	<return: 'void'>
	<arg: 'op' type: 'GLenum' group: #VertexShaderOpEXT>
	<arg: 'res' type: 'GLuint'>
	<arg: 'arg1' type: 'GLuint'>
	<arg: 'arg2' type: 'GLuint'>
	<arg: 'arg3' type: 'GLuint'>

	<apicall: void 'glShaderOp3EXT' (GLenum GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shaderSource: shader with: count with: string with: length [

	<command: #glShaderSource>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'string' type: 'GLchar**' size: 'count'>
	<arg: 'length' type: 'GLint*' size: 'count'>

	<apicall: void 'glShaderSource' (GLuint GLsizei GLchar** GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shaderSourceARB: shaderObj with: count with: string with: length [

	<command: #glShaderSourceARB>
	<return: 'void'>
	<arg: 'shaderObj' type: 'GLhandleARB' group: #handleARB>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'string' type: 'GLcharARB**' size: 'count'>
	<arg: 'length' type: 'GLint*' size: 'count'>

	<apicall: void 'glShaderSourceARB' (GLhandleARB GLsizei GLcharARB** GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shaderStorageBlockBinding: program with: storageBlockIndex with: storageBlockBinding [

	<command: #glShaderStorageBlockBinding>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'storageBlockIndex' type: 'GLuint'>
	<arg: 'storageBlockBinding' type: 'GLuint'>

	<apicall: void 'glShaderStorageBlockBinding' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shadingRateImageBarrierNV: synchronize [

	<command: #glShadingRateImageBarrierNV>
	<return: 'void'>
	<arg: 'synchronize' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glShadingRateImageBarrierNV' (GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shadingRateImagePaletteNV: viewport with: first with: count with: rates [

	<command: #glShadingRateImagePaletteNV>
	<return: 'void'>
	<arg: 'viewport' type: 'GLuint'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'rates' type: 'GLenum*' size: 'count'>

	<apicall: void 'glShadingRateImagePaletteNV' (GLuint GLuint GLsizei GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shadingRateQCOM: rate [

	<command: #glShadingRateQCOM>
	<return: 'void'>
	<arg: 'rate' type: 'GLenum' group: #ShadingRateQCOM>

	<apicall: void 'glShadingRateQCOM' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shadingRateSampleOrderCustomNV: rate with: samples with: locations [

	<command: #glShadingRateSampleOrderCustomNV>
	<return: 'void'>
	<arg: 'rate' type: 'GLenum'>
	<arg: 'samples' type: 'GLuint'>
	<arg: 'locations' type: 'GLint*' size: 'COMPSIZE(rate,samples)'>

	<apicall: void 'glShadingRateSampleOrderCustomNV' (GLenum GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> shadingRateSampleOrderNV: order [

	<command: #glShadingRateSampleOrderNV>
	<return: 'void'>
	<arg: 'order' type: 'GLenum'>

	<apicall: void 'glShadingRateSampleOrderNV' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> sharpenTexFuncSGIS: target with: n with: points [

	<command: #glSharpenTexFuncSGIS>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'points' type: 'GLfloat*' size: 'n*2'>

	<apicall: void 'glSharpenTexFuncSGIS' (GLenum GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> signalSemaphoreEXT: semaphore with: numBufferBarriers with: buffers with: numTextureBarriers with: textures with: dstLayouts [

	<command: #glSignalSemaphoreEXT>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'numBufferBarriers' type: 'GLuint'>
	<arg: 'buffers' type: 'GLuint*' size: 'COMPSIZE(numBufferBarriers)'>
	<arg: 'numTextureBarriers' type: 'GLuint'>
	<arg: 'textures' type: 'GLuint*' size: 'COMPSIZE(numTextureBarriers)'>
	<arg: 'dstLayouts' type: 'GLenum*' group: #TextureLayout size: 'COMPSIZE(numTextureBarriers)'>

	<apicall: void 'glSignalSemaphoreEXT' (GLuint GLuint GLuint* GLuint GLuint* GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> signalSemaphoreui64NVX: signalGpu with: fenceObjectCount with: semaphoreArray with: fenceValueArray [

	<command: #glSignalSemaphoreui64NVX>
	<return: 'void'>
	<arg: 'signalGpu' type: 'GLuint'>
	<arg: 'fenceObjectCount' type: 'GLsizei'>
	<arg: 'semaphoreArray' type: 'GLuint*' size: 'fenceObjectCount'>
	<arg: 'fenceValueArray' type: 'GLuint64*' size: 'fenceObjectCount'>

	<apicall: void 'glSignalSemaphoreui64NVX' (GLuint GLsizei GLuint* GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> signalVkFenceNV: vkFence [

	<command: #glSignalVkFenceNV>
	<return: 'void'>
	<arg: 'vkFence' type: 'GLuint64'>

	<apicall: void 'glSignalVkFenceNV' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> signalVkSemaphoreNV: vkSemaphore [

	<command: #glSignalVkSemaphoreNV>
	<return: 'void'>
	<arg: 'vkSemaphore' type: 'GLuint64'>

	<apicall: void 'glSignalVkSemaphoreNV' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> specializeShader: shader with: pEntryPoint with: numSpecializationConstants with: pConstantIndex with: pConstantValue [

	<command: #glSpecializeShader>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>
	<arg: 'pEntryPoint' type: 'GLchar*'>
	<arg: 'numSpecializationConstants' type: 'GLuint'>
	<arg: 'pConstantIndex' type: 'GLuint*'>
	<arg: 'pConstantValue' type: 'GLuint*'>

	<apicall: void 'glSpecializeShader' (GLuint GLchar* GLuint GLuint* GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> specializeShaderARB: shader with: pEntryPoint with: numSpecializationConstants with: pConstantIndex with: pConstantValue [

	<command: #glSpecializeShaderARB>
	<return: 'void'>
	<arg: 'shader' type: 'GLuint'>
	<arg: 'pEntryPoint' type: 'GLchar*'>
	<arg: 'numSpecializationConstants' type: 'GLuint'>
	<arg: 'pConstantIndex' type: 'GLuint*'>
	<arg: 'pConstantValue' type: 'GLuint*'>

	<apicall: void 'glSpecializeShaderARB' (GLuint GLchar* GLuint GLuint* GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> spriteParameterfSGIX: pname with: param [

	<command: #glSpriteParameterfSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #SpriteParameterNameSGIX>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glSpriteParameterfSGIX' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> spriteParameterfvSGIX: pname with: params [

	<command: #glSpriteParameterfvSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #SpriteParameterNameSGIX>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glSpriteParameterfvSGIX' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> spriteParameteriSGIX: pname with: param [

	<command: #glSpriteParameteriSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #SpriteParameterNameSGIX>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glSpriteParameteriSGIX' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> spriteParameterivSGIX: pname with: params [

	<command: #glSpriteParameterivSGIX>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #SpriteParameterNameSGIX>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glSpriteParameterivSGIX' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> startInstrumentsSGIX [

	<command: #glStartInstrumentsSGIX>
	<return: 'void'>

	<apicall: void 'glStartInstrumentsSGIX' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> startTilingQCOM: x with: y with: width with: height with: preserveMask [

	<command: #glStartTilingQCOM>
	<return: 'void'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>
	<arg: 'width' type: 'GLuint'>
	<arg: 'height' type: 'GLuint'>
	<arg: 'preserveMask' type: 'GLbitfield' group: #BufferBitQCOM>

	<apicall: void 'glStartTilingQCOM' (GLuint GLuint GLuint GLuint GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stateCaptureNV: state with: mode [

	<command: #glStateCaptureNV>
	<return: 'void'>
	<arg: 'state' type: 'GLuint'>
	<arg: 'mode' type: 'GLenum'>

	<apicall: void 'glStateCaptureNV' (GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilClearTagEXT: stencilTagBits with: stencilClearTag [

	<command: #glStencilClearTagEXT>
	<return: 'void'>
	<arg: 'stencilTagBits' type: 'GLsizei'>
	<arg: 'stencilClearTag' type: 'GLuint'>

	<apicall: void 'glStencilClearTagEXT' (GLsizei GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilFillPathInstancedNV: numPaths with: pathNameType with: paths with: pathBase with: fillMode with: mask with: transformType with: transformValues [

	<command: #glStencilFillPathInstancedNV>
	<return: 'void'>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'pathNameType' type: 'GLenum' group: #PathElementType>
	<arg: 'paths' type: 'void*' group: #PathElement size: 'COMPSIZE(numPaths,pathNameType,paths)'>
	<arg: 'pathBase' type: 'GLuint' group: #Path>
	<arg: 'fillMode' type: 'GLenum' group: #PathFillMode>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>
	<arg: 'transformType' type: 'GLenum' group: #PathTransformType>
	<arg: 'transformValues' type: 'GLfloat*' size: 'COMPSIZE(numPaths,transformType)'>

	<apicall: void 'glStencilFillPathInstancedNV' (GLsizei GLenum void* GLuint GLenum GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilFillPathNV: path with: fillMode with: mask [

	<command: #glStencilFillPathNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'fillMode' type: 'GLenum' group: #PathFillMode>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>

	<apicall: void 'glStencilFillPathNV' (GLuint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilFunc: func with: ref with: mask [

	<command: #glStencilFunc>
	<return: 'void'>
	<arg: 'func' type: 'GLenum' group: #StencilFunction>
	<arg: 'ref' type: 'GLint' group: #StencilValue>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>

	<apicall: void 'glStencilFunc' (GLenum GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilFuncSeparate: face with: func with: ref with: mask [

	<command: #glStencilFuncSeparate>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #StencilFaceDirection>
	<arg: 'func' type: 'GLenum' group: #StencilFunction>
	<arg: 'ref' type: 'GLint' group: #StencilValue>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>

	<apicall: void 'glStencilFuncSeparate' (GLenum GLenum GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilFuncSeparateATI: frontfunc with: backfunc with: ref with: mask [

	<command: #glStencilFuncSeparateATI>
	<return: 'void'>
	<arg: 'frontfunc' type: 'GLenum' group: #StencilFunction>
	<arg: 'backfunc' type: 'GLenum' group: #StencilFunction>
	<arg: 'ref' type: 'GLint' group: #ClampedStencilValue>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>

	<apicall: void 'glStencilFuncSeparateATI' (GLenum GLenum GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilMask: mask [

	<command: #glStencilMask>
	<return: 'void'>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>

	<apicall: void 'glStencilMask' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilMaskSeparate: face with: mask [

	<command: #glStencilMaskSeparate>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #StencilFaceDirection>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>

	<apicall: void 'glStencilMaskSeparate' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilOp: fail with: zfail with: zpass [

	<command: #glStencilOp>
	<return: 'void'>
	<arg: 'fail' type: 'GLenum' group: #StencilOp>
	<arg: 'zfail' type: 'GLenum' group: #StencilOp>
	<arg: 'zpass' type: 'GLenum' group: #StencilOp>

	<apicall: void 'glStencilOp' (GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilOpSeparate: face with: sfail with: dpfail with: dppass [

	<command: #glStencilOpSeparate>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #StencilFaceDirection>
	<arg: 'sfail' type: 'GLenum' group: #StencilOp>
	<arg: 'dpfail' type: 'GLenum' group: #StencilOp>
	<arg: 'dppass' type: 'GLenum' group: #StencilOp>

	<apicall: void 'glStencilOpSeparate' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilOpSeparateATI: face with: sfail with: dpfail with: dppass [

	<command: #glStencilOpSeparateATI>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #StencilFaceDirection>
	<arg: 'sfail' type: 'GLenum' group: #StencilOp>
	<arg: 'dpfail' type: 'GLenum' group: #StencilOp>
	<arg: 'dppass' type: 'GLenum' group: #StencilOp>

	<apicall: void 'glStencilOpSeparateATI' (GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilOpValueAMD: face with: value [

	<command: #glStencilOpValueAMD>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #StencilFaceDirection>
	<arg: 'value' type: 'GLuint'>

	<apicall: void 'glStencilOpValueAMD' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilStrokePathInstancedNV: numPaths with: pathNameType with: paths with: pathBase with: reference with: mask with: transformType with: transformValues [

	<command: #glStencilStrokePathInstancedNV>
	<return: 'void'>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'pathNameType' type: 'GLenum' group: #PathElementType>
	<arg: 'paths' type: 'void*' group: #PathElement size: 'COMPSIZE(numPaths,pathNameType,paths)'>
	<arg: 'pathBase' type: 'GLuint' group: #Path>
	<arg: 'reference' type: 'GLint' group: #StencilValue>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>
	<arg: 'transformType' type: 'GLenum' group: #PathTransformType>
	<arg: 'transformValues' type: 'GLfloat*' size: 'COMPSIZE(numPaths,transformType)'>

	<apicall: void 'glStencilStrokePathInstancedNV' (GLsizei GLenum void* GLuint GLint GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilStrokePathNV: path with: reference with: mask [

	<command: #glStencilStrokePathNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint' group: #Path>
	<arg: 'reference' type: 'GLint' group: #StencilValue>
	<arg: 'mask' type: 'GLuint' group: #MaskedStencilValue>

	<apicall: void 'glStencilStrokePathNV' (GLuint GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilThenCoverFillPathInstancedNV: numPaths with: pathNameType with: paths with: pathBase with: fillMode with: mask with: coverMode with: transformType with: transformValues [

	<command: #glStencilThenCoverFillPathInstancedNV>
	<return: 'void'>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'pathNameType' type: 'GLenum'>
	<arg: 'paths' type: 'void*'>
	<arg: 'pathBase' type: 'GLuint'>
	<arg: 'fillMode' type: 'GLenum'>
	<arg: 'mask' type: 'GLuint'>
	<arg: 'coverMode' type: 'GLenum'>
	<arg: 'transformType' type: 'GLenum'>
	<arg: 'transformValues' type: 'GLfloat*'>

	<apicall: void 'glStencilThenCoverFillPathInstancedNV' (GLsizei GLenum void* GLuint GLenum GLuint GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilThenCoverFillPathNV: path with: fillMode with: mask with: coverMode [

	<command: #glStencilThenCoverFillPathNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint'>
	<arg: 'fillMode' type: 'GLenum'>
	<arg: 'mask' type: 'GLuint'>
	<arg: 'coverMode' type: 'GLenum'>

	<apicall: void 'glStencilThenCoverFillPathNV' (GLuint GLenum GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilThenCoverStrokePathInstancedNV: numPaths with: pathNameType with: paths with: pathBase with: reference with: mask with: coverMode with: transformType with: transformValues [

	<command: #glStencilThenCoverStrokePathInstancedNV>
	<return: 'void'>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'pathNameType' type: 'GLenum'>
	<arg: 'paths' type: 'void*'>
	<arg: 'pathBase' type: 'GLuint'>
	<arg: 'reference' type: 'GLint'>
	<arg: 'mask' type: 'GLuint'>
	<arg: 'coverMode' type: 'GLenum'>
	<arg: 'transformType' type: 'GLenum'>
	<arg: 'transformValues' type: 'GLfloat*'>

	<apicall: void 'glStencilThenCoverStrokePathInstancedNV' (GLsizei GLenum void* GLuint GLint GLuint GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stencilThenCoverStrokePathNV: path with: reference with: mask with: coverMode [

	<command: #glStencilThenCoverStrokePathNV>
	<return: 'void'>
	<arg: 'path' type: 'GLuint'>
	<arg: 'reference' type: 'GLint'>
	<arg: 'mask' type: 'GLuint'>
	<arg: 'coverMode' type: 'GLenum'>

	<apicall: void 'glStencilThenCoverStrokePathNV' (GLuint GLint GLuint GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stopInstrumentsSGIX: marker [

	<command: #glStopInstrumentsSGIX>
	<return: 'void'>
	<arg: 'marker' type: 'GLint'>

	<apicall: void 'glStopInstrumentsSGIX' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> stringMarkerGREMEDY: len with: string [

	<command: #glStringMarkerGREMEDY>
	<return: 'void'>
	<arg: 'len' type: 'GLsizei'>
	<arg: 'string' type: 'void*' size: 'len'>

	<apicall: void 'glStringMarkerGREMEDY' (GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> subpixelPrecisionBiasNV: xbits with: ybits [

	<command: #glSubpixelPrecisionBiasNV>
	<return: 'void'>
	<arg: 'xbits' type: 'GLuint'>
	<arg: 'ybits' type: 'GLuint'>

	<apicall: void 'glSubpixelPrecisionBiasNV' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> swizzleEXT: res with: in with: outX with: outY with: outZ with: outW [

	<command: #glSwizzleEXT>
	<return: 'void'>
	<arg: 'res' type: 'GLuint'>
	<arg: 'in' type: 'GLuint'>
	<arg: 'outX' type: 'GLenum' group: #VertexShaderCoordOutEXT>
	<arg: 'outY' type: 'GLenum' group: #VertexShaderCoordOutEXT>
	<arg: 'outZ' type: 'GLenum' group: #VertexShaderCoordOutEXT>
	<arg: 'outW' type: 'GLenum' group: #VertexShaderCoordOutEXT>

	<apicall: void 'glSwizzleEXT' (GLuint GLuint GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> syncTextureINTEL: texture [

	<command: #glSyncTextureINTEL>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>

	<apicall: void 'glSyncTextureINTEL' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tagSampleBufferSGIX [

	<command: #glTagSampleBufferSGIX>
	<return: 'void'>

	<apicall: void 'glTagSampleBufferSGIX' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3bEXT: tx with: ty with: tz [

	<command: #glTangent3bEXT>
	<return: 'void'>
	<arg: 'tx' type: 'GLbyte'>
	<arg: 'ty' type: 'GLbyte'>
	<arg: 'tz' type: 'GLbyte'>

	<apicall: void 'glTangent3bEXT' (GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3bvEXT: v [

	<command: #glTangent3bvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLbyte*' size: '3'>

	<apicall: void 'glTangent3bvEXT' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3dEXT: tx with: ty with: tz [

	<command: #glTangent3dEXT>
	<return: 'void'>
	<arg: 'tx' type: 'GLdouble' group: #CoordD>
	<arg: 'ty' type: 'GLdouble' group: #CoordD>
	<arg: 'tz' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glTangent3dEXT' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3dvEXT: v [

	<command: #glTangent3dvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glTangent3dvEXT' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3fEXT: tx with: ty with: tz [

	<command: #glTangent3fEXT>
	<return: 'void'>
	<arg: 'tx' type: 'GLfloat' group: #CoordF>
	<arg: 'ty' type: 'GLfloat' group: #CoordF>
	<arg: 'tz' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glTangent3fEXT' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3fvEXT: v [

	<command: #glTangent3fvEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glTangent3fvEXT' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3iEXT: tx with: ty with: tz [

	<command: #glTangent3iEXT>
	<return: 'void'>
	<arg: 'tx' type: 'GLint'>
	<arg: 'ty' type: 'GLint'>
	<arg: 'tz' type: 'GLint'>

	<apicall: void 'glTangent3iEXT' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3ivEXT: v [

	<command: #glTangent3ivEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' size: '3'>

	<apicall: void 'glTangent3ivEXT' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3sEXT: tx with: ty with: tz [

	<command: #glTangent3sEXT>
	<return: 'void'>
	<arg: 'tx' type: 'GLshort'>
	<arg: 'ty' type: 'GLshort'>
	<arg: 'tz' type: 'GLshort'>

	<apicall: void 'glTangent3sEXT' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangent3svEXT: v [

	<command: #glTangent3svEXT>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' size: '3'>

	<apicall: void 'glTangent3svEXT' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tangentPointerEXT: type with: stride with: pointer [

	<command: #glTangentPointerEXT>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TangentPointerTypeEXT>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glTangentPointerEXT' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tbufferMask3DFX: mask [

	<command: #glTbufferMask3DFX>
	<return: 'void'>
	<arg: 'mask' type: 'GLuint'>

	<apicall: void 'glTbufferMask3DFX' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tessellationFactorAMD: factor [

	<command: #glTessellationFactorAMD>
	<return: 'void'>
	<arg: 'factor' type: 'GLfloat'>

	<apicall: void 'glTessellationFactorAMD' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> tessellationModeAMD: mode [

	<command: #glTessellationModeAMD>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum'>

	<apicall: void 'glTessellationModeAMD' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> testFenceAPPLE: fence [

	<command: #glTestFenceAPPLE>
	<return: 'GLboolean'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>

	<apicall: GLboolean 'glTestFenceAPPLE' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> testFenceNV: fence [

	<command: #glTestFenceNV>
	<return: 'GLboolean'>
	<arg: 'fence' type: 'GLuint' group: #FenceNV>

	<apicall: GLboolean 'glTestFenceNV' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> testObjectAPPLE: object with: name [

	<command: #glTestObjectAPPLE>
	<return: 'GLboolean'>
	<arg: 'object' type: 'GLenum' group: #ObjectTypeAPPLE>
	<arg: 'name' type: 'GLuint'>

	<apicall: GLboolean 'glTestObjectAPPLE' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texAttachMemoryNV: target with: memory with: offset [

	<command: #glTexAttachMemoryNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTexAttachMemoryNV' (GLenum GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBuffer: target with: internalformat with: buffer [

	<command: #glTexBuffer>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glTexBuffer' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBufferARB: target with: internalformat with: buffer [

	<command: #glTexBufferARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glTexBufferARB' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBufferEXT: target with: internalformat with: buffer [

	<command: #glTexBufferEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glTexBufferEXT' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBufferOES: target with: internalformat with: buffer [

	<command: #glTexBufferOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glTexBufferOES' (GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBufferRange: target with: internalformat with: buffer with: offset with: size [

	<command: #glTexBufferRange>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glTexBufferRange' (GLenum GLenum GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBufferRangeEXT: target with: internalformat with: buffer with: offset with: size [

	<command: #glTexBufferRangeEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glTexBufferRangeEXT' (GLenum GLenum GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBufferRangeOES: target with: internalformat with: buffer with: offset with: size [

	<command: #glTexBufferRangeOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glTexBufferRangeOES' (GLenum GLenum GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBumpParameterfvATI: pname with: param [

	<command: #glTexBumpParameterfvATI>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #TexBumpParameterATI>
	<arg: 'param' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexBumpParameterfvATI' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texBumpParameterivATI: pname with: param [

	<command: #glTexBumpParameterivATI>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #TexBumpParameterATI>
	<arg: 'param' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexBumpParameterivATI' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1bOES: s [

	<command: #glTexCoord1bOES>
	<return: 'void'>
	<arg: 's' type: 'GLbyte'>

	<apicall: void 'glTexCoord1bOES' (GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1bvOES: coords [

	<command: #glTexCoord1bvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLbyte*' size: '1'>

	<apicall: void 'glTexCoord1bvOES' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1d: s [

	<command: #glTexCoord1d>
	<return: 'void'>
	<arg: 's' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glTexCoord1d' (GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1dv: v [

	<command: #glTexCoord1dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '1'>

	<apicall: void 'glTexCoord1dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1f: s [

	<command: #glTexCoord1f>
	<return: 'void'>
	<arg: 's' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glTexCoord1f' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1fv: v [

	<command: #glTexCoord1fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '1'>

	<apicall: void 'glTexCoord1fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1hNV: s [

	<command: #glTexCoord1hNV>
	<return: 'void'>
	<arg: 's' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glTexCoord1hNV' (GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1hvNV: v [

	<command: #glTexCoord1hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '1'>

	<apicall: void 'glTexCoord1hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1i: s [

	<command: #glTexCoord1i>
	<return: 'void'>
	<arg: 's' type: 'GLint' group: #CoordI>

	<apicall: void 'glTexCoord1i' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1iv: v [

	<command: #glTexCoord1iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '1'>

	<apicall: void 'glTexCoord1iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1s: s [

	<command: #glTexCoord1s>
	<return: 'void'>
	<arg: 's' type: 'GLshort' group: #CoordS>

	<apicall: void 'glTexCoord1s' (GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1sv: v [

	<command: #glTexCoord1sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '1'>

	<apicall: void 'glTexCoord1sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1xOES: s [

	<command: #glTexCoord1xOES>
	<return: 'void'>
	<arg: 's' type: 'GLfixed'>

	<apicall: void 'glTexCoord1xOES' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord1xvOES: coords [

	<command: #glTexCoord1xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '1'>

	<apicall: void 'glTexCoord1xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2bOES: s with: t [

	<command: #glTexCoord2bOES>
	<return: 'void'>
	<arg: 's' type: 'GLbyte'>
	<arg: 't' type: 'GLbyte'>

	<apicall: void 'glTexCoord2bOES' (GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2bvOES: coords [

	<command: #glTexCoord2bvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLbyte*' size: '2'>

	<apicall: void 'glTexCoord2bvOES' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2d: s with: t [

	<command: #glTexCoord2d>
	<return: 'void'>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glTexCoord2d' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2dv: v [

	<command: #glTexCoord2dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glTexCoord2dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2f: s with: t [

	<command: #glTexCoord2f>
	<return: 'void'>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glTexCoord2f' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fColor3fVertex3fSUN: s with: t with: r with: g with: b with: x with: y with: z [

	<command: #glTexCoord2fColor3fVertex3fSUN>
	<return: 'void'>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'g' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glTexCoord2fColor3fVertex3fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fColor3fVertex3fvSUN: tc with: c with: v [

	<command: #glTexCoord2fColor3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'tc' type: 'GLfloat*' size: '2'>
	<arg: 'c' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glTexCoord2fColor3fVertex3fvSUN' (GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fColor4fNormal3fVertex3fSUN: s with: t with: r with: g with: b with: a with: nx with: ny with: nz with: x with: y with: z [

	<command: #glTexCoord2fColor4fNormal3fVertex3fSUN>
	<return: 'void'>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'g' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 'a' type: 'GLfloat'>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glTexCoord2fColor4fNormal3fVertex3fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fColor4fNormal3fVertex3fvSUN: tc with: c with: n with: v [

	<command: #glTexCoord2fColor4fNormal3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'tc' type: 'GLfloat*' size: '2'>
	<arg: 'c' type: 'GLfloat*' size: '4'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glTexCoord2fColor4fNormal3fVertex3fvSUN' (GLfloat* GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fColor4ubVertex3fSUN: s with: t with: r with: g with: b with: a with: x with: y with: z [

	<command: #glTexCoord2fColor4ubVertex3fSUN>
	<return: 'void'>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'r' type: 'GLubyte'>
	<arg: 'g' type: 'GLubyte'>
	<arg: 'b' type: 'GLubyte'>
	<arg: 'a' type: 'GLubyte'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glTexCoord2fColor4ubVertex3fSUN' (GLfloat GLfloat GLubyte GLubyte GLubyte GLubyte GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fColor4ubVertex3fvSUN: tc with: c with: v [

	<command: #glTexCoord2fColor4ubVertex3fvSUN>
	<return: 'void'>
	<arg: 'tc' type: 'GLfloat*' size: '2'>
	<arg: 'c' type: 'GLubyte*' size: '4'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glTexCoord2fColor4ubVertex3fvSUN' (GLfloat* GLubyte* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fNormal3fVertex3fSUN: s with: t with: nx with: ny with: nz with: x with: y with: z [

	<command: #glTexCoord2fNormal3fVertex3fSUN>
	<return: 'void'>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glTexCoord2fNormal3fVertex3fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fNormal3fVertex3fvSUN: tc with: n with: v [

	<command: #glTexCoord2fNormal3fVertex3fvSUN>
	<return: 'void'>
	<arg: 'tc' type: 'GLfloat*' size: '2'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glTexCoord2fNormal3fVertex3fvSUN' (GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fVertex3fSUN: s with: t with: x with: y with: z [

	<command: #glTexCoord2fVertex3fSUN>
	<return: 'void'>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glTexCoord2fVertex3fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fVertex3fvSUN: tc with: v [

	<command: #glTexCoord2fVertex3fvSUN>
	<return: 'void'>
	<arg: 'tc' type: 'GLfloat*' size: '2'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glTexCoord2fVertex3fvSUN' (GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2fv: v [

	<command: #glTexCoord2fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glTexCoord2fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2hNV: s with: t [

	<command: #glTexCoord2hNV>
	<return: 'void'>
	<arg: 's' type: 'GLhalfNV' group: #Half16NV>
	<arg: 't' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glTexCoord2hNV' (GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2hvNV: v [

	<command: #glTexCoord2hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '2'>

	<apicall: void 'glTexCoord2hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2i: s with: t [

	<command: #glTexCoord2i>
	<return: 'void'>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>

	<apicall: void 'glTexCoord2i' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2iv: v [

	<command: #glTexCoord2iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glTexCoord2iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2s: s with: t [

	<command: #glTexCoord2s>
	<return: 'void'>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>

	<apicall: void 'glTexCoord2s' (GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2sv: v [

	<command: #glTexCoord2sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glTexCoord2sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2xOES: s with: t [

	<command: #glTexCoord2xOES>
	<return: 'void'>
	<arg: 's' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>

	<apicall: void 'glTexCoord2xOES' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord2xvOES: coords [

	<command: #glTexCoord2xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '2'>

	<apicall: void 'glTexCoord2xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3bOES: s with: t with: r [

	<command: #glTexCoord3bOES>
	<return: 'void'>
	<arg: 's' type: 'GLbyte'>
	<arg: 't' type: 'GLbyte'>
	<arg: 'r' type: 'GLbyte'>

	<apicall: void 'glTexCoord3bOES' (GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3bvOES: coords [

	<command: #glTexCoord3bvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLbyte*' size: '3'>

	<apicall: void 'glTexCoord3bvOES' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3d: s with: t with: r [

	<command: #glTexCoord3d>
	<return: 'void'>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>
	<arg: 'r' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glTexCoord3d' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3dv: v [

	<command: #glTexCoord3dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glTexCoord3dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3f: s with: t with: r [

	<command: #glTexCoord3f>
	<return: 'void'>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>
	<arg: 'r' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glTexCoord3f' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3fv: v [

	<command: #glTexCoord3fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glTexCoord3fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3hNV: s with: t with: r [

	<command: #glTexCoord3hNV>
	<return: 'void'>
	<arg: 's' type: 'GLhalfNV' group: #Half16NV>
	<arg: 't' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'r' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glTexCoord3hNV' (GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3hvNV: v [

	<command: #glTexCoord3hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '3'>

	<apicall: void 'glTexCoord3hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3i: s with: t with: r [

	<command: #glTexCoord3i>
	<return: 'void'>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>
	<arg: 'r' type: 'GLint' group: #CoordI>

	<apicall: void 'glTexCoord3i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3iv: v [

	<command: #glTexCoord3iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '3'>

	<apicall: void 'glTexCoord3iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3s: s with: t with: r [

	<command: #glTexCoord3s>
	<return: 'void'>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>
	<arg: 'r' type: 'GLshort' group: #CoordS>

	<apicall: void 'glTexCoord3s' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3sv: v [

	<command: #glTexCoord3sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '3'>

	<apicall: void 'glTexCoord3sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3xOES: s with: t with: r [

	<command: #glTexCoord3xOES>
	<return: 'void'>
	<arg: 's' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>

	<apicall: void 'glTexCoord3xOES' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord3xvOES: coords [

	<command: #glTexCoord3xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '3'>

	<apicall: void 'glTexCoord3xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4bOES: s with: t with: r with: q [

	<command: #glTexCoord4bOES>
	<return: 'void'>
	<arg: 's' type: 'GLbyte'>
	<arg: 't' type: 'GLbyte'>
	<arg: 'r' type: 'GLbyte'>
	<arg: 'q' type: 'GLbyte'>

	<apicall: void 'glTexCoord4bOES' (GLbyte GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4bvOES: coords [

	<command: #glTexCoord4bvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLbyte*' size: '4'>

	<apicall: void 'glTexCoord4bvOES' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4d: s with: t with: r with: q [

	<command: #glTexCoord4d>
	<return: 'void'>
	<arg: 's' type: 'GLdouble' group: #CoordD>
	<arg: 't' type: 'GLdouble' group: #CoordD>
	<arg: 'r' type: 'GLdouble' group: #CoordD>
	<arg: 'q' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glTexCoord4d' (GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4dv: v [

	<command: #glTexCoord4dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '4'>

	<apicall: void 'glTexCoord4dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4f: s with: t with: r with: q [

	<command: #glTexCoord4f>
	<return: 'void'>
	<arg: 's' type: 'GLfloat' group: #CoordF>
	<arg: 't' type: 'GLfloat' group: #CoordF>
	<arg: 'r' type: 'GLfloat' group: #CoordF>
	<arg: 'q' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glTexCoord4f' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4fColor4fNormal3fVertex4fSUN: s with: t with: p with: q with: r with: g with: b with: a with: nx with: ny with: nz with: x with: y with: z with: w [

	<command: #glTexCoord4fColor4fNormal3fVertex4fSUN>
	<return: 'void'>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'p' type: 'GLfloat'>
	<arg: 'q' type: 'GLfloat'>
	<arg: 'r' type: 'GLfloat'>
	<arg: 'g' type: 'GLfloat'>
	<arg: 'b' type: 'GLfloat'>
	<arg: 'a' type: 'GLfloat'>
	<arg: 'nx' type: 'GLfloat'>
	<arg: 'ny' type: 'GLfloat'>
	<arg: 'nz' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glTexCoord4fColor4fNormal3fVertex4fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4fColor4fNormal3fVertex4fvSUN: tc with: c with: n with: v [

	<command: #glTexCoord4fColor4fNormal3fVertex4fvSUN>
	<return: 'void'>
	<arg: 'tc' type: 'GLfloat*' size: '4'>
	<arg: 'c' type: 'GLfloat*' size: '4'>
	<arg: 'n' type: 'GLfloat*' size: '3'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glTexCoord4fColor4fNormal3fVertex4fvSUN' (GLfloat* GLfloat* GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4fVertex4fSUN: s with: t with: p with: q with: x with: y with: z with: w [

	<command: #glTexCoord4fVertex4fSUN>
	<return: 'void'>
	<arg: 's' type: 'GLfloat'>
	<arg: 't' type: 'GLfloat'>
	<arg: 'p' type: 'GLfloat'>
	<arg: 'q' type: 'GLfloat'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glTexCoord4fVertex4fSUN' (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4fVertex4fvSUN: tc with: v [

	<command: #glTexCoord4fVertex4fvSUN>
	<return: 'void'>
	<arg: 'tc' type: 'GLfloat*' size: '4'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glTexCoord4fVertex4fvSUN' (GLfloat* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4fv: v [

	<command: #glTexCoord4fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '4'>

	<apicall: void 'glTexCoord4fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4hNV: s with: t with: r with: q [

	<command: #glTexCoord4hNV>
	<return: 'void'>
	<arg: 's' type: 'GLhalfNV' group: #Half16NV>
	<arg: 't' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'r' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'q' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glTexCoord4hNV' (GLhalfNV GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4hvNV: v [

	<command: #glTexCoord4hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '4'>

	<apicall: void 'glTexCoord4hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4i: s with: t with: r with: q [

	<command: #glTexCoord4i>
	<return: 'void'>
	<arg: 's' type: 'GLint' group: #CoordI>
	<arg: 't' type: 'GLint' group: #CoordI>
	<arg: 'r' type: 'GLint' group: #CoordI>
	<arg: 'q' type: 'GLint' group: #CoordI>

	<apicall: void 'glTexCoord4i' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4iv: v [

	<command: #glTexCoord4iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '4'>

	<apicall: void 'glTexCoord4iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4s: s with: t with: r with: q [

	<command: #glTexCoord4s>
	<return: 'void'>
	<arg: 's' type: 'GLshort' group: #CoordS>
	<arg: 't' type: 'GLshort' group: #CoordS>
	<arg: 'r' type: 'GLshort' group: #CoordS>
	<arg: 'q' type: 'GLshort' group: #CoordS>

	<apicall: void 'glTexCoord4s' (GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4sv: v [

	<command: #glTexCoord4sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '4'>

	<apicall: void 'glTexCoord4sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4xOES: s with: t with: r with: q [

	<command: #glTexCoord4xOES>
	<return: 'void'>
	<arg: 's' type: 'GLfixed'>
	<arg: 't' type: 'GLfixed'>
	<arg: 'r' type: 'GLfixed'>
	<arg: 'q' type: 'GLfixed'>

	<apicall: void 'glTexCoord4xOES' (GLfixed GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoord4xvOES: coords [

	<command: #glTexCoord4xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '4'>

	<apicall: void 'glTexCoord4xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordFormatNV: size with: type with: stride [

	<command: #glTexCoordFormatNV>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glTexCoordFormatNV' (GLint GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordP1ui: type with: coords [

	<command: #glTexCoordP1ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glTexCoordP1ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordP1uiv: type with: coords [

	<command: #glTexCoordP1uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glTexCoordP1uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordP2ui: type with: coords [

	<command: #glTexCoordP2ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glTexCoordP2ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordP2uiv: type with: coords [

	<command: #glTexCoordP2uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glTexCoordP2uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordP3ui: type with: coords [

	<command: #glTexCoordP3ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glTexCoordP3ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordP3uiv: type with: coords [

	<command: #glTexCoordP3uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glTexCoordP3uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordP4ui: type with: coords [

	<command: #glTexCoordP4ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint'>

	<apicall: void 'glTexCoordP4ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordP4uiv: type with: coords [

	<command: #glTexCoordP4uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'coords' type: 'GLuint*' size: '1'>

	<apicall: void 'glTexCoordP4uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordPointer: size with: type with: stride with: pointer [

	<command: #glTexCoordPointer>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glTexCoordPointer' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordPointerEXT: size with: type with: stride with: count with: pointer [

	<command: #glTexCoordPointerEXT>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride,count)'>

	<apicall: void 'glTexCoordPointerEXT' (GLint GLenum GLsizei GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordPointerListIBM: size with: type with: stride with: pointer with: ptrstride [

	<command: #glTexCoordPointerListIBM>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'stride' type: 'GLint'>
	<arg: 'pointer' type: 'void**' size: 'COMPSIZE(size,type,stride)'>
	<arg: 'ptrstride' type: 'GLint'>

	<apicall: void 'glTexCoordPointerListIBM' (GLint GLenum GLint void** GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texCoordPointervINTEL: size with: type with: pointer [

	<command: #glTexCoordPointervINTEL>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'pointer' type: 'void**' size: '4'>

	<apicall: void 'glTexCoordPointervINTEL' (GLint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEnvf: target with: pname with: param [

	<command: #glTexEnvf>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glTexEnvf' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEnvfv: target with: pname with: params [

	<command: #glTexEnvfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexEnvfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEnvi: target with: pname with: param [

	<command: #glTexEnvi>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glTexEnvi' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEnviv: target with: pname with: params [

	<command: #glTexEnviv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexEnviv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEnvx: target with: pname with: param [

	<command: #glTexEnvx>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glTexEnvx' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEnvxOES: target with: pname with: param [

	<command: #glTexEnvxOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glTexEnvxOES' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEnvxv: target with: pname with: params [

	<command: #glTexEnvxv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexEnvxv' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEnvxvOES: target with: pname with: params [

	<command: #glTexEnvxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureEnvTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureEnvParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexEnvxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEstimateMotionQCOM: ref with: target with: output [

	<command: #glTexEstimateMotionQCOM>
	<return: 'void'>
	<arg: 'ref' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLuint' group: #Texture>
	<arg: 'output' type: 'GLuint' group: #Texture>

	<apicall: void 'glTexEstimateMotionQCOM' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texEstimateMotionRegionsQCOM: ref with: target with: output with: mask [

	<command: #glTexEstimateMotionRegionsQCOM>
	<return: 'void'>
	<arg: 'ref' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLuint' group: #Texture>
	<arg: 'output' type: 'GLuint' group: #Texture>
	<arg: 'mask' type: 'GLuint' group: #Texture>

	<apicall: void 'glTexEstimateMotionRegionsQCOM' (GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texFilterFuncSGIS: target with: filter with: n with: weights [

	<command: #glTexFilterFuncSGIS>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'filter' type: 'GLenum' group: #TextureFilterSGIS>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'weights' type: 'GLfloat*' size: 'n'>

	<apicall: void 'glTexFilterFuncSGIS' (GLenum GLenum GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGend: coord with: pname with: param [

	<command: #glTexGend>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLdouble'>

	<apicall: void 'glTexGend' (GLenum GLenum GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGendv: coord with: pname with: params [

	<command: #glTexGendv>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexGendv' (GLenum GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGenf: coord with: pname with: param [

	<command: #glTexGenf>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glTexGenf' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGenfOES: coord with: pname with: param [

	<command: #glTexGenfOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glTexGenfOES' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGenfv: coord with: pname with: params [

	<command: #glTexGenfv>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexGenfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGenfvOES: coord with: pname with: params [

	<command: #glTexGenfvOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexGenfvOES' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGeni: coord with: pname with: param [

	<command: #glTexGeni>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glTexGeni' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGeniOES: coord with: pname with: param [

	<command: #glTexGeniOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glTexGeniOES' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGeniv: coord with: pname with: params [

	<command: #glTexGeniv>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexGeniv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGenivOES: coord with: pname with: params [

	<command: #glTexGenivOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexGenivOES' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGenxOES: coord with: pname with: param [

	<command: #glTexGenxOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glTexGenxOES' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texGenxvOES: coord with: pname with: params [

	<command: #glTexGenxvOES>
	<return: 'void'>
	<arg: 'coord' type: 'GLenum' group: #TextureCoordName>
	<arg: 'pname' type: 'GLenum' group: #TextureGenParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexGenxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage1D: target with: level with: internalformat with: width with: border with: format with: type with: pixels [

	<command: #glTexImage1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glTexImage1D' (GLenum GLint GLint GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage2D: target with: level with: internalformat with: width with: height with: border with: format with: type with: pixels [

	<command: #glTexImage2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glTexImage2D' (GLenum GLint GLint GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage2DMultisample: target with: samples with: internalformat with: width with: height with: fixedsamplelocations [

	<command: #glTexImage2DMultisample>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexImage2DMultisample' (GLenum GLsizei GLenum GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage2DMultisampleCoverageNV: target with: coverageSamples with: colorSamples with: internalFormat with: width with: height with: fixedSampleLocations [

	<command: #glTexImage2DMultisampleCoverageNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'coverageSamples' type: 'GLsizei'>
	<arg: 'colorSamples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexImage2DMultisampleCoverageNV' (GLenum GLsizei GLsizei GLint GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage3D: target with: level with: internalformat with: width with: height with: depth with: border with: format with: type with: pixels [

	<command: #glTexImage3D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glTexImage3D' (GLenum GLint GLint GLsizei GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage3DEXT: target with: level with: internalformat with: width with: height with: depth with: border with: format with: type with: pixels [

	<command: #glTexImage3DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glTexImage3DEXT' (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage3DMultisample: target with: samples with: internalformat with: width with: height with: depth with: fixedsamplelocations [

	<command: #glTexImage3DMultisample>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexImage3DMultisample' (GLenum GLsizei GLenum GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage3DMultisampleCoverageNV: target with: coverageSamples with: colorSamples with: internalFormat with: width with: height with: depth with: fixedSampleLocations [

	<command: #glTexImage3DMultisampleCoverageNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'coverageSamples' type: 'GLsizei'>
	<arg: 'colorSamples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexImage3DMultisampleCoverageNV' (GLenum GLsizei GLsizei GLint GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage3DOES: target with: level with: internalformat with: width with: height with: depth with: border with: format with: type with: pixels [

	<command: #glTexImage3DOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint'>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glTexImage3DOES' (GLenum GLint GLenum GLsizei GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texImage4DSGIS: target with: level with: internalformat with: width with: height with: depth with: size4d with: border with: format with: type with: pixels [

	<command: #glTexImage4DSGIS>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLenum' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'size4d' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth,size4d)'>

	<apicall: void 'glTexImage4DSGIS' (GLenum GLint GLenum GLsizei GLsizei GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texPageCommitmentARB: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: commit [

	<command: #glTexPageCommitmentARB>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexPageCommitmentARB' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texPageCommitmentEXT: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: commit [

	<command: #glTexPageCommitmentEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexPageCommitmentEXT' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texPageCommitmentMemNV: target with: layer with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: memory with: offset with: commit [

	<command: #glTexPageCommitmentMemNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'layer' type: 'GLint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexPageCommitmentMemNV' (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLuint GLuint64 GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterIiv: target with: pname with: params [

	<command: #glTexParameterIiv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterIiv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterIivEXT: target with: pname with: params [

	<command: #glTexParameterIivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterIivEXT' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterIivOES: target with: pname with: params [

	<command: #glTexParameterIivOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterIivOES' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterIuiv: target with: pname with: params [

	<command: #glTexParameterIuiv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterIuiv' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterIuivEXT: target with: pname with: params [

	<command: #glTexParameterIuivEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterIuivEXT' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterIuivOES: target with: pname with: params [

	<command: #glTexParameterIuivOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterIuivOES' (GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterf: target with: pname with: param [

	<command: #glTexParameterf>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glTexParameterf' (GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterfv: target with: pname with: params [

	<command: #glTexParameterfv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterfv' (GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameteri: target with: pname with: param [

	<command: #glTexParameteri>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glTexParameteri' (GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameteriv: target with: pname with: params [

	<command: #glTexParameteriv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameteriv' (GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterx: target with: pname with: param [

	<command: #glTexParameterx>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glTexParameterx' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterxOES: target with: pname with: param [

	<command: #glTexParameterxOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'param' type: 'GLfixed'>

	<apicall: void 'glTexParameterxOES' (GLenum GLenum GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterxv: target with: pname with: params [

	<command: #glTexParameterxv>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterxv' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texParameterxvOES: target with: pname with: params [

	<command: #glTexParameterxvOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #GetTextureParameter>
	<arg: 'params' type: 'GLfixed*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTexParameterxvOES' (GLenum GLenum GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texRenderbufferNV: target with: renderbuffer [

	<command: #glTexRenderbufferNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glTexRenderbufferNV' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage1D: target with: levels with: internalformat with: width [

	<command: #glTexStorage1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glTexStorage1D' (GLenum GLsizei GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage1DEXT: target with: levels with: internalformat with: width [

	<command: #glTexStorage1DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glTexStorage1DEXT' (GLenum GLsizei GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage2D: target with: levels with: internalformat with: width with: height [

	<command: #glTexStorage2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glTexStorage2D' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage2DEXT: target with: levels with: internalformat with: width with: height [

	<command: #glTexStorage2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glTexStorage2DEXT' (GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage2DMultisample: target with: samples with: internalformat with: width with: height with: fixedsamplelocations [

	<command: #glTexStorage2DMultisample>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexStorage2DMultisample' (GLenum GLsizei GLenum GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage3D: target with: levels with: internalformat with: width with: height with: depth [

	<command: #glTexStorage3D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>

	<apicall: void 'glTexStorage3D' (GLenum GLsizei GLenum GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage3DEXT: target with: levels with: internalformat with: width with: height with: depth [

	<command: #glTexStorage3DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>

	<apicall: void 'glTexStorage3DEXT' (GLenum GLsizei GLenum GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage3DMultisample: target with: samples with: internalformat with: width with: height with: depth with: fixedsamplelocations [

	<command: #glTexStorage3DMultisample>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexStorage3DMultisample' (GLenum GLsizei GLenum GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorage3DMultisampleOES: target with: samples with: internalformat with: width with: height with: depth with: fixedsamplelocations [

	<command: #glTexStorage3DMultisampleOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexStorage3DMultisampleOES' (GLenum GLsizei GLenum GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorageMem1DEXT: target with: levels with: internalFormat with: width with: memory with: offset [

	<command: #glTexStorageMem1DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTexStorageMem1DEXT' (GLenum GLsizei GLenum GLsizei GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorageMem2DEXT: target with: levels with: internalFormat with: width with: height with: memory with: offset [

	<command: #glTexStorageMem2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTexStorageMem2DEXT' (GLenum GLsizei GLenum GLsizei GLsizei GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorageMem2DMultisampleEXT: target with: samples with: internalFormat with: width with: height with: fixedSampleLocations with: memory with: offset [

	<command: #glTexStorageMem2DMultisampleEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTexStorageMem2DMultisampleEXT' (GLenum GLsizei GLenum GLsizei GLsizei GLboolean GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorageMem3DEXT: target with: levels with: internalFormat with: width with: height with: depth with: memory with: offset [

	<command: #glTexStorageMem3DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTexStorageMem3DEXT' (GLenum GLsizei GLenum GLsizei GLsizei GLsizei GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorageMem3DMultisampleEXT: target with: samples with: internalFormat with: width with: height with: depth with: fixedSampleLocations with: memory with: offset [

	<command: #glTexStorageMem3DMultisampleEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTexStorageMem3DMultisampleEXT' (GLenum GLsizei GLenum GLsizei GLsizei GLsizei GLboolean GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texStorageSparseAMD: target with: internalFormat with: width with: height with: depth with: layers with: flags [

	<command: #glTexStorageSparseAMD>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'layers' type: 'GLsizei'>
	<arg: 'flags' type: 'GLbitfield' group: #TextureStorageMaskAMD>

	<apicall: void 'glTexStorageSparseAMD' (GLenum GLenum GLsizei GLsizei GLsizei GLsizei GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texSubImage1D: target with: level with: xoffset with: width with: format with: type with: pixels [

	<command: #glTexSubImage1D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glTexSubImage1D' (GLenum GLint GLint GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texSubImage1DEXT: target with: level with: xoffset with: width with: format with: type with: pixels [

	<command: #glTexSubImage1DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glTexSubImage1DEXT' (GLenum GLint GLint GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texSubImage2D: target with: level with: xoffset with: yoffset with: width with: height with: format with: type with: pixels [

	<command: #glTexSubImage2D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glTexSubImage2D' (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texSubImage2DEXT: target with: level with: xoffset with: yoffset with: width with: height with: format with: type with: pixels [

	<command: #glTexSubImage2DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glTexSubImage2DEXT' (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texSubImage3D: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: pixels [

	<command: #glTexSubImage3D>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glTexSubImage3D' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texSubImage3DEXT: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: pixels [

	<command: #glTexSubImage3DEXT>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glTexSubImage3DEXT' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texSubImage3DOES: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: pixels [

	<command: #glTexSubImage3DOES>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glTexSubImage3DOES' (GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texSubImage4DSGIS: target with: level with: xoffset with: yoffset with: zoffset with: woffset with: width with: height with: depth with: size4d with: format with: type with: pixels [

	<command: #glTexSubImage4DSGIS>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'woffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'size4d' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth,size4d)'>

	<apicall: void 'glTexSubImage4DSGIS' (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureAttachMemoryNV: texture with: memory with: offset [

	<command: #glTextureAttachMemoryNV>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTextureAttachMemoryNV' (GLuint GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureBarrier [

	<command: #glTextureBarrier>
	<return: 'void'>

	<apicall: void 'glTextureBarrier' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureBarrierNV [

	<command: #glTextureBarrierNV>
	<return: 'void'>

	<apicall: void 'glTextureBarrierNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureBuffer: texture with: internalformat with: buffer [

	<command: #glTextureBuffer>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glTextureBuffer' (GLuint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureBufferEXT: texture with: target with: internalformat with: buffer [

	<command: #glTextureBufferEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glTextureBufferEXT' (GLuint GLenum GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureBufferRange: texture with: internalformat with: buffer with: offset with: size [

	<command: #glTextureBufferRange>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glTextureBufferRange' (GLuint GLenum GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureBufferRangeEXT: texture with: target with: internalformat with: buffer with: offset with: size [

	<command: #glTextureBufferRangeEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glTextureBufferRangeEXT' (GLuint GLenum GLenum GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureColorMaskSGIS: red with: green with: blue with: alpha [

	<command: #glTextureColorMaskSGIS>
	<return: 'void'>
	<arg: 'red' type: 'GLboolean' group: #Boolean>
	<arg: 'green' type: 'GLboolean' group: #Boolean>
	<arg: 'blue' type: 'GLboolean' group: #Boolean>
	<arg: 'alpha' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureColorMaskSGIS' (GLboolean GLboolean GLboolean GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureFoveationParametersQCOM: texture with: layer with: focalPoint with: focalX with: focalY with: gainX with: gainY with: foveaArea [

	<command: #glTextureFoveationParametersQCOM>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'layer' type: 'GLuint'>
	<arg: 'focalPoint' type: 'GLuint'>
	<arg: 'focalX' type: 'GLfloat' group: #CheckedFloat32>
	<arg: 'focalY' type: 'GLfloat' group: #CheckedFloat32>
	<arg: 'gainX' type: 'GLfloat' group: #CheckedFloat32>
	<arg: 'gainY' type: 'GLfloat' group: #CheckedFloat32>
	<arg: 'foveaArea' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glTextureFoveationParametersQCOM' (GLuint GLuint GLuint GLfloat GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureImage1DEXT: texture with: target with: level with: internalformat with: width with: border with: format with: type with: pixels [

	<command: #glTextureImage1DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glTextureImage1DEXT' (GLuint GLenum GLint GLint GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureImage2DEXT: texture with: target with: level with: internalformat with: width with: height with: border with: format with: type with: pixels [

	<command: #glTextureImage2DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glTextureImage2DEXT' (GLuint GLenum GLint GLint GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureImage2DMultisampleCoverageNV: texture with: target with: coverageSamples with: colorSamples with: internalFormat with: width with: height with: fixedSampleLocations [

	<command: #glTextureImage2DMultisampleCoverageNV>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'coverageSamples' type: 'GLsizei'>
	<arg: 'colorSamples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureImage2DMultisampleCoverageNV' (GLuint GLenum GLsizei GLsizei GLint GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureImage2DMultisampleNV: texture with: target with: samples with: internalFormat with: width with: height with: fixedSampleLocations [

	<command: #glTextureImage2DMultisampleNV>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureImage2DMultisampleNV' (GLuint GLenum GLsizei GLint GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureImage3DEXT: texture with: target with: level with: internalformat with: width with: height with: depth with: border with: format with: type with: pixels [

	<command: #glTextureImage3DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'internalformat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'border' type: 'GLint' group: #CheckedInt32>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glTextureImage3DEXT' (GLuint GLenum GLint GLint GLsizei GLsizei GLsizei GLint GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureImage3DMultisampleCoverageNV: texture with: target with: coverageSamples with: colorSamples with: internalFormat with: width with: height with: depth with: fixedSampleLocations [

	<command: #glTextureImage3DMultisampleCoverageNV>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'coverageSamples' type: 'GLsizei'>
	<arg: 'colorSamples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureImage3DMultisampleCoverageNV' (GLuint GLenum GLsizei GLsizei GLint GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureImage3DMultisampleNV: texture with: target with: samples with: internalFormat with: width with: height with: depth with: fixedSampleLocations [

	<command: #glTextureImage3DMultisampleNV>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLint' group: #InternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureImage3DMultisampleNV' (GLuint GLenum GLsizei GLint GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureLightEXT: pname [

	<command: #glTextureLightEXT>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #LightTexturePNameEXT>

	<apicall: void 'glTextureLightEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureMaterialEXT: face with: mode [

	<command: #glTextureMaterialEXT>
	<return: 'void'>
	<arg: 'face' type: 'GLenum' group: #MaterialFace>
	<arg: 'mode' type: 'GLenum' group: #MaterialParameter>

	<apicall: void 'glTextureMaterialEXT' (GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureNormalEXT: mode [

	<command: #glTextureNormalEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum' group: #TextureNormalModeEXT>

	<apicall: void 'glTextureNormalEXT' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texturePageCommitmentEXT: texture with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: commit [

	<command: #glTexturePageCommitmentEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexturePageCommitmentEXT' (GLuint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> texturePageCommitmentMemNV: texture with: layer with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: memory with: offset with: commit [

	<command: #glTexturePageCommitmentMemNV>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'layer' type: 'GLint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>
	<arg: 'commit' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTexturePageCommitmentMemNV' (GLuint GLint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLuint GLuint64 GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterIiv: texture with: pname with: params [

	<command: #glTextureParameterIiv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*'>

	<apicall: void 'glTextureParameterIiv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterIivEXT: texture with: target with: pname with: params [

	<command: #glTextureParameterIivEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTextureParameterIivEXT' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterIuiv: texture with: pname with: params [

	<command: #glTextureParameterIuiv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLuint*'>

	<apicall: void 'glTextureParameterIuiv' (GLuint GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterIuivEXT: texture with: target with: pname with: params [

	<command: #glTextureParameterIuivEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLuint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glTextureParameterIuivEXT' (GLuint GLenum GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterf: texture with: pname with: param [

	<command: #glTextureParameterf>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glTextureParameterf' (GLuint GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterfEXT: texture with: target with: pname with: param [

	<command: #glTextureParameterfEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLfloat' group: #CheckedFloat32>

	<apicall: void 'glTextureParameterfEXT' (GLuint GLenum GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterfv: texture with: pname with: param [

	<command: #glTextureParameterfv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLfloat*'>

	<apicall: void 'glTextureParameterfv' (GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterfvEXT: texture with: target with: pname with: params [

	<command: #glTextureParameterfvEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLfloat*' group: #CheckedFloat32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTextureParameterfvEXT' (GLuint GLenum GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameteri: texture with: pname with: param [

	<command: #glTextureParameteri>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glTextureParameteri' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameteriEXT: texture with: target with: pname with: param [

	<command: #glTextureParameteriEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLint' group: #CheckedInt32>

	<apicall: void 'glTextureParameteriEXT' (GLuint GLenum GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameteriv: texture with: pname with: param [

	<command: #glTextureParameteriv>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'param' type: 'GLint*'>

	<apicall: void 'glTextureParameteriv' (GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureParameterivEXT: texture with: target with: pname with: params [

	<command: #glTextureParameterivEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'pname' type: 'GLenum' group: #TextureParameterName>
	<arg: 'params' type: 'GLint*' group: #CheckedInt32 size: 'COMPSIZE(pname)'>

	<apicall: void 'glTextureParameterivEXT' (GLuint GLenum GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureRangeAPPLE: target with: length with: pointer [

	<command: #glTextureRangeAPPLE>
	<return: 'void'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'length'>

	<apicall: void 'glTextureRangeAPPLE' (GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureRenderbufferEXT: texture with: target with: renderbuffer [

	<command: #glTextureRenderbufferEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'renderbuffer' type: 'GLuint'>

	<apicall: void 'glTextureRenderbufferEXT' (GLuint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage1D: texture with: levels with: internalformat with: width [

	<command: #glTextureStorage1D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glTextureStorage1D' (GLuint GLsizei GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage1DEXT: texture with: target with: levels with: internalformat with: width [

	<command: #glTextureStorage1DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>

	<apicall: void 'glTextureStorage1DEXT' (GLuint GLenum GLsizei GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage2D: texture with: levels with: internalformat with: width with: height [

	<command: #glTextureStorage2D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glTextureStorage2D' (GLuint GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage2DEXT: texture with: target with: levels with: internalformat with: width with: height [

	<command: #glTextureStorage2DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glTextureStorage2DEXT' (GLuint GLenum GLsizei GLenum GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage2DMultisample: texture with: samples with: internalformat with: width with: height with: fixedsamplelocations [

	<command: #glTextureStorage2DMultisample>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureStorage2DMultisample' (GLuint GLsizei GLenum GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage2DMultisampleEXT: texture with: target with: samples with: internalformat with: width with: height with: fixedsamplelocations [

	<command: #glTextureStorage2DMultisampleEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureStorage2DMultisampleEXT' (GLuint GLenum GLsizei GLenum GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage3D: texture with: levels with: internalformat with: width with: height with: depth [

	<command: #glTextureStorage3D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>

	<apicall: void 'glTextureStorage3D' (GLuint GLsizei GLenum GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage3DEXT: texture with: target with: levels with: internalformat with: width with: height with: depth [

	<command: #glTextureStorage3DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>

	<apicall: void 'glTextureStorage3DEXT' (GLuint GLenum GLsizei GLenum GLsizei GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage3DMultisample: texture with: samples with: internalformat with: width with: height with: depth with: fixedsamplelocations [

	<command: #glTextureStorage3DMultisample>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureStorage3DMultisample' (GLuint GLsizei GLenum GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorage3DMultisampleEXT: texture with: target with: samples with: internalformat with: width with: height with: depth with: fixedsamplelocations [

	<command: #glTextureStorage3DMultisampleEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedsamplelocations' type: 'GLboolean' group: #Boolean>

	<apicall: void 'glTextureStorage3DMultisampleEXT' (GLuint GLenum GLsizei GLenum GLsizei GLsizei GLsizei GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorageMem1DEXT: texture with: levels with: internalFormat with: width with: memory with: offset [

	<command: #glTextureStorageMem1DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTextureStorageMem1DEXT' (GLuint GLsizei GLenum GLsizei GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorageMem2DEXT: texture with: levels with: internalFormat with: width with: height with: memory with: offset [

	<command: #glTextureStorageMem2DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTextureStorageMem2DEXT' (GLuint GLsizei GLenum GLsizei GLsizei GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorageMem2DMultisampleEXT: texture with: samples with: internalFormat with: width with: height with: fixedSampleLocations with: memory with: offset [

	<command: #glTextureStorageMem2DMultisampleEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTextureStorageMem2DMultisampleEXT' (GLuint GLsizei GLenum GLsizei GLsizei GLboolean GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorageMem3DEXT: texture with: levels with: internalFormat with: width with: height with: depth with: memory with: offset [

	<command: #glTextureStorageMem3DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'levels' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTextureStorageMem3DEXT' (GLuint GLsizei GLenum GLsizei GLsizei GLsizei GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorageMem3DMultisampleEXT: texture with: samples with: internalFormat with: width with: height with: depth with: fixedSampleLocations with: memory with: offset [

	<command: #glTextureStorageMem3DMultisampleEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'samples' type: 'GLsizei'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'fixedSampleLocations' type: 'GLboolean' group: #Boolean>
	<arg: 'memory' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint64'>

	<apicall: void 'glTextureStorageMem3DMultisampleEXT' (GLuint GLsizei GLenum GLsizei GLsizei GLsizei GLboolean GLuint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureStorageSparseAMD: texture with: target with: internalFormat with: width with: height with: depth with: layers with: flags [

	<command: #glTextureStorageSparseAMD>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'internalFormat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'layers' type: 'GLsizei'>
	<arg: 'flags' type: 'GLbitfield' group: #TextureStorageMaskAMD>

	<apicall: void 'glTextureStorageSparseAMD' (GLuint GLenum GLenum GLsizei GLsizei GLsizei GLsizei GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureSubImage1D: texture with: level with: xoffset with: width with: format with: type with: pixels [

	<command: #glTextureSubImage1D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*'>

	<apicall: void 'glTextureSubImage1D' (GLuint GLint GLint GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureSubImage1DEXT: texture with: target with: level with: xoffset with: width with: format with: type with: pixels [

	<command: #glTextureSubImage1DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width)'>

	<apicall: void 'glTextureSubImage1DEXT' (GLuint GLenum GLint GLint GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureSubImage2D: texture with: level with: xoffset with: yoffset with: width with: height with: format with: type with: pixels [

	<command: #glTextureSubImage2D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*'>

	<apicall: void 'glTextureSubImage2D' (GLuint GLint GLint GLint GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureSubImage2DEXT: texture with: target with: level with: xoffset with: yoffset with: width with: height with: format with: type with: pixels [

	<command: #glTextureSubImage2DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height)'>

	<apicall: void 'glTextureSubImage2DEXT' (GLuint GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureSubImage3D: texture with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: pixels [

	<command: #glTextureSubImage3D>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>
	<arg: 'xoffset' type: 'GLint'>
	<arg: 'yoffset' type: 'GLint'>
	<arg: 'zoffset' type: 'GLint'>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*'>

	<apicall: void 'glTextureSubImage3D' (GLuint GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureSubImage3DEXT: texture with: target with: level with: xoffset with: yoffset with: zoffset with: width with: height with: depth with: format with: type with: pixels [

	<command: #glTextureSubImage3DEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint' group: #Texture>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'level' type: 'GLint' group: #CheckedInt32>
	<arg: 'xoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'yoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'zoffset' type: 'GLint' group: #CheckedInt32>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>
	<arg: 'depth' type: 'GLsizei'>
	<arg: 'format' type: 'GLenum' group: #PixelFormat>
	<arg: 'type' type: 'GLenum' group: #PixelType>
	<arg: 'pixels' type: 'void*' size: 'COMPSIZE(format,type,width,height,depth)'>

	<apicall: void 'glTextureSubImage3DEXT' (GLuint GLenum GLint GLint GLint GLint GLsizei GLsizei GLsizei GLenum GLenum void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureView: texture with: target with: origtexture with: internalformat with: minlevel with: numlevels with: minlayer with: numlayers [

	<command: #glTextureView>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'origtexture' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'minlevel' type: 'GLuint'>
	<arg: 'numlevels' type: 'GLuint'>
	<arg: 'minlayer' type: 'GLuint'>
	<arg: 'numlayers' type: 'GLuint'>

	<apicall: void 'glTextureView' (GLuint GLenum GLuint GLenum GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureViewEXT: texture with: target with: origtexture with: internalformat with: minlevel with: numlevels with: minlayer with: numlayers [

	<command: #glTextureViewEXT>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'origtexture' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'minlevel' type: 'GLuint'>
	<arg: 'numlevels' type: 'GLuint'>
	<arg: 'minlayer' type: 'GLuint'>
	<arg: 'numlayers' type: 'GLuint'>

	<apicall: void 'glTextureViewEXT' (GLuint GLenum GLuint GLenum GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> textureViewOES: texture with: target with: origtexture with: internalformat with: minlevel with: numlevels with: minlayer with: numlayers [

	<command: #glTextureViewOES>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'target' type: 'GLenum' group: #TextureTarget>
	<arg: 'origtexture' type: 'GLuint'>
	<arg: 'internalformat' type: 'GLenum' group: #SizedInternalFormat>
	<arg: 'minlevel' type: 'GLuint'>
	<arg: 'numlevels' type: 'GLuint'>
	<arg: 'minlayer' type: 'GLuint'>
	<arg: 'numlayers' type: 'GLuint'>

	<apicall: void 'glTextureViewOES' (GLuint GLenum GLuint GLenum GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> trackMatrixNV: target with: address with: matrix with: transform [

	<command: #glTrackMatrixNV>
	<return: 'void'>
	<arg: 'target' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'address' type: 'GLuint'>
	<arg: 'matrix' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'transform' type: 'GLenum' group: #VertexAttribEnumNV>

	<apicall: void 'glTrackMatrixNV' (GLenum GLuint GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> transformFeedbackAttribsNV: count with: attribs with: bufferMode [

	<command: #glTransformFeedbackAttribsNV>
	<return: 'void'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'attribs' type: 'GLint*' size: 'COMPSIZE(count)'>
	<arg: 'bufferMode' type: 'GLenum'>

	<apicall: void 'glTransformFeedbackAttribsNV' (GLsizei GLint* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> transformFeedbackBufferBase: xfb with: index with: buffer [

	<command: #glTransformFeedbackBufferBase>
	<return: 'void'>
	<arg: 'xfb' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glTransformFeedbackBufferBase' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> transformFeedbackBufferRange: xfb with: index with: buffer with: offset with: size [

	<command: #glTransformFeedbackBufferRange>
	<return: 'void'>
	<arg: 'xfb' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'size' type: 'GLsizeiptr' group: #BufferSize>

	<apicall: void 'glTransformFeedbackBufferRange' (GLuint GLuint GLuint GLintptr GLsizeiptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> transformFeedbackStreamAttribsNV: count with: attribs with: nbuffers with: bufstreams with: bufferMode [

	<command: #glTransformFeedbackStreamAttribsNV>
	<return: 'void'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'attribs' type: 'GLint*' size: 'count'>
	<arg: 'nbuffers' type: 'GLsizei'>
	<arg: 'bufstreams' type: 'GLint*' size: 'nbuffers'>
	<arg: 'bufferMode' type: 'GLenum'>

	<apicall: void 'glTransformFeedbackStreamAttribsNV' (GLsizei GLint* GLsizei GLint* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> transformFeedbackVaryings: program with: count with: varyings with: bufferMode [

	<command: #glTransformFeedbackVaryings>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'varyings' type: 'GLchar**' size: 'count'>
	<arg: 'bufferMode' type: 'GLenum' group: #TransformFeedbackBufferMode>

	<apicall: void 'glTransformFeedbackVaryings' (GLuint GLsizei GLchar** GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> transformFeedbackVaryingsEXT: program with: count with: varyings with: bufferMode [

	<command: #glTransformFeedbackVaryingsEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'varyings' type: 'GLchar**' size: 'count'>
	<arg: 'bufferMode' type: 'GLenum'>

	<apicall: void 'glTransformFeedbackVaryingsEXT' (GLuint GLsizei GLchar** GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> transformFeedbackVaryingsNV: program with: count with: locations with: bufferMode [

	<command: #glTransformFeedbackVaryingsNV>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'locations' type: 'GLint*' size: 'count'>
	<arg: 'bufferMode' type: 'GLenum'>

	<apicall: void 'glTransformFeedbackVaryingsNV' (GLuint GLsizei GLint* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> transformPathNV: resultPath with: srcPath with: transformType with: transformValues [

	<command: #glTransformPathNV>
	<return: 'void'>
	<arg: 'resultPath' type: 'GLuint' group: #Path>
	<arg: 'srcPath' type: 'GLuint' group: #Path>
	<arg: 'transformType' type: 'GLenum' group: #PathTransformType>
	<arg: 'transformValues' type: 'GLfloat*' size: 'COMPSIZE(transformType)'>

	<apicall: void 'glTransformPathNV' (GLuint GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> translated: x with: y with: z [

	<command: #glTranslated>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glTranslated' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> translatef: x with: y with: z [

	<command: #glTranslatef>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glTranslatef' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> translatex: x with: y with: z [

	<command: #glTranslatex>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>

	<apicall: void 'glTranslatex' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> translatexOES: x with: y with: z [

	<command: #glTranslatexOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>

	<apicall: void 'glTranslatexOES' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1d: location with: x [

	<command: #glUniform1d>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLdouble'>

	<apicall: void 'glUniform1d' (GLint GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1dv: location with: count with: value [

	<command: #glUniform1dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*1'>

	<apicall: void 'glUniform1dv' (GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1f: location with: v0 [

	<command: #glUniform1f>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>

	<apicall: void 'glUniform1f' (GLint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1fARB: location with: v0 [

	<command: #glUniform1fARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>

	<apicall: void 'glUniform1fARB' (GLint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1fv: location with: count with: value [

	<command: #glUniform1fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*1'>

	<apicall: void 'glUniform1fv' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1fvARB: location with: count with: value [

	<command: #glUniform1fvARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*1'>

	<apicall: void 'glUniform1fvARB' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1i64ARB: location with: x [

	<command: #glUniform1i64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64'>

	<apicall: void 'glUniform1i64ARB' (GLint GLint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1i64NV: location with: x [

	<command: #glUniform1i64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64EXT'>

	<apicall: void 'glUniform1i64NV' (GLint GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1i64vARB: location with: count with: value [

	<command: #glUniform1i64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64*' size: 'count*1'>

	<apicall: void 'glUniform1i64vARB' (GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1i64vNV: location with: count with: value [

	<command: #glUniform1i64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64EXT*' size: 'count*1'>

	<apicall: void 'glUniform1i64vNV' (GLint GLsizei GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1i: location with: v0 [

	<command: #glUniform1i>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>

	<apicall: void 'glUniform1i' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1iARB: location with: v0 [

	<command: #glUniform1iARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>

	<apicall: void 'glUniform1iARB' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1iv: location with: count with: value [

	<command: #glUniform1iv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*1'>

	<apicall: void 'glUniform1iv' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1ivARB: location with: count with: value [

	<command: #glUniform1ivARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*1'>

	<apicall: void 'glUniform1ivARB' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1ui64ARB: location with: x [

	<command: #glUniform1ui64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64'>

	<apicall: void 'glUniform1ui64ARB' (GLint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1ui64NV: location with: x [

	<command: #glUniform1ui64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64EXT'>

	<apicall: void 'glUniform1ui64NV' (GLint GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1ui64vARB: location with: count with: value [

	<command: #glUniform1ui64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count*1'>

	<apicall: void 'glUniform1ui64vARB' (GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1ui64vNV: location with: count with: value [

	<command: #glUniform1ui64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count*1'>

	<apicall: void 'glUniform1ui64vNV' (GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1ui: location with: v0 [

	<command: #glUniform1ui>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>

	<apicall: void 'glUniform1ui' (GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1uiEXT: location with: v0 [

	<command: #glUniform1uiEXT>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>

	<apicall: void 'glUniform1uiEXT' (GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1uiv: location with: count with: value [

	<command: #glUniform1uiv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*1'>

	<apicall: void 'glUniform1uiv' (GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform1uivEXT: location with: count with: value [

	<command: #glUniform1uivEXT>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*1'>

	<apicall: void 'glUniform1uivEXT' (GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2d: location with: x with: y [

	<command: #glUniform2d>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>

	<apicall: void 'glUniform2d' (GLint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2dv: location with: count with: value [

	<command: #glUniform2dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*2'>

	<apicall: void 'glUniform2dv' (GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2f: location with: v0 with: v1 [

	<command: #glUniform2f>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>

	<apicall: void 'glUniform2f' (GLint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2fARB: location with: v0 with: v1 [

	<command: #glUniform2fARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>

	<apicall: void 'glUniform2fARB' (GLint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2fv: location with: count with: value [

	<command: #glUniform2fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*2'>

	<apicall: void 'glUniform2fv' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2fvARB: location with: count with: value [

	<command: #glUniform2fvARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*2'>

	<apicall: void 'glUniform2fvARB' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2i64ARB: location with: x with: y [

	<command: #glUniform2i64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64'>
	<arg: 'y' type: 'GLint64'>

	<apicall: void 'glUniform2i64ARB' (GLint GLint64 GLint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2i64NV: location with: x with: y [

	<command: #glUniform2i64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>

	<apicall: void 'glUniform2i64NV' (GLint GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2i64vARB: location with: count with: value [

	<command: #glUniform2i64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64*' size: 'count*2'>

	<apicall: void 'glUniform2i64vARB' (GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2i64vNV: location with: count with: value [

	<command: #glUniform2i64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64EXT*' size: 'count*2'>

	<apicall: void 'glUniform2i64vNV' (GLint GLsizei GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2i: location with: v0 with: v1 [

	<command: #glUniform2i>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>

	<apicall: void 'glUniform2i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2iARB: location with: v0 with: v1 [

	<command: #glUniform2iARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>

	<apicall: void 'glUniform2iARB' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2iv: location with: count with: value [

	<command: #glUniform2iv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*2'>

	<apicall: void 'glUniform2iv' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2ivARB: location with: count with: value [

	<command: #glUniform2ivARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*2'>

	<apicall: void 'glUniform2ivARB' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2ui64ARB: location with: x with: y [

	<command: #glUniform2ui64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64'>
	<arg: 'y' type: 'GLuint64'>

	<apicall: void 'glUniform2ui64ARB' (GLint GLuint64 GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2ui64NV: location with: x with: y [

	<command: #glUniform2ui64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>

	<apicall: void 'glUniform2ui64NV' (GLint GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2ui64vARB: location with: count with: value [

	<command: #glUniform2ui64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count*2'>

	<apicall: void 'glUniform2ui64vARB' (GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2ui64vNV: location with: count with: value [

	<command: #glUniform2ui64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count*2'>

	<apicall: void 'glUniform2ui64vNV' (GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2ui: location with: v0 with: v1 [

	<command: #glUniform2ui>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>

	<apicall: void 'glUniform2ui' (GLint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2uiEXT: location with: v0 with: v1 [

	<command: #glUniform2uiEXT>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>

	<apicall: void 'glUniform2uiEXT' (GLint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2uiv: location with: count with: value [

	<command: #glUniform2uiv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*2'>

	<apicall: void 'glUniform2uiv' (GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform2uivEXT: location with: count with: value [

	<command: #glUniform2uivEXT>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*2'>

	<apicall: void 'glUniform2uivEXT' (GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3d: location with: x with: y with: z [

	<command: #glUniform3d>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glUniform3d' (GLint GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3dv: location with: count with: value [

	<command: #glUniform3dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*3'>

	<apicall: void 'glUniform3dv' (GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3f: location with: v0 with: v1 with: v2 [

	<command: #glUniform3f>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>
	<arg: 'v2' type: 'GLfloat'>

	<apicall: void 'glUniform3f' (GLint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3fARB: location with: v0 with: v1 with: v2 [

	<command: #glUniform3fARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>
	<arg: 'v2' type: 'GLfloat'>

	<apicall: void 'glUniform3fARB' (GLint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3fv: location with: count with: value [

	<command: #glUniform3fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*3'>

	<apicall: void 'glUniform3fv' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3fvARB: location with: count with: value [

	<command: #glUniform3fvARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*3'>

	<apicall: void 'glUniform3fvARB' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3i64ARB: location with: x with: y with: z [

	<command: #glUniform3i64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64'>
	<arg: 'y' type: 'GLint64'>
	<arg: 'z' type: 'GLint64'>

	<apicall: void 'glUniform3i64ARB' (GLint GLint64 GLint64 GLint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3i64NV: location with: x with: y with: z [

	<command: #glUniform3i64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>
	<arg: 'z' type: 'GLint64EXT'>

	<apicall: void 'glUniform3i64NV' (GLint GLint64EXT GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3i64vARB: location with: count with: value [

	<command: #glUniform3i64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64*' size: 'count*3'>

	<apicall: void 'glUniform3i64vARB' (GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3i64vNV: location with: count with: value [

	<command: #glUniform3i64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64EXT*' size: 'count*3'>

	<apicall: void 'glUniform3i64vNV' (GLint GLsizei GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3i: location with: v0 with: v1 with: v2 [

	<command: #glUniform3i>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>
	<arg: 'v2' type: 'GLint'>

	<apicall: void 'glUniform3i' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3iARB: location with: v0 with: v1 with: v2 [

	<command: #glUniform3iARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>
	<arg: 'v2' type: 'GLint'>

	<apicall: void 'glUniform3iARB' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3iv: location with: count with: value [

	<command: #glUniform3iv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*3'>

	<apicall: void 'glUniform3iv' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3ivARB: location with: count with: value [

	<command: #glUniform3ivARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*3'>

	<apicall: void 'glUniform3ivARB' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3ui64ARB: location with: x with: y with: z [

	<command: #glUniform3ui64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64'>
	<arg: 'y' type: 'GLuint64'>
	<arg: 'z' type: 'GLuint64'>

	<apicall: void 'glUniform3ui64ARB' (GLint GLuint64 GLuint64 GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3ui64NV: location with: x with: y with: z [

	<command: #glUniform3ui64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>
	<arg: 'z' type: 'GLuint64EXT'>

	<apicall: void 'glUniform3ui64NV' (GLint GLuint64EXT GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3ui64vARB: location with: count with: value [

	<command: #glUniform3ui64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count*3'>

	<apicall: void 'glUniform3ui64vARB' (GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3ui64vNV: location with: count with: value [

	<command: #glUniform3ui64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count*3'>

	<apicall: void 'glUniform3ui64vNV' (GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3ui: location with: v0 with: v1 with: v2 [

	<command: #glUniform3ui>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>
	<arg: 'v2' type: 'GLuint'>

	<apicall: void 'glUniform3ui' (GLint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3uiEXT: location with: v0 with: v1 with: v2 [

	<command: #glUniform3uiEXT>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>
	<arg: 'v2' type: 'GLuint'>

	<apicall: void 'glUniform3uiEXT' (GLint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3uiv: location with: count with: value [

	<command: #glUniform3uiv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*3'>

	<apicall: void 'glUniform3uiv' (GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform3uivEXT: location with: count with: value [

	<command: #glUniform3uivEXT>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*3'>

	<apicall: void 'glUniform3uivEXT' (GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4d: location with: x with: y with: z with: w [

	<command: #glUniform4d>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glUniform4d' (GLint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4dv: location with: count with: value [

	<command: #glUniform4dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLdouble*' size: 'count*4'>

	<apicall: void 'glUniform4dv' (GLint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4f: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glUniform4f>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>
	<arg: 'v2' type: 'GLfloat'>
	<arg: 'v3' type: 'GLfloat'>

	<apicall: void 'glUniform4f' (GLint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4fARB: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glUniform4fARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLfloat'>
	<arg: 'v1' type: 'GLfloat'>
	<arg: 'v2' type: 'GLfloat'>
	<arg: 'v3' type: 'GLfloat'>

	<apicall: void 'glUniform4fARB' (GLint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4fv: location with: count with: value [

	<command: #glUniform4fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glUniform4fv' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4fvARB: location with: count with: value [

	<command: #glUniform4fvARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glUniform4fvARB' (GLint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4i64ARB: location with: x with: y with: z with: w [

	<command: #glUniform4i64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64'>
	<arg: 'y' type: 'GLint64'>
	<arg: 'z' type: 'GLint64'>
	<arg: 'w' type: 'GLint64'>

	<apicall: void 'glUniform4i64ARB' (GLint GLint64 GLint64 GLint64 GLint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4i64NV: location with: x with: y with: z with: w [

	<command: #glUniform4i64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>
	<arg: 'z' type: 'GLint64EXT'>
	<arg: 'w' type: 'GLint64EXT'>

	<apicall: void 'glUniform4i64NV' (GLint GLint64EXT GLint64EXT GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4i64vARB: location with: count with: value [

	<command: #glUniform4i64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64*' size: 'count*4'>

	<apicall: void 'glUniform4i64vARB' (GLint GLsizei GLint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4i64vNV: location with: count with: value [

	<command: #glUniform4i64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint64EXT*' size: 'count*4'>

	<apicall: void 'glUniform4i64vNV' (GLint GLsizei GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4i: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glUniform4i>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>
	<arg: 'v2' type: 'GLint'>
	<arg: 'v3' type: 'GLint'>

	<apicall: void 'glUniform4i' (GLint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4iARB: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glUniform4iARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLint'>
	<arg: 'v1' type: 'GLint'>
	<arg: 'v2' type: 'GLint'>
	<arg: 'v3' type: 'GLint'>

	<apicall: void 'glUniform4iARB' (GLint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4iv: location with: count with: value [

	<command: #glUniform4iv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*4'>

	<apicall: void 'glUniform4iv' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4ivARB: location with: count with: value [

	<command: #glUniform4ivARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLint*' size: 'count*4'>

	<apicall: void 'glUniform4ivARB' (GLint GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4ui64ARB: location with: x with: y with: z with: w [

	<command: #glUniform4ui64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64'>
	<arg: 'y' type: 'GLuint64'>
	<arg: 'z' type: 'GLuint64'>
	<arg: 'w' type: 'GLuint64'>

	<apicall: void 'glUniform4ui64ARB' (GLint GLuint64 GLuint64 GLuint64 GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4ui64NV: location with: x with: y with: z with: w [

	<command: #glUniform4ui64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>
	<arg: 'z' type: 'GLuint64EXT'>
	<arg: 'w' type: 'GLuint64EXT'>

	<apicall: void 'glUniform4ui64NV' (GLint GLuint64EXT GLuint64EXT GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4ui64vARB: location with: count with: value [

	<command: #glUniform4ui64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count*4'>

	<apicall: void 'glUniform4ui64vARB' (GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4ui64vNV: location with: count with: value [

	<command: #glUniform4ui64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count*4'>

	<apicall: void 'glUniform4ui64vNV' (GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4ui: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glUniform4ui>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>
	<arg: 'v2' type: 'GLuint'>
	<arg: 'v3' type: 'GLuint'>

	<apicall: void 'glUniform4ui' (GLint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4uiEXT: location with: v0 with: v1 with: v2 with: v3 [

	<command: #glUniform4uiEXT>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'v0' type: 'GLuint'>
	<arg: 'v1' type: 'GLuint'>
	<arg: 'v2' type: 'GLuint'>
	<arg: 'v3' type: 'GLuint'>

	<apicall: void 'glUniform4uiEXT' (GLint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4uiv: location with: count with: value [

	<command: #glUniform4uiv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*4'>

	<apicall: void 'glUniform4uiv' (GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniform4uivEXT: location with: count with: value [

	<command: #glUniform4uivEXT>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint*' size: 'count*4'>

	<apicall: void 'glUniform4uivEXT' (GLint GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformBlockBinding: program with: uniformBlockIndex with: uniformBlockBinding [

	<command: #glUniformBlockBinding>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'uniformBlockIndex' type: 'GLuint'>
	<arg: 'uniformBlockBinding' type: 'GLuint'>

	<apicall: void 'glUniformBlockBinding' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformBufferEXT: program with: location with: buffer [

	<command: #glUniformBufferEXT>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>
	<arg: 'location' type: 'GLint'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glUniformBufferEXT' (GLuint GLint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformHandleui64ARB: location with: value [

	<command: #glUniformHandleui64ARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'value' type: 'GLuint64'>

	<apicall: void 'glUniformHandleui64ARB' (GLint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformHandleui64IMG: location with: value [

	<command: #glUniformHandleui64IMG>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'value' type: 'GLuint64'>

	<apicall: void 'glUniformHandleui64IMG' (GLint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformHandleui64NV: location with: value [

	<command: #glUniformHandleui64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'value' type: 'GLuint64'>

	<apicall: void 'glUniformHandleui64NV' (GLint GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformHandleui64vARB: location with: count with: value [

	<command: #glUniformHandleui64vARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count'>

	<apicall: void 'glUniformHandleui64vARB' (GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformHandleui64vIMG: location with: count with: value [

	<command: #glUniformHandleui64vIMG>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count'>

	<apicall: void 'glUniformHandleui64vIMG' (GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformHandleui64vNV: location with: count with: value [

	<command: #glUniformHandleui64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64*' size: 'count'>

	<apicall: void 'glUniformHandleui64vNV' (GLint GLsizei GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix2dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*4'>

	<apicall: void 'glUniformMatrix2dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix2fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glUniformMatrix2fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2fvARB: location with: count with: transpose with: value [

	<command: #glUniformMatrix2fvARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glUniformMatrix2fvARB' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2x3dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix2x3dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*6'>

	<apicall: void 'glUniformMatrix2x3dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2x3fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix2x3fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*6'>

	<apicall: void 'glUniformMatrix2x3fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2x3fvNV: location with: count with: transpose with: value [

	<command: #glUniformMatrix2x3fvNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*6'>

	<apicall: void 'glUniformMatrix2x3fvNV' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2x4dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix2x4dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*8'>

	<apicall: void 'glUniformMatrix2x4dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2x4fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix2x4fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*8'>

	<apicall: void 'glUniformMatrix2x4fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix2x4fvNV: location with: count with: transpose with: value [

	<command: #glUniformMatrix2x4fvNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*8'>

	<apicall: void 'glUniformMatrix2x4fvNV' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix3dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*9'>

	<apicall: void 'glUniformMatrix3dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix3fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*9'>

	<apicall: void 'glUniformMatrix3fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3fvARB: location with: count with: transpose with: value [

	<command: #glUniformMatrix3fvARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*9'>

	<apicall: void 'glUniformMatrix3fvARB' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3x2dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix3x2dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*6'>

	<apicall: void 'glUniformMatrix3x2dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3x2fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix3x2fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*6'>

	<apicall: void 'glUniformMatrix3x2fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3x2fvNV: location with: count with: transpose with: value [

	<command: #glUniformMatrix3x2fvNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*6'>

	<apicall: void 'glUniformMatrix3x2fvNV' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3x4dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix3x4dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*12'>

	<apicall: void 'glUniformMatrix3x4dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3x4fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix3x4fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*12'>

	<apicall: void 'glUniformMatrix3x4fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix3x4fvNV: location with: count with: transpose with: value [

	<command: #glUniformMatrix3x4fvNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*12'>

	<apicall: void 'glUniformMatrix3x4fvNV' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix4dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*16'>

	<apicall: void 'glUniformMatrix4dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix4fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*16'>

	<apicall: void 'glUniformMatrix4fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4fvARB: location with: count with: transpose with: value [

	<command: #glUniformMatrix4fvARB>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*16'>

	<apicall: void 'glUniformMatrix4fvARB' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4x2dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix4x2dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*8'>

	<apicall: void 'glUniformMatrix4x2dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4x2fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix4x2fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*8'>

	<apicall: void 'glUniformMatrix4x2fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4x2fvNV: location with: count with: transpose with: value [

	<command: #glUniformMatrix4x2fvNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*8'>

	<apicall: void 'glUniformMatrix4x2fvNV' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4x3dv: location with: count with: transpose with: value [

	<command: #glUniformMatrix4x3dv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLdouble*' size: 'count*12'>

	<apicall: void 'glUniformMatrix4x3dv' (GLint GLsizei GLboolean GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4x3fv: location with: count with: transpose with: value [

	<command: #glUniformMatrix4x3fv>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*12'>

	<apicall: void 'glUniformMatrix4x3fv' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformMatrix4x3fvNV: location with: count with: transpose with: value [

	<command: #glUniformMatrix4x3fvNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'transpose' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLfloat*' size: 'count*12'>

	<apicall: void 'glUniformMatrix4x3fvNV' (GLint GLsizei GLboolean GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformSubroutinesuiv: shadertype with: count with: indices [

	<command: #glUniformSubroutinesuiv>
	<return: 'void'>
	<arg: 'shadertype' type: 'GLenum' group: #ShaderType>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'indices' type: 'GLuint*' size: 'count'>

	<apicall: void 'glUniformSubroutinesuiv' (GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformui64NV: location with: value [

	<command: #glUniformui64NV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'value' type: 'GLuint64EXT'>

	<apicall: void 'glUniformui64NV' (GLint GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uniformui64vNV: location with: count with: value [

	<command: #glUniformui64vNV>
	<return: 'void'>
	<arg: 'location' type: 'GLint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'value' type: 'GLuint64EXT*' size: 'count*1'>

	<apicall: void 'glUniformui64vNV' (GLint GLsizei GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> unlockArraysEXT [

	<command: #glUnlockArraysEXT>
	<return: 'void'>

	<apicall: void 'glUnlockArraysEXT' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> unmapBuffer: target [

	<command: #glUnmapBuffer>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>

	<apicall: GLboolean 'glUnmapBuffer' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> unmapBufferARB: target [

	<command: #glUnmapBufferARB>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum' group: #BufferTargetARB>

	<apicall: GLboolean 'glUnmapBufferARB' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> unmapBufferOES: target [

	<command: #glUnmapBufferOES>
	<return: 'GLboolean'>
	<arg: 'target' type: 'GLenum'>

	<apicall: GLboolean 'glUnmapBufferOES' (GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> unmapNamedBuffer: buffer [

	<command: #glUnmapNamedBuffer>
	<return: 'GLboolean'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: GLboolean 'glUnmapNamedBuffer' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> unmapNamedBufferEXT: buffer [

	<command: #glUnmapNamedBufferEXT>
	<return: 'GLboolean'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: GLboolean 'glUnmapNamedBufferEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> unmapObjectBufferATI: buffer [

	<command: #glUnmapObjectBufferATI>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glUnmapObjectBufferATI' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> unmapTexture2DINTEL: texture with: level [

	<command: #glUnmapTexture2DINTEL>
	<return: 'void'>
	<arg: 'texture' type: 'GLuint'>
	<arg: 'level' type: 'GLint'>

	<apicall: void 'glUnmapTexture2DINTEL' (GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> updateObjectBufferATI: buffer with: offset with: size with: pointer with: preserve [

	<command: #glUpdateObjectBufferATI>
	<return: 'void'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint'>
	<arg: 'size' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'size'>
	<arg: 'preserve' type: 'GLenum' group: #PreserveModeATI>

	<apicall: void 'glUpdateObjectBufferATI' (GLuint GLuint GLsizei void* GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> uploadGpuMaskNVX: mask [

	<command: #glUploadGpuMaskNVX>
	<return: 'void'>
	<arg: 'mask' type: 'GLbitfield'>

	<apicall: void 'glUploadGpuMaskNVX' (GLbitfield)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> useProgram: program [

	<command: #glUseProgram>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glUseProgram' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> useProgramObjectARB: programObj [

	<command: #glUseProgramObjectARB>
	<return: 'void'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>

	<apicall: void 'glUseProgramObjectARB' (GLhandleARB)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> useProgramStages: pipeline with: stages with: program [

	<command: #glUseProgramStages>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>
	<arg: 'stages' type: 'GLbitfield' group: #UseProgramStageMask>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glUseProgramStages' (GLuint GLbitfield GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> useProgramStagesEXT: pipeline with: stages with: program [

	<command: #glUseProgramStagesEXT>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>
	<arg: 'stages' type: 'GLbitfield' group: #UseProgramStageMask>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glUseProgramStagesEXT' (GLuint GLbitfield GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> useShaderProgramEXT: type with: program [

	<command: #glUseShaderProgramEXT>
	<return: 'void'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glUseShaderProgramEXT' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> validateProgram: program [

	<command: #glValidateProgram>
	<return: 'void'>
	<arg: 'program' type: 'GLuint'>

	<apicall: void 'glValidateProgram' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> validateProgramARB: programObj [

	<command: #glValidateProgramARB>
	<return: 'void'>
	<arg: 'programObj' type: 'GLhandleARB' group: #handleARB>

	<apicall: void 'glValidateProgramARB' (GLhandleARB)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> validateProgramPipeline: pipeline [

	<command: #glValidateProgramPipeline>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>

	<apicall: void 'glValidateProgramPipeline' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> validateProgramPipelineEXT: pipeline [

	<command: #glValidateProgramPipelineEXT>
	<return: 'void'>
	<arg: 'pipeline' type: 'GLuint'>

	<apicall: void 'glValidateProgramPipelineEXT' (GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantArrayObjectATI: id with: type with: stride with: buffer with: offset [

	<command: #glVariantArrayObjectATI>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #ScalarType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint'>

	<apicall: void 'glVariantArrayObjectATI' (GLuint GLenum GLsizei GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantPointerEXT: id with: type with: stride with: addr [

	<command: #glVariantPointerEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #ScalarType>
	<arg: 'stride' type: 'GLuint'>
	<arg: 'addr' type: 'void*' size: 'COMPSIZE(id,type,stride)'>

	<apicall: void 'glVariantPointerEXT' (GLuint GLenum GLuint void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantbvEXT: id with: addr [

	<command: #glVariantbvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'addr' type: 'GLbyte*' size: 'COMPSIZE(id)'>

	<apicall: void 'glVariantbvEXT' (GLuint GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantdvEXT: id with: addr [

	<command: #glVariantdvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'addr' type: 'GLdouble*' size: 'COMPSIZE(id)'>

	<apicall: void 'glVariantdvEXT' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantfvEXT: id with: addr [

	<command: #glVariantfvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'addr' type: 'GLfloat*' size: 'COMPSIZE(id)'>

	<apicall: void 'glVariantfvEXT' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantivEXT: id with: addr [

	<command: #glVariantivEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'addr' type: 'GLint*' size: 'COMPSIZE(id)'>

	<apicall: void 'glVariantivEXT' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantsvEXT: id with: addr [

	<command: #glVariantsvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'addr' type: 'GLshort*' size: 'COMPSIZE(id)'>

	<apicall: void 'glVariantsvEXT' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantubvEXT: id with: addr [

	<command: #glVariantubvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'addr' type: 'GLubyte*' size: 'COMPSIZE(id)'>

	<apicall: void 'glVariantubvEXT' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantuivEXT: id with: addr [

	<command: #glVariantuivEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'addr' type: 'GLuint*' size: 'COMPSIZE(id)'>

	<apicall: void 'glVariantuivEXT' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> variantusvEXT: id with: addr [

	<command: #glVariantusvEXT>
	<return: 'void'>
	<arg: 'id' type: 'GLuint'>
	<arg: 'addr' type: 'GLushort*' size: 'COMPSIZE(id)'>

	<apicall: void 'glVariantusvEXT' (GLuint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauFiniNV [

	<command: #glVDPAUFiniNV>
	<return: 'void'>

	<apicall: void 'glVDPAUFiniNV' ()>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauGetSurfaceivNV: surface with: pname with: count with: length with: values [

	<command: #glVDPAUGetSurfaceivNV>
	<return: 'void'>
	<arg: 'surface' type: 'GLvdpauSurfaceNV' group: #vdpauSurfaceNV>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'length' type: 'GLsizei*'>
	<arg: 'values' type: 'GLint*' size: 'count'>

	<apicall: void 'glVDPAUGetSurfaceivNV' (GLvdpauSurfaceNV GLenum GLsizei GLsizei* GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauInitNV: vdpDevice with: getProcAddress [

	<command: #glVDPAUInitNV>
	<return: 'void'>
	<arg: 'vdpDevice' type: 'void*'>
	<arg: 'getProcAddress' type: 'void*'>

	<apicall: void 'glVDPAUInitNV' (void* void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauIsSurfaceNV: surface [

	<command: #glVDPAUIsSurfaceNV>
	<return: 'GLboolean'>
	<arg: 'surface' type: 'GLvdpauSurfaceNV' group: #vdpauSurfaceNV>

	<apicall: GLboolean 'glVDPAUIsSurfaceNV' (GLvdpauSurfaceNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauMapSurfacesNV: numSurfaces with: surfaces [

	<command: #glVDPAUMapSurfacesNV>
	<return: 'void'>
	<arg: 'numSurfaces' type: 'GLsizei'>
	<arg: 'surfaces' type: 'GLvdpauSurfaceNV*' group: #vdpauSurfaceNV size: 'numSurfaces'>

	<apicall: void 'glVDPAUMapSurfacesNV' (GLsizei GLvdpauSurfaceNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauRegisterOutputSurfaceNV: vdpSurface with: target with: numTextureNames with: textureNames [

	<command: #glVDPAURegisterOutputSurfaceNV>
	<return: 'GLvdpauSurfaceNV'>
	<arg: 'vdpSurface' type: 'void*'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'numTextureNames' type: 'GLsizei'>
	<arg: 'textureNames' type: 'GLuint*' size: 'numTextureNames'>

	<apicall: GLvdpauSurfaceNV 'glVDPAURegisterOutputSurfaceNV' (void* GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauRegisterVideoSurfaceNV: vdpSurface with: target with: numTextureNames with: textureNames [

	<command: #glVDPAURegisterVideoSurfaceNV>
	<return: 'GLvdpauSurfaceNV'>
	<arg: 'vdpSurface' type: 'void*'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'numTextureNames' type: 'GLsizei'>
	<arg: 'textureNames' type: 'GLuint*' size: 'numTextureNames'>

	<apicall: GLvdpauSurfaceNV 'glVDPAURegisterVideoSurfaceNV' (void* GLenum GLsizei GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauRegisterVideoSurfaceWithPictureStructureNV: vdpSurface with: target with: numTextureNames with: textureNames with: isFrameStructure [

	<command: #glVDPAURegisterVideoSurfaceWithPictureStructureNV>
	<return: 'GLvdpauSurfaceNV'>
	<arg: 'vdpSurface' type: 'void*'>
	<arg: 'target' type: 'GLenum'>
	<arg: 'numTextureNames' type: 'GLsizei'>
	<arg: 'textureNames' type: 'GLuint*' size: 'numTextureNames'>
	<arg: 'isFrameStructure' type: 'GLboolean' group: #Boolean>

	<apicall: GLvdpauSurfaceNV 'glVDPAURegisterVideoSurfaceWithPictureStructureNV' (void* GLenum GLsizei GLuint* GLboolean)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauSurfaceAccessNV: surface with: access [

	<command: #glVDPAUSurfaceAccessNV>
	<return: 'void'>
	<arg: 'surface' type: 'GLvdpauSurfaceNV' group: #vdpauSurfaceNV>
	<arg: 'access' type: 'GLenum'>

	<apicall: void 'glVDPAUSurfaceAccessNV' (GLvdpauSurfaceNV GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauUnmapSurfacesNV: numSurface with: surfaces [

	<command: #glVDPAUUnmapSurfacesNV>
	<return: 'void'>
	<arg: 'numSurface' type: 'GLsizei'>
	<arg: 'surfaces' type: 'GLvdpauSurfaceNV*' group: #vdpauSurfaceNV size: 'numSurface'>

	<apicall: void 'glVDPAUUnmapSurfacesNV' (GLsizei GLvdpauSurfaceNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vdpauUnregisterSurfaceNV: surface [

	<command: #glVDPAUUnregisterSurfaceNV>
	<return: 'void'>
	<arg: 'surface' type: 'GLvdpauSurfaceNV' group: #vdpauSurfaceNV>

	<apicall: void 'glVDPAUUnregisterSurfaceNV' (GLvdpauSurfaceNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2bOES: x with: y [

	<command: #glVertex2bOES>
	<return: 'void'>
	<arg: 'x' type: 'GLbyte'>
	<arg: 'y' type: 'GLbyte'>

	<apicall: void 'glVertex2bOES' (GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2bvOES: coords [

	<command: #glVertex2bvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLbyte*' size: '2'>

	<apicall: void 'glVertex2bvOES' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2d: x with: y [

	<command: #glVertex2d>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glVertex2d' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2dv: v [

	<command: #glVertex2dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glVertex2dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2f: x with: y [

	<command: #glVertex2f>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glVertex2f' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2fv: v [

	<command: #glVertex2fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glVertex2fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2hNV: x with: y [

	<command: #glVertex2hNV>
	<return: 'void'>
	<arg: 'x' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'y' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glVertex2hNV' (GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2hvNV: v [

	<command: #glVertex2hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '2'>

	<apicall: void 'glVertex2hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2i: x with: y [

	<command: #glVertex2i>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>

	<apicall: void 'glVertex2i' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2iv: v [

	<command: #glVertex2iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glVertex2iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2s: x with: y [

	<command: #glVertex2s>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>

	<apicall: void 'glVertex2s' (GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2sv: v [

	<command: #glVertex2sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glVertex2sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2xOES: x [

	<command: #glVertex2xOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>

	<apicall: void 'glVertex2xOES' (GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex2xvOES: coords [

	<command: #glVertex2xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '2'>

	<apicall: void 'glVertex2xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3bOES: x with: y with: z [

	<command: #glVertex3bOES>
	<return: 'void'>
	<arg: 'x' type: 'GLbyte'>
	<arg: 'y' type: 'GLbyte'>
	<arg: 'z' type: 'GLbyte'>

	<apicall: void 'glVertex3bOES' (GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3bvOES: coords [

	<command: #glVertex3bvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLbyte*' size: '3'>

	<apicall: void 'glVertex3bvOES' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3d: x with: y with: z [

	<command: #glVertex3d>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>
	<arg: 'z' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glVertex3d' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3dv: v [

	<command: #glVertex3dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glVertex3dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3f: x with: y with: z [

	<command: #glVertex3f>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>
	<arg: 'z' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glVertex3f' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3fv: v [

	<command: #glVertex3fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glVertex3fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3hNV: x with: y with: z [

	<command: #glVertex3hNV>
	<return: 'void'>
	<arg: 'x' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'y' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'z' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glVertex3hNV' (GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3hvNV: v [

	<command: #glVertex3hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '3'>

	<apicall: void 'glVertex3hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3i: x with: y with: z [

	<command: #glVertex3i>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>
	<arg: 'z' type: 'GLint' group: #CoordI>

	<apicall: void 'glVertex3i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3iv: v [

	<command: #glVertex3iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '3'>

	<apicall: void 'glVertex3iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3s: x with: y with: z [

	<command: #glVertex3s>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>
	<arg: 'z' type: 'GLshort' group: #CoordS>

	<apicall: void 'glVertex3s' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3sv: v [

	<command: #glVertex3sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '3'>

	<apicall: void 'glVertex3sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3xOES: x with: y [

	<command: #glVertex3xOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>

	<apicall: void 'glVertex3xOES' (GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex3xvOES: coords [

	<command: #glVertex3xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '3'>

	<apicall: void 'glVertex3xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4bOES: x with: y with: z with: w [

	<command: #glVertex4bOES>
	<return: 'void'>
	<arg: 'x' type: 'GLbyte'>
	<arg: 'y' type: 'GLbyte'>
	<arg: 'z' type: 'GLbyte'>
	<arg: 'w' type: 'GLbyte'>

	<apicall: void 'glVertex4bOES' (GLbyte GLbyte GLbyte GLbyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4bvOES: coords [

	<command: #glVertex4bvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLbyte*' size: '4'>

	<apicall: void 'glVertex4bvOES' (GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4d: x with: y with: z with: w [

	<command: #glVertex4d>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>
	<arg: 'z' type: 'GLdouble' group: #CoordD>
	<arg: 'w' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glVertex4d' (GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4dv: v [

	<command: #glVertex4dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '4'>

	<apicall: void 'glVertex4dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4f: x with: y with: z with: w [

	<command: #glVertex4f>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>
	<arg: 'z' type: 'GLfloat' group: #CoordF>
	<arg: 'w' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glVertex4f' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4fv: v [

	<command: #glVertex4fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '4'>

	<apicall: void 'glVertex4fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4hNV: x with: y with: z with: w [

	<command: #glVertex4hNV>
	<return: 'void'>
	<arg: 'x' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'y' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'z' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'w' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glVertex4hNV' (GLhalfNV GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4hvNV: v [

	<command: #glVertex4hvNV>
	<return: 'void'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '4'>

	<apicall: void 'glVertex4hvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4i: x with: y with: z with: w [

	<command: #glVertex4i>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>
	<arg: 'z' type: 'GLint' group: #CoordI>
	<arg: 'w' type: 'GLint' group: #CoordI>

	<apicall: void 'glVertex4i' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4iv: v [

	<command: #glVertex4iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '4'>

	<apicall: void 'glVertex4iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4s: x with: y with: z with: w [

	<command: #glVertex4s>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>
	<arg: 'z' type: 'GLshort' group: #CoordS>
	<arg: 'w' type: 'GLshort' group: #CoordS>

	<apicall: void 'glVertex4s' (GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4sv: v [

	<command: #glVertex4sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '4'>

	<apicall: void 'glVertex4sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4xOES: x with: y with: z [

	<command: #glVertex4xOES>
	<return: 'void'>
	<arg: 'x' type: 'GLfixed'>
	<arg: 'y' type: 'GLfixed'>
	<arg: 'z' type: 'GLfixed'>

	<apicall: void 'glVertex4xOES' (GLfixed GLfixed GLfixed)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertex4xvOES: coords [

	<command: #glVertex4xvOES>
	<return: 'void'>
	<arg: 'coords' type: 'GLfixed*' size: '4'>

	<apicall: void 'glVertex4xvOES' (GLfixed*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayAttribBinding: vaobj with: attribindex with: bindingindex [

	<command: #glVertexArrayAttribBinding>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'bindingindex' type: 'GLuint'>

	<apicall: void 'glVertexArrayAttribBinding' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayAttribFormat: vaobj with: attribindex with: size with: type with: normalized with: relativeoffset [

	<command: #glVertexArrayAttribFormat>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexArrayAttribFormat' (GLuint GLuint GLint GLenum GLboolean GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayAttribIFormat: vaobj with: attribindex with: size with: type with: relativeoffset [

	<command: #glVertexArrayAttribIFormat>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribIType>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexArrayAttribIFormat' (GLuint GLuint GLint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayAttribLFormat: vaobj with: attribindex with: size with: type with: relativeoffset [

	<command: #glVertexArrayAttribLFormat>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribLType>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexArrayAttribLFormat' (GLuint GLuint GLint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayBindVertexBufferEXT: vaobj with: bindingindex with: buffer with: offset with: stride [

	<command: #glVertexArrayBindVertexBufferEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'bindingindex' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glVertexArrayBindVertexBufferEXT' (GLuint GLuint GLuint GLintptr GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayBindingDivisor: vaobj with: bindingindex with: divisor [

	<command: #glVertexArrayBindingDivisor>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'bindingindex' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexArrayBindingDivisor' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayColorOffsetEXT: vaobj with: buffer with: size with: type with: stride with: offset [

	<command: #glVertexArrayColorOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayColorOffsetEXT' (GLuint GLuint GLint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayEdgeFlagOffsetEXT: vaobj with: buffer with: stride with: offset [

	<command: #glVertexArrayEdgeFlagOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayEdgeFlagOffsetEXT' (GLuint GLuint GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayElementBuffer: vaobj with: buffer [

	<command: #glVertexArrayElementBuffer>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>

	<apicall: void 'glVertexArrayElementBuffer' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayFogCoordOffsetEXT: vaobj with: buffer with: type with: stride with: offset [

	<command: #glVertexArrayFogCoordOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #FogCoordinatePointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayFogCoordOffsetEXT' (GLuint GLuint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayIndexOffsetEXT: vaobj with: buffer with: type with: stride with: offset [

	<command: #glVertexArrayIndexOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #IndexPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayIndexOffsetEXT' (GLuint GLuint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayMultiTexCoordOffsetEXT: vaobj with: buffer with: texunit with: size with: type with: stride with: offset [

	<command: #glVertexArrayMultiTexCoordOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'texunit' type: 'GLenum'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayMultiTexCoordOffsetEXT' (GLuint GLuint GLenum GLint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayNormalOffsetEXT: vaobj with: buffer with: type with: stride with: offset [

	<command: #glVertexArrayNormalOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #NormalPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayNormalOffsetEXT' (GLuint GLuint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayParameteriAPPLE: pname with: param [

	<command: #glVertexArrayParameteriAPPLE>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #VertexArrayPNameAPPLE>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glVertexArrayParameteriAPPLE' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayRangeAPPLE: length with: pointer [

	<command: #glVertexArrayRangeAPPLE>
	<return: 'void'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'length'>

	<apicall: void 'glVertexArrayRangeAPPLE' (GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayRangeNV: length with: pointer [

	<command: #glVertexArrayRangeNV>
	<return: 'void'>
	<arg: 'length' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(length)'>

	<apicall: void 'glVertexArrayRangeNV' (GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArraySecondaryColorOffsetEXT: vaobj with: buffer with: size with: type with: stride with: offset [

	<command: #glVertexArraySecondaryColorOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #ColorPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArraySecondaryColorOffsetEXT' (GLuint GLuint GLint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayTexCoordOffsetEXT: vaobj with: buffer with: size with: type with: stride with: offset [

	<command: #glVertexArrayTexCoordOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #TexCoordPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayTexCoordOffsetEXT' (GLuint GLuint GLint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexAttribBindingEXT: vaobj with: attribindex with: bindingindex [

	<command: #glVertexArrayVertexAttribBindingEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'bindingindex' type: 'GLuint'>

	<apicall: void 'glVertexArrayVertexAttribBindingEXT' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexAttribDivisorEXT: vaobj with: index with: divisor [

	<command: #glVertexArrayVertexAttribDivisorEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexArrayVertexAttribDivisorEXT' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexAttribFormatEXT: vaobj with: attribindex with: size with: type with: normalized with: relativeoffset [

	<command: #glVertexArrayVertexAttribFormatEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexArrayVertexAttribFormatEXT' (GLuint GLuint GLint GLenum GLboolean GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexAttribIFormatEXT: vaobj with: attribindex with: size with: type with: relativeoffset [

	<command: #glVertexArrayVertexAttribIFormatEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribIType>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexArrayVertexAttribIFormatEXT' (GLuint GLuint GLint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexAttribIOffsetEXT: vaobj with: buffer with: index with: size with: type with: stride with: offset [

	<command: #glVertexArrayVertexAttribIOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayVertexAttribIOffsetEXT' (GLuint GLuint GLuint GLint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexAttribLFormatEXT: vaobj with: attribindex with: size with: type with: relativeoffset [

	<command: #glVertexArrayVertexAttribLFormatEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribLType>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexArrayVertexAttribLFormatEXT' (GLuint GLuint GLint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexAttribLOffsetEXT: vaobj with: buffer with: index with: size with: type with: stride with: offset [

	<command: #glVertexArrayVertexAttribLOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribLType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr' group: #BufferOffset>

	<apicall: void 'glVertexArrayVertexAttribLOffsetEXT' (GLuint GLuint GLuint GLint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexAttribOffsetEXT: vaobj with: buffer with: index with: size with: type with: normalized with: stride with: offset [

	<command: #glVertexArrayVertexAttribOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayVertexAttribOffsetEXT' (GLuint GLuint GLuint GLint GLenum GLboolean GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexBindingDivisorEXT: vaobj with: bindingindex with: divisor [

	<command: #glVertexArrayVertexBindingDivisorEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'bindingindex' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexArrayVertexBindingDivisorEXT' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexBuffer: vaobj with: bindingindex with: buffer with: offset with: stride [

	<command: #glVertexArrayVertexBuffer>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'bindingindex' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLintptr'>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glVertexArrayVertexBuffer' (GLuint GLuint GLuint GLintptr GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexBuffers: vaobj with: first with: count with: buffers with: offsets with: strides [

	<command: #glVertexArrayVertexBuffers>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'buffers' type: 'GLuint*'>
	<arg: 'offsets' type: 'GLintptr*'>
	<arg: 'strides' type: 'GLsizei*'>

	<apicall: void 'glVertexArrayVertexBuffers' (GLuint GLuint GLsizei GLuint* GLintptr* GLsizei*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexArrayVertexOffsetEXT: vaobj with: buffer with: size with: type with: stride with: offset [

	<command: #glVertexArrayVertexOffsetEXT>
	<return: 'void'>
	<arg: 'vaobj' type: 'GLuint'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'offset' type: 'GLintptr'>

	<apicall: void 'glVertexArrayVertexOffsetEXT' (GLuint GLuint GLint GLenum GLsizei GLintptr)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1d: index with: x [

	<command: #glVertexAttrib1d>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib1d' (GLuint GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1dARB: index with: x [

	<command: #glVertexAttrib1dARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib1dARB' (GLuint GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1dNV: index with: x [

	<command: #glVertexAttrib1dNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib1dNV' (GLuint GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1dv: index with: v [

	<command: #glVertexAttrib1dv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '1'>

	<apicall: void 'glVertexAttrib1dv' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1dvARB: index with: v [

	<command: #glVertexAttrib1dvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '1'>

	<apicall: void 'glVertexAttrib1dvARB' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1dvNV: index with: v [

	<command: #glVertexAttrib1dvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '1'>

	<apicall: void 'glVertexAttrib1dvNV' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1f: index with: x [

	<command: #glVertexAttrib1f>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib1f' (GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1fARB: index with: x [

	<command: #glVertexAttrib1fARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib1fARB' (GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1fNV: index with: x [

	<command: #glVertexAttrib1fNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib1fNV' (GLuint GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1fv: index with: v [

	<command: #glVertexAttrib1fv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '1'>

	<apicall: void 'glVertexAttrib1fv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1fvARB: index with: v [

	<command: #glVertexAttrib1fvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '1'>

	<apicall: void 'glVertexAttrib1fvARB' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1fvNV: index with: v [

	<command: #glVertexAttrib1fvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '1'>

	<apicall: void 'glVertexAttrib1fvNV' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1hNV: index with: x [

	<command: #glVertexAttrib1hNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glVertexAttrib1hNV' (GLuint GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1hvNV: index with: v [

	<command: #glVertexAttrib1hvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '1'>

	<apicall: void 'glVertexAttrib1hvNV' (GLuint GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1s: index with: x [

	<command: #glVertexAttrib1s>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>

	<apicall: void 'glVertexAttrib1s' (GLuint GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1sARB: index with: x [

	<command: #glVertexAttrib1sARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>

	<apicall: void 'glVertexAttrib1sARB' (GLuint GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1sNV: index with: x [

	<command: #glVertexAttrib1sNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>

	<apicall: void 'glVertexAttrib1sNV' (GLuint GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1sv: index with: v [

	<command: #glVertexAttrib1sv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '1'>

	<apicall: void 'glVertexAttrib1sv' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1svARB: index with: v [

	<command: #glVertexAttrib1svARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '1'>

	<apicall: void 'glVertexAttrib1svARB' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib1svNV: index with: v [

	<command: #glVertexAttrib1svNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '1'>

	<apicall: void 'glVertexAttrib1svNV' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2d: index with: x with: y [

	<command: #glVertexAttrib2d>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib2d' (GLuint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2dARB: index with: x with: y [

	<command: #glVertexAttrib2dARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib2dARB' (GLuint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2dNV: index with: x with: y [

	<command: #glVertexAttrib2dNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib2dNV' (GLuint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2dv: index with: v [

	<command: #glVertexAttrib2dv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '2'>

	<apicall: void 'glVertexAttrib2dv' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2dvARB: index with: v [

	<command: #glVertexAttrib2dvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '2'>

	<apicall: void 'glVertexAttrib2dvARB' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2dvNV: index with: v [

	<command: #glVertexAttrib2dvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '2'>

	<apicall: void 'glVertexAttrib2dvNV' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2f: index with: x with: y [

	<command: #glVertexAttrib2f>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib2f' (GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2fARB: index with: x with: y [

	<command: #glVertexAttrib2fARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib2fARB' (GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2fNV: index with: x with: y [

	<command: #glVertexAttrib2fNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib2fNV' (GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2fv: index with: v [

	<command: #glVertexAttrib2fv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '2'>

	<apicall: void 'glVertexAttrib2fv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2fvARB: index with: v [

	<command: #glVertexAttrib2fvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '2'>

	<apicall: void 'glVertexAttrib2fvARB' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2fvNV: index with: v [

	<command: #glVertexAttrib2fvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '2'>

	<apicall: void 'glVertexAttrib2fvNV' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2hNV: index with: x with: y [

	<command: #glVertexAttrib2hNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'y' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glVertexAttrib2hNV' (GLuint GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2hvNV: index with: v [

	<command: #glVertexAttrib2hvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '2'>

	<apicall: void 'glVertexAttrib2hvNV' (GLuint GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2s: index with: x with: y [

	<command: #glVertexAttrib2s>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>

	<apicall: void 'glVertexAttrib2s' (GLuint GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2sARB: index with: x with: y [

	<command: #glVertexAttrib2sARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>

	<apicall: void 'glVertexAttrib2sARB' (GLuint GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2sNV: index with: x with: y [

	<command: #glVertexAttrib2sNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>

	<apicall: void 'glVertexAttrib2sNV' (GLuint GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2sv: index with: v [

	<command: #glVertexAttrib2sv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '2'>

	<apicall: void 'glVertexAttrib2sv' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2svARB: index with: v [

	<command: #glVertexAttrib2svARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '2'>

	<apicall: void 'glVertexAttrib2svARB' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib2svNV: index with: v [

	<command: #glVertexAttrib2svNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '2'>

	<apicall: void 'glVertexAttrib2svNV' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3d: index with: x with: y with: z [

	<command: #glVertexAttrib3d>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib3d' (GLuint GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3dARB: index with: x with: y with: z [

	<command: #glVertexAttrib3dARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib3dARB' (GLuint GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3dNV: index with: x with: y with: z [

	<command: #glVertexAttrib3dNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib3dNV' (GLuint GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3dv: index with: v [

	<command: #glVertexAttrib3dv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '3'>

	<apicall: void 'glVertexAttrib3dv' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3dvARB: index with: v [

	<command: #glVertexAttrib3dvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '3'>

	<apicall: void 'glVertexAttrib3dvARB' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3dvNV: index with: v [

	<command: #glVertexAttrib3dvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '3'>

	<apicall: void 'glVertexAttrib3dvNV' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3f: index with: x with: y with: z [

	<command: #glVertexAttrib3f>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib3f' (GLuint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3fARB: index with: x with: y with: z [

	<command: #glVertexAttrib3fARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib3fARB' (GLuint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3fNV: index with: x with: y with: z [

	<command: #glVertexAttrib3fNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib3fNV' (GLuint GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3fv: index with: v [

	<command: #glVertexAttrib3fv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glVertexAttrib3fv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3fvARB: index with: v [

	<command: #glVertexAttrib3fvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glVertexAttrib3fvARB' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3fvNV: index with: v [

	<command: #glVertexAttrib3fvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '3'>

	<apicall: void 'glVertexAttrib3fvNV' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3hNV: index with: x with: y with: z [

	<command: #glVertexAttrib3hNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'y' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'z' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glVertexAttrib3hNV' (GLuint GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3hvNV: index with: v [

	<command: #glVertexAttrib3hvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '3'>

	<apicall: void 'glVertexAttrib3hvNV' (GLuint GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3s: index with: x with: y with: z [

	<command: #glVertexAttrib3s>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>

	<apicall: void 'glVertexAttrib3s' (GLuint GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3sARB: index with: x with: y with: z [

	<command: #glVertexAttrib3sARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>

	<apicall: void 'glVertexAttrib3sARB' (GLuint GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3sNV: index with: x with: y with: z [

	<command: #glVertexAttrib3sNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>

	<apicall: void 'glVertexAttrib3sNV' (GLuint GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3sv: index with: v [

	<command: #glVertexAttrib3sv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '3'>

	<apicall: void 'glVertexAttrib3sv' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3svARB: index with: v [

	<command: #glVertexAttrib3svARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '3'>

	<apicall: void 'glVertexAttrib3svARB' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib3svNV: index with: v [

	<command: #glVertexAttrib3svNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '3'>

	<apicall: void 'glVertexAttrib3svNV' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4Nbv: index with: v [

	<command: #glVertexAttrib4Nbv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLbyte*' size: '4'>

	<apicall: void 'glVertexAttrib4Nbv' (GLuint GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4NbvARB: index with: v [

	<command: #glVertexAttrib4NbvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLbyte*' size: '4'>

	<apicall: void 'glVertexAttrib4NbvARB' (GLuint GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4Niv: index with: v [

	<command: #glVertexAttrib4Niv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glVertexAttrib4Niv' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4NivARB: index with: v [

	<command: #glVertexAttrib4NivARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glVertexAttrib4NivARB' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4Nsv: index with: v [

	<command: #glVertexAttrib4Nsv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '4'>

	<apicall: void 'glVertexAttrib4Nsv' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4NsvARB: index with: v [

	<command: #glVertexAttrib4NsvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '4'>

	<apicall: void 'glVertexAttrib4NsvARB' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4Nub: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4Nub>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLubyte'>
	<arg: 'y' type: 'GLubyte'>
	<arg: 'z' type: 'GLubyte'>
	<arg: 'w' type: 'GLubyte'>

	<apicall: void 'glVertexAttrib4Nub' (GLuint GLubyte GLubyte GLubyte GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4NubARB: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4NubARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLubyte'>
	<arg: 'y' type: 'GLubyte'>
	<arg: 'z' type: 'GLubyte'>
	<arg: 'w' type: 'GLubyte'>

	<apicall: void 'glVertexAttrib4NubARB' (GLuint GLubyte GLubyte GLubyte GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4Nubv: index with: v [

	<command: #glVertexAttrib4Nubv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLubyte*' size: '4'>

	<apicall: void 'glVertexAttrib4Nubv' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4NubvARB: index with: v [

	<command: #glVertexAttrib4NubvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLubyte*' size: '4'>

	<apicall: void 'glVertexAttrib4NubvARB' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4Nuiv: index with: v [

	<command: #glVertexAttrib4Nuiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '4'>

	<apicall: void 'glVertexAttrib4Nuiv' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4NuivARB: index with: v [

	<command: #glVertexAttrib4NuivARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '4'>

	<apicall: void 'glVertexAttrib4NuivARB' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4Nusv: index with: v [

	<command: #glVertexAttrib4Nusv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLushort*' size: '4'>

	<apicall: void 'glVertexAttrib4Nusv' (GLuint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4NusvARB: index with: v [

	<command: #glVertexAttrib4NusvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLushort*' size: '4'>

	<apicall: void 'glVertexAttrib4NusvARB' (GLuint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4bv: index with: v [

	<command: #glVertexAttrib4bv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLbyte*' size: '4'>

	<apicall: void 'glVertexAttrib4bv' (GLuint GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4bvARB: index with: v [

	<command: #glVertexAttrib4bvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLbyte*' size: '4'>

	<apicall: void 'glVertexAttrib4bvARB' (GLuint GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4d: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4d>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib4d' (GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4dARB: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4dARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib4dARB' (GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4dNV: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4dNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glVertexAttrib4dNV' (GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4dv: index with: v [

	<command: #glVertexAttrib4dv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '4'>

	<apicall: void 'glVertexAttrib4dv' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4dvARB: index with: v [

	<command: #glVertexAttrib4dvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '4'>

	<apicall: void 'glVertexAttrib4dvARB' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4dvNV: index with: v [

	<command: #glVertexAttrib4dvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '4'>

	<apicall: void 'glVertexAttrib4dvNV' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4f: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4f>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib4f' (GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4fARB: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4fARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib4fARB' (GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4fNV: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4fNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glVertexAttrib4fNV' (GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4fv: index with: v [

	<command: #glVertexAttrib4fv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glVertexAttrib4fv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4fvARB: index with: v [

	<command: #glVertexAttrib4fvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glVertexAttrib4fvARB' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4fvNV: index with: v [

	<command: #glVertexAttrib4fvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glVertexAttrib4fvNV' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4hNV: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4hNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'y' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'z' type: 'GLhalfNV' group: #Half16NV>
	<arg: 'w' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glVertexAttrib4hNV' (GLuint GLhalfNV GLhalfNV GLhalfNV GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4hvNV: index with: v [

	<command: #glVertexAttrib4hvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: '4'>

	<apicall: void 'glVertexAttrib4hvNV' (GLuint GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4iv: index with: v [

	<command: #glVertexAttrib4iv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glVertexAttrib4iv' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4ivARB: index with: v [

	<command: #glVertexAttrib4ivARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glVertexAttrib4ivARB' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4s: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4s>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>
	<arg: 'w' type: 'GLshort'>

	<apicall: void 'glVertexAttrib4s' (GLuint GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4sARB: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4sARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>
	<arg: 'w' type: 'GLshort'>

	<apicall: void 'glVertexAttrib4sARB' (GLuint GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4sNV: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4sNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>
	<arg: 'w' type: 'GLshort'>

	<apicall: void 'glVertexAttrib4sNV' (GLuint GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4sv: index with: v [

	<command: #glVertexAttrib4sv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '4'>

	<apicall: void 'glVertexAttrib4sv' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4svARB: index with: v [

	<command: #glVertexAttrib4svARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '4'>

	<apicall: void 'glVertexAttrib4svARB' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4svNV: index with: v [

	<command: #glVertexAttrib4svNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '4'>

	<apicall: void 'glVertexAttrib4svNV' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4ubNV: index with: x with: y with: z with: w [

	<command: #glVertexAttrib4ubNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLubyte' group: #ColorUB>
	<arg: 'y' type: 'GLubyte' group: #ColorUB>
	<arg: 'z' type: 'GLubyte' group: #ColorUB>
	<arg: 'w' type: 'GLubyte' group: #ColorUB>

	<apicall: void 'glVertexAttrib4ubNV' (GLuint GLubyte GLubyte GLubyte GLubyte)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4ubv: index with: v [

	<command: #glVertexAttrib4ubv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLubyte*' size: '4'>

	<apicall: void 'glVertexAttrib4ubv' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4ubvARB: index with: v [

	<command: #glVertexAttrib4ubvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLubyte*' size: '4'>

	<apicall: void 'glVertexAttrib4ubvARB' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4ubvNV: index with: v [

	<command: #glVertexAttrib4ubvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLubyte*' group: #ColorUB size: '4'>

	<apicall: void 'glVertexAttrib4ubvNV' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4uiv: index with: v [

	<command: #glVertexAttrib4uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '4'>

	<apicall: void 'glVertexAttrib4uiv' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4uivARB: index with: v [

	<command: #glVertexAttrib4uivARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '4'>

	<apicall: void 'glVertexAttrib4uivARB' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4usv: index with: v [

	<command: #glVertexAttrib4usv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLushort*' size: '4'>

	<apicall: void 'glVertexAttrib4usv' (GLuint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttrib4usvARB: index with: v [

	<command: #glVertexAttrib4usvARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLushort*' size: '4'>

	<apicall: void 'glVertexAttrib4usvARB' (GLuint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribArrayObjectATI: index with: size with: type with: normalized with: stride with: buffer with: offset [

	<command: #glVertexAttribArrayObjectATI>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'buffer' type: 'GLuint'>
	<arg: 'offset' type: 'GLuint'>

	<apicall: void 'glVertexAttribArrayObjectATI' (GLuint GLint GLenum GLboolean GLsizei GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribBinding: attribindex with: bindingindex [

	<command: #glVertexAttribBinding>
	<return: 'void'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'bindingindex' type: 'GLuint'>

	<apicall: void 'glVertexAttribBinding' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribDivisor: index with: divisor [

	<command: #glVertexAttribDivisor>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexAttribDivisor' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribDivisorANGLE: index with: divisor [

	<command: #glVertexAttribDivisorANGLE>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexAttribDivisorANGLE' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribDivisorARB: index with: divisor [

	<command: #glVertexAttribDivisorARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexAttribDivisorARB' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribDivisorEXT: index with: divisor [

	<command: #glVertexAttribDivisorEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexAttribDivisorEXT' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribDivisorNV: index with: divisor [

	<command: #glVertexAttribDivisorNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexAttribDivisorNV' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribFormat: attribindex with: size with: type with: normalized with: relativeoffset [

	<command: #glVertexAttribFormat>
	<return: 'void'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexAttribFormat' (GLuint GLint GLenum GLboolean GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribFormatNV: index with: size with: type with: normalized with: stride [

	<command: #glVertexAttribFormatNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glVertexAttribFormatNV' (GLuint GLint GLenum GLboolean GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI1i: index with: x [

	<command: #glVertexAttribI1i>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>

	<apicall: void 'glVertexAttribI1i' (GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI1iEXT: index with: x [

	<command: #glVertexAttribI1iEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>

	<apicall: void 'glVertexAttribI1iEXT' (GLuint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI1iv: index with: v [

	<command: #glVertexAttribI1iv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '1'>

	<apicall: void 'glVertexAttribI1iv' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI1ivEXT: index with: v [

	<command: #glVertexAttribI1ivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '1'>

	<apicall: void 'glVertexAttribI1ivEXT' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI1ui: index with: x [

	<command: #glVertexAttribI1ui>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>

	<apicall: void 'glVertexAttribI1ui' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI1uiEXT: index with: x [

	<command: #glVertexAttribI1uiEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>

	<apicall: void 'glVertexAttribI1uiEXT' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI1uiv: index with: v [

	<command: #glVertexAttribI1uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexAttribI1uiv' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI1uivEXT: index with: v [

	<command: #glVertexAttribI1uivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexAttribI1uivEXT' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI2i: index with: x with: y [

	<command: #glVertexAttribI2i>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>

	<apicall: void 'glVertexAttribI2i' (GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI2iEXT: index with: x with: y [

	<command: #glVertexAttribI2iEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>

	<apicall: void 'glVertexAttribI2iEXT' (GLuint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI2iv: index with: v [

	<command: #glVertexAttribI2iv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '2'>

	<apicall: void 'glVertexAttribI2iv' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI2ivEXT: index with: v [

	<command: #glVertexAttribI2ivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '2'>

	<apicall: void 'glVertexAttribI2ivEXT' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI2ui: index with: x with: y [

	<command: #glVertexAttribI2ui>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>

	<apicall: void 'glVertexAttribI2ui' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI2uiEXT: index with: x with: y [

	<command: #glVertexAttribI2uiEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>

	<apicall: void 'glVertexAttribI2uiEXT' (GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI2uiv: index with: v [

	<command: #glVertexAttribI2uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '2'>

	<apicall: void 'glVertexAttribI2uiv' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI2uivEXT: index with: v [

	<command: #glVertexAttribI2uivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '2'>

	<apicall: void 'glVertexAttribI2uivEXT' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI3i: index with: x with: y with: z [

	<command: #glVertexAttribI3i>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>

	<apicall: void 'glVertexAttribI3i' (GLuint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI3iEXT: index with: x with: y with: z [

	<command: #glVertexAttribI3iEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>

	<apicall: void 'glVertexAttribI3iEXT' (GLuint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI3iv: index with: v [

	<command: #glVertexAttribI3iv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '3'>

	<apicall: void 'glVertexAttribI3iv' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI3ivEXT: index with: v [

	<command: #glVertexAttribI3ivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '3'>

	<apicall: void 'glVertexAttribI3ivEXT' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI3ui: index with: x with: y with: z [

	<command: #glVertexAttribI3ui>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>
	<arg: 'z' type: 'GLuint'>

	<apicall: void 'glVertexAttribI3ui' (GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI3uiEXT: index with: x with: y with: z [

	<command: #glVertexAttribI3uiEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>
	<arg: 'z' type: 'GLuint'>

	<apicall: void 'glVertexAttribI3uiEXT' (GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI3uiv: index with: v [

	<command: #glVertexAttribI3uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '3'>

	<apicall: void 'glVertexAttribI3uiv' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI3uivEXT: index with: v [

	<command: #glVertexAttribI3uivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '3'>

	<apicall: void 'glVertexAttribI3uivEXT' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4bv: index with: v [

	<command: #glVertexAttribI4bv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLbyte*' size: '4'>

	<apicall: void 'glVertexAttribI4bv' (GLuint GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4bvEXT: index with: v [

	<command: #glVertexAttribI4bvEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLbyte*' size: '4'>

	<apicall: void 'glVertexAttribI4bvEXT' (GLuint GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4i: index with: x with: y with: z with: w [

	<command: #glVertexAttribI4i>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>
	<arg: 'w' type: 'GLint'>

	<apicall: void 'glVertexAttribI4i' (GLuint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4iEXT: index with: x with: y with: z with: w [

	<command: #glVertexAttribI4iEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>
	<arg: 'w' type: 'GLint'>

	<apicall: void 'glVertexAttribI4iEXT' (GLuint GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4iv: index with: v [

	<command: #glVertexAttribI4iv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glVertexAttribI4iv' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4ivEXT: index with: v [

	<command: #glVertexAttribI4ivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint*' size: '4'>

	<apicall: void 'glVertexAttribI4ivEXT' (GLuint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4sv: index with: v [

	<command: #glVertexAttribI4sv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '4'>

	<apicall: void 'glVertexAttribI4sv' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4svEXT: index with: v [

	<command: #glVertexAttribI4svEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLshort*' size: '4'>

	<apicall: void 'glVertexAttribI4svEXT' (GLuint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4ubv: index with: v [

	<command: #glVertexAttribI4ubv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLubyte*' size: '4'>

	<apicall: void 'glVertexAttribI4ubv' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4ubvEXT: index with: v [

	<command: #glVertexAttribI4ubvEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLubyte*' size: '4'>

	<apicall: void 'glVertexAttribI4ubvEXT' (GLuint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4ui: index with: x with: y with: z with: w [

	<command: #glVertexAttribI4ui>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>
	<arg: 'z' type: 'GLuint'>
	<arg: 'w' type: 'GLuint'>

	<apicall: void 'glVertexAttribI4ui' (GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4uiEXT: index with: x with: y with: z with: w [

	<command: #glVertexAttribI4uiEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint'>
	<arg: 'y' type: 'GLuint'>
	<arg: 'z' type: 'GLuint'>
	<arg: 'w' type: 'GLuint'>

	<apicall: void 'glVertexAttribI4uiEXT' (GLuint GLuint GLuint GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4uiv: index with: v [

	<command: #glVertexAttribI4uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '4'>

	<apicall: void 'glVertexAttribI4uiv' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4uivEXT: index with: v [

	<command: #glVertexAttribI4uivEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint*' size: '4'>

	<apicall: void 'glVertexAttribI4uivEXT' (GLuint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4usv: index with: v [

	<command: #glVertexAttribI4usv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLushort*' size: '4'>

	<apicall: void 'glVertexAttribI4usv' (GLuint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribI4usvEXT: index with: v [

	<command: #glVertexAttribI4usvEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLushort*' size: '4'>

	<apicall: void 'glVertexAttribI4usvEXT' (GLuint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribIFormat: attribindex with: size with: type with: relativeoffset [

	<command: #glVertexAttribIFormat>
	<return: 'void'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribIType>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexAttribIFormat' (GLuint GLint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribIFormatNV: index with: size with: type with: stride [

	<command: #glVertexAttribIFormatNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribIType>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glVertexAttribIFormatNV' (GLuint GLint GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribIPointer: index with: size with: type with: stride with: pointer [

	<command: #glVertexAttribIPointer>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribIType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glVertexAttribIPointer' (GLuint GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribIPointerEXT: index with: size with: type with: stride with: pointer [

	<command: #glVertexAttribIPointerEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribIType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glVertexAttribIPointerEXT' (GLuint GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1d: index with: x [

	<command: #glVertexAttribL1d>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>

	<apicall: void 'glVertexAttribL1d' (GLuint GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1dEXT: index with: x [

	<command: #glVertexAttribL1dEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>

	<apicall: void 'glVertexAttribL1dEXT' (GLuint GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1dv: index with: v [

	<command: #glVertexAttribL1dv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '1'>

	<apicall: void 'glVertexAttribL1dv' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1dvEXT: index with: v [

	<command: #glVertexAttribL1dvEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '1'>

	<apicall: void 'glVertexAttribL1dvEXT' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1i64NV: index with: x [

	<command: #glVertexAttribL1i64NV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint64EXT'>

	<apicall: void 'glVertexAttribL1i64NV' (GLuint GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1i64vNV: index with: v [

	<command: #glVertexAttribL1i64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint64EXT*' size: '1'>

	<apicall: void 'glVertexAttribL1i64vNV' (GLuint GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1ui64ARB: index with: x [

	<command: #glVertexAttribL1ui64ARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint64EXT'>

	<apicall: void 'glVertexAttribL1ui64ARB' (GLuint GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1ui64NV: index with: x [

	<command: #glVertexAttribL1ui64NV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint64EXT'>

	<apicall: void 'glVertexAttribL1ui64NV' (GLuint GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1ui64vARB: index with: v [

	<command: #glVertexAttribL1ui64vARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint64EXT*'>

	<apicall: void 'glVertexAttribL1ui64vARB' (GLuint GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL1ui64vNV: index with: v [

	<command: #glVertexAttribL1ui64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint64EXT*' size: '1'>

	<apicall: void 'glVertexAttribL1ui64vNV' (GLuint GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL2d: index with: x with: y [

	<command: #glVertexAttribL2d>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>

	<apicall: void 'glVertexAttribL2d' (GLuint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL2dEXT: index with: x with: y [

	<command: #glVertexAttribL2dEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>

	<apicall: void 'glVertexAttribL2dEXT' (GLuint GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL2dv: index with: v [

	<command: #glVertexAttribL2dv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '2'>

	<apicall: void 'glVertexAttribL2dv' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL2dvEXT: index with: v [

	<command: #glVertexAttribL2dvEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '2'>

	<apicall: void 'glVertexAttribL2dvEXT' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL2i64NV: index with: x with: y [

	<command: #glVertexAttribL2i64NV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>

	<apicall: void 'glVertexAttribL2i64NV' (GLuint GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL2i64vNV: index with: v [

	<command: #glVertexAttribL2i64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint64EXT*' size: '2'>

	<apicall: void 'glVertexAttribL2i64vNV' (GLuint GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL2ui64NV: index with: x with: y [

	<command: #glVertexAttribL2ui64NV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>

	<apicall: void 'glVertexAttribL2ui64NV' (GLuint GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL2ui64vNV: index with: v [

	<command: #glVertexAttribL2ui64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint64EXT*' size: '2'>

	<apicall: void 'glVertexAttribL2ui64vNV' (GLuint GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL3d: index with: x with: y with: z [

	<command: #glVertexAttribL3d>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glVertexAttribL3d' (GLuint GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL3dEXT: index with: x with: y with: z [

	<command: #glVertexAttribL3dEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glVertexAttribL3dEXT' (GLuint GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL3dv: index with: v [

	<command: #glVertexAttribL3dv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '3'>

	<apicall: void 'glVertexAttribL3dv' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL3dvEXT: index with: v [

	<command: #glVertexAttribL3dvEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '3'>

	<apicall: void 'glVertexAttribL3dvEXT' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL3i64NV: index with: x with: y with: z [

	<command: #glVertexAttribL3i64NV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>
	<arg: 'z' type: 'GLint64EXT'>

	<apicall: void 'glVertexAttribL3i64NV' (GLuint GLint64EXT GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL3i64vNV: index with: v [

	<command: #glVertexAttribL3i64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint64EXT*' size: '3'>

	<apicall: void 'glVertexAttribL3i64vNV' (GLuint GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL3ui64NV: index with: x with: y with: z [

	<command: #glVertexAttribL3ui64NV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>
	<arg: 'z' type: 'GLuint64EXT'>

	<apicall: void 'glVertexAttribL3ui64NV' (GLuint GLuint64EXT GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL3ui64vNV: index with: v [

	<command: #glVertexAttribL3ui64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint64EXT*' size: '3'>

	<apicall: void 'glVertexAttribL3ui64vNV' (GLuint GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL4d: index with: x with: y with: z with: w [

	<command: #glVertexAttribL4d>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glVertexAttribL4d' (GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL4dEXT: index with: x with: y with: z with: w [

	<command: #glVertexAttribL4dEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glVertexAttribL4dEXT' (GLuint GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL4dv: index with: v [

	<command: #glVertexAttribL4dv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '4'>

	<apicall: void 'glVertexAttribL4dv' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL4dvEXT: index with: v [

	<command: #glVertexAttribL4dvEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLdouble*' size: '4'>

	<apicall: void 'glVertexAttribL4dvEXT' (GLuint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL4i64NV: index with: x with: y with: z with: w [

	<command: #glVertexAttribL4i64NV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLint64EXT'>
	<arg: 'y' type: 'GLint64EXT'>
	<arg: 'z' type: 'GLint64EXT'>
	<arg: 'w' type: 'GLint64EXT'>

	<apicall: void 'glVertexAttribL4i64NV' (GLuint GLint64EXT GLint64EXT GLint64EXT GLint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL4i64vNV: index with: v [

	<command: #glVertexAttribL4i64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLint64EXT*' size: '4'>

	<apicall: void 'glVertexAttribL4i64vNV' (GLuint GLint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL4ui64NV: index with: x with: y with: z with: w [

	<command: #glVertexAttribL4ui64NV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLuint64EXT'>
	<arg: 'y' type: 'GLuint64EXT'>
	<arg: 'z' type: 'GLuint64EXT'>
	<arg: 'w' type: 'GLuint64EXT'>

	<apicall: void 'glVertexAttribL4ui64NV' (GLuint GLuint64EXT GLuint64EXT GLuint64EXT GLuint64EXT)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribL4ui64vNV: index with: v [

	<command: #glVertexAttribL4ui64vNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLuint64EXT*' size: '4'>

	<apicall: void 'glVertexAttribL4ui64vNV' (GLuint GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribLFormat: attribindex with: size with: type with: relativeoffset [

	<command: #glVertexAttribLFormat>
	<return: 'void'>
	<arg: 'attribindex' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribLType>
	<arg: 'relativeoffset' type: 'GLuint'>

	<apicall: void 'glVertexAttribLFormat' (GLuint GLint GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribLFormatNV: index with: size with: type with: stride [

	<command: #glVertexAttribLFormatNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribLType>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glVertexAttribLFormatNV' (GLuint GLint GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribLPointer: index with: size with: type with: stride with: pointer [

	<command: #glVertexAttribLPointer>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribLType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'size'>

	<apicall: void 'glVertexAttribLPointer' (GLuint GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribLPointerEXT: index with: size with: type with: stride with: pointer [

	<command: #glVertexAttribLPointerEXT>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribLType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'size'>

	<apicall: void 'glVertexAttribLPointerEXT' (GLuint GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribP1ui: index with: type with: normalized with: value [

	<command: #glVertexAttribP1ui>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLuint'>

	<apicall: void 'glVertexAttribP1ui' (GLuint GLenum GLboolean GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribP1uiv: index with: type with: normalized with: value [

	<command: #glVertexAttribP1uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexAttribP1uiv' (GLuint GLenum GLboolean GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribP2ui: index with: type with: normalized with: value [

	<command: #glVertexAttribP2ui>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLuint'>

	<apicall: void 'glVertexAttribP2ui' (GLuint GLenum GLboolean GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribP2uiv: index with: type with: normalized with: value [

	<command: #glVertexAttribP2uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexAttribP2uiv' (GLuint GLenum GLboolean GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribP3ui: index with: type with: normalized with: value [

	<command: #glVertexAttribP3ui>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLuint'>

	<apicall: void 'glVertexAttribP3ui' (GLuint GLenum GLboolean GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribP3uiv: index with: type with: normalized with: value [

	<command: #glVertexAttribP3uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexAttribP3uiv' (GLuint GLenum GLboolean GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribP4ui: index with: type with: normalized with: value [

	<command: #glVertexAttribP4ui>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLuint'>

	<apicall: void 'glVertexAttribP4ui' (GLuint GLenum GLboolean GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribP4uiv: index with: type with: normalized with: value [

	<command: #glVertexAttribP4uiv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'value' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexAttribP4uiv' (GLuint GLenum GLboolean GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribParameteriAMD: index with: pname with: param [

	<command: #glVertexAttribParameteriAMD>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glVertexAttribParameteriAMD' (GLuint GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribPointer: index with: size with: type with: normalized with: stride with: pointer [

	<command: #glVertexAttribPointer>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glVertexAttribPointer' (GLuint GLint GLenum GLboolean GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribPointerARB: index with: size with: type with: normalized with: stride with: pointer [

	<command: #glVertexAttribPointerARB>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribPointerType>
	<arg: 'normalized' type: 'GLboolean' group: #Boolean>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glVertexAttribPointerARB' (GLuint GLint GLenum GLboolean GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribPointerNV: index with: fsize with: type with: stride with: pointer [

	<command: #glVertexAttribPointerNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'fsize' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexAttribEnumNV>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(fsize,type,stride)'>

	<apicall: void 'glVertexAttribPointerNV' (GLuint GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs1dvNV: index with: count with: v [

	<command: #glVertexAttribs1dvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*' size: 'count'>

	<apicall: void 'glVertexAttribs1dvNV' (GLuint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs1fvNV: index with: count with: v [

	<command: #glVertexAttribs1fvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'count'>

	<apicall: void 'glVertexAttribs1fvNV' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs1hvNV: index with: n with: v [

	<command: #glVertexAttribs1hvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: 'n'>

	<apicall: void 'glVertexAttribs1hvNV' (GLuint GLsizei GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs1svNV: index with: count with: v [

	<command: #glVertexAttribs1svNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLshort*' size: 'count'>

	<apicall: void 'glVertexAttribs1svNV' (GLuint GLsizei GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs2dvNV: index with: count with: v [

	<command: #glVertexAttribs2dvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*' size: 'count*2'>

	<apicall: void 'glVertexAttribs2dvNV' (GLuint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs2fvNV: index with: count with: v [

	<command: #glVertexAttribs2fvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'count*2'>

	<apicall: void 'glVertexAttribs2fvNV' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs2hvNV: index with: n with: v [

	<command: #glVertexAttribs2hvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: 'n'>

	<apicall: void 'glVertexAttribs2hvNV' (GLuint GLsizei GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs2svNV: index with: count with: v [

	<command: #glVertexAttribs2svNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLshort*' size: 'count*2'>

	<apicall: void 'glVertexAttribs2svNV' (GLuint GLsizei GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs3dvNV: index with: count with: v [

	<command: #glVertexAttribs3dvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*' size: 'count*3'>

	<apicall: void 'glVertexAttribs3dvNV' (GLuint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs3fvNV: index with: count with: v [

	<command: #glVertexAttribs3fvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'count*3'>

	<apicall: void 'glVertexAttribs3fvNV' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs3hvNV: index with: n with: v [

	<command: #glVertexAttribs3hvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: 'n'>

	<apicall: void 'glVertexAttribs3hvNV' (GLuint GLsizei GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs3svNV: index with: count with: v [

	<command: #glVertexAttribs3svNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLshort*' size: 'count*3'>

	<apicall: void 'glVertexAttribs3svNV' (GLuint GLsizei GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs4dvNV: index with: count with: v [

	<command: #glVertexAttribs4dvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLdouble*' size: 'count*4'>

	<apicall: void 'glVertexAttribs4dvNV' (GLuint GLsizei GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs4fvNV: index with: count with: v [

	<command: #glVertexAttribs4fvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'count*4'>

	<apicall: void 'glVertexAttribs4fvNV' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs4hvNV: index with: n with: v [

	<command: #glVertexAttribs4hvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'n' type: 'GLsizei'>
	<arg: 'v' type: 'GLhalfNV*' group: #Half16NV size: 'n'>

	<apicall: void 'glVertexAttribs4hvNV' (GLuint GLsizei GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs4svNV: index with: count with: v [

	<command: #glVertexAttribs4svNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLshort*' size: 'count*4'>

	<apicall: void 'glVertexAttribs4svNV' (GLuint GLsizei GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexAttribs4ubvNV: index with: count with: v [

	<command: #glVertexAttribs4ubvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLubyte*' group: #ColorUB size: 'count*4'>

	<apicall: void 'glVertexAttribs4ubvNV' (GLuint GLsizei GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexBindingDivisor: bindingindex with: divisor [

	<command: #glVertexBindingDivisor>
	<return: 'void'>
	<arg: 'bindingindex' type: 'GLuint'>
	<arg: 'divisor' type: 'GLuint'>

	<apicall: void 'glVertexBindingDivisor' (GLuint GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexBlendARB: count [

	<command: #glVertexBlendARB>
	<return: 'void'>
	<arg: 'count' type: 'GLint'>

	<apicall: void 'glVertexBlendARB' (GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexBlendEnvfATI: pname with: param [

	<command: #glVertexBlendEnvfATI>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'param' type: 'GLfloat'>

	<apicall: void 'glVertexBlendEnvfATI' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexBlendEnviATI: pname with: param [

	<command: #glVertexBlendEnviATI>
	<return: 'void'>
	<arg: 'pname' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'param' type: 'GLint'>

	<apicall: void 'glVertexBlendEnviATI' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexFormatNV: size with: type with: stride [

	<command: #glVertexFormatNV>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'stride' type: 'GLsizei'>

	<apicall: void 'glVertexFormatNV' (GLint GLenum GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexP2ui: type with: value [

	<command: #glVertexP2ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'value' type: 'GLuint'>

	<apicall: void 'glVertexP2ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexP2uiv: type with: value [

	<command: #glVertexP2uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'value' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexP2uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexP3ui: type with: value [

	<command: #glVertexP3ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'value' type: 'GLuint'>

	<apicall: void 'glVertexP3ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexP3uiv: type with: value [

	<command: #glVertexP3uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'value' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexP3uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexP4ui: type with: value [

	<command: #glVertexP4ui>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'value' type: 'GLuint'>

	<apicall: void 'glVertexP4ui' (GLenum GLuint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexP4uiv: type with: value [

	<command: #glVertexP4uiv>
	<return: 'void'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'value' type: 'GLuint*' size: '1'>

	<apicall: void 'glVertexP4uiv' (GLenum GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexPointer: size with: type with: stride with: pointer [

	<command: #glVertexPointer>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride)'>

	<apicall: void 'glVertexPointer' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexPointerEXT: size with: type with: stride with: count with: pointer [

	<command: #glVertexPointerEXT>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(size,type,stride,count)'>

	<apicall: void 'glVertexPointerEXT' (GLint GLenum GLsizei GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexPointerListIBM: size with: type with: stride with: pointer with: ptrstride [

	<command: #glVertexPointerListIBM>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'stride' type: 'GLint'>
	<arg: 'pointer' type: 'void**' size: 'COMPSIZE(size,type,stride)'>
	<arg: 'ptrstride' type: 'GLint'>

	<apicall: void 'glVertexPointerListIBM' (GLint GLenum GLint void** GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexPointervINTEL: size with: type with: pointer [

	<command: #glVertexPointervINTEL>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexPointerType>
	<arg: 'pointer' type: 'void**' size: '4'>

	<apicall: void 'glVertexPointervINTEL' (GLint GLenum void**)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream1dATI: stream with: x [

	<command: #glVertexStream1dATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLdouble'>

	<apicall: void 'glVertexStream1dATI' (GLenum GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream1dvATI: stream with: coords [

	<command: #glVertexStream1dvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLdouble*' size: '1'>

	<apicall: void 'glVertexStream1dvATI' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream1fATI: stream with: x [

	<command: #glVertexStream1fATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLfloat'>

	<apicall: void 'glVertexStream1fATI' (GLenum GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream1fvATI: stream with: coords [

	<command: #glVertexStream1fvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLfloat*' size: '1'>

	<apicall: void 'glVertexStream1fvATI' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream1iATI: stream with: x [

	<command: #glVertexStream1iATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLint'>

	<apicall: void 'glVertexStream1iATI' (GLenum GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream1ivATI: stream with: coords [

	<command: #glVertexStream1ivATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLint*' size: '1'>

	<apicall: void 'glVertexStream1ivATI' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream1sATI: stream with: x [

	<command: #glVertexStream1sATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLshort'>

	<apicall: void 'glVertexStream1sATI' (GLenum GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream1svATI: stream with: coords [

	<command: #glVertexStream1svATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLshort*' size: '1'>

	<apicall: void 'glVertexStream1svATI' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream2dATI: stream with: x with: y [

	<command: #glVertexStream2dATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>

	<apicall: void 'glVertexStream2dATI' (GLenum GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream2dvATI: stream with: coords [

	<command: #glVertexStream2dvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLdouble*' size: '2'>

	<apicall: void 'glVertexStream2dvATI' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream2fATI: stream with: x with: y [

	<command: #glVertexStream2fATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>

	<apicall: void 'glVertexStream2fATI' (GLenum GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream2fvATI: stream with: coords [

	<command: #glVertexStream2fvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLfloat*' size: '2'>

	<apicall: void 'glVertexStream2fvATI' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream2iATI: stream with: x with: y [

	<command: #glVertexStream2iATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>

	<apicall: void 'glVertexStream2iATI' (GLenum GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream2ivATI: stream with: coords [

	<command: #glVertexStream2ivATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLint*' size: '2'>

	<apicall: void 'glVertexStream2ivATI' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream2sATI: stream with: x with: y [

	<command: #glVertexStream2sATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>

	<apicall: void 'glVertexStream2sATI' (GLenum GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream2svATI: stream with: coords [

	<command: #glVertexStream2svATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLshort*' size: '2'>

	<apicall: void 'glVertexStream2svATI' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream3dATI: stream with: x with: y with: z [

	<command: #glVertexStream3dATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>

	<apicall: void 'glVertexStream3dATI' (GLenum GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream3dvATI: stream with: coords [

	<command: #glVertexStream3dvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLdouble*' size: '3'>

	<apicall: void 'glVertexStream3dvATI' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream3fATI: stream with: x with: y with: z [

	<command: #glVertexStream3fATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>

	<apicall: void 'glVertexStream3fATI' (GLenum GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream3fvATI: stream with: coords [

	<command: #glVertexStream3fvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLfloat*' size: '3'>

	<apicall: void 'glVertexStream3fvATI' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream3iATI: stream with: x with: y with: z [

	<command: #glVertexStream3iATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>

	<apicall: void 'glVertexStream3iATI' (GLenum GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream3ivATI: stream with: coords [

	<command: #glVertexStream3ivATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLint*' size: '3'>

	<apicall: void 'glVertexStream3ivATI' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream3sATI: stream with: x with: y with: z [

	<command: #glVertexStream3sATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>

	<apicall: void 'glVertexStream3sATI' (GLenum GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream3svATI: stream with: coords [

	<command: #glVertexStream3svATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLshort*' size: '3'>

	<apicall: void 'glVertexStream3svATI' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream4dATI: stream with: x with: y with: z with: w [

	<command: #glVertexStream4dATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLdouble'>
	<arg: 'y' type: 'GLdouble'>
	<arg: 'z' type: 'GLdouble'>
	<arg: 'w' type: 'GLdouble'>

	<apicall: void 'glVertexStream4dATI' (GLenum GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream4dvATI: stream with: coords [

	<command: #glVertexStream4dvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLdouble*' size: '4'>

	<apicall: void 'glVertexStream4dvATI' (GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream4fATI: stream with: x with: y with: z with: w [

	<command: #glVertexStream4fATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'z' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>

	<apicall: void 'glVertexStream4fATI' (GLenum GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream4fvATI: stream with: coords [

	<command: #glVertexStream4fvATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLfloat*' size: '4'>

	<apicall: void 'glVertexStream4fvATI' (GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream4iATI: stream with: x with: y with: z with: w [

	<command: #glVertexStream4iATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLint'>
	<arg: 'y' type: 'GLint'>
	<arg: 'z' type: 'GLint'>
	<arg: 'w' type: 'GLint'>

	<apicall: void 'glVertexStream4iATI' (GLenum GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream4ivATI: stream with: coords [

	<command: #glVertexStream4ivATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLint*' size: '4'>

	<apicall: void 'glVertexStream4ivATI' (GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream4sATI: stream with: x with: y with: z with: w [

	<command: #glVertexStream4sATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'x' type: 'GLshort'>
	<arg: 'y' type: 'GLshort'>
	<arg: 'z' type: 'GLshort'>
	<arg: 'w' type: 'GLshort'>

	<apicall: void 'glVertexStream4sATI' (GLenum GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexStream4svATI: stream with: coords [

	<command: #glVertexStream4svATI>
	<return: 'void'>
	<arg: 'stream' type: 'GLenum' group: #VertexStreamATI>
	<arg: 'coords' type: 'GLshort*' size: '4'>

	<apicall: void 'glVertexStream4svATI' (GLenum GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexWeightPointerEXT: size with: type with: stride with: pointer [

	<command: #glVertexWeightPointerEXT>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #VertexWeightPointerTypeEXT>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glVertexWeightPointerEXT' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexWeightfEXT: weight [

	<command: #glVertexWeightfEXT>
	<return: 'void'>
	<arg: 'weight' type: 'GLfloat'>

	<apicall: void 'glVertexWeightfEXT' (GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexWeightfvEXT: weight [

	<command: #glVertexWeightfvEXT>
	<return: 'void'>
	<arg: 'weight' type: 'GLfloat*' size: '1'>

	<apicall: void 'glVertexWeightfvEXT' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexWeighthNV: weight [

	<command: #glVertexWeighthNV>
	<return: 'void'>
	<arg: 'weight' type: 'GLhalfNV' group: #Half16NV>

	<apicall: void 'glVertexWeighthNV' (GLhalfNV)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> vertexWeighthvNV: weight [

	<command: #glVertexWeighthvNV>
	<return: 'void'>
	<arg: 'weight' type: 'GLhalfNV*' group: #Half16NV size: '1'>

	<apicall: void 'glVertexWeighthvNV' (GLhalfNV*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> videoCaptureNV: video_capture_slot with: sequence_num with: capture_time [

	<command: #glVideoCaptureNV>
	<return: 'GLenum'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'sequence_num' type: 'GLuint*'>
	<arg: 'capture_time' type: 'GLuint64EXT*'>

	<apicall: GLenum 'glVideoCaptureNV' (GLuint GLuint* GLuint64EXT*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> videoCaptureStreamParameterdvNV: video_capture_slot with: stream with: pname with: params [

	<command: #glVideoCaptureStreamParameterdvNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLdouble*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glVideoCaptureStreamParameterdvNV' (GLuint GLuint GLenum GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> videoCaptureStreamParameterfvNV: video_capture_slot with: stream with: pname with: params [

	<command: #glVideoCaptureStreamParameterfvNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLfloat*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glVideoCaptureStreamParameterfvNV' (GLuint GLuint GLenum GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> videoCaptureStreamParameterivNV: video_capture_slot with: stream with: pname with: params [

	<command: #glVideoCaptureStreamParameterivNV>
	<return: 'void'>
	<arg: 'video_capture_slot' type: 'GLuint'>
	<arg: 'stream' type: 'GLuint'>
	<arg: 'pname' type: 'GLenum'>
	<arg: 'params' type: 'GLint*' size: 'COMPSIZE(pname)'>

	<apicall: void 'glVideoCaptureStreamParameterivNV' (GLuint GLuint GLenum GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewport: x with: y with: width with: height [

	<command: #glViewport>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #WinCoord>
	<arg: 'y' type: 'GLint' group: #WinCoord>
	<arg: 'width' type: 'GLsizei'>
	<arg: 'height' type: 'GLsizei'>

	<apicall: void 'glViewport' (GLint GLint GLsizei GLsizei)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportArrayv: first with: count with: v [

	<command: #glViewportArrayv>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'COMPSIZE(count)'>

	<apicall: void 'glViewportArrayv' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportArrayvNV: first with: count with: v [

	<command: #glViewportArrayvNV>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'COMPSIZE(count)'>

	<apicall: void 'glViewportArrayvNV' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportArrayvOES: first with: count with: v [

	<command: #glViewportArrayvOES>
	<return: 'void'>
	<arg: 'first' type: 'GLuint'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'v' type: 'GLfloat*' size: 'COMPSIZE(count)'>

	<apicall: void 'glViewportArrayvOES' (GLuint GLsizei GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportIndexedf: index with: x with: y with: w with: h [

	<command: #glViewportIndexedf>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>
	<arg: 'h' type: 'GLfloat'>

	<apicall: void 'glViewportIndexedf' (GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportIndexedfNV: index with: x with: y with: w with: h [

	<command: #glViewportIndexedfNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>
	<arg: 'h' type: 'GLfloat'>

	<apicall: void 'glViewportIndexedfNV' (GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportIndexedfOES: index with: x with: y with: w with: h [

	<command: #glViewportIndexedfOES>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'x' type: 'GLfloat'>
	<arg: 'y' type: 'GLfloat'>
	<arg: 'w' type: 'GLfloat'>
	<arg: 'h' type: 'GLfloat'>

	<apicall: void 'glViewportIndexedfOES' (GLuint GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportIndexedfv: index with: v [

	<command: #glViewportIndexedfv>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glViewportIndexedfv' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportIndexedfvNV: index with: v [

	<command: #glViewportIndexedfvNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glViewportIndexedfvNV' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportIndexedfvOES: index with: v [

	<command: #glViewportIndexedfvOES>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'v' type: 'GLfloat*' size: '4'>

	<apicall: void 'glViewportIndexedfvOES' (GLuint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportPositionWScaleNV: index with: xcoeff with: ycoeff [

	<command: #glViewportPositionWScaleNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'xcoeff' type: 'GLfloat'>
	<arg: 'ycoeff' type: 'GLfloat'>

	<apicall: void 'glViewportPositionWScaleNV' (GLuint GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> viewportSwizzleNV: index with: swizzlex with: swizzley with: swizzlez with: swizzlew [

	<command: #glViewportSwizzleNV>
	<return: 'void'>
	<arg: 'index' type: 'GLuint'>
	<arg: 'swizzlex' type: 'GLenum'>
	<arg: 'swizzley' type: 'GLenum'>
	<arg: 'swizzlez' type: 'GLenum'>
	<arg: 'swizzlew' type: 'GLenum'>

	<apicall: void 'glViewportSwizzleNV' (GLuint GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> waitSemaphoreEXT: semaphore with: numBufferBarriers with: buffers with: numTextureBarriers with: textures with: srcLayouts [

	<command: #glWaitSemaphoreEXT>
	<return: 'void'>
	<arg: 'semaphore' type: 'GLuint'>
	<arg: 'numBufferBarriers' type: 'GLuint'>
	<arg: 'buffers' type: 'GLuint*' size: 'COMPSIZE(numBufferBarriers)'>
	<arg: 'numTextureBarriers' type: 'GLuint'>
	<arg: 'textures' type: 'GLuint*' size: 'COMPSIZE(numTextureBarriers)'>
	<arg: 'srcLayouts' type: 'GLenum*' group: #TextureLayout size: 'COMPSIZE(numTextureBarriers)'>

	<apicall: void 'glWaitSemaphoreEXT' (GLuint GLuint GLuint* GLuint GLuint* GLenum*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> waitSemaphoreui64NVX: waitGpu with: fenceObjectCount with: semaphoreArray with: fenceValueArray [

	<command: #glWaitSemaphoreui64NVX>
	<return: 'void'>
	<arg: 'waitGpu' type: 'GLuint'>
	<arg: 'fenceObjectCount' type: 'GLsizei'>
	<arg: 'semaphoreArray' type: 'GLuint*' size: 'fenceObjectCount'>
	<arg: 'fenceValueArray' type: 'GLuint64*' size: 'fenceObjectCount'>

	<apicall: void 'glWaitSemaphoreui64NVX' (GLuint GLsizei GLuint* GLuint64*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> waitSync: sync with: flags with: timeout [

	<command: #glWaitSync>
	<return: 'void'>
	<arg: 'sync' type: 'GLsync' group: #sync>
	<arg: 'flags' type: 'GLbitfield' group: #SyncBehaviorFlags>
	<arg: 'timeout' type: 'GLuint64'>

	<apicall: void 'glWaitSync' (GLsync GLbitfield GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> waitSyncAPPLE: sync with: flags with: timeout [

	<command: #glWaitSyncAPPLE>
	<return: 'void'>
	<arg: 'sync' type: 'GLsync'>
	<arg: 'flags' type: 'GLbitfield' group: #SyncBehaviorFlags>
	<arg: 'timeout' type: 'GLuint64'>

	<apicall: void 'glWaitSyncAPPLE' (GLsync GLbitfield GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> waitVkSemaphoreNV: vkSemaphore [

	<command: #glWaitVkSemaphoreNV>
	<return: 'void'>
	<arg: 'vkSemaphore' type: 'GLuint64'>

	<apicall: void 'glWaitVkSemaphoreNV' (GLuint64)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightPathsNV: resultPath with: numPaths with: paths with: weights [

	<command: #glWeightPathsNV>
	<return: 'void'>
	<arg: 'resultPath' type: 'GLuint' group: #Path>
	<arg: 'numPaths' type: 'GLsizei'>
	<arg: 'paths' type: 'GLuint*' group: #Path size: 'numPaths'>
	<arg: 'weights' type: 'GLfloat*' size: 'numPaths'>

	<apicall: void 'glWeightPathsNV' (GLuint GLsizei GLuint* GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightPointerARB: size with: type with: stride with: pointer [

	<command: #glWeightPointerARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum' group: #WeightPointerTypeARB>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glWeightPointerARB' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightPointerOES: size with: type with: stride with: pointer [

	<command: #glWeightPointerOES>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'type' type: 'GLenum'>
	<arg: 'stride' type: 'GLsizei'>
	<arg: 'pointer' type: 'void*' size: 'COMPSIZE(type,stride)'>

	<apicall: void 'glWeightPointerOES' (GLint GLenum GLsizei void*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightbvARB: size with: weights [

	<command: #glWeightbvARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'weights' type: 'GLbyte*' size: 'size'>

	<apicall: void 'glWeightbvARB' (GLint GLbyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightdvARB: size with: weights [

	<command: #glWeightdvARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'weights' type: 'GLdouble*' size: 'size'>

	<apicall: void 'glWeightdvARB' (GLint GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightfvARB: size with: weights [

	<command: #glWeightfvARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'weights' type: 'GLfloat*' size: 'size'>

	<apicall: void 'glWeightfvARB' (GLint GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightivARB: size with: weights [

	<command: #glWeightivARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'weights' type: 'GLint*' size: 'size'>

	<apicall: void 'glWeightivARB' (GLint GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightsvARB: size with: weights [

	<command: #glWeightsvARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'weights' type: 'GLshort*' size: 'size'>

	<apicall: void 'glWeightsvARB' (GLint GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightubvARB: size with: weights [

	<command: #glWeightubvARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'weights' type: 'GLubyte*' size: 'size'>

	<apicall: void 'glWeightubvARB' (GLint GLubyte*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightuivARB: size with: weights [

	<command: #glWeightuivARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'weights' type: 'GLuint*' size: 'size'>

	<apicall: void 'glWeightuivARB' (GLint GLuint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> weightusvARB: size with: weights [

	<command: #glWeightusvARB>
	<return: 'void'>
	<arg: 'size' type: 'GLint'>
	<arg: 'weights' type: 'GLushort*' size: 'size'>

	<apicall: void 'glWeightusvARB' (GLint GLushort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2d: x with: y [

	<command: #glWindowPos2d>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glWindowPos2d' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2dARB: x with: y [

	<command: #glWindowPos2dARB>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glWindowPos2dARB' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2dMESA: x with: y [

	<command: #glWindowPos2dMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glWindowPos2dMESA' (GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2dv: v [

	<command: #glWindowPos2dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glWindowPos2dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2dvARB: v [

	<command: #glWindowPos2dvARB>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glWindowPos2dvARB' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2dvMESA: v [

	<command: #glWindowPos2dvMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '2'>

	<apicall: void 'glWindowPos2dvMESA' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2f: x with: y [

	<command: #glWindowPos2f>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glWindowPos2f' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2fARB: x with: y [

	<command: #glWindowPos2fARB>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glWindowPos2fARB' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2fMESA: x with: y [

	<command: #glWindowPos2fMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glWindowPos2fMESA' (GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2fv: v [

	<command: #glWindowPos2fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glWindowPos2fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2fvARB: v [

	<command: #glWindowPos2fvARB>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glWindowPos2fvARB' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2fvMESA: v [

	<command: #glWindowPos2fvMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '2'>

	<apicall: void 'glWindowPos2fvMESA' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2i: x with: y [

	<command: #glWindowPos2i>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>

	<apicall: void 'glWindowPos2i' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2iARB: x with: y [

	<command: #glWindowPos2iARB>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>

	<apicall: void 'glWindowPos2iARB' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2iMESA: x with: y [

	<command: #glWindowPos2iMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>

	<apicall: void 'glWindowPos2iMESA' (GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2iv: v [

	<command: #glWindowPos2iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glWindowPos2iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2ivARB: v [

	<command: #glWindowPos2ivARB>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glWindowPos2ivARB' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2ivMESA: v [

	<command: #glWindowPos2ivMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '2'>

	<apicall: void 'glWindowPos2ivMESA' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2s: x with: y [

	<command: #glWindowPos2s>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>

	<apicall: void 'glWindowPos2s' (GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2sARB: x with: y [

	<command: #glWindowPos2sARB>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>

	<apicall: void 'glWindowPos2sARB' (GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2sMESA: x with: y [

	<command: #glWindowPos2sMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>

	<apicall: void 'glWindowPos2sMESA' (GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2sv: v [

	<command: #glWindowPos2sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glWindowPos2sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2svARB: v [

	<command: #glWindowPos2svARB>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glWindowPos2svARB' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos2svMESA: v [

	<command: #glWindowPos2svMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '2'>

	<apicall: void 'glWindowPos2svMESA' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3d: x with: y with: z [

	<command: #glWindowPos3d>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>
	<arg: 'z' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glWindowPos3d' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3dARB: x with: y with: z [

	<command: #glWindowPos3dARB>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>
	<arg: 'z' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glWindowPos3dARB' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3dMESA: x with: y with: z [

	<command: #glWindowPos3dMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>
	<arg: 'z' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glWindowPos3dMESA' (GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3dv: v [

	<command: #glWindowPos3dv>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glWindowPos3dv' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3dvARB: v [

	<command: #glWindowPos3dvARB>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glWindowPos3dvARB' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3dvMESA: v [

	<command: #glWindowPos3dvMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '3'>

	<apicall: void 'glWindowPos3dvMESA' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3f: x with: y with: z [

	<command: #glWindowPos3f>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>
	<arg: 'z' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glWindowPos3f' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3fARB: x with: y with: z [

	<command: #glWindowPos3fARB>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>
	<arg: 'z' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glWindowPos3fARB' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3fMESA: x with: y with: z [

	<command: #glWindowPos3fMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>
	<arg: 'z' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glWindowPos3fMESA' (GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3fv: v [

	<command: #glWindowPos3fv>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glWindowPos3fv' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3fvARB: v [

	<command: #glWindowPos3fvARB>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glWindowPos3fvARB' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3fvMESA: v [

	<command: #glWindowPos3fvMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '3'>

	<apicall: void 'glWindowPos3fvMESA' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3i: x with: y with: z [

	<command: #glWindowPos3i>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>
	<arg: 'z' type: 'GLint' group: #CoordI>

	<apicall: void 'glWindowPos3i' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3iARB: x with: y with: z [

	<command: #glWindowPos3iARB>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>
	<arg: 'z' type: 'GLint' group: #CoordI>

	<apicall: void 'glWindowPos3iARB' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3iMESA: x with: y with: z [

	<command: #glWindowPos3iMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>
	<arg: 'z' type: 'GLint' group: #CoordI>

	<apicall: void 'glWindowPos3iMESA' (GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3iv: v [

	<command: #glWindowPos3iv>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '3'>

	<apicall: void 'glWindowPos3iv' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3ivARB: v [

	<command: #glWindowPos3ivARB>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '3'>

	<apicall: void 'glWindowPos3ivARB' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3ivMESA: v [

	<command: #glWindowPos3ivMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '3'>

	<apicall: void 'glWindowPos3ivMESA' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3s: x with: y with: z [

	<command: #glWindowPos3s>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>
	<arg: 'z' type: 'GLshort' group: #CoordS>

	<apicall: void 'glWindowPos3s' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3sARB: x with: y with: z [

	<command: #glWindowPos3sARB>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>
	<arg: 'z' type: 'GLshort' group: #CoordS>

	<apicall: void 'glWindowPos3sARB' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3sMESA: x with: y with: z [

	<command: #glWindowPos3sMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>
	<arg: 'z' type: 'GLshort' group: #CoordS>

	<apicall: void 'glWindowPos3sMESA' (GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3sv: v [

	<command: #glWindowPos3sv>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '3'>

	<apicall: void 'glWindowPos3sv' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3svARB: v [

	<command: #glWindowPos3svARB>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '3'>

	<apicall: void 'glWindowPos3svARB' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos3svMESA: v [

	<command: #glWindowPos3svMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '3'>

	<apicall: void 'glWindowPos3svMESA' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos4dMESA: x with: y with: z with: w [

	<command: #glWindowPos4dMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLdouble' group: #CoordD>
	<arg: 'y' type: 'GLdouble' group: #CoordD>
	<arg: 'z' type: 'GLdouble' group: #CoordD>
	<arg: 'w' type: 'GLdouble' group: #CoordD>

	<apicall: void 'glWindowPos4dMESA' (GLdouble GLdouble GLdouble GLdouble)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos4dvMESA: v [

	<command: #glWindowPos4dvMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLdouble*' group: #CoordD size: '4'>

	<apicall: void 'glWindowPos4dvMESA' (GLdouble*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos4fMESA: x with: y with: z with: w [

	<command: #glWindowPos4fMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLfloat' group: #CoordF>
	<arg: 'y' type: 'GLfloat' group: #CoordF>
	<arg: 'z' type: 'GLfloat' group: #CoordF>
	<arg: 'w' type: 'GLfloat' group: #CoordF>

	<apicall: void 'glWindowPos4fMESA' (GLfloat GLfloat GLfloat GLfloat)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos4fvMESA: v [

	<command: #glWindowPos4fvMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLfloat*' group: #CoordF size: '4'>

	<apicall: void 'glWindowPos4fvMESA' (GLfloat*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos4iMESA: x with: y with: z with: w [

	<command: #glWindowPos4iMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLint' group: #CoordI>
	<arg: 'y' type: 'GLint' group: #CoordI>
	<arg: 'z' type: 'GLint' group: #CoordI>
	<arg: 'w' type: 'GLint' group: #CoordI>

	<apicall: void 'glWindowPos4iMESA' (GLint GLint GLint GLint)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos4ivMESA: v [

	<command: #glWindowPos4ivMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLint*' group: #CoordI size: '4'>

	<apicall: void 'glWindowPos4ivMESA' (GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos4sMESA: x with: y with: z with: w [

	<command: #glWindowPos4sMESA>
	<return: 'void'>
	<arg: 'x' type: 'GLshort' group: #CoordS>
	<arg: 'y' type: 'GLshort' group: #CoordS>
	<arg: 'z' type: 'GLshort' group: #CoordS>
	<arg: 'w' type: 'GLshort' group: #CoordS>

	<apicall: void 'glWindowPos4sMESA' (GLshort GLshort GLshort GLshort)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowPos4svMESA: v [

	<command: #glWindowPos4svMESA>
	<return: 'void'>
	<arg: 'v' type: 'GLshort*' group: #CoordS size: '4'>

	<apicall: void 'glWindowPos4svMESA' (GLshort*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> windowRectanglesEXT: mode with: count with: box [

	<command: #glWindowRectanglesEXT>
	<return: 'void'>
	<arg: 'mode' type: 'GLenum'>
	<arg: 'count' type: 'GLsizei'>
	<arg: 'box' type: 'GLint*' size: 'COMPSIZE(count)'>

	<apicall: void 'glWindowRectanglesEXT' (GLenum GLsizei GLint*)>
	^ self externalCallFailed
]

{
	#category : #commands,
	#timestamp : 'stlu 3/5/2021 13:20'
}
GLRegistry >> writeMaskEXT: res with: in with: outX with: outY with: outZ with: outW [

	<command: #glWriteMaskEXT>
	<return: 'void'>
	<arg: 'res' type: 'GLuint'>
	<arg: 'in' type: 'GLuint'>
	<arg: 'outX' type: 'GLenum' group: #VertexShaderWriteMaskEXT>
	<arg: 'outY' type: 'GLenum' group: #VertexShaderWriteMaskEXT>
	<arg: 'outZ' type: 'GLenum' group: #VertexShaderWriteMaskEXT>
	<arg: 'outW' type: 'GLenum' group: #VertexShaderWriteMaskEXT>

	<apicall: void 'glWriteMaskEXT' (GLuint GLuint GLenum GLenum GLenum GLenum)>
	^ self externalCallFailed
]
